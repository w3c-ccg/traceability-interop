{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17cf68f4-d0ac-4530-b3ed-0e2792bdcc28",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a9f2860-ba7f-4830-acdd-0e4418151d75",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc3395e8-75d1-4506-b7ed-dfa841bf5b71",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3a2f8dd-8de7-471a-8798-405061fc0ab1"
                }
              }
            ]
          },
          {
            "id": "ecc71790-b3f7-4ba5-8528-9f7797589ed0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14fe247f-361d-4d0b-b664-3e4806b0845b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5833e636-b3ce-43ef-a3a2-82e3ee4b07ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f96008b2-1c22-4d5f-b7fc-1dedde45164f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "37f8cd68-5fec-4e2e-a721-533fe168419e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64670726-0d46-4911-98da-8f777cca6e15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02e570b2-6ad2-4bb3-a25e-3eb87bccf843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "703104aa-048c-4172-a6e3-cc2f6b985fa4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4642bc74-3eac-4dd7-b541-4a5e56c7fdca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9782ec2-110f-434e-8603-04f0a9efa52a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f54dce70-296c-4c09-a8b5-f469a16c9cd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f709855-edbd-4815-9ad6-226d8620f38a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca562d0b-20d9-4a05-b83b-db844fe414ee",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f843f263-bb62-4dd5-b8b7-5cb90d5936ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2733cb22-8c08-43d2-874d-2a4e04f3e2b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94554e45-b2f6-403f-8899-2ec3cebe8a5a"
            }
          }
        ]
      },
      {
        "id": "e9927342-e9f3-4809-acb0-4e9250d5da1b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3da7c77c-8279-4599-8e75-0de1d8cd1901",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31a0cfa1-9ea0-42dd-bbbf-5c0fb5a4a272",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90cf7a32-c68d-4b0e-a913-d63926641c7d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adc0e3f-6ade-4778-8315-0658e2c9ee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f863c671-611d-4cda-a85e-d3edf7995d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728cc759-0bbd-413f-975a-1c2ad79b72b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead923bf-7376-4ead-8687-405f7da309e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "830d06ef-5efc-4b4f-a6d3-d256a67be276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b3c4a4-a569-44be-9243-ec41ee6a85ff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db8e635-2295-46ea-8cf6-f9b7b0c1ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a585738-c99b-4121-8eb4-9924d90bfcce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4531fe4a-31c3-45c1-b4ec-c3984ec62ff7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d7a477-3120-495a-97ed-53b3537ecbd4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9837669e-7812-4dd0-91d4-cb3dd266361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0257c678-82e8-47f1-8d7a-551475d648f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489c40dd-bc7c-485c-9f2f-9f294ee9f6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11411c4b-1685-48ac-bd49-ca8666571dc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57450143-9508-45df-b9a1-e88d9e53211f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1225086-8af0-4a85-a235-7a33a70f7c59",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb431326-b1d3-47ec-ad81-486da63b09a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc561461-8785-4a57-a1aa-a87b0607b99b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abdb4fe0-7c59-4bc5-9749-3f716e95f593",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3e829ccd-261b-4d55-8259-8c1be0908d55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "680ab6eb-0ce9-4ae6-8c7f-8095f2fe91fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb8f2a15-c06b-4b02-b678-767a6d73346d"
            }
          }
        ]
      },
      {
        "id": "4b572e01-7ae3-4a0c-be32-e6168c07b191",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "68f36564-072d-4659-9297-6f69b78d2ce4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19ef2fac-3b68-444d-99bd-84d2c9e0318e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "59d36990-729a-4e17-b3f1-1e8ef14ecc24",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80925c75-c9c3-4d36-a0ad-28aea79f6a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cf5e96-51b9-48ae-9b33-5d73412d828f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dd83ce-13d9-4896-9e45-2b2d29ec654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7ad484-dce1-4c7b-be53-d25cca38a9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6588cff7-d6d2-4528-8d9e-62e406332b2d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c4e849-8951-4928-9f59-6ef2684330b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f422bd-66b8-4d36-95f0-5bf926a41bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba06ed6b-44f0-42ed-a959-3a0642f99913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50dd4544-e122-4837-aaa7-8249cade4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e54055-d72e-406c-8387-b2af8afcc449",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5da9f01-4460-4e6e-98bd-fe83a865e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4384d6c1-5b8d-48c6-9273-7ad13e2a1bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08afdf5-160d-4e3b-a291-7f31a308296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26bcfbd4-8eb4-491d-93b9-bce43e506186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db93fc-c238-4b7b-bc99-0b6fdf7aefac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c5451f-a1e6-4c2a-9a33-58e0babbf519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ebfaf5-d268-43ca-aa5d-aceb0cd678fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c602f5-4cd1-402d-983a-85815a000e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9a2f842-2cd8-4339-97f7-eac3ae35a10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96620a62-369a-4a9b-8d8e-9436ce50b0a8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de911e5-d274-4c69-ab2b-1b53bf7ae179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53da6477-28b3-4a4b-858e-41d3e263e3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7870f11-eb2f-4c26-b7c4-119b93f4244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7484b773-9e75-4d1d-9e86-f69cf926ade0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f11726-8c59-47f1-a51a-34166419ef0d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43be626-6591-4108-b89d-7b6e3ec555b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3613f4b-7723-4f50-afc6-5e623f412650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbf30f7-e8a2-41d5-9d87-789387db1380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0ed6ab-6867-4664-8363-525e10dc650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa2afa8-83f6-40d2-96e6-b52064c55599",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30380f-e0b8-48c9-b382-13a22ba2df5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdd57e5-f45e-46b0-95da-7978a8baa363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afa5117-8259-453b-981c-be6d88862608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fca6d45-4de9-441a-ade0-e25b22770685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d81f7a-f9c3-4928-bd44-471c2bb957d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269adeb2-3274-4b55-99b3-65b2d24ae884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2c30c4-d9c5-463f-92c0-843f3db0e9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01d2ec-bc75-493e-93c5-407062df79b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c6c4745-ec89-4503-a8b7-16a46c23d0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcab4324-f39f-449e-9dbd-d10e64db431f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f9b815-fd42-49ac-8391-e4422ebde332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffce3bda-e261-4f27-9745-56deb1225f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31662036-4ce5-43b6-ab94-15c74de1d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b449013-bb67-458c-abdd-d19356505fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df1cd55-6fc8-4679-93ab-d6859f05d86f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10a4616-6ddf-4aca-be74-281501afc361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2ed86a-0972-4b48-bd97-96b5d29d8427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd86d5-7067-427b-ae00-da2c2cdeddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "775ba388-9d65-4975-95e9-ade303783ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c3c0b-ba89-4c29-966e-f72eecff2307",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f4feb-93db-4e41-9323-c0e52ae09ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e929f7b-e56f-4b96-b5f1-fabf2a736ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787548fe-7c14-4a0a-80f1-2160694bae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1859534b-feba-417e-a3ad-3fb9534daf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbb7852-aa52-464c-a7b2-b75653a11226",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e63c4e-c03e-4989-843f-9c7182a94ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f263551-660b-407e-8a4c-975b34e06137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045f5672-cb9f-460b-91c7-5f66aff8c954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e017bf-5554-4eda-9960-701a2fb50113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d63c73-a2e4-450b-9843-0f79710a7b01",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3adfa7-35e0-4c81-b59d-bcd16cd627d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5792a0-42de-4694-b2de-e177d6e4282a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9959fecc-6e55-41b5-b532-ac812c4b5ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "213ecbe7-64a0-4b59-acba-ed2495f582af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e3147-15ee-4026-a4fd-0e232babab38",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd9dc4b-bf05-4738-bc49-7cc15e0ae27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846ee0b3-1b01-42eb-ba5c-f5a27fbc327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4adeb61-4d43-46f4-aa59-be8e5a17c606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091b5bd9-95e2-43bd-81e3-58be663cdb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776ed25f-3531-4fb3-adf6-0d16797cf8ff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fe6330-566d-4abc-a6c8-b12622fd7965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfbc518-6771-4f03-b27f-45b2a2214ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d944ccfc-bf53-488b-946c-e05626884971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c92f736-59dd-4187-ad5c-5b8a64cb7cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb18ea-d47c-485b-ace9-8c6cde2485eb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2ccb4e-816d-467e-b515-c823467ad984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5debdec5-614f-43b5-99d5-7fd1bc2330d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88af19f-4c34-4703-90e8-56fcb14f1a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2b24f3-d18a-4b1b-a6f5-245105d0f41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2b5b23-4aa3-4306-8862-fac54139bc2c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac4212-e133-4f18-b969-3a9b6b72d50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bbfda5-eb39-4f32-995a-fb0272121f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78664140-ebc9-418f-b3fd-020edf622550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad1a1ad0-2cb7-4ad8-877e-3d56356dc697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58546c85-2c61-4b51-8374-ad66a78932ec",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911307a-9d62-42ee-99d9-5b60e484777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216033f3-ff7a-415b-8fbf-09d478d60d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835e0c8f-388e-4140-a5c8-977fd571861c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca84e6d-85db-4b40-9b19-050b2085804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29654f6-7369-4fb6-a167-1a27e26a6240",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32deffc0-e600-4a97-a7a1-fd0fb1b15ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9f795d-9091-4e11-bd18-f4c93896576a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c79962-3bbf-4fd9-8f6f-66313977c03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53463ab-2d05-41a2-9290-08ef3f8912f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90468681-7c94-409b-8943-28df7971fe21",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a397b987-1410-4ea4-82c6-5ee2b5d97752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac25b52-c580-4e5e-9f09-9dc479fc4158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc420603-ae14-4046-87aa-84ddfbba667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a2c825-9ca5-484a-91c3-0a5a5c71c9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3324f180-ebd3-4518-866c-023d2767d5e3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243a2b11-da35-4c54-8781-17907fecc048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d01eb74-e3cd-4b97-9405-97f137e34c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6280a3-29c2-461a-bbc9-87e608c63b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f85c1a-4a9c-4b3a-8f72-122587cd6ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bfa985-3f5a-4c06-9436-d7df2349ba03",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62edb8f-e68d-44e1-ba23-d3806b708b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74206ddb-e06c-4926-9101-b9f506dec710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a94e22c-3468-416e-88c2-2f3456357d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee76956f-be2c-4c1d-9bc4-4798c6b99b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bca85d-b6f3-488a-8497-239f2dec0d30",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51595c1-fed0-458c-98af-1e110764afd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ac4b1f-7955-4c20-acd2-21afe1e8fc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250bd1f2-802e-4ead-babd-b1fde0f6aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa26de0-d4f4-4315-98e1-958edd66c081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bc3c86-0c82-4c1e-9915-07fb8634e199",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ea6cff-3ee0-49a3-ab8f-aa949a50fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33caf294-8854-4c2d-ac2e-9f53fe3ea509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d0fd89-b56c-483e-acd7-2d3c1cf8a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5ef23a-ca44-43cd-a357-4fb6895d7216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74b3972-738e-4966-92c5-e54a680a2652",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c23955-c750-4923-af4a-640a3e944264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99e2d5d-a334-4bcf-8829-f8e3b124f1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d97fe8-d0a8-4df6-ba7e-e90e61a6ec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6777b46-e9a0-4322-bd23-35b233c218b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda6740-6ba7-4bb1-93fc-66a7c8d3a934",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720465ce-6b6f-4fc6-b527-4d5035f65279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f413b11f-eaff-42fc-8b1c-b6bfbc83b7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea87256-fd67-4503-955f-2e0ab83fb81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27062122-24fd-4bfe-9a62-2f4a8f692a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74615611-36bc-4b54-9851-2d33eda533fd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e66edbf-20ef-4c38-92ff-cad68410294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67833a1-d494-4b96-b526-24a95e02678c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe4e31d-98e7-46c6-bdad-8034e93d5ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5246d59c-9e7a-4dcb-a4e6-ba60f7ae318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7699de3b-1b0c-4ffc-a4ec-3d4886e95529",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f476bc8b-3c56-48d6-bca4-47d61614c865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd4c847-0082-4885-a67d-77c276dc77f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8964a78f-1ef9-4224-8d7a-d3ebb7f2310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5504f553-94e1-4bee-8e10-e031629e76e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432cbf92-26af-40c1-9807-7da6891e2f6d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77dd4d1-2ad2-4b73-8ba3-8a5831bf28ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049c0683-81f3-4403-b7ce-362b06451898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124d3c07-4d93-4dd0-8b4f-b6b4feec53f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70e8adb-f355-4a67-85fc-ab23c93c32e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f87111-5cf0-4027-99fb-18b2b153da26",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195d66a0-cd7d-43e1-80dd-b8dfd8acddb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca01f25-6068-4a6c-88fb-38e9c98f7570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eef90eb-6028-41d9-b415-560a8a83b429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9a62ca-0ec7-4fd3-89cc-ace27ba34d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b9c3ae-ba5e-474c-aec1-891045c190ae",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f606e90b-9501-4950-96b5-f0d7d32380ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37e6b81-1591-40c1-8628-d9a236aeb690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4f319-d0b3-400a-8901-ba4953719cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb7f783-e9ad-42df-8dc7-f3db8f27f5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53087674-0d6b-497f-b382-34569584a571",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49989ec1-ecbd-48ed-8afd-e0531a3ebcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9d50b5-d9e7-47a7-8259-b1331f8fe0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e9dbc-e1c5-4f94-9185-50bf612c6352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0e3d98-9255-40ce-80cb-32e3cd7ca420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ced46f-e99c-4850-8f39-56c70de35de8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ff8a5d-dd2a-4b47-a02c-2c62e307b859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe36b34-e71d-490c-8460-d420d882fb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2592c0-920e-4468-9888-afe81cb84973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd20f01e-6af2-48ca-b04a-f4c7530096bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d24a95-2a35-4f8b-8785-78187efab367",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83776abf-42bd-49c0-b02b-02773bd7188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdde9c71-7860-434a-a468-deb2c6abe567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd1ffc8-56e8-4537-863b-0111f5b3b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5010081-c558-4ec5-91c6-5fb7b3800167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8290a-d062-4215-953c-7836884c292e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9face-192e-47ab-9a97-fed8c57268be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b425c27a-c3a3-4a26-ad32-bbc9802022a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28064cd9-b019-4064-86ef-9008ad7c27d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8c36c6ab-49e2-4e77-a3de-edbd98335355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a35bb8-22a4-454c-be54-6a09aa601396",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cc035b-9224-4ec4-8400-18c03f628c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3401eea5-5336-4593-a40b-192414488ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe3fe28-3c31-44a0-9206-0bba7edabcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b52368-814e-40f2-808e-e9908a7304f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dbfef3-de33-456d-ac1c-ba6cd571bac5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04354b42-ebf6-4169-8975-fd834e9d9de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4011680-fc81-4c01-82d2-18c21ca305f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f5bb8b-8dff-436e-a0c2-adb99d609003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "931e743f-3bef-4fa9-b444-e5d8a402e5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e083e-9bd1-44fd-aebb-d99810902ea5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4f088-342e-4f5f-85e8-69b6b2e5d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e751349-8ee3-4c00-b181-46dd348f71ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90bfa6f-0418-4cd7-96ee-e1d06035e08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f641d4-a8a5-4867-840d-3217a88d4265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e4f1ef-de44-4ea2-be35-0fd77ea72621",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd95fe-4a4e-4591-b694-a3ddf46bb56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2793978c-84c4-4f08-90f9-10830bbe3da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7c2acd-1195-4df3-bcb2-d99f67cb5638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "797af15c-b9da-400b-8042-f16f0350ff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c6595-7744-41d1-8502-84aabc2aaf9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172e1b55-1b6a-41a6-907c-4412e1b9e182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d18507-aee1-47fa-bdfc-4d37f1106c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356eb263-d8e1-4bba-b30d-85df4c1f3c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "988d4b10-6cf6-48ad-bce3-9e10a078a2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efdb824-cfe0-4515-904e-0142684bac46",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d691e9a-5f40-44ca-a1fc-6b146fdada24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31aa1ad-0c7a-420a-8c45-618a969755cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d6f8f9-6b20-41e3-b2c4-f4ec00b86a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d16f04-a55e-4872-8897-e322bf9eeaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d1d0b4-6e1c-45cc-b45a-36c24fbd231c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bf47a9-4d1c-4d15-b30e-831ed556b572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce08059d-91a0-4a13-939d-41d5a595a292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcc10ee-1077-412d-88f4-5a074aea5128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4419e1c8-3f95-4c4d-8788-0b2da5843e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f7106-7975-4f76-aa73-3f050e6bde0e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b234726-f697-4a1e-a97d-918fd873375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe279a9f-f7ee-4d15-a48f-b82b795aa5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e80d60-23a7-43cb-91e0-371067effbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24d6c4e9-20a7-4f6d-bbc6-8dada52df7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb263b8b-e9ad-4c0e-9c7e-588743eb78d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f203e-45d0-484e-bd77-599d42b6c80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e3e494-466c-4d82-b4a4-5640762f30b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcb2e1c-0805-4dc0-8b39-39b09618761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76575625-2d6b-4a6b-a719-355ae3b78daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baace89e-8a88-4752-bfaa-5f56c99fb1af",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca12a66-fbc0-49f5-b856-219728bc197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97736dfc-9651-4258-9048-6732520b9028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94a4d0d-2291-40b8-a0c9-faffa70aa79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc66e60d-6016-4426-80c6-a653e01924b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68073ec-134f-42d7-94df-495a3fd144ef",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313019c0-24de-4fa5-af6b-01732bd05bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb25588-ccef-4702-909c-6444d441bd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be5829-8e64-44da-96dc-7ddc9c0da1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "007f07bb-6762-469b-bc22-7f68acf0ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06f5b8-a96d-4011-adc3-d51119c25f3d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d695a2a3-3f07-4bd3-ab66-6f4e61d52297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453e09ed-7845-4fd6-bcc0-6092847c93d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29349b59-ae27-4689-8e78-159902bba376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5161ab0c-68c1-4add-947e-6c456011c197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7714f9-361e-40c2-95e5-7b837706898a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575f0e9c-58ed-44dd-bb3f-624e70c1eae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcc5f44-3712-4415-b0eb-43f1b4b2aca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36579ea0-fb91-4753-a4e0-2ee709dd5770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9106b1c6-e05c-4491-a9eb-c2cad51b99c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2a19d8-10ba-4bc5-9bad-abcb1b77751b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4348812d-860c-4e48-8608-ec4b0219c453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80b420c-d72d-4a6d-9f61-85aeb8127630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5e688d-ead8-4e01-a35a-b969ee414f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ad13b1-7919-4002-a0a6-9073d9173725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f64def-681b-4ba9-8293-39b2565d78db",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dae720-6ef7-4b1b-a2df-36f42df3f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5054bf-d086-4c17-bb62-73f35199dd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e856bf-f44d-4115-ba62-c488533332f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "586a46b4-1c45-493e-aff9-0788b2e46385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bf8c35-815f-43ba-943a-48a52fb6a5ea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daded593-05fa-4812-9151-20e2d688d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ca1c9-dfb1-432b-8481-63c4ddf7c90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c545819-28d9-4b24-82e1-ed9309f5f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1993c1-fb5e-4b6b-b575-04bd36571d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15aa2bb-c6ec-4744-a153-c542fd2c5f08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba08711-3b23-45a1-8f25-983fd1573f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2dd0c5-59a6-492d-b99f-ebe45fb2e4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b27cb-693d-435c-8679-bb99dba04e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dcd8b1-c0fe-40f5-bd8e-d6089145aba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5e70a8-ffd1-4c08-b735-e5d33c46cccc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88212023-8622-41ce-8748-68139727a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d428b32-af80-432a-86c2-38bfc8333eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fffe60e-333e-4367-adc4-47a26714230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f416b8cf-c1d8-4ee2-8af7-d0915e2f1851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8ed79b-9a02-4c59-b173-785df6993c0a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8422859e-92c5-48bb-b4de-21d9f832003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94927a2d-f3b5-4ee0-b876-31ca4357a790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7fe777-d6ec-491d-8e33-b2d4f6be9c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c5c803-ac13-4710-a771-079881d00945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e0d546-b127-4e7a-b626-73c898dbb447",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e47e40-a585-4827-8f7c-82a1f2a6629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456bbcfd-4ac8-4a43-b6e7-d8aba4774b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc6c7e6-e373-4073-9c56-3a52e1c02e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b09ce50-6b90-45c9-bcc3-6b405c2ed492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e84f997-8fa5-4f93-8afc-fb1e77f7f1e9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31814145-d523-4cd0-8cb5-e85630d7e909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8ca1df-d1d4-4103-ab1a-adaab2f0181d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26717b9-a253-439d-ac1f-648f5f340966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5ea4a8-107f-4b23-95dd-c1d8e37acbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb6da7-fb5d-4a03-a607-b13ee1186908",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f174dad-79c8-4177-86e6-8aa8f78e182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f927d20b-250d-4a2f-be14-41f5ba007cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c13d03e-ca32-4aa1-99e6-a02fda5f271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "819ee14e-ae14-4c92-99f0-84c5b151d929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8de5ac-5900-4471-884a-7efdd05c33d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7c569b-c4af-456f-9713-7bfd82a87f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86770515-a190-4305-ad88-3ad164255361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a2df3c-bf95-4a49-8c25-7e9f95bc6790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df13c89-9135-4538-b2ac-f8b4053a1958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2284fa-511e-4668-98a2-b968137f7ae8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d69098-274c-4ed8-9e97-63b2cb76cae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c576782-f37d-495d-a27d-c867255ac0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92c44b2-ee8e-4a84-9a2b-03b18f680d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e24abc-6c91-4020-9162-5f14c52b03a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b868a3b7-485e-4e0b-9760-17a23c1b798f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af2b8d9-a54f-45c3-acfd-8c5947b3e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb6771b-ed02-4f61-9a58-2f20c33f5dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdca3959-93c5-4919-b950-005def398bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "821d308c-8f2e-464c-846d-89e671790e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5954209d-4d36-4b70-b195-5ce0915aa6d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f8118d-e3c3-420b-a54a-2b00d2bdaa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07579f0f-8188-43b9-b64c-8a298a4792d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed09c0f-2324-49cf-b898-2d96d8d29107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c182a4-a842-4952-94f3-af753ec3a579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f1804a-02bc-45c8-b934-64d725d22693",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10fa9b-9982-4ed5-b7ac-1f5f51c97e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8be8bf-1415-48bc-84f2-e599f7d53f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23202988-065c-4171-912a-7257a76f8cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "341a1c1c-780e-453e-beb4-552c656fa181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb4212a-0d7e-4d78-a2f0-a757cfe6a2df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0156a6b-f7b5-49a2-8d57-2bb247e01126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9874594-8217-40c3-b83d-9c64ab94361a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d6d2b-5b53-4093-8986-84da9fa13a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1515023c-a294-4455-bab9-835c87ceab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af3da84-06b4-424d-8d68-613c15d14eb5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4a4055-ea67-49fb-9056-d60e1d950428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244d3006-bb92-4ba3-b39f-42bd9dac8312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f067c6-d27b-495f-9077-62da6ec979f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0176b88-7747-47a5-8861-0cea1fd08378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47c8ddf-6b6e-4549-a1de-d284dda32f4c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc83a04-6669-4bfc-a759-1f47c493f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa22bf8f-7b1e-44c6-922f-e95534a1dad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122622d2-9081-4753-88a9-8e27f20162a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "128483f0-d556-4c24-8744-153cfb25e1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f74641d-04d8-41a1-803c-194e7a79bd1b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e36981f-b537-4b9c-9b39-9da766a888ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0c083b-66f4-4586-af29-62cdd65a13f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337025a-de45-487d-b5d1-7313b1ad3a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1fbd13-d51c-40cb-8945-df480a75ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aa0c8f-1d4e-48e5-9cad-e4c91515aa6d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d118b7e8-6d03-4e2a-a7a2-f6884a5e34c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a68f79-4ea0-419a-b86d-9a7f44baa87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c208452d-88bf-4452-826b-423f98bbe3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bd4bd9-014e-4bee-a2d4-e1910dbf0490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf0bcbf-c5f8-4fd4-bee8-c99a593fb0c2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0f6895-c199-4c9c-8716-846592e0029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50650097-8714-4ee5-9649-79c8b08884ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56f930a-a447-4cab-8204-ef818c5fc20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c9b592-923d-4361-ba9f-34078bcab269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dba4c8e-d0c9-489b-b8e5-4eeab25c2798",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11d6b21-6aa2-4c7d-9cc5-310753968bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297b4757-9dd1-496a-befa-69f3eb77f8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b4981-9f40-4bdc-8bd6-ae57dcb6b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3100fd2-7761-4b7f-a39d-cc9ef6b05ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aabd50-de6c-4c1c-82d2-6d77d9693d13",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26217b0-106b-4cee-831d-e67c7b7e509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce004023-2558-45dd-b831-7c63d2f91ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5066b39a-9718-4604-9be2-e10dbc4376dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2d05f3-d279-4f50-bb5f-d539f6dcc7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ea39d6-3041-436f-80bb-4c2c83e2b726",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d56cda-43a0-42d0-97d0-6dacb0552de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc18b15-3244-4291-9d9a-4fd34e513e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b04db8-e982-4ed6-9d5a-03af4fc14558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb47b70-39ca-493e-9b68-7f2eba6847bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f8fcf9-3ad0-444b-a06e-e293f86038ef",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30439b3-95a1-4854-8408-0edfe94a213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4e4c3b-a0b7-4dda-8efe-440ef4808edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4d9380-8ca2-4455-92a4-fd5cfbb61209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b191f9d-8ced-4303-8b0a-f8986286ec60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0fa14-2fa2-46d3-98ea-6ad01a4beb7b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f0adb-8336-4e83-9d2a-28de88097501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075ec12b-67ee-4e45-b840-b7226a95a126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff08f5f-4440-4fae-8e77-bba4bb13f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ecbf1a-0cf8-41e7-a0df-7f7d0e21a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef6d43-af76-490c-9e4c-e8a88c8f805e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbbd3ed-1db4-44a0-86b5-acd0ff04a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0c6d6c-2e3f-421e-b4df-b978c3ade155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a029777-7d30-4345-ad37-36b23623fca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf553eb0-30d7-4ffb-96e7-d58e110b8263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda4505-221d-4e24-80b4-bf8ae94f16b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa5ec99-d3ac-48a5-939d-85bd241bf1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a08315-9d13-4901-8498-172fd22d4e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330e9eea-5aa8-429f-8138-c5a88aeb8027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f58b91-1808-4ca2-a42b-32b7d925914a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2545f3c-34e2-42a7-bd21-11e5ceab5b47",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e3e4e6-16f6-43b5-a7d8-4cae09050b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f99e94-0794-4d9e-b194-93251c983389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ee37b-a9d3-4303-9054-739722200f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc78b33-0a6f-47ea-9127-c08ea11be7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1423c8-c25e-4e1c-bf5b-4d1444768d47",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7733efa-6568-40fd-95e3-99e6017038a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73183684-210b-4e5b-800e-8cd448dd7072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537d561-d500-468b-9e38-70785b68d163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "198ee526-eca4-42dc-9872-6ac863112880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fc7a47-8225-40ae-98f4-fc8fd1c42eca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a573753e-21a0-49e4-833f-8ae50d591ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee98b62d-e983-49dc-803d-3fde7219cb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aff7c4-4b85-4182-972a-9a209b7f7f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f210696c-17fc-4a0f-82be-0de101840e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0de7b4-f7df-480d-9ce1-64a6547903fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4017901e-ab18-414f-940e-62ebfc19a619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c10292-0834-4ec4-aea2-91d564f9aaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c88df99-360e-4335-ba69-d0a3e5468654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b028759-c742-483a-9f45-679b0550001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f81b37-c740-47cf-8d9b-eb400e7c1b0a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa5b713-42f0-4f5d-9070-4d1e68ce0252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90a9b9e-bd8d-4761-a489-3d844209c42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c59166-55e8-49c2-89ba-0b9102b9469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "458c12e5-a5cc-46dc-9592-5bc1746db25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9933b8f0-11b3-4c1c-8877-6d14950a8727",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75edf0b-9a28-49c4-93d2-a44f7d7858e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293ac434-68d9-4f5e-b396-e595e0d7a369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcb236c-c77a-4fb3-a369-f01c62b81a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e3ed69-e267-45af-9cff-4bcaadac535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30e0d5-762d-4e5a-80fc-0508d9bdc6d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a57a9-71d8-4292-be27-c86f32245176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3e4aed-8342-474f-b0d3-b1f499c9b5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a20b7-ed64-4cc5-9a2d-78b4093b2013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6bbc3c-8cd6-4ee2-80e9-df72895563ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca2f2a-00a7-4478-afad-f91b0486ccc5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cc1c4a-4ff9-4aed-8261-5fc3a1d5e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa222c6-a7f1-4f45-869b-6c544840e74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497e8ad2-f058-40b2-8d4b-5d6a50df5851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "110e2e32-24e6-4f1d-b640-ec78edb32ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb473d0-2f5c-4cb3-8c09-bc6ce19a54e1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f8230f-33ee-46ed-829e-59ac95d24648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72944ce-8239-44e0-8bc2-6dd71ea1ccbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f96613-cf14-47b7-b46e-9624aef8cf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8bf20d-6e85-456f-b402-f40a0d5a2d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02824c4-496c-485c-a799-a46c2cf4b3d9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e7c4de-677d-4405-9924-f5522f085c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5759ea-14ae-4ca8-9ebe-ba2ce64232c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93b2d85-ec9a-4dfd-9dcd-009c8421b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bec7d8ce-9361-4148-a82c-7c1b85f10f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c86b6-961c-44eb-8e55-f46e78ecf222",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35c0973-5a8f-4db0-8334-bc061277bc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9799299b-e039-487e-bfc8-74cc2dbba9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2139b5b2-acd3-4793-a384-bb41c5f7160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a318f9-db75-4e13-89cc-91822182225f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ef659-19e7-459c-94ad-caa1383dca36",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5a666-10d2-4581-9354-d2f99909f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bdfd87-8ef3-4e20-bff9-6a0d248ea988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe6b337-c962-4d98-a55d-783a5c8bca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64b65ae8-b37f-464b-b47b-8830fc45bf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfd22bc-f7a5-4284-9e5d-2ff127d8f413",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4b8ab5-a5f4-4f4b-8162-58c30af88cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cee66b9-d71a-4b5e-8fef-fd79c39b6ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e880b6-543d-4a3f-bcd2-96dd0bd67e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f1c7db-afe8-42c7-b554-486ea68747c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de006ee3-0e4a-48ad-b460-18d4e688a572",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f73c4c1-ccc5-4aa2-bafd-d69439374207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac122b42-0c9b-49d4-9d93-dbc0c2645fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b64312-212f-49a2-bbc9-a18913cdcc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba32d2c-7c33-4390-908a-5cbea198455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65c2f9-8e67-4143-8e69-babaf4987763",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2148174-c224-475b-93d9-799a0f2f76b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7803e2f-a121-4e1b-8247-d6b4bbb8d2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a90fab8-450b-4ede-8b42-d6990346fc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf3dca6-6fe7-44c4-ac35-507e0577ada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccc29bd-0544-45d4-9f91-e9606287cf56",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db9e2b-8191-4df2-9f1b-c23ebb62bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d835600-2efb-483e-9af9-fa608e4e891c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d8931-0a6c-4f4f-b4b7-cc2d6124c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1abb55b-6782-446f-b80d-8d0915f5e467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6bd5b2-18db-4407-9ff3-d394a6433a13",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59453a78-a559-4a18-96fb-1c85baa079a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e85adca1-f1ed-43b2-8717-8e569263d942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8ddbd-6356-4bf0-8049-579bfabce4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d86d0c75-9fc3-4fa7-b34e-c80c9523d69c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cbc58cc-6d63-49c4-bbc8-bc519e13ed96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d68ca4ce-1798-4978-a906-387bb904d043",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2ce81d-a783-43f2-be29-cdc4bd6048a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "365f676b-7729-4132-adc3-0b75bbc6ca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeab05a-719b-45d9-99f0-3e411dfaf10d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa994885-e620-4bf1-afde-74367ca2ef9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0efbcc6-6a24-44dd-b030-a59ed00f1a8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81097789-36fe-4154-8a89-67f202add634"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cc6c811-e425-46e4-998c-ca11b812b220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5364ef50-52c8-47eb-86f6-7e7208b5d34b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c39ec20-2a60-4dea-8310-49cb194fd6b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9deb6ea4-2d4e-4777-a2d6-433e17723163"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4873d1d5-e4aa-45e0-af4b-7ee495cac4e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfd0a35c-4cc6-4e70-a435-6243855f82d3"
                }
              }
            ]
          },
          {
            "id": "d06b0c1b-9fac-4a07-b13a-92cec7555869",
            "name": "Positive Testing",
            "item": [
              {
                "id": "023e3a41-18be-497c-a961-b3408423014e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5063cc4a-0601-41a3-b788-bc8fcab6d263",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb2cd20-3f1e-4b35-b841-2a39dba19cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "930b2ca5-d661-4ef5-90d8-f1c008a3fe35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32e2437-f135-4984-b708-4a865a933325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24a1e2a-37e7-4a64-b4b9-86710e695be6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50ea7b3a-2a53-4e01-888e-8d68eb5676ef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8963ad39-e869-4ca0-a9fa-5db37d2950c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc1ed861-787b-4145-9a7a-6d1a295c7b03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89d9d1a8-e340-4956-9546-3544c85e707f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14b4dccb-70a1-4e5d-b905-62f87930ae9f"
                    }
                  }
                ]
              },
              {
                "id": "3a80ca5d-7561-40a0-9d0a-c6974e86dbf1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f33fb9d-07d9-4df1-81f8-dfebb7e5a8a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "035b1ef2-b2a5-40a1-9487-d012b4123062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "098e52b4-d3c4-4c2d-90ad-b8bda8a86ad0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58d586f5-b515-45a3-9dbf-c2973184c9d0"
                    }
                  }
                ]
              },
              {
                "id": "d0c98cca-ea9b-47e6-9292-08bf6732ef8b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2679c5bb-d36c-4878-b519-fa858b2f99cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3bc5174-fd87-4d4a-907b-ef19ec236656"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b60a941-0a0b-49fa-9386-43c999ec2c50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a886c1b-ad3b-4a51-9f78-3a698b4da8a3"
                    }
                  }
                ]
              },
              {
                "id": "81f68258-7f1b-458b-b847-51beb7a23cbb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b14849d-65da-46ab-8d04-32c7d462c488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46f971c1-e603-4c9e-b93f-6662a98a5a98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7479e987-af6b-4f02-a2b6-47410925a102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "44fe9b08-65e9-4a1a-af5d-ad16ff3322c9"
                    }
                  }
                ]
              },
              {
                "id": "4cb71c00-60d5-4440-b947-b3c930eb6656",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f7e44f4-d058-4738-b7a7-e06758b4974c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4d52497-ad11-44cf-bcb9-120f28a17af6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c894367-ebda-4128-be8e-1fd99ceb8c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ac0251e-40d8-4aad-ba7f-676640e92043"
                    }
                  }
                ]
              },
              {
                "id": "da17f326-3c56-44fe-8070-ecdcea70843d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e40be1-ad1a-4eb2-9b66-d79ec255db2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50184136-4c7a-4767-98b0-180931bd7852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45649cb1-8094-4b42-9ce9-81cee5b7dde4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d791aff3-f075-42de-b898-bbcf16e571b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f93caf9-8e14-4ac9-893e-0c2c741fa7d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95982c8c-a902-42e3-b80b-5312e6b2d26c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a4a3296-063c-4a83-98fe-bc61bc066023",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3faba5f2-1a7a-4297-ae22-cc8cbd36d601"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "439700fd-ef31-4dde-b639-5b9e4a08a636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fffaa74b-08f0-411e-9e65-7b18e4925ae3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdf27c58-5b68-4a08-9007-07662313edd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b609d1c-3a69-4ab7-8d28-8215e4b7f62f"
            }
          }
        ]
      },
      {
        "id": "715561b4-077d-4ed8-bed3-9b5a5ccd781a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "312ea3e9-18cd-431e-9c8d-63c15964aba8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "437753a7-fb32-49df-a292-04ad6659e80e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f859ddd1-c471-4970-9608-2da72a0dbd04",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316efc8d-ce2f-4607-9404-4488fb3f7e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed0310c-ba2d-46a6-8f49-e8fc70e858a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c440d06-5029-407e-9713-b3ff378bb197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb066bf-a3f5-4a05-b66d-5288808b3c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caede66f-7309-441c-b1a7-ab3d1bde3acd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2573454b-0eab-4fcf-86e4-906cc210c2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bfe2d3-0f4f-4e91-b857-e80c99364582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4923d4b-f236-442d-8fde-77c4d0f63c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d71178-27ee-46aa-88b6-dac1c8218672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa219f39-d077-41ef-af11-7c1a7df96013",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05892c-0e7a-4464-9fe3-637b23e61ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93354890-20eb-43ce-b74c-133ac7255d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60093768-5226-448c-81f7-162f2bc1a4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca5152b-eaa6-4065-95b9-7bacd70dd46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dfcde8-9057-47b6-b159-ae4548a62382",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03d299-c932-47de-83c4-9d5bbd18be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a0133e-838d-4ade-a52e-b3080db60cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc60aa78-f466-4e2f-b336-7f4b6e8bb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b49050ae-b791-46ca-a9f2-20e3d380e306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc34b466-6735-4f86-b3bc-9ac6d44070e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0257c9a3-9721-4eb2-9d87-b400b22018c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a6e179-f20a-4e52-91e4-770b6196bc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43261b0d-9012-402a-a000-e6631de83235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cb1b3d-1105-4513-92b4-44ef19388cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e45f34-c800-4c6b-9e5c-1fcd811fdc08",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e53f8a-3f28-4386-88d4-5ee680fad53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38be51ca-97a3-4ac6-b2bc-c7ce1b3418ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb384f90-53f7-48ec-b9bc-bea1c4ebb1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0984bbb5-9822-4d75-affb-09f71d688c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f5fbc2-a3a1-47c8-9937-e833de41dc96",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e7a24a-1238-435c-8b50-e39bf7996b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb90d2a-04e8-4941-b460-25aaf5fe8617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846be44-5a59-433a-aee1-b4d632ce1939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34f2ef9-af88-4baa-b181-bfcc9dab448c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb832682-4f34-4b1d-a16d-118c2be7c0b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7587fd-c0d2-4d96-a07e-90a320f85a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838aaffe-ab9c-4d63-b6f5-03213a67ff9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebeaeed-a11a-4bff-afc1-d3347ef56d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "648e10e4-ecbc-40a8-9608-79879f95caa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46efda71-50d4-4190-b2e7-e57a390f357b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a513e125-60da-48b4-8d8d-30f22a628056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f96b36-05e7-4785-9244-c5cfff7eba6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee79f4d1-db12-4576-80c5-52878cefc31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0d247d-2576-48af-afe4-3925dcc77980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb51833a-cf7b-45a4-adb4-6d71b4216f23",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69532e90-3df4-4708-8c41-e16926ba7351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e33d311-df01-444e-8196-647e1da01e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e9778-517b-4005-a579-da7fe16e1781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca11ae3-e381-4733-8d13-a7d144b7861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dac8b3-ea54-4f93-8108-b51291daf3c4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df04139-319e-4c11-a4f9-2e3d155505da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d115ab-b7c2-457d-b6de-36230a7eae1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633c2344-fffd-4755-b851-70d52254d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f98cdec1-2b8a-42b2-afa8-78031277f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fb0946-614c-42ee-a440-2dc609c621ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9800ecbd-e222-4c8e-9953-bc07c6455fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc13833-6300-42a4-bf65-22e1f677ede7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2688463-ea18-488e-8277-c9d0aa366b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ed5d66-51ae-406d-b8fd-fa1a665c78df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc9c95b-3796-450d-b263-56e9abba5b44",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80c558-3499-4305-a249-5b2dd9863b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9b6d31-7b7f-4ea9-a09d-5f4cc7cfaabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45d7014-3c91-4bae-ac08-ddff06ad3d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4aad430-b5d8-4d77-a600-866d82ed024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec3088e-3096-4af6-ab1e-49d3627cfc9f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44d4fe-11a1-433e-b569-0cf548f8866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62db19b-4972-4ea3-bf3e-95cfe4e8eb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80369d7a-b8d3-4bb3-bee0-014ec8b89c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25bee5b-c841-443d-9d35-5354a2534846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f422253d-b7ae-46f5-8973-0c551301f02c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0688412-2fb0-408a-92e4-2941ef230594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bbb3e6-cd00-43df-825e-7d19195e22e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e5b53b-3681-4f9e-9def-07e89b9c3ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4129aac-991a-41ca-aba8-38cb33f1e7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8915d2e-e19f-49ca-9cd3-a4fa60c8b2cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa53da4-b2b0-4da6-b6a3-fe5a81872f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c51a784-525b-4fc9-bb40-bb8c7c2ef236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1367ec-339c-4562-bb48-8a448d41cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e9b3fe-b277-480f-8676-8ee4e6b05d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb9596-64f1-4d93-9b1d-b32347ab4c41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999c3c3d-e2fc-4993-8d99-532adbfcc0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47855ea9-f350-47c3-b121-2e3f96c55ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c517614-7998-45b6-8663-eb8b7edaeb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dd2460-ae50-43d1-882b-f8fe396e199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df53d46-dfee-4d9e-a5df-31271eedceb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c629e6b-4dcd-4015-8e13-7707a1d74d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4337080f-a933-4fc8-ac2d-126763916be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040fda6e-4985-4056-8386-8b30d5b5c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbda2b4-0e25-4699-9e01-b30099f832e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e8b440-6ba5-4503-96a3-552dcd780bd3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b35b13-d86f-4b5f-a931-ab7aab7cc8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f705a2-df4d-41e6-9213-2a83bfb459d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14426153-b46b-4eef-b46b-1f7b096fff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d253c407-06ac-402c-977d-9cb39f3cb555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc38b8b6-c291-4373-ad8f-c6427a33203b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a7d00-542f-4243-9b20-3f58b1a4c67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fac651-ce86-4115-91ff-f4eafc3c0ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed8a6d1-27c4-43c9-94f4-f59539e94e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fde406-4d60-4c17-98a4-abbae9cbff71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb9dc4b-ed8c-4995-a7ec-03ad3b379b3a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178c35b-f2e4-40ec-bb97-bcd047abe284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac66cac0-01d4-4350-9a7b-4572ac60a08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1428eb9b-a916-4e3a-92b2-ffef826148f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f547df-a35c-4342-87de-f6066dbcc7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c242dc-8314-4b5b-b67c-b6be2e4e5f8a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f7359c-90f2-4614-b964-e118ff358a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0473b68-0eb2-423a-96d9-7b032730a631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20605f25-9a22-462d-ac0f-b60b81fc72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1afbe4-3965-448f-8366-9c19113e6f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15f520-6871-4e73-b090-bbcf0f3a1346",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db212459-4b59-40b6-a4bc-c7929ae06757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc818bec-a77b-4899-b9ba-1a0daade024e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3160d698-1568-4add-b277-b1860389f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7d8659-1d61-4f0c-a903-5d842138b2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c905b33-0ce6-4ddf-8f4d-fca3d53eac8b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249984a3-5838-4fd0-ad1b-5b1f5a6206a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a4185d-1e38-4671-8378-6f91061101a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fd18fb-8543-4149-bc60-25066437a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc1626f-5dab-4df4-8490-f2b475489aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c66836f-06eb-4c1d-a7d6-005b31d310e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddec6f3-0327-4f83-951e-e46d140f1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375c7434-3f00-494b-9ac1-fa0dd5b0558a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dd22d5-1349-40e6-984f-1c8a796264ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54ae1f2-79a2-44c1-b5c7-26223fee315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe54fc29-053b-4f32-98b8-ce5c3d7e6bfc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488d5891-959b-4ded-8db4-961608bc5687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac1e201-1825-476b-94cd-3e2b03ccdebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817de1b2-8113-45ac-9091-a76ecd331161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7135ad81-4112-47d7-8875-88e3eb34025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29a517a-80e5-4775-8f06-b5ec060a3a8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51127b85-5a4d-40a4-9372-8021a4b4f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe9a267-e6a4-4e9c-b8dd-218e7532ae56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186fb547-7a3d-45a7-9476-e87be3e6c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fddaec3-4f71-41cb-a7d0-1857345a773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b365342c-45ea-4e88-a8d1-0a4c1103e2d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481d1041-00dc-4014-b9c0-c92814006312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015af5a0-6932-4ce0-aecc-e339b25d0454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ae35c4-b9fb-461a-8e33-9766df01cc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ef9e3a-73b9-4681-ab30-fa8f98d5a237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95091c0-a877-4c06-98a6-f4f180ee0ac3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e994cbf9-407d-4a2f-b7bf-638b8e791283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f2792e-4460-4e3d-a1af-36e799544d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da82660-c61d-4f11-9110-10e615dc713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a003d785-d673-49eb-8fcd-5302da7ca143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bc7dfc-34bb-4427-8a23-ccc536fcae9b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7926b1db-e310-4f9e-a998-ba7534406885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6361d9-8a8e-40ed-9f31-dc03772ac5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c596b98-5a18-46ae-b0f3-c9c39426f4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ccb48d-cbc5-40fd-8c13-c1a9babfc1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0cc516-c7eb-46e5-9074-3a3e7e1d6590",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f0e3b-66a4-4b24-8337-ca0514f20716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5266733-a1f3-443c-880b-7f733f83c53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b2edb5-f8e2-47e5-bef9-926f8d131131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06822718-510b-44a4-aa42-ee3ca33e402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c69ca0-3c77-4855-909b-a70d6954fec8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c437a595-1761-40bb-8f5c-2f7808c8e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8095ae3f-9622-4d1b-bfeb-c7543e6c41ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf32c4c-0063-4b8d-9e32-71e78f7eea4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94888d58-0180-4a1f-9b4d-ab9001a2c03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf45af1-0a90-41ae-a27c-f3c076bea90f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e15acc-3ec9-404e-94a9-6c9d97079069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c78317-4c62-4c12-83a3-ccd5f20b4dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad961751-2ea8-41b6-b223-b32b8d223c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc8b153-8829-413a-92cc-f5951644dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86d7ec6-250b-49fd-8110-b7d59217b370",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef40f6-bae4-4dbf-993f-1d75aae2ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afd42a8-d8f7-42cd-949a-87266ee314ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fbfb45-4ff8-4683-a52b-dd86ee37a755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1266cb-855d-461a-b897-a9520e081103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53d4f3f-e56c-4f1a-bbbf-d8ba81caf010",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c042516-e15f-4604-bdd5-f85d4e43c53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781e1a66-c479-43a5-a2d8-1c81ea1aa542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115b47bf-7e24-48d1-af00-7f4231ee6395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f150be1-d4a0-4739-8162-35de932de0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444ca988-5ad1-4ff6-a72b-1d4e719e9e9f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d243fc-9554-499b-a3e8-dcaabc3f1c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4193d890-1408-43f1-b709-160a23c93711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f77e1d-96dc-4bf7-a3ef-5e0d807aa5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1bda39-df32-42a5-b05d-72d2fb3d287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8503a9e2-74ae-449e-8b7c-1f6ff866166e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e332851f-589f-4d26-9a55-1b61f40235ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849c68dd-b951-41e2-9ce2-6319a03120de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9224171-2911-40d1-b227-3117398dcc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7193acd-f840-4626-adc0-7900cf99551d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df645379-a98f-481b-9b23-e1ee76393f15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df9ccc5e-7943-429b-8ab8-6a39a42b032f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27263936-0062-42aa-851b-d6c57b99e604",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63bbf369-5323-4e56-af85-862c8f46e307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8138d08-d66a-4b3c-be26-738ef5099e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fab356b-b04a-4b4c-8542-7b899371037b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "533c2204-3fa4-4a4f-8c9c-f7996ca47dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b759f4-5717-4606-99fd-77b51b03ef85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18431c6c-f2c2-4750-b0ec-99d95c7511a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bc10ca3-0161-43fa-86a7-b8bf98681e8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ff7326f-58e2-4568-8233-910e64389133",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07840141-8aeb-4e63-bf91-fe1a98e4d4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9215df0-5d78-49b7-9bf8-e28155168685",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dc3df39-ac79-4984-aa75-5f7fd6711741"
            }
          }
        ]
      },
      {
        "id": "070df706-6aa0-4fc5-9c83-2e226a866071",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7eef5eb-9955-4c27-b2b8-610999bf66e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f7a6a40-ac70-47d0-bd9b-ecc3b1d627d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b058778e-4af4-40fa-96eb-b5734811d680",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b7b61c-e6c5-4bf5-b759-ff77a0e6f8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f08be0-7ff2-4931-a1a3-20bfa55050da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df23c9ff-7980-4d8e-b7a0-b1ce56a1aa14",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80ff0e-2584-4819-9565-223af70e9397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b91ad7f-8830-4815-96be-4ba2bb88de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeaad92-7a7b-43ea-ac97-5a2de2ecbb95",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ce0686-efb0-4750-b637-628217fbdfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bbb0e4-b148-4575-9b62-f79ef947e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348f68ba-6b18-47d2-b1de-b1dda1b594a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9febe78d-f87d-44f6-a458-a602c766a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f9d7b2-d46d-42b9-b174-c94d52808a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2289cf-4ffc-4424-bec6-3a335fd9a262",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99337ba-c26b-41f7-a168-ad9aa1af4247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6648e4a-3a4a-4f96-bb20-765ecb91fc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150132f3-72b0-4109-9d31-ed3ffc4ad547",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab88729-a16b-4783-b97d-ec7cda123b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31bb8e1-42af-426d-b22b-d9aa694a0e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24bf4e9-a313-4537-ae4c-56ee19e09bb5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3085ef98-e470-4b84-9211-d4c964eb7dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5394c486-5b92-481b-9b41-21fb7b05a9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a9ef8-7b4b-43a0-a497-3006ee2e816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd68faa6-f2a6-46c4-9740-e4f0f1c6a03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d41e0e2-6762-426a-a50c-6998bf27369c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2880f2-cefd-4af0-8ed3-d2337e2a9609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3e6ff2-2461-4ce4-ae8b-1167b9df1a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804e2db-696d-4a08-ae6c-a06d4d465743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42eae218-162d-47bb-9944-f47d78fdb87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a9d49b-0f85-40c3-aeb5-c8b70c57b6bd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8869f67-c6fb-4d63-8cfc-e443745aa86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6010ff12-0045-4c8d-aecd-f98f773b8ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6430c546-702e-4749-95e6-48d00415f650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5503fc1f-39b2-4ba0-90a3-5002e8907cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5938d8b8-31cb-4f06-88b2-721697600a51",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239c5534-6431-415c-a0ee-59562849bc3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd76996-d26c-46e1-bf47-be4fee9a0994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157782ce-72e1-49ff-bded-1259ce656aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf8705b-d89d-49a1-8e92-1b6a66061e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0e5f28-9ee9-46d5-98d4-07be625679ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caf1b47-039c-444d-a54f-d1748ef9f609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69271909-b616-4138-bbaa-f619276927a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee62891e-1d4d-4215-8d9c-2161e3c8488c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6346a6b4-fde2-4530-aa27-945ebf007f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c6ff46-ec28-4fcd-ab28-0c526d3eb5eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1b0067-7319-4a33-9bad-c0c8a6a733d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2195fd7-7818-43ad-9bc5-181e02c31850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc581ce-d781-4a24-845b-8eae97991872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c4e2c5-90b4-44ca-961e-f84116f5f1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc0b899-2f5b-4f90-adaa-f3c13b966589",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0374bfdb-a503-4b96-bb4e-770e76513dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9740b8d8-52fb-4010-8f93-329053cd1f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081a9787-b193-4e72-8937-58fe9bdb52e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cd9479-2053-4c7c-bbc1-72ea4f1bc1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7d65aa-8fc1-472c-a242-10182d669b45",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1dec27-ce31-42a1-903c-91bec046ada7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738f6417-2957-4402-b818-cc0bc34b413e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1997ce-3f02-4105-b738-56f214a1d96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7867364b-e915-4b5a-8f0f-864e488246a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56e021f-4fcb-4a73-95fc-bfc91d759d09",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb01a3-acd4-43af-b9fb-e79f48792b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585c2a8a-0349-4331-b6aa-cca5fb53f569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63910cf-1960-47bd-a56a-1f9c1214488c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9aa765-c255-488d-8b54-7f80699ba6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5995ac-b710-4853-b8f6-88a729bf9059",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a6ae7-362b-4949-887b-f2b792bd61f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69c12da-6af2-4847-86c5-0395e8aa1a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9dc107-4115-4c70-a3fd-7b68f4364595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc50c4a-d573-4b79-af06-b09ac4dfe6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0443d1-c4d7-4aa4-8774-411861b669e5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c482eeb-1e00-49c7-b3e3-42764304c9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3aa6d6-b8fb-43fd-a3f2-74805fa2d846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af974050-aee6-4a8b-8173-68852d041db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1ce9ce-b1fb-4de2-9f7c-2e0197e567a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615032e8-7442-4a59-a25a-fa6a14346139",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c2ee93-4dc4-4ffa-a148-f6f3b6960229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2d50a8-c942-44ae-8736-6be51509f269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7bc64b-8f89-49e9-8772-3665aba3aed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42897ad-8b39-4539-9dba-ec1fb0775be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784665ea-7bb1-4a91-8390-be97419555b5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924a9711-f9aa-4035-a1ea-5c48e1bb4b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a341f5e-263f-4133-bb54-3c430f68e94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1ccdf5-6c24-4ddf-8b47-799ceb320eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7307d383-86db-49cf-938b-007a9ce55b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d7ffb1-ccaa-4686-95d4-1f37906213d0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909cfa9c-a933-462a-9f91-ff025182767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ef4e4e-aa1e-42a2-9d73-7ae46186e1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b4df0-4939-41c3-8630-0f304755ada1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc4692a-9f81-4fb9-9487-0e3af77fa07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33431c69-81f1-4892-8d01-b7c2b90bffb8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba57d9-dc2d-438f-a3d4-52fc0739a106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7337965a-c7cb-4e65-a4d4-73c8061f1030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf710e2-2c91-4855-8e9e-e59afc04a4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e5df57-c245-440c-8f40-783acb1946dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f3fe6-581e-4aaa-ac13-7afd21e0ae80",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6100a0-1ccd-4f6c-9bc2-62c71cb66c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7916c413-fbb0-4223-babb-3decd370043a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44de0058-0aea-4a14-bc0b-e3248f8b3448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fd4c75-1c7e-470d-871d-fbf3252c3051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbbd254-9c8c-4d37-a3db-7c592c951f15",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db1be93-d744-4f9f-b2e0-f337757e229c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5582fbbc-a1d5-44ff-881e-bbfd8ea527fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e6c5a-9115-4138-9e01-ca70b37783fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d6afdd-1787-4f40-89ac-3e200004cb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc5160c-048c-4133-9705-a0056d449ebf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091a741d-8fa5-4aa5-9d9a-b67540a30c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32a5ef9-e2c0-43e4-a2ca-9a26cf82bb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff8a2cb-e500-467f-8342-ddd4276c2df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eb7ff1-3cbc-4f91-8233-6937e386216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559bd99-f627-4ceb-ad84-de92d9777f6b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a72a4f-84d9-4ebc-a22a-5f33ab5d8f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a950d0af-3bf3-482a-b222-e91cf93aac0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d258f6-d905-4b35-9aa2-9792859a7953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5d1692-4d2b-4a16-a131-e520522a2c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ee58e2-6246-466a-9359-6f9bcf1c1183",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69e98b4-6d1f-4786-8c93-ae45e9f43aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52083db-18f8-4b37-9ee2-24d972fbd072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b1b743-6025-45b7-b242-d8c9744d954f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c7df6-d046-4489-beb3-650ffba36b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c814cf33-7ff6-4ec3-a581-50722fc0b41e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da13156-dbec-49fd-b78f-d10a6c4bb850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27858e15-f44e-4880-8ace-4daf7f679f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2529ec8-ea9c-4899-8fb4-148c69524eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400bbd9f-e8ba-4e84-95c7-e118df4be5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72de43ee-237d-4665-8249-c6618f036f74",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa61c7c-9556-4514-8dc9-7045bc5f4b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8147ef3-37c3-48e5-ba33-26c8741948ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd5d943-24b6-40b1-80eb-ff7be4029819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da44450a-e44d-4a98-8ca1-817fa4a15972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229163c0-3429-444a-8e53-376112db5eb0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea6cca-dd93-450d-aa69-3ab3e517062d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b74dea0-7351-4c03-897c-27a80e326eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82f5f79-a816-421d-90a3-c6063d1d4f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f656b16c-9a00-43fe-b94f-370d94a2e444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0fbb8c-e1be-45da-b3f0-4211933a5b50",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118402d3-491b-431e-a025-bfbfc5eeee1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb6c400-b3d4-45e9-bc79-19c9f941ddfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73b80cb-4199-458c-be06-5e1fc7599c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66b3fad-3cc6-4865-b13a-c1b3766bb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b1d1c-ca40-4dbd-b778-f1306170339d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d398c79c-fd0a-4201-87c9-7cfea049a8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a23c18-063c-461e-a428-ccc237c53a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d108086-aca7-48cf-8f11-13ab1f915dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6c9496-066e-4360-a069-3a33ecec49e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0e338-2dd5-4a6a-be11-d9cca4327fab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbb9b63-f54e-4f82-a653-6bf8d8e9bd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309253e6-09f0-4556-a05a-c6a884c4a15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f299c2b5-819c-495a-89b9-b2efa55ecdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9473eb0b-5488-4c5a-b17d-ef8012fa1b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc092ef-fc19-4b92-871a-170119453123",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1535fc54-3a46-43ae-9945-3f9589c33271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5579ac4b-9e70-414a-b8f2-dfefe2a93c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7105978-f75c-4828-8093-e29b1aeeca96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e519255d-8c11-48e0-81de-9dc1ff0e9782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701c1539-84af-4bce-9c60-7e05efa2a9ea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42130ea0-3831-4afc-bcd1-f7d376c4fc7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193291c3-2051-479f-8ce9-bb1263ad20a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a480e3-7453-4d4f-916f-63602a4396b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bb9c07-1ca1-4344-bff5-f9f465374f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fb926e-3b0b-47f0-ad02-163bb54e3bd5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb628972-3bdb-4f1d-9643-8eedb62e87d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8fd747-c25a-48ae-8a66-cfa5f5dc621b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291fa542-b94a-4795-9779-1cad9406e6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860e18ae-2a46-463d-b562-bb2adc630dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cb9d6f-df4c-4d76-af38-a03a83e1821f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c21f64-a84c-42d8-973b-84f495510f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b340a7a-099d-4b4b-8e91-2f887cafcf6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a9911-1d45-4e6d-8b14-b448e9bef1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6e665d-6017-4241-9a39-3bd2a2de04d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee60f17-a2a1-4a54-8a88-5973459a680a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fe922d-30ab-4d2f-9b8c-2978150ae6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba86b52-98c4-44d0-9b68-0ad3ef399f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c275a23-1653-41bf-89f7-f401d272e499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304e358e-e75d-4b30-ab70-6fccb15ed003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1673ee3e-b008-4102-9dce-31e383fbea67",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2a57d0-524e-424e-b2d1-2fffe0c7cd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44c8fb6-8698-4810-8d0b-c51ba5d8064a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d4a389-a58e-4cb0-b2a1-ad7a5a7bf101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1ad53f-7538-417d-85fe-0a1cbfe97b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9cffdf-4e11-461c-8036-2fde8d82c45d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dd1f8a-5b65-40af-adee-449027ce292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1befe05-0b0a-4324-8a8e-6d9c2164f778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e876ad-e595-4bf7-8d2e-cedbf4b228d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee49d1e8-f222-4a16-9047-aa874cd60791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd770c4-7025-4c01-845c-8f9062647a28",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e278fb6c-724c-4b34-a012-8bbbbb6ea9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2700348-7c40-45e2-b621-63f598a4f8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb85a9-0678-4bf8-95ad-7b960eb65d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f9ba14-bf27-4e09-83d9-5b92c121cebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf5326-3ad7-4a30-9786-922b93be1a3c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4facc6f-4a72-4548-b17b-670c868d73b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe64dcb-6baa-41b6-9498-d43f9d79f98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7488ca62-26df-4df2-84db-e9ce12aa33b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a45607-0836-4f6b-acd7-be90b5bb8415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399985c3-436e-460a-8ab5-f1fe2bfdcf0e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a9af15-0ce1-450f-a049-6bb75e022893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cc178f-88fa-4329-9506-b73d3ea3fc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269428cb-138b-41c3-9a9e-31a979d066d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a606630-dd7f-43e4-b01a-c244c6446c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f955e7a-e1e4-4b40-b1b2-9b720c225768",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9b06d7-13cf-4fc8-9bf2-a0208e321089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d3230a-a4c3-4290-b7c0-11da7f2c646c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0821c936-e641-4540-ae6c-203895c53d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a85be01-51e1-41b2-92fb-3382a7779383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c5edbb-365b-4c67-9f07-7e1790a22d0e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ca5865-010e-4b21-ae29-1eda0a956cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf7da97-f206-4fe4-84c2-d7a7a1cdbb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94957b8-5504-4100-9738-df6540afbbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe993138-24db-4d6b-b39c-d3caa67bb423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4858cc69-c4cb-474c-8560-3ce9dbd0456b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8cd53b-169a-42bf-8261-f6e127b28cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2431daee-ed00-4e00-b668-38c969510148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d18a76-e26b-4097-bc6a-33830671ab91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae09d1d-76eb-471c-ac24-d00d2c9fda9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f48242-42ac-4a86-a4c4-5d63008c050f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e1a638-c1cb-4b6f-abc6-201ab1ed708a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f865a196-929b-4b91-85a9-3d3dba0f55eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a87fd7-c676-471a-bfde-03bb785b8128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096b4cab-e9d6-486f-a964-df3c8c597c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c30eb-cb47-4756-9819-bb7823c1b67e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b5f2ef-6d7c-47ff-b9e3-f49f791bbfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3906ca-6076-4a0d-93c0-37237b999462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647cc1c1-7ad0-4791-b026-b632c6f52c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccba5541-c015-4290-b61f-aaa040975acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3893cab3-2f0c-4149-b540-c606338d137d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7041e406-3126-471b-95d7-92a9add229c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbef681f-7100-4002-9a5a-93067b8610d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d083ca22-a6fb-4daf-a341-2f1afd0baa61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeca783-8fcf-452b-abce-2b9b830dff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a671c-5ebd-4a8d-bd38-063351ae3330",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9630c26f-a71b-4854-9f0a-7f9ea453f0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318d147d-2564-4ccd-b918-64e640e54ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bdc89d-d0c4-4438-beb2-c6e248b7cb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc32677-b1c6-4efc-aba1-8e7d6550d18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aa05ea-2790-474e-a07b-f7d347794148",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbdeaf5-bb10-4634-8827-63ac2685bf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e1449e-30db-409f-bb92-afa97c61c5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0edab19-a0f6-447c-8530-d6ab41c7a9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84debca9-69fa-49ca-bbcb-695946d97c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853f7af3-b6ff-4d51-bfeb-3294c330320a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573b9ead-11de-4f47-8995-55b0b02a77a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ad3e26-0b08-44f7-967e-aa4e65140e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1939d692-d1e1-4d30-b504-a5a44b94b79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431c23b6-3b18-4a72-88b6-1b9b434d1fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4475b9d6-5046-4d95-b4d9-a821e6150be6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4ba908-720d-4762-8766-2f8ba647b5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d9003e-c3b6-4424-9187-28a4d5cd98f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd5ef2-77ee-4da2-a2b2-57a3b06c2cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b92c52-4673-4de2-9a2e-16a887fb778c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4644944b-de36-4a51-ad71-b3770150f896",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f7ca7-7b6c-4451-b786-5f48b66100c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1c2a49-07b4-40f2-96e0-9f090246dd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d42f74-7e07-47bd-8253-334d31968244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1373df39-e4d8-4f84-bc34-9be2306104fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205ffd4e-7f78-4cb1-869d-1ba32244ea5d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f04531-8d50-4343-a15a-622bce8ec73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f952c-2879-4887-82e6-52aea2229e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d3ac74-fe22-43f7-bbc6-fd699e3c2a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92932c83-462f-48c9-840f-6b876f8f64a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d05229-7b75-4ba1-b41c-bf14ce107c96",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d06c42-c7cd-453f-9265-1b84919b9781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb5a99b-6ef3-4079-8a1f-c0752ec322f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bbad46-3c1f-4d37-a184-5d91faae7ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a9cf78-b02e-40ef-8c66-25146afe2a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71423c1-a4e2-4464-a2c7-47d48c957124",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513890f-03ad-47cb-a77d-723c235d6e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57631f4-eef1-4142-b22a-d4da74334818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81d0997-adf0-42c2-bf54-910894abb112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34871972-5b82-485b-870f-ab64dcbd7013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfaed17-85a6-4a89-a54b-bd9f8aa63bcd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ded769-30db-411a-b918-6665428b1518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409b34e4-3561-4354-a579-5f10010caf6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90671374-2364-4c53-b237-1ee0a0230664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb1f313-991e-49e5-a309-8c0ce639d36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d080bc6-5b0c-41c9-b284-451c3fb17cea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e77d7-191e-4427-af07-91f7b94256ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50de3ca-52d1-41c9-836f-7fd639c80b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c25b12b-ec3a-4df1-97ae-8f74fe891e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb53b94-c378-4a0b-ae12-bd68618e063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5108b3f-2e06-4f67-b04e-3ba08fe838d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc160ab6-2d07-47a9-a69b-a10d32e06f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575a6c71-e9e0-4973-ab48-0f4c0118638a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47dea8c-aecc-4d74-bfe0-df616de8d8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20bcd6a-f224-4087-82fa-1cbd76d6aed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6991be-cf85-412f-b1b8-0b435b844589",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e06a97-786c-425e-8173-50ee8252624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42b6fb9-a271-4147-ad53-4841ddddc51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81dc066-518d-460d-8a24-495dde106df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0665de77-57eb-4f62-a67e-2bafc44f7ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b30a7b-0e3d-4ca4-bf47-b3af8e4a8492",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745728de-71bc-4cc6-8e4e-8f09de499d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775b967f-d8af-4025-aa2a-3ccf169a3a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e66c9ff-53bd-4792-bd03-d80ce2f22c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1346915d-e59c-4a35-abe2-c2fd44f7508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f100062-8ff4-4860-8713-6d8c29e10a91",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bf4989-759f-4f4f-be96-ce93d32ba4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd18bb2-1fff-4d9e-9580-41e039b48fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c184c818-6a5c-400d-a4c3-b14ef4f3fc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd489b3-327f-43d1-965b-99cadceac25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c08cc-9346-483d-bed0-180e892650b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124f7164-07a2-41ae-99e9-883d3c0fdc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82842e10-09ad-4d1c-8cb8-9869ea9d9efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10741683-cd35-42ed-9886-baae9a86898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1a859e-2da3-4078-9121-1c9ecded86e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d8bcb3-8532-4340-9122-0bcab7403d7b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd7cf42-58c8-4938-bf8d-d7d1bed908c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849b604a-058d-4f72-bbed-7a358ebc4b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d18bf4a-29f1-485f-82d2-6b6332bfc4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dfcd0f-a431-4605-9690-e4d3a24fb42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbca39c-8311-451b-aa6e-d47425df89dd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eba07a7-9202-48b2-86ce-555bbc63e025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365cece6-f61a-430b-ae6f-5787c99f7b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca81c6d-46c2-4b1d-894b-33e007910119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4c14e4-7778-4acb-86a8-a7503bae8701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8ae3a0-1d19-49a3-91dd-a2dbd7097caf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851dde65-2f03-4248-a3dc-da716bda02cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53788328-4dae-4488-b616-f34fe46e66e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1545ed-ce8a-4df9-b582-3ff84a1217b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a082dc72-5e9b-4b75-a648-e38d07cbe1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a292d001-485d-4b7f-9813-cc5893e10fc8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a58e49-edea-4aba-8464-0583aed457b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7b404ab-b68d-41cb-b420-c97fa04c29ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e84774a-cbe2-4218-ab09-b119af63e18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239238e-9ed2-4f95-9c62-d7d352da2006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fffe3a5-8a91-4a3f-af05-4db673980256",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e0cf7-37df-4684-a0b1-5a9028763c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3dff57-fa98-4457-9adf-bbb7a91fa43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa4b212-70cc-4131-ab13-5d9bd74c3354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff4745c-1750-40a5-a93d-cc81772624a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509abc3f-5cf8-4632-a136-055b902a40fe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9131908-fdac-42b3-af15-5e9c22aa6861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557a723f-086c-4620-a93d-95f23a543927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3448e2c-25bd-4dd6-8588-0fe98dea3fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042f24e4-8678-4682-87ab-41295338e7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ecd9ba-1617-4fd5-8678-e2dfbae89ec4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10313329-e27f-419d-b0b1-22461d6ccf97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4167a9-0d2e-4355-be33-7cf0a9accd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3499303b-51a1-4ae4-9b7c-ab4a76959a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bfce63-6be3-46bf-a9aa-de307f264bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2752f782-8725-4823-a8a5-a9f68009b341",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57191d04-9673-4bec-b69d-d6154edc571b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de24ad51-c82c-4715-9ae5-e40b5953bbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e955f8-ebaf-4d9d-ba0b-a4fb7a9c3869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f820db0-8cb9-492f-8ac1-c17d30943792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea915c0c-609f-4579-8913-50d2d36f03f5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6f4e60-b3f4-4c81-bb25-67e3fe1c9262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d13cb6f-ba43-4336-97bb-fd7f04906dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755ec5ec-fce3-4eb0-9e43-b0a7d2315799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ef46e0-6226-4065-8d79-903ad4790ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17c62e-9ee9-492e-ab12-45821343f7ed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd2398-5d43-4e6f-8080-25a0bdfb3832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9dae39c-1846-4823-8d7d-5d052d130105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f700d0c-252a-4018-99fd-d6dd37fce5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc9edf1-dbce-43ba-9445-f620e34d5708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2124125c-905b-4d70-98db-3590e7f4793e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a8540e-8526-4aeb-b8ff-208fd96715a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38376ca3-1a8d-4b6c-a224-505931b0424a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a637c03c-4afc-42ca-b732-223081917498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a50be7-f361-46f0-938a-b6f46c05e947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4594baec-07fa-4065-ad83-7871afef1e78",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff4d24f-0413-4a81-b19f-f27b3337474d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c71a223-dd8f-4975-81fe-4239df490298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a36d585-7c59-4f38-b3b6-7fad1bff2160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b26e8a8-efec-4487-858a-8e1519aadf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f084d4e-02f4-4f39-b1eb-51c8006a4dd8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7361b119-0cc5-458f-8477-34ae9f2b90ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2dc12d0-d0bf-49e8-a920-85738fff2573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d158f78-5fcb-45bf-a419-501d0bb7096d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5538c5-1ade-4dcd-8f71-afb0396836d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba47feda-ac62-4f0c-90c0-ae88640a5ee3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049ace4d-c149-4e53-9deb-5cd2c3de20e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070a92aa-0187-4355-9d6d-7657531e3c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09684357-7b93-46f6-8b1a-b76fd4a2413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594579bd-b24a-4869-8df1-3b904f2f3f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2777155c-3419-408e-9249-bf2ed5bb170f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc7c62a-cad0-4400-920c-2e0d224ef503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a6490c-32b3-48a6-98cf-7ac18fcd72ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d64d71b-f434-45de-a55c-f29fe8c7ce74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef693e4-5b4b-4264-9725-21d7be7a1045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a182ac9-dfb8-445b-ba74-89c97ea01828",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2af790-354f-4bde-a199-b74d56f96749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edaafa1a-d97a-436b-9b29-3b92108ad3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbc4951-475c-4464-b92b-6751d959e2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f996e0b5-70c0-4f4a-acfd-2701e23c5e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e814f9eb-07f1-41a3-aaf4-3df104259c79",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9ce337-af50-460d-954a-54ac9eef6ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4149911a-ccaa-461a-b198-054d12eadfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b7efac-fd9d-4cf4-8bc8-888cac605b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330d3c16-cdac-4ac3-9d8a-18a560b01fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25be9c41-6a6b-494f-932a-7733cba3e6bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eadc5ba-833c-4256-97d2-217d11c66ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ea7c1b-a5f9-4a45-931d-1f96c2527305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8904accd-1a83-4714-b503-d64f03efc7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c37a9a6-c87f-4bfc-bb16-423a50efed08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b77242-5e01-4a66-be54-cbba2f0adfe0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fd3e7c-a767-4654-9ab0-192c42ec37e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac01fa32-a6cb-4db4-9f9b-05f2ad3f267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af229b80-09d2-47b2-a246-702ad8ce593f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8090ef-f895-45a7-b810-8e3ae7ca351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42724bfc-3bf4-4151-9ff8-a83c3365ac99",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d98b2a8-b6a1-4fb9-8896-d3e461203b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8272385b-3dfb-408e-bef6-3673401f0da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba22ef93-dcbb-4e97-9793-e01be062ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be1c26d-f18a-46f6-b689-973051d0a61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf1bc49-7efc-497b-ac55-b573ba3eb485",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c7926b-c954-4c3d-839b-5c39a23775f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f98a68c-7949-4ab3-a93b-c5ed4568eb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3802d8-ea1c-438d-99fe-771807343f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3606910c-1da6-4b65-860d-3a4dbe5c5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca94dbe-09b1-477f-952f-85b2bd886cfc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166367d5-72e9-424e-a592-2fba0c5fa532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5556f4-e4aa-4115-aecf-2bbd05332a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c451cdac-2852-44c7-9d02-d0249ecb6145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec518090-7c2d-4f13-ba88-b7b410a7e09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed09e988-f8c2-4009-9f5a-fb77ade3dd21",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce36193-3cc0-4882-9263-3320ef8b2efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e979ab99-212f-4ab0-af46-b7a6bdc52f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b50ac8-cb6a-4115-9461-66384c8a8fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74507e93-2af5-4669-8a77-9675ef05111c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864c9dca-419e-4f7f-b3bb-da0d2e4ae972",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff3ae88-9fad-4708-b101-d249e88d0921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3f095a-9f11-4f35-951e-c64a311c10e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479e1a64-5f16-498d-8c97-6bbdd499eecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a35dfc-825c-4a64-85e8-0e0bd77614d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2501f20f-ef01-47f4-8836-6c85a64c2e21",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d17e1ed-953b-465d-bf57-f92fe667955b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33dea9b-c220-4dd2-91c5-c2178ea60e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d1c4e-517e-4b9c-8b80-324db5fae706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ef19c3-2c97-40d3-948f-cdd406006079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed516f96-61e5-49a8-b736-ca12c5e4e3c2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a47cc4e-3f4c-4fe8-bb82-c19db74f5183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a5416f-dac2-488a-8207-89eee208e7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6a6686-dcd3-460c-aeab-c6d171bc05eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1854d7fc-1e3a-4c39-89ed-8d130464309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f811423b-f17c-4a57-afe8-89ec6234b322",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9996c2c3-2c08-4b12-abad-0d55d091e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ea41d7-9a54-40ed-9dc1-0e7f027ad92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441b1b07-20af-44f6-8dc1-ca913d1bea2b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90af385-568c-4dc2-9775-86a39d47fb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3906b10-5248-468e-bb92-cf8ecc6b4707",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23526fb7-df90-44a3-98bc-c927ce944e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ae11f7-fdaf-401b-be0b-56a66668f28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3709f3f4-fad7-49cd-a378-a9ee4594d6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a9b344-66cb-4428-9b64-1930c8ebea0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245c9b42-5834-4209-9068-c0b09764f1b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a83ee6-fdc4-4a8a-ad57-caa369fbf182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "108e256b-7a81-48f3-b29b-11d1d1035dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52484884-ffb2-4c29-94bd-868462db8c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1933bf-59bb-4ace-88c8-9a87b57fb9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504067f1-d547-4a74-b954-1383de90e247",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f7ad4f-d780-4a8f-9c60-8a487dd02ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ffa0e8-1e2c-4ead-9d63-98dd8086133c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c5e9e5-7a03-4d0c-8b62-6e8a9cf3c2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f947e683-5125-4f7a-be0d-e42f1557eba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2bffa6-adf6-4be9-8073-f8e79380e576",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d2001-48ef-4392-b2b6-13dfc03130b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecd15ac-55f2-4e45-b702-2d40762b974b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34edda05-efdc-4274-8a6a-29f978570403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9784d8a-8acb-493c-b76a-0a033bb02bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a136ee02-620b-411b-a5b2-68b2a99204ab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d63710-38be-496e-b949-cef16c824f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132760de-b10e-4e75-8b35-1533972331ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaa0ae2-4982-430c-be9d-0073605e806d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dd0f31-072c-4a54-8c51-fccc8e92ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c43b92-38b5-4f48-8eec-8e89a60a3da2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1695316f-609a-4a2e-9af5-7d6c88258797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c846daf-0201-45f9-bd5b-80306d236d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6748d48e-0c30-4f98-8b79-60235192ff32",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7860a7e5-90de-49f9-9d75-c0b3f0196bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23ed8d8-ebee-45b5-bdf8-41916c6ff4dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e633f0f8-0e6d-4d3d-a65d-64a3a7314566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6aca24-18b5-403d-af31-8aed36de8246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425cf5d4-0614-4506-884d-15bb1bb9ba17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7225f0aa-b13f-48e9-9b36-c15dbdc142ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "429931c0-9c7f-4fce-899e-7e2df2b12c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c46ec1b0-4eb5-42ff-9564-d717aa1adee1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92e5409c-a301-43f1-8665-ed11cb7d90ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58776974-e345-4dd6-aadb-cd2edc2e1330"
                    }
                  }
                ]
              },
              {
                "id": "babc1c74-dac9-4f60-859d-8356a4a0ab65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eaec3cb-2120-4b6d-bacb-8ad2fc0e41f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2688906f-06a6-4a83-ab03-630c43c5e912",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4790341b-1d4c-4962-81d3-d00f0feeefb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288a79aa-3544-4011-a3b3-9323187d7e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e60069c6-d523-4411-8be0-b9f28457478a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d0e65dd-4534-4558-bf82-473308771b4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "523192b5-e442-411c-9032-cf161d1f7319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e297a484-ade0-40d8-a9ed-018c9e491499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fff9500-9156-4ea1-a50a-11d70ecae7da"
                    }
                  }
                ]
              },
              {
                "id": "1303b0be-0023-45d2-98c3-9c9419e50952",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4c395b13-878d-49fe-baf0-1f10667e2963",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280808ad-a10b-4e88-a797-e989af055c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c37b2e6c-f42e-499e-8da7-fec22bc7015a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055e2f7c-b2f9-4ee6-8e05-7cfe8563bbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b371cf-5bdc-40af-b00b-9208a86f7f16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de43d346-828c-4503-ba2e-0dca135982a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08733358-4aa7-4a64-995e-dd7e8282bada",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3783847-011b-4bdf-827f-493a50d168cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4b39ace-c091-4d0b-a4fb-09dbdd2b2685"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18c3ac39-f4d7-406e-ad60-d5484d5af542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ede3afc2-9c4b-478b-baed-b811c6cf8fc2"
                    }
                  }
                ]
              },
              {
                "id": "39ca95c0-aec2-48cb-9d87-7efde706fc42",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d8ea439-395c-4a12-b1d6-23ce23a8fa7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7686ba99-f6df-46b2-8a22-a670f8b01292"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8ec44fd-7bb7-434c-8c0f-a8a866aa660a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "443f53ea-3f28-45cd-a163-b482d5fcbf47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e77717b-f6e0-456b-87c0-ab5c81f396ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "23914bd0-be8c-4523-b848-532d6e2a6bcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18cb1e4b-be54-4656-8c38-2dc34b5b59ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b00ae2fd-9f7d-4754-9129-6454aac01598"
            }
          }
        ]
      },
      {
        "id": "9c75050b-b9f1-41a9-9c35-cc78c47e545d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "031aebfa-44aa-441a-9a88-26ded6e32e9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "141baf6c-8dc1-4c9c-a78b-38d9d61a2f02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceb1bc34-e33d-46d0-bb70-44549f59b250",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206d975f-7c7f-4ba3-afa6-fcfb1e33e845",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f9f1c390-29a4-464d-baea-4f3b87a90532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9b719e-ad0f-4e5f-86c5-a14ff83d0859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adfce253-d50a-4daa-9657-6dc70c3a1782"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ab1c8af-be99-4f7d-9b65-73d4800a2b03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a3e096e-032b-43ec-8000-ab351d69c49b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0426ca21-331b-4f42-a49d-d620ac8ccae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dca33f2-84f6-4041-96fa-2f1c1f4905e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "401692eb-340c-4c11-b31f-15c0ca19562e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "be8f5cea-207e-46eb-a286-903e35a25fd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4666da92-714f-4fff-a303-f0f57c904816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6f99056-80b9-46e5-a1b8-61ed1c2dd03e"
            }
          }
        ]
      },
      {
        "id": "af1cfc4c-1942-403e-bb91-da536e6ff13c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d43d1e6b-b3a9-4a94-82d0-afab0709ab8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2117d2b-df2a-4475-b25e-9ffead5422e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90c4de46-3d78-412d-86f1-e8e64265a0e6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d723d8-3b18-4d1e-9d89-c0c568f7fe07",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7741bf8c-a07b-4cb3-a97f-de6dac6c047d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b05d49-773a-4fb8-a6e3-1eaf0f1ed4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3cbbf14-4e09-4199-8c67-6be3f0a7a91e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f17c672-5d17-43bf-becf-8641e67e6007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fe08550-f9a8-4bc8-9288-1da6c55ba053"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e49538d7-87a2-4564-9bb1-169cb1f6e050",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e6f7fbd-3c08-40fb-8f81-2c73fd7c31df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a5667f2-432a-431d-af69-847d1c72fc5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0949f476-2c22-4753-b962-fcab92d74d4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dd94731-85bb-4a55-8997-ce913a80debb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c023788-e31c-436c-b724-a651d31f07a4"
            }
          }
        ]
      },
      {
        "id": "b4665ff6-b83f-4287-8103-cefbd7fbb5e7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "75c6640a-c18a-4f13-9ffe-cc4cbddf851b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45c7da8d-46ea-4bb1-93ba-e71c1f753fe9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de85a86f-6421-458b-a544-e3bc0dd48810",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d1cfd2-1f63-4538-b06d-cc712cc808e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5fd84eb-8dd5-4aaf-a5e8-5d6113ca999f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b99795-80cc-416b-be41-3f5e5eccc663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cb37633-e447-4161-b34c-2203bd5890b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "861e1ff8-d922-4442-ab82-53da1f4a1cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c8cb43f-d841-4b85-a43c-08f08a1007a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53c5e680-dc1f-4fbb-acf6-1db40c2b5b50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee1b9298-819a-47c1-8639-527b650c91a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a420a99-c10a-475e-b912-168fa4a1c7ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e09446e8-3182-455d-8127-fcebd2ec3625"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94060063-2551-4846-83ea-724eb5e92352",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dc5bf38-36d5-4aaa-a1ec-8468d8404614"
            }
          }
        ]
      },
      {
        "id": "89977324-6bff-4273-843f-9bd7be3a1a0f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "582c7600-af12-41cd-8dda-b09fe678f055",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4550a3e-4667-49c8-8aef-65f6b40ae723",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e693937a-5f8c-4c07-9fdf-b07e6a2e2864",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f99c62a-14c8-44d5-a5f9-2ea849e02a11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "631b9a98-2067-4258-bdc7-79290638ff50",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 295.8412698412698,
      "responseMin": 8,
      "responseMax": 7137,
      "responseSd": 1083.2245470119217,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718411870105,
      "completed": 1718411953132
    },
    "executions": [
      {
        "id": "3a9f2860-ba7f-4830-acdd-0e4418151d75",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "040d5812-1a56-4683-af28-95a8bee41207",
          "httpRequestId": "29a60d4d-3ef4-4365-9126-ebf5ceefc786"
        },
        "item": {
          "id": "3a9f2860-ba7f-4830-acdd-0e4418151d75",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0f25071-00d9-4d8f-a679-648b451c46a8",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "ecc71790-b3f7-4ba5-8528-9f7797589ed0",
        "cursor": {
          "ref": "58cc15af-3980-4a7d-b7b8-b34df9694858",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a400b53f-f052-439e-a505-90ec47321497"
        },
        "item": {
          "id": "ecc71790-b3f7-4ba5-8528-9f7797589ed0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "64c3db86-6264-4293-bb9d-802d3acab7ee",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "64670726-0d46-4911-98da-8f777cca6e15",
        "cursor": {
          "ref": "20388ba5-3475-4cb8-acde-703e0fda9946",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ab3fe538-7b85-4e5c-bea2-bc50e02a617f"
        },
        "item": {
          "id": "64670726-0d46-4911-98da-8f777cca6e15",
          "name": "did_json"
        },
        "response": {
          "id": "66ce8738-eeca-4273-ab1f-e267cf0ddfde",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf7a32-c68d-4b0e-a913-d63926641c7d",
        "cursor": {
          "ref": "a98f40b2-cc98-4ccf-912c-2393f2b1e918",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd866987-a940-4f1b-931e-5e0d72602d1f"
        },
        "item": {
          "id": "90cf7a32-c68d-4b0e-a913-d63926641c7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "03a0435d-7a24-499c-bf37-c3892130e86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2239,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf7a32-c68d-4b0e-a913-d63926641c7d",
        "cursor": {
          "ref": "a98f40b2-cc98-4ccf-912c-2393f2b1e918",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd866987-a940-4f1b-931e-5e0d72602d1f"
        },
        "item": {
          "id": "90cf7a32-c68d-4b0e-a913-d63926641c7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "03a0435d-7a24-499c-bf37-c3892130e86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2239,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728cc759-0bbd-413f-975a-1c2ad79b72b2",
        "cursor": {
          "ref": "6a9c98c1-8582-4fd8-af04-a8166fb6634f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6f9bf215-ba10-49e9-8ae0-8ac3eb58586b"
        },
        "item": {
          "id": "728cc759-0bbd-413f-975a-1c2ad79b72b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "98c07be5-94c5-430a-a4d6-ae5dd8c8369e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2600,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b3c4a4-a569-44be-9243-ec41ee6a85ff",
        "cursor": {
          "ref": "e1716e66-2eb5-406d-b5b4-9280d7f79a85",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e42aa104-1f8c-4300-989a-9e499caad0a6"
        },
        "item": {
          "id": "69b3c4a4-a569-44be-9243-ec41ee6a85ff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "436d15b7-20e5-4154-a300-33f7e3fed9f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2297,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d7a477-3120-495a-97ed-53b3537ecbd4",
        "cursor": {
          "ref": "4bd224a3-8fca-411a-b6b3-c6c1b5019efe",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f52908e4-64c4-4d84-a784-211305fdb167"
        },
        "item": {
          "id": "87d7a477-3120-495a-97ed-53b3537ecbd4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "26665981-a9cc-49ae-a1d5-3c3c55c89cbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1225086-8af0-4a85-a235-7a33a70f7c59",
        "cursor": {
          "ref": "622a8de8-9eac-4d65-8b95-ab0734200a50",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "285fbc2e-ea6f-460a-ac7a-b0185d0f446b"
        },
        "item": {
          "id": "b1225086-8af0-4a85-a235-7a33a70f7c59",
          "name": "identifiers"
        },
        "response": {
          "id": "8c96d8b7-0d1c-4835-9f8f-f2387fa26817",
          "status": "OK",
          "code": 200,
          "responseTime": 2423,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d36990-729a-4e17-b3f1-1e8ef14ecc24",
        "cursor": {
          "ref": "a9f6915f-ede5-48f4-81f0-947f918cb525",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f4261b5d-6dea-4402-b307-a1fe8eaefec1"
        },
        "item": {
          "id": "59d36990-729a-4e17-b3f1-1e8ef14ecc24",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe01daff-8626-4eb6-a635-e03cff4e98a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6588cff7-d6d2-4528-8d9e-62e406332b2d",
        "cursor": {
          "ref": "85ae6841-7141-4042-867b-e60e8c5fbcdf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80155e30-20aa-4235-9d65-f9679ff0ff1b"
        },
        "item": {
          "id": "6588cff7-d6d2-4528-8d9e-62e406332b2d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "89f0a552-cae8-4c65-a64d-923ac5286fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e54055-d72e-406c-8387-b2af8afcc449",
        "cursor": {
          "ref": "8a31df31-8fc7-4bc0-ba81-d1f76b962def",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87e8f3c0-879b-40a7-9cea-972b76204c81"
        },
        "item": {
          "id": "c1e54055-d72e-406c-8387-b2af8afcc449",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ca3c32b-b1e1-4678-b890-aaa553a8ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db93fc-c238-4b7b-bc99-0b6fdf7aefac",
        "cursor": {
          "ref": "6c63a46f-6d8d-41cd-bbd4-ee523c90b7c0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2e55d061-ab98-4ad0-a13d-73858e44c2f4"
        },
        "item": {
          "id": "75db93fc-c238-4b7b-bc99-0b6fdf7aefac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4b6c90bc-955a-4b56-b319-85c3ef54afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96620a62-369a-4a9b-8d8e-9436ce50b0a8",
        "cursor": {
          "ref": "a2ae255b-ce7a-40fb-ac4a-dd47dd89ce3c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "defeb82f-c2c2-4d7a-8de4-f47ec261898f"
        },
        "item": {
          "id": "96620a62-369a-4a9b-8d8e-9436ce50b0a8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ab91047f-4389-4885-bd7a-3e45c6244fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f11726-8c59-47f1-a51a-34166419ef0d",
        "cursor": {
          "ref": "7a77c3e4-d5cd-4eb2-87a2-2724f0501e7e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7380ca76-9476-49c0-9949-61971a7a4539"
        },
        "item": {
          "id": "61f11726-8c59-47f1-a51a-34166419ef0d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a4cc345d-4383-48da-bcfb-51d8f5a6623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa2afa8-83f6-40d2-96e6-b52064c55599",
        "cursor": {
          "ref": "70756f3a-3945-45f6-8228-30e0eb79f275",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35303262-f169-450b-a90d-094a027900cb"
        },
        "item": {
          "id": "aaa2afa8-83f6-40d2-96e6-b52064c55599",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ab4775ea-042a-488e-ae75-a544848f40a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d81f7a-f9c3-4928-bd44-471c2bb957d6",
        "cursor": {
          "ref": "695bfd57-99f9-4c86-852c-42823f420dc1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0db1dcc9-c3d5-4a2d-a39f-bc7b154ec1ae"
        },
        "item": {
          "id": "46d81f7a-f9c3-4928-bd44-471c2bb957d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aa143b7c-1673-4e93-8818-e8d52775ad5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcab4324-f39f-449e-9dbd-d10e64db431f",
        "cursor": {
          "ref": "dfa26af3-af10-4b27-a12f-a6dfdf818e53",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0f1cb679-60c4-48e3-a6f3-c760ad91ec92"
        },
        "item": {
          "id": "dcab4324-f39f-449e-9dbd-d10e64db431f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "15c67208-51de-4659-9de7-3941ad3413f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df1cd55-6fc8-4679-93ab-d6859f05d86f",
        "cursor": {
          "ref": "c9c28af9-99ec-434b-a9fc-499fdcbfd0db",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8d5a6062-2430-4529-a91d-6efc331e5642"
        },
        "item": {
          "id": "6df1cd55-6fc8-4679-93ab-d6859f05d86f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8520a047-878c-4da3-a2f2-035726b3320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c3c0b-ba89-4c29-966e-f72eecff2307",
        "cursor": {
          "ref": "faa6fcba-299f-4f89-b28e-35cbea8f0989",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2664295c-91ea-47d8-bf67-433003024610"
        },
        "item": {
          "id": "a83c3c0b-ba89-4c29-966e-f72eecff2307",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "118f18f9-f596-4203-be8f-ec5173e5c925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbb7852-aa52-464c-a7b2-b75653a11226",
        "cursor": {
          "ref": "4ff63a86-d22e-4b58-8a0c-3b65d9f697d1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7591fda6-ef0a-4ac1-a816-2eb5a3fa3d63"
        },
        "item": {
          "id": "6cbb7852-aa52-464c-a7b2-b75653a11226",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fe2e3184-f1f0-4809-a465-dfd38aea241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d63c73-a2e4-450b-9843-0f79710a7b01",
        "cursor": {
          "ref": "499c63d2-5ce8-4297-ab43-108c17182800",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9d0ab66-0c8f-4d14-957f-9669d554354f"
        },
        "item": {
          "id": "b6d63c73-a2e4-450b-9843-0f79710a7b01",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5c46a135-e9f6-4f97-a9fc-8b27d84ad32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e3147-15ee-4026-a4fd-0e232babab38",
        "cursor": {
          "ref": "a884a0ff-ccce-4ead-aead-dd6d4fa337bf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6a008679-b471-44c4-899a-ecd81326d279"
        },
        "item": {
          "id": "af9e3147-15ee-4026-a4fd-0e232babab38",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8a9c50ce-e3ba-424a-ae4b-17af31c38362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776ed25f-3531-4fb3-adf6-0d16797cf8ff",
        "cursor": {
          "ref": "719909aa-7287-4c98-9bf0-3c104c8bfd4b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "229c4665-8f83-4307-a123-d60d19a39780"
        },
        "item": {
          "id": "776ed25f-3531-4fb3-adf6-0d16797cf8ff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c41b57d-c944-48d2-b8b5-ff6fde71763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb18ea-d47c-485b-ace9-8c6cde2485eb",
        "cursor": {
          "ref": "3c7aa571-7032-42cc-89bf-ec7d0047c795",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8b52289a-0285-4716-b280-3401502feecb"
        },
        "item": {
          "id": "ffdb18ea-d47c-485b-ace9-8c6cde2485eb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a8e3e121-866c-4a5d-a61e-ab1aa4bc2d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2b5b23-4aa3-4306-8862-fac54139bc2c",
        "cursor": {
          "ref": "8459c625-cf90-4251-8eca-95bceeb7cfc1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cd8f2522-bfd7-46df-b2d1-87a4586cccf3"
        },
        "item": {
          "id": "cc2b5b23-4aa3-4306-8862-fac54139bc2c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f535228-e687-48ef-85b4-a45f1129b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58546c85-2c61-4b51-8374-ad66a78932ec",
        "cursor": {
          "ref": "9dc8330a-9639-424e-a777-b4f6d21340cb",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fae5615c-a843-4509-90b9-1f8df011d792"
        },
        "item": {
          "id": "58546c85-2c61-4b51-8374-ad66a78932ec",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "46f6bbe5-a027-466e-934d-ae5e4bb89b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29654f6-7369-4fb6-a167-1a27e26a6240",
        "cursor": {
          "ref": "56ffed2a-87d3-4246-9518-b3e0c802f999",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4d5c8216-cb7d-43a5-90ff-a034ff3ec97a"
        },
        "item": {
          "id": "f29654f6-7369-4fb6-a167-1a27e26a6240",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4c733839-e0a7-4de7-a718-ea3bf4e72f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90468681-7c94-409b-8943-28df7971fe21",
        "cursor": {
          "ref": "d5567d7b-c388-479a-82b8-a5eccd4b4b41",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3449c0a2-3b4b-469d-b581-cef134461212"
        },
        "item": {
          "id": "90468681-7c94-409b-8943-28df7971fe21",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "63665a27-54c9-4b23-b002-8bd28ff4b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3324f180-ebd3-4518-866c-023d2767d5e3",
        "cursor": {
          "ref": "13fdcce4-817e-4634-b8a8-98f4c4eb6e26",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "228c9012-ac19-404a-8c65-c3d29cb518ae"
        },
        "item": {
          "id": "3324f180-ebd3-4518-866c-023d2767d5e3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e929ec0d-4f4b-4da2-97ca-5b096f446498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bfa985-3f5a-4c06-9436-d7df2349ba03",
        "cursor": {
          "ref": "63b5b7e7-11f3-4333-a776-6da8221fab47",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "785b91b2-2610-4ca9-934e-3057a1eaeab8"
        },
        "item": {
          "id": "89bfa985-3f5a-4c06-9436-d7df2349ba03",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2c5f5a0-15de-4019-9b9b-91e8fe1acb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bca85d-b6f3-488a-8497-239f2dec0d30",
        "cursor": {
          "ref": "52ab9ea7-3457-4f5e-8ca2-3ccb632cb767",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a9b0e15-379b-4bdc-b64c-3dab1784c7b6"
        },
        "item": {
          "id": "96bca85d-b6f3-488a-8497-239f2dec0d30",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "18970ca3-80fc-4540-8d96-4c42b7524718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bc3c86-0c82-4c1e-9915-07fb8634e199",
        "cursor": {
          "ref": "3403211c-9e90-4373-ba6a-75e3ef822b07",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2d2c729d-ba84-4eed-b802-a6fbf745e89a"
        },
        "item": {
          "id": "71bc3c86-0c82-4c1e-9915-07fb8634e199",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "56ccdf7e-b924-4bfd-9051-e0599b110288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74b3972-738e-4966-92c5-e54a680a2652",
        "cursor": {
          "ref": "128521b2-7c79-432e-9c07-a90a01c3f704",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "af3eeaa2-7bc1-436a-bd94-d2beadb91772"
        },
        "item": {
          "id": "a74b3972-738e-4966-92c5-e54a680a2652",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "35efc4de-e970-4213-ab90-27764e948e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda6740-6ba7-4bb1-93fc-66a7c8d3a934",
        "cursor": {
          "ref": "d49e44a4-e7a4-41e3-921d-aead3a01a44c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "71a01d3d-6ccf-45da-b47c-f0d152e6adf3"
        },
        "item": {
          "id": "bfda6740-6ba7-4bb1-93fc-66a7c8d3a934",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d6437d33-94a5-4303-92b0-3f0877a90227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74615611-36bc-4b54-9851-2d33eda533fd",
        "cursor": {
          "ref": "0db67348-c91b-48de-994a-a2f7c77bb2d9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4b2758bd-c019-4dcc-b275-1d8cf32a9d60"
        },
        "item": {
          "id": "74615611-36bc-4b54-9851-2d33eda533fd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f43b7420-b7f4-4968-8fba-16da088953b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7699de3b-1b0c-4ffc-a4ec-3d4886e95529",
        "cursor": {
          "ref": "4d99e58a-90ff-4f42-8ef8-2d095a378255",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cb9ddd92-d30a-4888-acd9-2602946acddb"
        },
        "item": {
          "id": "7699de3b-1b0c-4ffc-a4ec-3d4886e95529",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "828a3537-0e33-4bac-abda-9e86a71c4da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432cbf92-26af-40c1-9807-7da6891e2f6d",
        "cursor": {
          "ref": "826ccca1-bbb1-4641-b888-d1bb8e6d9620",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ebee9adb-459b-47b4-8c52-8ca1a6366e45"
        },
        "item": {
          "id": "432cbf92-26af-40c1-9807-7da6891e2f6d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ab533a52-ac9d-48cc-a142-f93d4beb4bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f87111-5cf0-4027-99fb-18b2b153da26",
        "cursor": {
          "ref": "862e91e5-0839-4a77-9760-879d3ce114dd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9acc1234-9942-4b6e-8b66-218e067673ca"
        },
        "item": {
          "id": "a3f87111-5cf0-4027-99fb-18b2b153da26",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f12d9558-1f14-46c5-a0e1-00744742313d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b9c3ae-ba5e-474c-aec1-891045c190ae",
        "cursor": {
          "ref": "fc5a1f5a-b5cc-413c-8ac0-9c2a6cd1cb0f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a7396b45-d69a-47a9-bb16-ef232167837d"
        },
        "item": {
          "id": "48b9c3ae-ba5e-474c-aec1-891045c190ae",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "49aadda7-a9ab-425a-8859-79d0497c2037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53087674-0d6b-497f-b382-34569584a571",
        "cursor": {
          "ref": "3177e3e1-df88-4252-ad4c-1a84a9cc859b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "55b4296c-eb27-4ea3-b6d2-b8fee5280104"
        },
        "item": {
          "id": "53087674-0d6b-497f-b382-34569584a571",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "332cf2af-729f-48dc-a3a1-3ae65f687e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ced46f-e99c-4850-8f39-56c70de35de8",
        "cursor": {
          "ref": "ef992945-52f0-44b8-979a-972c6c21bada",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e1653d58-d83a-4ed5-ba93-f6a25a8864e4"
        },
        "item": {
          "id": "58ced46f-e99c-4850-8f39-56c70de35de8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4e889086-4838-434f-b965-2ea2f7d7e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d24a95-2a35-4f8b-8785-78187efab367",
        "cursor": {
          "ref": "f877489e-9b48-4fa4-9128-ede5e2905980",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fc7ea9d3-4473-4c83-8550-86b6d35cc5e9"
        },
        "item": {
          "id": "51d24a95-2a35-4f8b-8785-78187efab367",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5931dad8-0881-45cd-98d0-94d87d5f087c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8290a-d062-4215-953c-7836884c292e",
        "cursor": {
          "ref": "47c864fe-009d-4879-b9e2-a58e443bd743",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8d9b6a5f-25b0-489c-b951-37464697cefb"
        },
        "item": {
          "id": "69f8290a-d062-4215-953c-7836884c292e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "23c261e0-2897-4793-bdae-3bcd32749bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a35bb8-22a4-454c-be54-6a09aa601396",
        "cursor": {
          "ref": "89373047-ebb8-421f-9104-7028dd8242d3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c9e7ee88-a038-4bc0-9c00-f79e3f3ebaf1"
        },
        "item": {
          "id": "b8a35bb8-22a4-454c-be54-6a09aa601396",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1e195f48-7525-4e0c-babc-ee0ca7fd5487",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dbfef3-de33-456d-ac1c-ba6cd571bac5",
        "cursor": {
          "ref": "b62bfb78-e0bb-4580-937b-5159b23501a0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b6e0e234-63d4-4823-be51-75023bd46ea9"
        },
        "item": {
          "id": "f9dbfef3-de33-456d-ac1c-ba6cd571bac5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "758889f7-ef8f-4e03-8b40-193d3623ccad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e083e-9bd1-44fd-aebb-d99810902ea5",
        "cursor": {
          "ref": "bf3dbd5e-bb85-40d0-924b-6d72ab50a311",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e28b67ae-6eb3-4acf-a804-6f9ef40a097e"
        },
        "item": {
          "id": "a93e083e-9bd1-44fd-aebb-d99810902ea5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3afcca4a-1387-46a1-b27e-1d2d63aed8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e4f1ef-de44-4ea2-be35-0fd77ea72621",
        "cursor": {
          "ref": "bc141594-320f-48fe-a841-b01f12a4969b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6c961ba5-f23c-4ea5-8ca4-aec005320e30"
        },
        "item": {
          "id": "a1e4f1ef-de44-4ea2-be35-0fd77ea72621",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7997fe42-ef8d-423f-aabe-18c321be1e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c6595-7744-41d1-8502-84aabc2aaf9e",
        "cursor": {
          "ref": "5a221fea-37b0-46e7-a06c-06b95531c7d4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "56e7a494-57b4-4b58-9f4b-84d48e3d2e07"
        },
        "item": {
          "id": "758c6595-7744-41d1-8502-84aabc2aaf9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4b2c2acc-532c-48d7-8d62-cec6961baab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efdb824-cfe0-4515-904e-0142684bac46",
        "cursor": {
          "ref": "82114eaf-c740-4b18-95ad-eded7ec770cf",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6735521f-f5a0-4931-82f5-d040c30efa8b"
        },
        "item": {
          "id": "0efdb824-cfe0-4515-904e-0142684bac46",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc7d5c0a-2223-446f-89d9-36002757568b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d1d0b4-6e1c-45cc-b45a-36c24fbd231c",
        "cursor": {
          "ref": "00ee6827-903e-4921-b6b9-8f247f9a3eff",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9360cca5-813b-4521-b386-96ef56826b64"
        },
        "item": {
          "id": "89d1d0b4-6e1c-45cc-b45a-36c24fbd231c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "92e485c1-e4ec-4b6d-b34d-6b71aa5844ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f7106-7975-4f76-aa73-3f050e6bde0e",
        "cursor": {
          "ref": "225eb7b7-72a2-4c0f-b1ce-83d73807a277",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c15caa19-ed42-4690-a1bd-7671414640c9"
        },
        "item": {
          "id": "e36f7106-7975-4f76-aa73-3f050e6bde0e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "348cff16-842d-4122-bf68-eafcb390e185",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb263b8b-e9ad-4c0e-9c7e-588743eb78d7",
        "cursor": {
          "ref": "73c0a32b-6d06-4f17-a09b-c84765480376",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ee15fcbe-c56b-4756-9c66-61967539ad24"
        },
        "item": {
          "id": "cb263b8b-e9ad-4c0e-9c7e-588743eb78d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "61b7bb1e-bc0f-40ae-a796-cabbbe3d9d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baace89e-8a88-4752-bfaa-5f56c99fb1af",
        "cursor": {
          "ref": "63a55fe5-8203-442d-9d5e-2c6b848dd27f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d6514a3b-dda3-4595-9976-b6feaf0250e7"
        },
        "item": {
          "id": "baace89e-8a88-4752-bfaa-5f56c99fb1af",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "02e2f63c-738a-473f-b6c5-d3adda569efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68073ec-134f-42d7-94df-495a3fd144ef",
        "cursor": {
          "ref": "1d70c9d5-2c17-4638-93d3-a6cadb8f1fbc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0823a67d-1d48-470e-b6d7-5853d7dd29d0"
        },
        "item": {
          "id": "d68073ec-134f-42d7-94df-495a3fd144ef",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "85b42a67-47e6-4009-90e6-492a81912c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06f5b8-a96d-4011-adc3-d51119c25f3d",
        "cursor": {
          "ref": "7e9bb342-165b-4b8b-9c4d-14a33bc90415",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ccd2096b-e0ab-4cd1-818d-402943703dc4"
        },
        "item": {
          "id": "2f06f5b8-a96d-4011-adc3-d51119c25f3d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d36de737-deed-4c9a-b0d3-4e9320e4e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7714f9-361e-40c2-95e5-7b837706898a",
        "cursor": {
          "ref": "82632942-22ea-4d4b-aa01-5353021f81b1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42dabb49-99b7-4a96-a04e-3a59dbdeaeca"
        },
        "item": {
          "id": "db7714f9-361e-40c2-95e5-7b837706898a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d23c50b3-3545-42ba-8229-ae5bf9bdfe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2a19d8-10ba-4bc5-9bad-abcb1b77751b",
        "cursor": {
          "ref": "d55ce246-b005-4e74-adab-8e20ac1e6856",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56b9336f-797e-4ce4-b585-76ad46af8deb"
        },
        "item": {
          "id": "fd2a19d8-10ba-4bc5-9bad-abcb1b77751b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a06855d9-452b-425c-9817-9d8f7dabe014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f64def-681b-4ba9-8293-39b2565d78db",
        "cursor": {
          "ref": "ae1082db-545c-43b0-9bef-59866055b70b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ce4dc3c-2c87-4637-a81c-96244c9517c3"
        },
        "item": {
          "id": "13f64def-681b-4ba9-8293-39b2565d78db",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c3d108ee-fa69-4485-944a-640f3df27074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf8c35-815f-43ba-943a-48a52fb6a5ea",
        "cursor": {
          "ref": "c52ab8be-a408-4fda-b7c2-49f433371361",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "faf20c9c-7056-4c1e-822c-ee0f332de54c"
        },
        "item": {
          "id": "49bf8c35-815f-43ba-943a-48a52fb6a5ea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d782f235-d5fa-47c9-a905-55b931074770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15aa2bb-c6ec-4744-a153-c542fd2c5f08",
        "cursor": {
          "ref": "b3bccd68-82a6-42e4-9b7a-f60aa2b9bc06",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "909cd955-3bd5-4dc7-8a7a-54d373ab8d38"
        },
        "item": {
          "id": "b15aa2bb-c6ec-4744-a153-c542fd2c5f08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "66564431-af8e-4aff-be75-05ebf2aa37b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5e70a8-ffd1-4c08-b735-e5d33c46cccc",
        "cursor": {
          "ref": "a5a5dbc6-eec2-40be-9602-ae99af72cce7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5913d0f5-6631-4a61-95ae-a1ffb7f9ebad"
        },
        "item": {
          "id": "ca5e70a8-ffd1-4c08-b735-e5d33c46cccc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b7ad2165-697a-4333-9035-ddb42098bac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8ed79b-9a02-4c59-b173-785df6993c0a",
        "cursor": {
          "ref": "aec14360-bbf1-49c6-83df-b602c4829f17",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5c2087c8-1d71-4cf5-ae99-8fb7be4f4fc5"
        },
        "item": {
          "id": "9c8ed79b-9a02-4c59-b173-785df6993c0a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e0741991-d072-4eae-a545-370ed9d8357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e0d546-b127-4e7a-b626-73c898dbb447",
        "cursor": {
          "ref": "566c58f7-77b6-4fe5-930d-3df9b285031a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2bc3b45b-37f9-46d0-a2fc-5a6774982f92"
        },
        "item": {
          "id": "22e0d546-b127-4e7a-b626-73c898dbb447",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8c9d302a-8941-4673-a462-b9e3b7e7479d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e84f997-8fa5-4f93-8afc-fb1e77f7f1e9",
        "cursor": {
          "ref": "3a2f67aa-9010-4721-8823-28fd49f9ddc0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cab0fed0-d46d-4515-a259-9334bae339a1"
        },
        "item": {
          "id": "1e84f997-8fa5-4f93-8afc-fb1e77f7f1e9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "48052eff-38ef-4db1-a74c-d7c7416fe11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb6da7-fb5d-4a03-a607-b13ee1186908",
        "cursor": {
          "ref": "df5e9f37-c229-4ab9-93dc-55bac2ea008c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f03ea26-4a87-4684-9ea6-60236c6bc259"
        },
        "item": {
          "id": "88cb6da7-fb5d-4a03-a607-b13ee1186908",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "64844c58-ba13-4791-94a0-eb16d88e9fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8de5ac-5900-4471-884a-7efdd05c33d2",
        "cursor": {
          "ref": "1fe961fc-4c73-408a-bf3d-33bae8a34d36",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad5e7df1-30ca-40fc-8319-1d5d009679b8"
        },
        "item": {
          "id": "6b8de5ac-5900-4471-884a-7efdd05c33d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2547622-b1c2-4eb1-98ff-67b2ddc7633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2284fa-511e-4668-98a2-b968137f7ae8",
        "cursor": {
          "ref": "6069854e-64d4-4807-b4e8-7c23720e1127",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e9146891-de38-4eda-94fa-014f7c59319b"
        },
        "item": {
          "id": "1f2284fa-511e-4668-98a2-b968137f7ae8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1a8a645a-171a-470c-827d-1e7bebc35c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b868a3b7-485e-4e0b-9760-17a23c1b798f",
        "cursor": {
          "ref": "100e4d40-6369-498b-b349-bbf5f6986d3b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "173ca414-c827-4173-87e6-d1ee57f0eb6f"
        },
        "item": {
          "id": "b868a3b7-485e-4e0b-9760-17a23c1b798f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3b9a3c57-bf74-4ddb-a702-03f242cdc41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5954209d-4d36-4b70-b195-5ce0915aa6d6",
        "cursor": {
          "ref": "4826857d-3c67-40b5-bf85-2a9d0a84fab0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0e9c939b-a5fa-4fd6-b98a-d6ab33e12fc2"
        },
        "item": {
          "id": "5954209d-4d36-4b70-b195-5ce0915aa6d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64687e58-54ad-48b2-97a5-f6c90be3e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f1804a-02bc-45c8-b934-64d725d22693",
        "cursor": {
          "ref": "6644693a-3495-4871-bf5a-2f3d6c64a260",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f9f061e-7495-42b6-9206-28040cd80fa8"
        },
        "item": {
          "id": "78f1804a-02bc-45c8-b934-64d725d22693",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "477a8956-c7d5-47c6-b688-4b5be99aecc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb4212a-0d7e-4d78-a2f0-a757cfe6a2df",
        "cursor": {
          "ref": "ba1e3ee7-54ef-4423-a1c0-32d32697654f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b4a03c96-bc1a-438e-a145-bb97472a0827"
        },
        "item": {
          "id": "2fb4212a-0d7e-4d78-a2f0-a757cfe6a2df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c644876b-9fc7-4f01-8d34-0bcf9355ebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af3da84-06b4-424d-8d68-613c15d14eb5",
        "cursor": {
          "ref": "08dcd9e7-02af-4f44-8e3f-55f9ef4611d2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "747b982f-3389-42a9-a53c-c77f0b7790ba"
        },
        "item": {
          "id": "1af3da84-06b4-424d-8d68-613c15d14eb5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a0611d1-3e6e-411f-89d5-6766c3f558db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47c8ddf-6b6e-4549-a1de-d284dda32f4c",
        "cursor": {
          "ref": "644b2dc6-dcd3-4f8a-a64b-bcf6fe9d8c18",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff851c46-d858-4c2c-9fa7-26fc6044651d"
        },
        "item": {
          "id": "b47c8ddf-6b6e-4549-a1de-d284dda32f4c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "00b78489-9ab9-498b-aeaa-41d3044c6476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f74641d-04d8-41a1-803c-194e7a79bd1b",
        "cursor": {
          "ref": "2613daba-70d8-40f6-b4bb-8c7a7d5183c8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8b80e14e-90b5-4fd9-b806-24b6d66f3ac8"
        },
        "item": {
          "id": "1f74641d-04d8-41a1-803c-194e7a79bd1b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8527ee8c-b88d-4577-b283-27a69c8730a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aa0c8f-1d4e-48e5-9cad-e4c91515aa6d",
        "cursor": {
          "ref": "65d80a1f-8fae-40ef-aad1-7f005f1c7baa",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f417bb8d-f19d-41cc-b610-40158ba8d469"
        },
        "item": {
          "id": "14aa0c8f-1d4e-48e5-9cad-e4c91515aa6d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "019f3955-5a36-497b-8af0-220370aba0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf0bcbf-c5f8-4fd4-bee8-c99a593fb0c2",
        "cursor": {
          "ref": "a6822e32-9c25-4d62-b597-d165fc052c0b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a1e4657f-8db6-4863-8308-436367f3c21f"
        },
        "item": {
          "id": "fcf0bcbf-c5f8-4fd4-bee8-c99a593fb0c2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a054eb74-631a-49b9-a862-188b754e3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dba4c8e-d0c9-489b-b8e5-4eeab25c2798",
        "cursor": {
          "ref": "6ea4b765-a75d-41aa-8048-98893a556876",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6c6b3f65-f8c3-4370-8fac-867c2c4c9173"
        },
        "item": {
          "id": "7dba4c8e-d0c9-489b-b8e5-4eeab25c2798",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e33077f2-dad8-478c-b9ec-8033018fc886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aabd50-de6c-4c1c-82d2-6d77d9693d13",
        "cursor": {
          "ref": "65c661e3-e534-460a-befd-66674073152a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0e57cedc-17b4-460e-81dd-10be853e3fba"
        },
        "item": {
          "id": "67aabd50-de6c-4c1c-82d2-6d77d9693d13",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b1c92bf-ed36-4f9b-a699-b39c14b22f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ea39d6-3041-436f-80bb-4c2c83e2b726",
        "cursor": {
          "ref": "92a7cd3e-1964-4a9d-8121-5f5502eba387",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3360abf-c8df-4723-9671-9bdf25ad3247"
        },
        "item": {
          "id": "a1ea39d6-3041-436f-80bb-4c2c83e2b726",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d3565424-fe25-4ce1-96ee-dccca0f22518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f8fcf9-3ad0-444b-a06e-e293f86038ef",
        "cursor": {
          "ref": "e1c8374e-6dec-43c1-8f8a-532be59deb26",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c90cee37-b111-4ff6-8801-776d17feffda"
        },
        "item": {
          "id": "d1f8fcf9-3ad0-444b-a06e-e293f86038ef",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8d5d12e2-6cd5-4346-8164-036014006bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b0fa14-2fa2-46d3-98ea-6ad01a4beb7b",
        "cursor": {
          "ref": "a1518e17-8b8a-4fb4-b3c2-40a9ab4c316c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7ec6e437-bc7c-4414-a625-9304d3ff7f6b"
        },
        "item": {
          "id": "f5b0fa14-2fa2-46d3-98ea-6ad01a4beb7b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "61860f01-ad02-4693-851f-9a430b1b4903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef6d43-af76-490c-9e4c-e8a88c8f805e",
        "cursor": {
          "ref": "6ee18e0b-1207-42f3-9e75-588c50a94138",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f815fb6c-26a4-438a-bab7-8497c9fe431b"
        },
        "item": {
          "id": "daef6d43-af76-490c-9e4c-e8a88c8f805e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c5026dd7-2846-4b08-b87c-ae7a2c0bf0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda4505-221d-4e24-80b4-bf8ae94f16b2",
        "cursor": {
          "ref": "2e6e1b3d-fe0d-4b7f-9c44-550045edefe6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bbc3461a-c76b-47bc-a3f8-09300056ec32"
        },
        "item": {
          "id": "1fda4505-221d-4e24-80b4-bf8ae94f16b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f354c89-0a36-4029-b6e8-8a96c3e4f5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2545f3c-34e2-42a7-bd21-11e5ceab5b47",
        "cursor": {
          "ref": "6d6a6171-b731-413f-9317-42bc769d62d1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8a030c81-69e7-47c1-aa4d-84e6af14a102"
        },
        "item": {
          "id": "a2545f3c-34e2-42a7-bd21-11e5ceab5b47",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f1109ba-008a-436b-be84-c9d3e1cade2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1423c8-c25e-4e1c-bf5b-4d1444768d47",
        "cursor": {
          "ref": "cb2d7c85-8a6e-4eaf-98d8-12db6156f74f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3eccdebe-d4a5-4e41-81ea-2b66ba4c64ba"
        },
        "item": {
          "id": "6f1423c8-c25e-4e1c-bf5b-4d1444768d47",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9117e8e9-e15c-449c-846d-35aa15fa932f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fc7a47-8225-40ae-98f4-fc8fd1c42eca",
        "cursor": {
          "ref": "23b1dc70-9b06-47ee-b8c3-49658e0ad9ce",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "898f8556-e5e3-46aa-84a6-bb6e3fe2c6b1"
        },
        "item": {
          "id": "26fc7a47-8225-40ae-98f4-fc8fd1c42eca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6c3ff81-ddea-4738-b687-d622d64b7de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0de7b4-f7df-480d-9ce1-64a6547903fb",
        "cursor": {
          "ref": "8a9e0bd5-92fa-4956-93ad-b19f787e947d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "27d76eb8-86fc-4f5b-abb6-8d3bd6a845fe"
        },
        "item": {
          "id": "1b0de7b4-f7df-480d-9ce1-64a6547903fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b95c8785-8f65-4d5d-8dae-7d340a3e61be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f81b37-c740-47cf-8d9b-eb400e7c1b0a",
        "cursor": {
          "ref": "72b90ded-6d19-4ba1-b683-72b08ef31865",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3d7681fe-0638-4bad-9829-c9cec7c74084"
        },
        "item": {
          "id": "95f81b37-c740-47cf-8d9b-eb400e7c1b0a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "486e8bb0-98ad-4774-a520-ac6e2c8ee8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9933b8f0-11b3-4c1c-8877-6d14950a8727",
        "cursor": {
          "ref": "1c4d7880-628f-48f6-ac2a-a02afc263a12",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f566dd3e-6611-48fd-8660-4e52bb0c5e08"
        },
        "item": {
          "id": "9933b8f0-11b3-4c1c-8877-6d14950a8727",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3b26a2f5-3bd8-4ed4-8672-329f7d27da79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30e0d5-762d-4e5a-80fc-0508d9bdc6d7",
        "cursor": {
          "ref": "51d14a65-d2c0-499d-9c31-ed7dad4301a4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "35bb2dc5-5501-46c4-bed0-3b8e55d96c1a"
        },
        "item": {
          "id": "0c30e0d5-762d-4e5a-80fc-0508d9bdc6d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f52de89e-d4aa-472d-aca5-41a8c2d0a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca2f2a-00a7-4478-afad-f91b0486ccc5",
        "cursor": {
          "ref": "b82db5da-04bb-4767-8acf-80d916847e06",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "84d763f5-3133-412d-b1ba-0201fbb1af31"
        },
        "item": {
          "id": "9dca2f2a-00a7-4478-afad-f91b0486ccc5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "25e18903-abf5-44af-b8ca-5acada1a9fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb473d0-2f5c-4cb3-8c09-bc6ce19a54e1",
        "cursor": {
          "ref": "eb278f26-a05b-473e-9825-0d0261b80dd4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce4d9e0a-7607-424f-838c-d061a71f597e"
        },
        "item": {
          "id": "3eb473d0-2f5c-4cb3-8c09-bc6ce19a54e1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef1ab1d2-89d8-442b-a921-3f8b491a9dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02824c4-496c-485c-a799-a46c2cf4b3d9",
        "cursor": {
          "ref": "561779c3-be9f-4ce6-9eba-a6ff22441dfe",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "77efbf68-5ada-4e19-a62b-a2d08ded547d"
        },
        "item": {
          "id": "c02824c4-496c-485c-a799-a46c2cf4b3d9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d3458b8a-fb08-4f1b-90d2-66a9c9d9f595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c86b6-961c-44eb-8e55-f46e78ecf222",
        "cursor": {
          "ref": "2027ad4c-1c4a-475b-8054-5d5a831027c3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a86a55ee-b319-4bb6-a342-2e1c25ec4491"
        },
        "item": {
          "id": "d33c86b6-961c-44eb-8e55-f46e78ecf222",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27f2374c-d6d1-4c19-bcb6-b0f00deb6b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ef659-19e7-459c-94ad-caa1383dca36",
        "cursor": {
          "ref": "fe982d86-b65b-485f-8f00-04a559023f0f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "279673fc-6fc7-4172-ad32-f044454a32e2"
        },
        "item": {
          "id": "8f4ef659-19e7-459c-94ad-caa1383dca36",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f43bbe21-cb69-4f74-9fa8-954df2816728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfd22bc-f7a5-4284-9e5d-2ff127d8f413",
        "cursor": {
          "ref": "85ea3d41-39bc-4817-809c-5851e8660b4a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d14fc641-bee7-4819-8cc6-cdcf0c1452f4"
        },
        "item": {
          "id": "cbfd22bc-f7a5-4284-9e5d-2ff127d8f413",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e771d093-052c-47ac-8e98-ca86c2b9f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de006ee3-0e4a-48ad-b460-18d4e688a572",
        "cursor": {
          "ref": "3844440f-639e-4db8-8a3d-dd240f3a98cc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ed514cd1-cd28-4e7b-93d1-cc8ff6c8c9c8"
        },
        "item": {
          "id": "de006ee3-0e4a-48ad-b460-18d4e688a572",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d6c5edef-f028-4b42-8159-39782555a980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65c2f9-8e67-4143-8e69-babaf4987763",
        "cursor": {
          "ref": "9fe99521-74b2-4e19-ba54-64fe9cb30eba",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6e4b5ca1-60ef-4f37-8b5a-6d960e976610"
        },
        "item": {
          "id": "ac65c2f9-8e67-4143-8e69-babaf4987763",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ca3c442f-9dbc-467f-a3c2-5cb855b218ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccc29bd-0544-45d4-9f91-e9606287cf56",
        "cursor": {
          "ref": "495d6f64-7e9f-45d2-856a-49fe9b9a0cac",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a21ed1d6-2b2d-46ef-862b-46cd7bf1f189"
        },
        "item": {
          "id": "2ccc29bd-0544-45d4-9f91-e9606287cf56",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "02daaeb0-5700-4ae7-998f-8cf3f3e437be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6bd5b2-18db-4407-9ff3-d394a6433a13",
        "cursor": {
          "ref": "7f7e3252-890d-4adc-a5e4-d55e760c54b9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7a11ecba-e376-4c04-b5dd-48944f5821d4"
        },
        "item": {
          "id": "1b6bd5b2-18db-4407-9ff3-d394a6433a13",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "effc4862-0017-4d16-a2d3-497e67e715b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ca4ce-1798-4978-a906-387bb904d043",
        "cursor": {
          "ref": "c234fa02-6350-42dd-95d1-947b62d83382",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be099ef4-105f-4925-829c-b19c30c59983"
        },
        "item": {
          "id": "d68ca4ce-1798-4978-a906-387bb904d043",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "16b91d37-2447-46da-8255-35596ffda017",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5063cc4a-0601-41a3-b788-bc8fcab6d263",
        "cursor": {
          "ref": "6139425c-062b-46e8-afd3-b5c573628ec6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a45c77d9-89df-4565-b527-b5e95d4ef059"
        },
        "item": {
          "id": "5063cc4a-0601-41a3-b788-bc8fcab6d263",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c9635ba9-56f7-4522-8c3f-e867aec63c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "50ea7b3a-2a53-4e01-888e-8d68eb5676ef",
        "cursor": {
          "ref": "c5571473-e6ff-4633-a1b0-6fb8e579de09",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "18026c22-0619-4f50-9052-b8f8b26262c3"
        },
        "item": {
          "id": "50ea7b3a-2a53-4e01-888e-8d68eb5676ef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b5735816-f454-414e-be45-eb9b2e192475",
          "status": "Created",
          "code": 201,
          "responseTime": 7137,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a80ca5d-7561-40a0-9d0a-c6974e86dbf1",
        "cursor": {
          "ref": "c05206be-1c74-45aa-8d42-0401841c5a66",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "327b91c5-4c35-4aad-897a-ce3e1f7cb3e4"
        },
        "item": {
          "id": "3a80ca5d-7561-40a0-9d0a-c6974e86dbf1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e3c26efa-64c9-49a0-af7f-0d14d8dfd48c",
          "status": "Created",
          "code": 201,
          "responseTime": 7002,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c98cca-ea9b-47e6-9292-08bf6732ef8b",
        "cursor": {
          "ref": "c6bee64b-5c95-4ee5-a77b-16376f7e54cd",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a5ead300-7ad9-43e0-b08e-d1ae9d4bc45a"
        },
        "item": {
          "id": "d0c98cca-ea9b-47e6-9292-08bf6732ef8b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a11b99f3-0503-414f-a642-7ca348a5a1ef",
          "status": "Created",
          "code": 201,
          "responseTime": 6259,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f68258-7f1b-458b-b847-51beb7a23cbb",
        "cursor": {
          "ref": "1f571759-ff5a-4b4d-a683-c58a4b3f0a33",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "28556367-91fe-4c81-ada3-e2ce40c8842c"
        },
        "item": {
          "id": "81f68258-7f1b-458b-b847-51beb7a23cbb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "465526cd-df0e-4a76-9236-259f042959a6",
          "status": "Created",
          "code": 201,
          "responseTime": 6818,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb71c00-60d5-4440-b947-b3c930eb6656",
        "cursor": {
          "ref": "ce3c716d-8250-4e0d-92aa-9f62d371eeb9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a9dc3170-a69d-4d82-9ef8-e19fc5bcc4e8"
        },
        "item": {
          "id": "4cb71c00-60d5-4440-b947-b3c930eb6656",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c4cc225a-27cd-4412-9238-33ffa19f4404",
          "status": "Created",
          "code": 201,
          "responseTime": 6867,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-15T00:38:44Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-15T00:38:44Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "da17f326-3c56-44fe-8070-ecdcea70843d",
        "cursor": {
          "ref": "ee66cb9c-80c9-4ef6-8eae-bedc7aae5473",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "73e627fc-242d-49bb-8ecb-0e8bca62b262"
        },
        "item": {
          "id": "da17f326-3c56-44fe-8070-ecdcea70843d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9ce3941f-14ed-4d35-bb8e-a22dd9c1eeea",
          "status": "Created",
          "code": 201,
          "responseTime": 6529,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f859ddd1-c471-4970-9608-2da72a0dbd04",
        "cursor": {
          "ref": "6ce52319-d177-489e-967c-27410218cfe2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "65f81af4-edc0-470b-be66-e4724a5c46dc"
        },
        "item": {
          "id": "f859ddd1-c471-4970-9608-2da72a0dbd04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ecfed1fa-46cf-4f23-89be-05cdcb17096e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caede66f-7309-441c-b1a7-ab3d1bde3acd",
        "cursor": {
          "ref": "e119f560-a4fa-4c01-b90d-95dfb65f240a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9bf7bd9a-9eee-4bed-85d7-6b8faaaaf02d"
        },
        "item": {
          "id": "caede66f-7309-441c-b1a7-ab3d1bde3acd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ca2133f-8b91-488f-8c79-acb3ba45ac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa219f39-d077-41ef-af11-7c1a7df96013",
        "cursor": {
          "ref": "c1c870c2-eac1-4b82-bd98-11069f8d0c56",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ce8099fb-7b75-41b1-9ac2-bdea23ae747b"
        },
        "item": {
          "id": "fa219f39-d077-41ef-af11-7c1a7df96013",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7eb695c0-b699-4de8-81b7-e9cf13a42bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dfcde8-9057-47b6-b159-ae4548a62382",
        "cursor": {
          "ref": "dfc2738a-e68c-450f-ad9a-4332e9974b11",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eef3ddec-4fe0-4fa9-9d74-80a4aa2001a4"
        },
        "item": {
          "id": "27dfcde8-9057-47b6-b159-ae4548a62382",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b47cb099-9a38-4c49-99df-ffa8996ae433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc34b466-6735-4f86-b3bc-9ac6d44070e1",
        "cursor": {
          "ref": "d6c19553-5dc0-4199-b590-da1d09d62f61",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "05d58848-7b32-4ef3-b795-f12fcd8b94e6"
        },
        "item": {
          "id": "cc34b466-6735-4f86-b3bc-9ac6d44070e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58a8ba24-3541-4126-a6aa-8412e42c0cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e45f34-c800-4c6b-9e5c-1fcd811fdc08",
        "cursor": {
          "ref": "332eaf40-29e9-41ac-a9ed-1765c3f27aba",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6da1e87c-8b8b-44d4-9047-97b555a2dc15"
        },
        "item": {
          "id": "e8e45f34-c800-4c6b-9e5c-1fcd811fdc08",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8cb564f-e9d5-44b1-be0e-458ba007926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f5fbc2-a3a1-47c8-9937-e833de41dc96",
        "cursor": {
          "ref": "2d39337a-feac-453d-99dd-75f79f15a1fd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a22e0330-afee-495e-a877-a4267f6582de"
        },
        "item": {
          "id": "b7f5fbc2-a3a1-47c8-9937-e833de41dc96",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92dd7df0-ae6b-4e68-b848-8b140a8d1c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb832682-4f34-4b1d-a16d-118c2be7c0b4",
        "cursor": {
          "ref": "37704603-ea61-48de-94fa-a14f64eb5c53",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e9430674-645c-4c1f-97db-cc71f9417383"
        },
        "item": {
          "id": "bb832682-4f34-4b1d-a16d-118c2be7c0b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "88c52e5b-9022-4712-ab69-b45e9c6a73fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46efda71-50d4-4190-b2e7-e57a390f357b",
        "cursor": {
          "ref": "2cca61c4-50cc-41a2-a54b-19e8b57598ca",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85f19bba-ec70-44a6-a80d-cf197d125ae7"
        },
        "item": {
          "id": "46efda71-50d4-4190-b2e7-e57a390f357b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7d286484-b1bf-47d2-951c-078f6ee063fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb51833a-cf7b-45a4-adb4-6d71b4216f23",
        "cursor": {
          "ref": "467f1829-3d94-4efe-8af3-835ec71a1b71",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ed65a019-85a0-4ffd-b638-81515dd957e1"
        },
        "item": {
          "id": "bb51833a-cf7b-45a4-adb4-6d71b4216f23",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0f120d0-edd9-43e6-9c20-685228dff676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dac8b3-ea54-4f93-8108-b51291daf3c4",
        "cursor": {
          "ref": "c72a87db-3731-4e44-9826-028bd80bfd37",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b32140d-8ae1-488d-be7c-ef3031fa4a8b"
        },
        "item": {
          "id": "80dac8b3-ea54-4f93-8108-b51291daf3c4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "91740e85-9cd6-4edd-9312-e17c18787fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fb0946-614c-42ee-a440-2dc609c621ff",
        "cursor": {
          "ref": "4495daec-ec6a-4435-9a56-a5d2d27db6ce",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3dca9d69-9f63-411b-9922-3ad6863be302"
        },
        "item": {
          "id": "35fb0946-614c-42ee-a440-2dc609c621ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "25078a7a-b16b-441d-8d32-80fefbac4c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc9c95b-3796-450d-b263-56e9abba5b44",
        "cursor": {
          "ref": "2f8021ee-0433-4aac-b82a-d0627407b564",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3ab90c25-e535-4478-a71e-6660f18561ac"
        },
        "item": {
          "id": "9bc9c95b-3796-450d-b263-56e9abba5b44",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3dd28f4-80b3-40d3-9bd4-e678181fcb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec3088e-3096-4af6-ab1e-49d3627cfc9f",
        "cursor": {
          "ref": "e0c8d717-3f13-4a9c-ad97-b5efc05f7a25",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d41b0ebe-02c0-4e9f-97ea-97743866c3cb"
        },
        "item": {
          "id": "9ec3088e-3096-4af6-ab1e-49d3627cfc9f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0686c06-3f67-4d11-a875-796891ba30a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f422253d-b7ae-46f5-8973-0c551301f02c",
        "cursor": {
          "ref": "9a0825ba-3fae-4ccb-8de4-f36e5642f191",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d0884ef9-c667-47ff-85ab-26fe4125e77b"
        },
        "item": {
          "id": "f422253d-b7ae-46f5-8973-0c551301f02c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ed4118d-bd18-4704-9235-e16645233a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8915d2e-e19f-49ca-9cd3-a4fa60c8b2cf",
        "cursor": {
          "ref": "3ed63c52-79bb-4ac5-8313-dea5209603c2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de5fd1e7-5ac2-4d19-81c2-8c9fee48c372"
        },
        "item": {
          "id": "b8915d2e-e19f-49ca-9cd3-a4fa60c8b2cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "025d74ee-f90c-4538-9783-246fed1ee67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb9596-64f1-4d93-9b1d-b32347ab4c41",
        "cursor": {
          "ref": "8b46f6d4-67fd-4328-9b9c-f5d496247d80",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47463e3e-9230-435e-9c11-4fc64597b7ae"
        },
        "item": {
          "id": "8ccb9596-64f1-4d93-9b1d-b32347ab4c41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b864c2cc-9322-41e9-a91d-d718eddc594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df53d46-dfee-4d9e-a5df-31271eedceb3",
        "cursor": {
          "ref": "242feb72-a6d2-4d0a-94ea-7889226cee9f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "70741588-9b9b-479e-9256-5b03951f0ae3"
        },
        "item": {
          "id": "8df53d46-dfee-4d9e-a5df-31271eedceb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8d498e73-9a89-4b10-962d-42e4ac645a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e8b440-6ba5-4503-96a3-552dcd780bd3",
        "cursor": {
          "ref": "2ff0bd48-c397-4d89-b657-3e246efb0223",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b5091de5-c931-4544-bc0b-185968dc7659"
        },
        "item": {
          "id": "64e8b440-6ba5-4503-96a3-552dcd780bd3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "064a476b-d1aa-4457-a41d-b845d58d13e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38b8b6-c291-4373-ad8f-c6427a33203b",
        "cursor": {
          "ref": "32f43850-d13c-49e4-b5e3-9c5354a837a7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0770d628-f1bb-4bea-a0fa-dc76c47fc624"
        },
        "item": {
          "id": "fc38b8b6-c291-4373-ad8f-c6427a33203b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "42b447c6-c881-43d4-9a72-c84f7fffde49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb9dc4b-ed8c-4995-a7ec-03ad3b379b3a",
        "cursor": {
          "ref": "1458c9a5-0be4-4ca8-8342-702f63ef383a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "456853b8-8d20-43f6-93a5-48877c8a180a"
        },
        "item": {
          "id": "0bb9dc4b-ed8c-4995-a7ec-03ad3b379b3a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "22b20af6-a1f0-4bed-ba0c-aa204e461804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c242dc-8314-4b5b-b67c-b6be2e4e5f8a",
        "cursor": {
          "ref": "0b706f02-6648-47d7-80af-f8d576c38870",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c66f9cf4-7c1c-4bc8-acbf-4805777465c6"
        },
        "item": {
          "id": "11c242dc-8314-4b5b-b67c-b6be2e4e5f8a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec73b11f-ca15-4ce6-893d-9e9c06350b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15f520-6871-4e73-b090-bbcf0f3a1346",
        "cursor": {
          "ref": "fed4f16f-1077-4349-97da-075270feaf56",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7c2e84d7-59ed-42a1-935c-eaa7edd871f8"
        },
        "item": {
          "id": "ab15f520-6871-4e73-b090-bbcf0f3a1346",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b05112a3-c6a4-4d7a-ba05-82f743b563da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c905b33-0ce6-4ddf-8f4d-fca3d53eac8b",
        "cursor": {
          "ref": "04ab93d3-2de6-499f-81a7-aea94879c9db",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f8848c1d-7b93-466d-b693-a65fda0ddcbd"
        },
        "item": {
          "id": "6c905b33-0ce6-4ddf-8f4d-fca3d53eac8b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f586c664-eea3-4b73-b814-85897f1b2669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c66836f-06eb-4c1d-a7d6-005b31d310e7",
        "cursor": {
          "ref": "3913a96c-b574-44f6-bed8-755fe28f0c77",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "acaaa090-1dda-4786-90b1-1b830fe160f0"
        },
        "item": {
          "id": "1c66836f-06eb-4c1d-a7d6-005b31d310e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72cb4724-482f-4dc5-ac23-4e09b29a4ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe54fc29-053b-4f32-98b8-ce5c3d7e6bfc",
        "cursor": {
          "ref": "5482509a-d26e-48ed-a67d-fe8ebf7b52a2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "545b4140-0c8c-4066-bae6-aaced0e4606e"
        },
        "item": {
          "id": "fe54fc29-053b-4f32-98b8-ce5c3d7e6bfc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4a2f583-19a5-4052-9e87-a5b3fa15ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29a517a-80e5-4775-8f06-b5ec060a3a8c",
        "cursor": {
          "ref": "c6f3c024-8dd7-4329-a4de-47dbcc228fb2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "40926c56-b62a-41bf-a471-629cdd73c081"
        },
        "item": {
          "id": "a29a517a-80e5-4775-8f06-b5ec060a3a8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "de02a53f-8fee-43a4-9358-bb0eb78587a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b365342c-45ea-4e88-a8d1-0a4c1103e2d3",
        "cursor": {
          "ref": "b9454783-7385-4514-988b-d6a5b48f4c97",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "38a4017e-22c3-4d36-a23e-aa99a00b4b97"
        },
        "item": {
          "id": "b365342c-45ea-4e88-a8d1-0a4c1103e2d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cbf4516-6106-4bc4-bda8-f42960c88ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95091c0-a877-4c06-98a6-f4f180ee0ac3",
        "cursor": {
          "ref": "c3545b2a-fc1b-426a-a0a1-e194e1a41a49",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b587290b-bb6e-44af-8963-c1c3938d889b"
        },
        "item": {
          "id": "c95091c0-a877-4c06-98a6-f4f180ee0ac3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de4922f8-4f33-4387-84bf-69888e6bf6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bc7dfc-34bb-4427-8a23-ccc536fcae9b",
        "cursor": {
          "ref": "da5b9a80-1aa1-4206-a0c7-5c50b5db8469",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "34f4391d-5b25-486f-9a62-7ffc001c9a90"
        },
        "item": {
          "id": "21bc7dfc-34bb-4427-8a23-ccc536fcae9b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e6bebfa-5c69-4e11-9a7e-6f7fe5672a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0cc516-c7eb-46e5-9074-3a3e7e1d6590",
        "cursor": {
          "ref": "cf542089-e962-44ae-8dc6-b27b1908ff97",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e2d2ee4-f03e-4f62-aea4-841c0c7196ac"
        },
        "item": {
          "id": "1a0cc516-c7eb-46e5-9074-3a3e7e1d6590",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "13b1f7b7-fc9b-4593-9554-f5e53aaa5086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c69ca0-3c77-4855-909b-a70d6954fec8",
        "cursor": {
          "ref": "85b3f57d-9ab0-4bea-9576-82520b495e1f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd17b098-2817-468f-812a-cd2f0c52ebd5"
        },
        "item": {
          "id": "57c69ca0-3c77-4855-909b-a70d6954fec8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1b13c602-b752-4b83-938e-23b26abb5154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf45af1-0a90-41ae-a27c-f3c076bea90f",
        "cursor": {
          "ref": "f253ce06-871c-45e6-94d8-9f4a1f019f6c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a3383d32-2864-412a-97e9-2f63d0965bb2"
        },
        "item": {
          "id": "baf45af1-0a90-41ae-a27c-f3c076bea90f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "766fb64b-c5d3-42be-a649-ac375a06f34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86d7ec6-250b-49fd-8110-b7d59217b370",
        "cursor": {
          "ref": "9f495115-13dd-4185-8659-507695d2e0ae",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "afcc511c-d95d-47bd-b956-80f6b522acbe"
        },
        "item": {
          "id": "d86d7ec6-250b-49fd-8110-b7d59217b370",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "81490d0f-e553-40bc-9d3e-b7d3fa0c0cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53d4f3f-e56c-4f1a-bbbf-d8ba81caf010",
        "cursor": {
          "ref": "956ae659-0e4d-4297-beb4-4941ca023053",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2075964c-4636-4f9b-8083-f8a25f1784a3"
        },
        "item": {
          "id": "f53d4f3f-e56c-4f1a-bbbf-d8ba81caf010",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0491042a-875a-45bd-985b-63d435429cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444ca988-5ad1-4ff6-a72b-1d4e719e9e9f",
        "cursor": {
          "ref": "d8c53839-9bdc-4e71-84f1-5acfd44e2ff0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "45b087d8-92cd-44ec-8029-9b4d9236fbf7"
        },
        "item": {
          "id": "444ca988-5ad1-4ff6-a72b-1d4e719e9e9f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5835e529-d9dc-43e4-9bc2-57f1eabe2070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8503a9e2-74ae-449e-8b7c-1f6ff866166e",
        "cursor": {
          "ref": "d86ca39d-ce78-4519-bae2-18fab5771dff",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2b4ecc56-77bb-42f3-9c13-d7d279dc8986"
        },
        "item": {
          "id": "8503a9e2-74ae-449e-8b7c-1f6ff866166e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a5c318c4-e3d3-4bbf-b66b-c325c8b27cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9ccc5e-7943-429b-8ab8-6a39a42b032f",
        "cursor": {
          "ref": "8e305868-2150-402a-a5c4-2b637ba8a476",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5188904e-e09e-4c9a-ba39-675ac5f8e9fc"
        },
        "item": {
          "id": "df9ccc5e-7943-429b-8ab8-6a39a42b032f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7290fbf2-10ce-4fb6-9a96-a806841b5f98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b058778e-4af4-40fa-96eb-b5734811d680",
        "cursor": {
          "ref": "c25dcbc7-8919-48f2-8e76-d34f1b35f388",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "44e0f753-78d8-4466-b3ac-fa91a0973a81"
        },
        "item": {
          "id": "b058778e-4af4-40fa-96eb-b5734811d680",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5b49410-7b80-4a0e-921e-3d840e9a5c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df23c9ff-7980-4d8e-b7a0-b1ce56a1aa14",
        "cursor": {
          "ref": "06eb9c44-9c6b-4b2b-8549-7c2e8df8c2f1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cf081f87-9304-4118-a8e5-898a37a91477"
        },
        "item": {
          "id": "df23c9ff-7980-4d8e-b7a0-b1ce56a1aa14",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30bb501b-82e1-4a98-86fb-9469227f6f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeaad92-7a7b-43ea-ac97-5a2de2ecbb95",
        "cursor": {
          "ref": "99a86ac3-1b0d-4b28-9021-20a68cc751c2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9766a3d5-e6a2-41c0-8206-c7c08f085753"
        },
        "item": {
          "id": "9aeaad92-7a7b-43ea-ac97-5a2de2ecbb95",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0dbec250-c33d-4c07-a4c2-6d05a44fe2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348f68ba-6b18-47d2-b1de-b1dda1b594a4",
        "cursor": {
          "ref": "d51c6f41-7ab7-402d-9f05-64fa18672fc0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b7fa6dc2-ac99-4059-8b12-945b6508d487"
        },
        "item": {
          "id": "348f68ba-6b18-47d2-b1de-b1dda1b594a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "15018dad-5c7c-4fbc-bf03-05511568a1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2289cf-4ffc-4424-bec6-3a335fd9a262",
        "cursor": {
          "ref": "1f84278c-68e7-44d7-9174-4ec04cccd995",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8be4a433-ee1c-4a17-a333-9ab2007b0879"
        },
        "item": {
          "id": "fb2289cf-4ffc-4424-bec6-3a335fd9a262",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1977bec4-c6f9-4fb0-83ea-c73b9a1d30c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150132f3-72b0-4109-9d31-ed3ffc4ad547",
        "cursor": {
          "ref": "57b931e5-e48f-46a6-913b-e362b67ef256",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "78ce5cbb-885b-4e93-a53d-d2aaca722b6d"
        },
        "item": {
          "id": "150132f3-72b0-4109-9d31-ed3ffc4ad547",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1636e0c9-84f2-44c2-9fe0-1df8f58bd55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24bf4e9-a313-4537-ae4c-56ee19e09bb5",
        "cursor": {
          "ref": "e2a8b0e2-3da2-4d76-ba81-430617ff108e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a692fba7-b683-4a26-aefc-1169f484e984"
        },
        "item": {
          "id": "a24bf4e9-a313-4537-ae4c-56ee19e09bb5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "07f2d0b7-ec44-4209-8d81-125c2ab4c16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d41e0e2-6762-426a-a50c-6998bf27369c",
        "cursor": {
          "ref": "75e99caf-e9f5-45b4-8588-44ec662b0164",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bb210d2-2ba2-45b9-880b-a6022358a653"
        },
        "item": {
          "id": "4d41e0e2-6762-426a-a50c-6998bf27369c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a81cd32-7e15-42c0-ba60-19b0e3eb5a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9d49b-0f85-40c3-aeb5-c8b70c57b6bd",
        "cursor": {
          "ref": "344bf114-4bd3-4882-8a93-19dcf98ce622",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1415b611-831f-40a8-baef-d0b2e83497f0"
        },
        "item": {
          "id": "f9a9d49b-0f85-40c3-aeb5-c8b70c57b6bd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ea73f2e0-5328-4702-b306-80c49e5954ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5938d8b8-31cb-4f06-88b2-721697600a51",
        "cursor": {
          "ref": "8f10933f-dc4a-497e-b96e-fc0de80bd614",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cc01f78b-3b46-4469-b828-71cf327e6b2c"
        },
        "item": {
          "id": "5938d8b8-31cb-4f06-88b2-721697600a51",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8c10554f-d927-4306-b5df-643f2f4814e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0e5f28-9ee9-46d5-98d4-07be625679ad",
        "cursor": {
          "ref": "3e72ad92-6cfe-4ca7-9099-4d63c451a331",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3c7ffaa7-e134-453f-b692-9d20d1ccf408"
        },
        "item": {
          "id": "1e0e5f28-9ee9-46d5-98d4-07be625679ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3e6fd92e-ed1d-46d9-8aea-12c4fdb95df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c6ff46-ec28-4fcd-ab28-0c526d3eb5eb",
        "cursor": {
          "ref": "12571c6a-cfe0-4704-bfc1-4f4ccfce3627",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e39cf573-f3c4-46e9-a016-7365f35ba457"
        },
        "item": {
          "id": "52c6ff46-ec28-4fcd-ab28-0c526d3eb5eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "501fe3e8-b28b-41fb-bf63-87a8f10f9b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc0b899-2f5b-4f90-adaa-f3c13b966589",
        "cursor": {
          "ref": "1429dd44-1004-496e-82f1-d546997e17eb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c0d483c3-7e38-4488-9e98-d129e7c97957"
        },
        "item": {
          "id": "dfc0b899-2f5b-4f90-adaa-f3c13b966589",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0468af37-abef-4813-9c3a-008421fa5733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7d65aa-8fc1-472c-a242-10182d669b45",
        "cursor": {
          "ref": "78a24e20-9fb4-4972-9f66-a325eadab264",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "80eedaa4-9a8c-44de-9182-9d32685e095a"
        },
        "item": {
          "id": "fd7d65aa-8fc1-472c-a242-10182d669b45",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc58ebac-d434-48a3-84be-5771bd26a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56e021f-4fcb-4a73-95fc-bfc91d759d09",
        "cursor": {
          "ref": "f8cae597-359e-436f-87f0-596c405ec1dc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "098145b4-ef5e-4c2b-8abf-a0059371f18b"
        },
        "item": {
          "id": "a56e021f-4fcb-4a73-95fc-bfc91d759d09",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f91d817-343e-4638-98d9-e4b204fd9787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5995ac-b710-4853-b8f6-88a729bf9059",
        "cursor": {
          "ref": "bc127503-9dd4-4549-902a-e10e1dbcf9a5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "889d4032-4fbc-4b18-8215-803f33d8e19d"
        },
        "item": {
          "id": "2a5995ac-b710-4853-b8f6-88a729bf9059",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e45a1825-66ff-443a-9a4b-37d90b880e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0443d1-c4d7-4aa4-8774-411861b669e5",
        "cursor": {
          "ref": "9695c773-062b-45d2-82fd-ab76fc78a72c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c129e53-fd05-456f-b7ec-4ae96639ac6a"
        },
        "item": {
          "id": "2a0443d1-c4d7-4aa4-8774-411861b669e5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4e2f3539-ad79-4670-8476-80403af0fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615032e8-7442-4a59-a25a-fa6a14346139",
        "cursor": {
          "ref": "a6293e0e-70d3-452d-96e2-82832b530473",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dec15524-0472-4893-8d6a-50ea53f6ac39"
        },
        "item": {
          "id": "615032e8-7442-4a59-a25a-fa6a14346139",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79871307-476e-4485-8ef1-d555a0c29b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784665ea-7bb1-4a91-8390-be97419555b5",
        "cursor": {
          "ref": "4635e8d5-fa75-4f5c-b4bc-2f4c3fe1acea",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "153d09ec-7f46-4e67-96da-65bc48dc5713"
        },
        "item": {
          "id": "784665ea-7bb1-4a91-8390-be97419555b5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b7642254-f657-4f93-a437-33310e4d67f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7ffb1-ccaa-4686-95d4-1f37906213d0",
        "cursor": {
          "ref": "e8f9cf60-2eb4-4f7c-9aef-edcf970e066f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7289e0c1-250b-4b32-98bd-b64a6e922a82"
        },
        "item": {
          "id": "88d7ffb1-ccaa-4686-95d4-1f37906213d0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4b1f74e7-1bd6-4590-a431-2669960e5115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33431c69-81f1-4892-8d01-b7c2b90bffb8",
        "cursor": {
          "ref": "c049fe82-b21f-416b-82be-abb8e64bf1af",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1eed1363-1546-40e3-83c2-d83032e2dd70"
        },
        "item": {
          "id": "33431c69-81f1-4892-8d01-b7c2b90bffb8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7d272ad1-a4e6-4eb1-a4b6-58d334208ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f3fe6-581e-4aaa-ac13-7afd21e0ae80",
        "cursor": {
          "ref": "49de474a-c60e-417c-8b73-60832088c535",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2105fc27-b666-4ab4-841d-7c5e8ecb7243"
        },
        "item": {
          "id": "b87f3fe6-581e-4aaa-ac13-7afd21e0ae80",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d9770de-5568-4aeb-8fba-3f0841f11d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbbd254-9c8c-4d37-a3db-7c592c951f15",
        "cursor": {
          "ref": "bbf981b7-d13c-4617-9dbb-fe44e205e854",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a69ff43e-6729-4037-b5e2-2e2bdb48ca17"
        },
        "item": {
          "id": "8cbbd254-9c8c-4d37-a3db-7c592c951f15",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9e0b5fb6-1838-495c-b05c-e5a2bc1ad0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc5160c-048c-4133-9705-a0056d449ebf",
        "cursor": {
          "ref": "0765212e-43f8-407b-a89a-db3c5b7fb47f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f365a286-8a27-4a12-9332-39d377e0cc7b"
        },
        "item": {
          "id": "7dc5160c-048c-4133-9705-a0056d449ebf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "74eb58e6-dfb1-49c1-80ac-4e66408e035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559bd99-f627-4ceb-ad84-de92d9777f6b",
        "cursor": {
          "ref": "334d6a1e-9ef9-4bb8-9519-a33fcee16dfa",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11589ab1-9c11-4abd-aead-b8c3a0117598"
        },
        "item": {
          "id": "2559bd99-f627-4ceb-ad84-de92d9777f6b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e6a8061f-08f6-4df5-9196-06c7b7525bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ee58e2-6246-466a-9359-6f9bcf1c1183",
        "cursor": {
          "ref": "5183cbe3-8ca8-4cb2-81fe-da0bdfc17b5f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f4e259f6-2602-493c-88bb-0d48e9dbf04a"
        },
        "item": {
          "id": "82ee58e2-6246-466a-9359-6f9bcf1c1183",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ece516e9-8c64-4f01-87ba-9a3cffb198f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c814cf33-7ff6-4ec3-a581-50722fc0b41e",
        "cursor": {
          "ref": "f288e97f-01f3-4064-a2b6-8cf970a66d55",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6a254858-dd6c-4ee4-bff7-9858674c7621"
        },
        "item": {
          "id": "c814cf33-7ff6-4ec3-a581-50722fc0b41e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "74762c5d-1550-424e-bc9f-d1cd7ce26216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72de43ee-237d-4665-8249-c6618f036f74",
        "cursor": {
          "ref": "b9944ae3-716d-4490-ac6f-d4ec52d6d2ff",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c3182485-ad5f-4ea3-873e-f57ff6367c61"
        },
        "item": {
          "id": "72de43ee-237d-4665-8249-c6618f036f74",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e0ea0775-ab8c-4683-ac80-30dea984bd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229163c0-3429-444a-8e53-376112db5eb0",
        "cursor": {
          "ref": "7d9fd515-7f5e-4ae0-be25-6d3d9d32e9c5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a52c0bff-8bdc-4aab-b30f-0bbf478c0c00"
        },
        "item": {
          "id": "229163c0-3429-444a-8e53-376112db5eb0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e48b9ac4-2401-463b-9126-0131d275a581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0fbb8c-e1be-45da-b3f0-4211933a5b50",
        "cursor": {
          "ref": "08849f58-e3bc-4214-b02e-09b1f5328391",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08ca3232-0d3b-4907-8347-d691a141b9c4"
        },
        "item": {
          "id": "eb0fbb8c-e1be-45da-b3f0-4211933a5b50",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6f6c221f-315f-4335-adbb-ceffbe7beac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b1d1c-ca40-4dbd-b778-f1306170339d",
        "cursor": {
          "ref": "7253bba1-bbf9-4bbd-8416-0c4883bd9cb1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a909e4d7-f6fb-46e2-9106-1a3f9b4a2172"
        },
        "item": {
          "id": "208b1d1c-ca40-4dbd-b778-f1306170339d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "84731794-e4a8-42b5-973b-81d7d07f3ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0e338-2dd5-4a6a-be11-d9cca4327fab",
        "cursor": {
          "ref": "e3cdc391-1692-4649-9c57-805400eeed2c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dc62304b-b840-4684-8fe7-90a52021583a"
        },
        "item": {
          "id": "48f0e338-2dd5-4a6a-be11-d9cca4327fab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c1bc8869-5e27-4968-9dfe-e631c6fb3c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc092ef-fc19-4b92-871a-170119453123",
        "cursor": {
          "ref": "79d0d187-5bde-4164-90e0-c6ea20459b7a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6931a3be-c69b-4719-808c-565c8f18f536"
        },
        "item": {
          "id": "6bc092ef-fc19-4b92-871a-170119453123",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9759bde1-d0e8-43cf-b6a1-fb2e207b5054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701c1539-84af-4bce-9c60-7e05efa2a9ea",
        "cursor": {
          "ref": "374c9d72-afe5-4170-a871-76e4837484db",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "acd1bfd6-58e5-422f-b494-72661bfc87d0"
        },
        "item": {
          "id": "701c1539-84af-4bce-9c60-7e05efa2a9ea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1856cc28-0485-47c8-94c4-847350a5447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fb926e-3b0b-47f0-ad02-163bb54e3bd5",
        "cursor": {
          "ref": "a2f5d6a2-1be1-43c8-9b5a-160c4e97e934",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8fa087b7-0d1a-4083-bee2-46814d92f6ee"
        },
        "item": {
          "id": "65fb926e-3b0b-47f0-ad02-163bb54e3bd5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "197f63ed-ffae-4947-aa3a-ce3b14eee2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cb9d6f-df4c-4d76-af38-a03a83e1821f",
        "cursor": {
          "ref": "d2763c20-5dca-492a-8a5d-ac3abb8b11c1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0035fc7b-9f30-4af9-9a30-44f2b537889b"
        },
        "item": {
          "id": "d0cb9d6f-df4c-4d76-af38-a03a83e1821f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c0b93034-bfc5-4a14-af15-d3ebbfa42f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee60f17-a2a1-4a54-8a88-5973459a680a",
        "cursor": {
          "ref": "93f60dfe-36b4-429a-996d-d1fb12891259",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a81ce520-be84-4ef6-9d1f-ac3ba0136abe"
        },
        "item": {
          "id": "3ee60f17-a2a1-4a54-8a88-5973459a680a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b49bc44c-211e-4e6f-bb67-0c2cf4ed1f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1673ee3e-b008-4102-9dce-31e383fbea67",
        "cursor": {
          "ref": "2281f72f-e793-4e05-94b4-c3dcb99a3bd4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8ca7e794-18e3-4bc3-9543-c54d75084755"
        },
        "item": {
          "id": "1673ee3e-b008-4102-9dce-31e383fbea67",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47b9976e-3dd3-4998-8c13-28edb87a6d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9cffdf-4e11-461c-8036-2fde8d82c45d",
        "cursor": {
          "ref": "749afdc1-98eb-406b-83a4-ce414b5de106",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7a5ae238-404d-4625-a1a6-ec25b71042d9"
        },
        "item": {
          "id": "1b9cffdf-4e11-461c-8036-2fde8d82c45d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d46f35dd-b1da-4c36-8ae2-166a9b1f8a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd770c4-7025-4c01-845c-8f9062647a28",
        "cursor": {
          "ref": "fbbe186d-5863-4197-9ae2-d3bea1bd56e1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bf75e7b3-2f8e-4d1e-b876-6678fa33f1d8"
        },
        "item": {
          "id": "cfd770c4-7025-4c01-845c-8f9062647a28",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a1665ae-bb13-4744-9e89-1be737883376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf5326-3ad7-4a30-9786-922b93be1a3c",
        "cursor": {
          "ref": "2cfe67fa-b647-4401-8144-e5a0289e76f1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "767fca90-e974-4487-9972-45e6e5fa2ff2"
        },
        "item": {
          "id": "a4bf5326-3ad7-4a30-9786-922b93be1a3c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "207b8fcd-99b9-45ce-8750-053b2311367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399985c3-436e-460a-8ab5-f1fe2bfdcf0e",
        "cursor": {
          "ref": "3527206b-3904-49be-9f22-3f9bafa91ef0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3b3aecc2-aa9f-46e4-a8b5-cd9b9b96d3c9"
        },
        "item": {
          "id": "399985c3-436e-460a-8ab5-f1fe2bfdcf0e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d7e081f3-356b-4ee6-ab82-56ebf76e0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f955e7a-e1e4-4b40-b1b2-9b720c225768",
        "cursor": {
          "ref": "35d0219d-e8eb-4b0c-b118-0eebc71d9b82",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f0a66fdd-1b63-41a8-b47d-c2948ffc7cdc"
        },
        "item": {
          "id": "8f955e7a-e1e4-4b40-b1b2-9b720c225768",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c183735-6615-412d-9bb6-c236922b5884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c5edbb-365b-4c67-9f07-7e1790a22d0e",
        "cursor": {
          "ref": "9c97920f-69a9-453a-9c33-71e45579e784",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b44f72f6-17c0-45a3-a7a2-a7534777665b"
        },
        "item": {
          "id": "55c5edbb-365b-4c67-9f07-7e1790a22d0e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ec7b4c90-29ec-4b6a-ac46-a0e9b5cd6be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4858cc69-c4cb-474c-8560-3ce9dbd0456b",
        "cursor": {
          "ref": "2a2abd05-6e51-4d87-b019-fc0b2c957326",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f9cf5e36-8d03-4160-bf97-5ff2fe83eedc"
        },
        "item": {
          "id": "4858cc69-c4cb-474c-8560-3ce9dbd0456b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "50214647-e9e8-43ac-89b6-12b9c19f34ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f48242-42ac-4a86-a4c4-5d63008c050f",
        "cursor": {
          "ref": "7316eb31-76bd-4518-8e91-9d4622aa29ac",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a6d61f7-2af4-4871-a750-1172d8e34ed5"
        },
        "item": {
          "id": "d7f48242-42ac-4a86-a4c4-5d63008c050f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1fe4049b-25d3-4d52-8da3-47fed6abac70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0c30eb-cb47-4756-9819-bb7823c1b67e",
        "cursor": {
          "ref": "d31ec50f-c260-4e7b-b9a1-7fd22d5949b6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1729a055-1373-4d93-bcca-ba44e1a9c15d"
        },
        "item": {
          "id": "ee0c30eb-cb47-4756-9819-bb7823c1b67e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bc217528-7e69-4bbe-84f6-5782508e48d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3893cab3-2f0c-4149-b540-c606338d137d",
        "cursor": {
          "ref": "1d2f03e5-1bad-48ff-8b46-703acb0e785b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "945a52e4-7f71-4af6-a23b-09aab4d35487"
        },
        "item": {
          "id": "3893cab3-2f0c-4149-b540-c606338d137d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "be8d1d2b-3b90-429f-a683-4ec9b63e3749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a671c-5ebd-4a8d-bd38-063351ae3330",
        "cursor": {
          "ref": "fb4bc398-7216-4089-a3f6-f1956cba42be",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16771699-3f22-4400-800a-7a60ec0e2e65"
        },
        "item": {
          "id": "973a671c-5ebd-4a8d-bd38-063351ae3330",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "00c89fa0-0b9e-4fb5-8aca-45cb339a6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aa05ea-2790-474e-a07b-f7d347794148",
        "cursor": {
          "ref": "b90820dd-83c1-4803-9048-197f830fd9dd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8cc42e9b-1207-4f60-9ee8-e8cc109b9959"
        },
        "item": {
          "id": "70aa05ea-2790-474e-a07b-f7d347794148",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b67ef3f2-ac74-4f32-bd06-b9bd7bb41607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853f7af3-b6ff-4d51-bfeb-3294c330320a",
        "cursor": {
          "ref": "8cd319cf-9dc2-4038-8470-a03d87dd5f36",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37661750-b6ab-4f82-b774-f397ae72fb08"
        },
        "item": {
          "id": "853f7af3-b6ff-4d51-bfeb-3294c330320a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "084b4bc7-2f5d-40f1-8abf-613a6962ae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475b9d6-5046-4d95-b4d9-a821e6150be6",
        "cursor": {
          "ref": "5239c4db-12d7-4b82-9dbd-359f95be597d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0fd5956e-c077-411b-bef0-d3fc33196fbf"
        },
        "item": {
          "id": "4475b9d6-5046-4d95-b4d9-a821e6150be6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ad89cb59-4e68-4afc-8527-776d9ae13245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4644944b-de36-4a51-ad71-b3770150f896",
        "cursor": {
          "ref": "78a83acc-abc4-4190-b58a-5d949dc7782e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38090e78-5350-4853-b026-ee9837e26d9f"
        },
        "item": {
          "id": "4644944b-de36-4a51-ad71-b3770150f896",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f454d6e4-a4ce-4300-8a61-1241f819c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205ffd4e-7f78-4cb1-869d-1ba32244ea5d",
        "cursor": {
          "ref": "f62e8a58-987b-4c37-aa32-e1e891a3e8b9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aeeda4fb-6418-4458-8163-c55be4882048"
        },
        "item": {
          "id": "205ffd4e-7f78-4cb1-869d-1ba32244ea5d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "88697db3-0eed-429f-932b-c9d4d1a24d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d05229-7b75-4ba1-b41c-bf14ce107c96",
        "cursor": {
          "ref": "3a4aa207-eb1c-4af7-adab-ee972b8827fc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5248d7cd-43ef-4c55-bb8c-a923677c80ab"
        },
        "item": {
          "id": "97d05229-7b75-4ba1-b41c-bf14ce107c96",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7b7eb716-77ed-43ef-a1fe-6a8482cf9582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71423c1-a4e2-4464-a2c7-47d48c957124",
        "cursor": {
          "ref": "1fc8eba8-93d3-49be-a20c-0429c54693d2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "168f9a65-664d-4366-9588-7c902d22314d"
        },
        "item": {
          "id": "f71423c1-a4e2-4464-a2c7-47d48c957124",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9713d76b-57a1-49ed-bc18-34fa8b38ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfaed17-85a6-4a89-a54b-bd9f8aa63bcd",
        "cursor": {
          "ref": "474a278b-92e2-4df0-823e-13dd3c501ce5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4edefa0d-1b84-4e34-b018-c0a888143612"
        },
        "item": {
          "id": "1dfaed17-85a6-4a89-a54b-bd9f8aa63bcd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e93583c7-0529-4f4e-9d38-0e8960033f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d080bc6-5b0c-41c9-b284-451c3fb17cea",
        "cursor": {
          "ref": "52a9278d-b6ec-4f7f-b723-da4da04709fb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51332bac-d649-4e3b-a0c6-cae14b73699e"
        },
        "item": {
          "id": "4d080bc6-5b0c-41c9-b284-451c3fb17cea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "973d602c-a5e6-4f6d-b5b9-a51d6f64b6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5108b3f-2e06-4f67-b04e-3ba08fe838d7",
        "cursor": {
          "ref": "96d725f6-dba0-47ee-804f-da23d94cd8bd",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67c5307a-d0e3-4ada-af73-edbd5cab7482"
        },
        "item": {
          "id": "c5108b3f-2e06-4f67-b04e-3ba08fe838d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cfd721aa-9181-4f07-ba99-8499350e20f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6991be-cf85-412f-b1b8-0b435b844589",
        "cursor": {
          "ref": "4cf35f69-2328-4101-b183-3bc252534661",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b6af2a68-c2ff-4eda-a5e7-a1fcd61ff6aa"
        },
        "item": {
          "id": "be6991be-cf85-412f-b1b8-0b435b844589",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "33f9559a-cd5c-4a2c-9f5a-213b7d3771cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b30a7b-0e3d-4ca4-bf47-b3af8e4a8492",
        "cursor": {
          "ref": "3522de43-1dd7-4e56-a881-bd66bd28fd50",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a453a78b-3176-478f-88d7-0e39e12b3566"
        },
        "item": {
          "id": "59b30a7b-0e3d-4ca4-bf47-b3af8e4a8492",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9157f54-45ee-4fd4-9d9b-3ece6f74aa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f100062-8ff4-4860-8713-6d8c29e10a91",
        "cursor": {
          "ref": "6ecaf64a-b8fd-4867-961a-4b60617b30c7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5c2a65cf-8fbe-4f68-94d8-adb5d27a5af4"
        },
        "item": {
          "id": "2f100062-8ff4-4860-8713-6d8c29e10a91",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0351bd9c-c227-44f9-9b03-ab290a7669da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c08cc-9346-483d-bed0-180e892650b6",
        "cursor": {
          "ref": "a5242fae-cf9f-455a-8666-b64e179aacba",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d7d8ec33-1399-4e11-b81e-c865a0ebf594"
        },
        "item": {
          "id": "2c7c08cc-9346-483d-bed0-180e892650b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a16b909f-9cd2-400a-8a9c-b1fba4b8da5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d8bcb3-8532-4340-9122-0bcab7403d7b",
        "cursor": {
          "ref": "817d2082-84a3-4e35-a9b9-1c3f49457976",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c854d401-4b0d-4ee4-9830-3443094eacf1"
        },
        "item": {
          "id": "a0d8bcb3-8532-4340-9122-0bcab7403d7b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9795cd70-fd93-4198-b800-a0fd48962be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbca39c-8311-451b-aa6e-d47425df89dd",
        "cursor": {
          "ref": "fa095bba-56b0-417b-b765-da4f42ea4a25",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "120e5611-1439-42bb-8156-a77742fb8abc"
        },
        "item": {
          "id": "cbbca39c-8311-451b-aa6e-d47425df89dd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32e2b9c6-0c9a-41ed-bfc8-e6ec9f2c050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8ae3a0-1d19-49a3-91dd-a2dbd7097caf",
        "cursor": {
          "ref": "e6b7f459-d0c6-4da0-b7c8-35d953b3f922",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "509d2535-d693-435e-a506-83bcc1031bdb"
        },
        "item": {
          "id": "3a8ae3a0-1d19-49a3-91dd-a2dbd7097caf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a83ec50f-5506-4bcf-b4ba-7db44d5423dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a292d001-485d-4b7f-9813-cc5893e10fc8",
        "cursor": {
          "ref": "8ce73444-5eed-4830-9daf-193813432493",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "59a74a40-d184-478c-80de-fe3ff11266e2"
        },
        "item": {
          "id": "a292d001-485d-4b7f-9813-cc5893e10fc8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6661944b-de45-499e-8c52-2cc644b10866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fffe3a5-8a91-4a3f-af05-4db673980256",
        "cursor": {
          "ref": "ab38f5e9-83b0-49f7-9173-746567139c0e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "19193898-4790-462a-9380-2f41088aa557"
        },
        "item": {
          "id": "7fffe3a5-8a91-4a3f-af05-4db673980256",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "efda4cb3-7ce3-475f-8590-654baa5ba8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509abc3f-5cf8-4632-a136-055b902a40fe",
        "cursor": {
          "ref": "a6ad7df6-8cf7-4d3f-b94f-734cea8e54ea",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8691f940-4900-48d5-b886-50b108c4c7cd"
        },
        "item": {
          "id": "509abc3f-5cf8-4632-a136-055b902a40fe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "61224411-4861-45a3-a6f9-76419e6adf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ecd9ba-1617-4fd5-8678-e2dfbae89ec4",
        "cursor": {
          "ref": "4f726045-fd47-477b-a9f4-a13aa7d7475f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6c674150-7509-4e61-9451-61ac17fd8579"
        },
        "item": {
          "id": "a8ecd9ba-1617-4fd5-8678-e2dfbae89ec4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d923e05d-c2ed-4d05-a842-3bc7d4f3bbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2752f782-8725-4823-a8a5-a9f68009b341",
        "cursor": {
          "ref": "d66699fd-6aa1-49d6-a9ec-c3c695634eef",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc4b7c20-eb33-4a7a-93e7-fae2d27b8cc5"
        },
        "item": {
          "id": "2752f782-8725-4823-a8a5-a9f68009b341",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "01406c52-756c-4b4c-84b8-50538c3c6aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea915c0c-609f-4579-8913-50d2d36f03f5",
        "cursor": {
          "ref": "9431b0dd-5397-4e96-8f78-21c5cc77d4b0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9e612efb-331a-4364-80ef-81fd5e842c91"
        },
        "item": {
          "id": "ea915c0c-609f-4579-8913-50d2d36f03f5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "59db8c6f-2339-4103-8bca-8f934a58fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17c62e-9ee9-492e-ab12-45821343f7ed",
        "cursor": {
          "ref": "5f366a49-6b11-402a-87f4-3f8a256dc31e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcab017c-00c8-48f9-b458-068e3d4ebc7c"
        },
        "item": {
          "id": "3a17c62e-9ee9-492e-ab12-45821343f7ed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3aa46cac-cb29-452b-87ff-5eb6e13e122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2124125c-905b-4d70-98db-3590e7f4793e",
        "cursor": {
          "ref": "6dd49fae-7d3c-45f9-83ff-035d88db94b5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "975e0d7b-51d6-4201-8d87-2fb66a965a49"
        },
        "item": {
          "id": "2124125c-905b-4d70-98db-3590e7f4793e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "123af5c9-e763-4ef2-9439-9d2665a65de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594baec-07fa-4065-ad83-7871afef1e78",
        "cursor": {
          "ref": "2d552076-1d8a-448f-8148-26620e52a91a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7789263c-86c1-4745-806e-b7ee5a265742"
        },
        "item": {
          "id": "4594baec-07fa-4065-ad83-7871afef1e78",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2680d62c-243e-4901-817c-24e86a44aa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f084d4e-02f4-4f39-b1eb-51c8006a4dd8",
        "cursor": {
          "ref": "153e8890-3109-48e0-b7b4-e305e9a0991b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4bc488e2-9088-435b-b16f-905050d346bc"
        },
        "item": {
          "id": "6f084d4e-02f4-4f39-b1eb-51c8006a4dd8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2d2b8bed-3237-4c3a-8451-56b9225c2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba47feda-ac62-4f0c-90c0-ae88640a5ee3",
        "cursor": {
          "ref": "6502cff5-4dbc-4b3c-8d74-1798b6fa8193",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e5794a71-c325-4f90-8c11-4e5385093735"
        },
        "item": {
          "id": "ba47feda-ac62-4f0c-90c0-ae88640a5ee3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "96403767-eb61-4f25-b3db-beb762c92e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2777155c-3419-408e-9249-bf2ed5bb170f",
        "cursor": {
          "ref": "a65f1fa4-131c-4239-91fa-89ec7100abba",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "43dba323-6c86-44cb-8832-2e81d77c7436"
        },
        "item": {
          "id": "2777155c-3419-408e-9249-bf2ed5bb170f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c8fff23a-d435-4f22-ad88-81ef94084215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a182ac9-dfb8-445b-ba74-89c97ea01828",
        "cursor": {
          "ref": "7bcf0654-06cd-4315-8afd-a013a89e13ed",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c3181e8e-f268-47b5-846b-5a59fc948414"
        },
        "item": {
          "id": "7a182ac9-dfb8-445b-ba74-89c97ea01828",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0d558fe2-2f9b-4834-827a-9a5918fb8bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e814f9eb-07f1-41a3-aaf4-3df104259c79",
        "cursor": {
          "ref": "0599e5b0-f80a-440d-9420-26a83bc55095",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dfdaa207-d99a-4bcd-8762-d06bf670d319"
        },
        "item": {
          "id": "e814f9eb-07f1-41a3-aaf4-3df104259c79",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "159db0dd-ae22-48a0-a974-527c674e4a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25be9c41-6a6b-494f-932a-7733cba3e6bd",
        "cursor": {
          "ref": "9f3e35c1-05ad-4ad3-a78e-e8b926fb9c4d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "559c084b-8c21-4b1b-a83c-19b734c48df2"
        },
        "item": {
          "id": "25be9c41-6a6b-494f-932a-7733cba3e6bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "545ae4d8-c7b8-42b9-8e6c-8419538ed1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b77242-5e01-4a66-be54-cbba2f0adfe0",
        "cursor": {
          "ref": "e9244940-eb75-48b6-bb96-700653410399",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2add7412-4b03-4d07-87ad-ca8ffbcbe3f3"
        },
        "item": {
          "id": "e9b77242-5e01-4a66-be54-cbba2f0adfe0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef4378c6-9685-4224-b83c-8e0ba02d2b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42724bfc-3bf4-4151-9ff8-a83c3365ac99",
        "cursor": {
          "ref": "48c88dda-a612-4009-a436-ba86285a0ce5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d6aef44-5f01-4687-ac5d-51cc8195277b"
        },
        "item": {
          "id": "42724bfc-3bf4-4151-9ff8-a83c3365ac99",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f0cf8198-c6e0-4d9c-8f28-a09745c2d589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf1bc49-7efc-497b-ac55-b573ba3eb485",
        "cursor": {
          "ref": "a2ef076f-745a-4fa5-8fbe-dc2ce1e80df3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6a82efc9-7a1e-4d49-82f6-608f2b0ac7c7"
        },
        "item": {
          "id": "acf1bc49-7efc-497b-ac55-b573ba3eb485",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "60f5b05f-9442-44ef-b6ab-c7ebb66f90c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca94dbe-09b1-477f-952f-85b2bd886cfc",
        "cursor": {
          "ref": "dbb971ac-9c89-479c-aa95-6953b606b05e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ffdc941c-e012-4bb9-977f-4e46512bdff3"
        },
        "item": {
          "id": "5ca94dbe-09b1-477f-952f-85b2bd886cfc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "38204e9e-c544-4986-8acc-89ba48154a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed09e988-f8c2-4009-9f5a-fb77ade3dd21",
        "cursor": {
          "ref": "e31210d2-fc9a-48c1-9810-890e1e6fb70b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b08db058-b123-4c94-bc25-de79682c03b7"
        },
        "item": {
          "id": "ed09e988-f8c2-4009-9f5a-fb77ade3dd21",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b02fd6df-234f-4502-a73f-a1148201ae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864c9dca-419e-4f7f-b3bb-da0d2e4ae972",
        "cursor": {
          "ref": "74575ce5-c23c-4fa1-b920-20e158cd0df7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b9c6f420-b2e3-4a30-9a6d-79265ecea73f"
        },
        "item": {
          "id": "864c9dca-419e-4f7f-b3bb-da0d2e4ae972",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52b6749b-b3c0-4339-b668-7b00ba0bdda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2501f20f-ef01-47f4-8836-6c85a64c2e21",
        "cursor": {
          "ref": "463fc1d1-3666-49dc-9b00-ff441078951f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4160152b-bd9c-407c-82dd-7f91dee8cebf"
        },
        "item": {
          "id": "2501f20f-ef01-47f4-8836-6c85a64c2e21",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b9add57a-ad74-4ab1-973f-1446e8de1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed516f96-61e5-49a8-b736-ca12c5e4e3c2",
        "cursor": {
          "ref": "40295656-e7c1-4654-b390-57dd0c1e2046",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b452104-26e3-44dd-bfb9-ccbd83e4fb98"
        },
        "item": {
          "id": "ed516f96-61e5-49a8-b736-ca12c5e4e3c2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e0382461-f9ee-4ec8-9dc7-841a9ccf027f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f811423b-f17c-4a57-afe8-89ec6234b322",
        "cursor": {
          "ref": "013263ab-d5a4-427b-aae3-d35e40b55c79",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "34398ce4-08a6-41dc-a0ee-317e1e25cd88"
        },
        "item": {
          "id": "f811423b-f17c-4a57-afe8-89ec6234b322",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2acdd03c-6f40-4332-9dc2-c91e6380a517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3906b10-5248-468e-bb92-cf8ecc6b4707",
        "cursor": {
          "ref": "60739fc7-1942-4147-9f67-6a52e84b00c9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "78ef6105-d5c4-4ef2-8771-87ffef0929f5"
        },
        "item": {
          "id": "a3906b10-5248-468e-bb92-cf8ecc6b4707",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e97e007a-b1c7-4f83-8a4a-cd0a6eebc419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245c9b42-5834-4209-9068-c0b09764f1b2",
        "cursor": {
          "ref": "94153359-8be5-465b-b428-692138ec5a8e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e58dd5d3-fedd-4f66-b709-18fa11ce2662"
        },
        "item": {
          "id": "245c9b42-5834-4209-9068-c0b09764f1b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9ce8ec07-baf8-4f30-b730-e91a23f7fcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504067f1-d547-4a74-b954-1383de90e247",
        "cursor": {
          "ref": "516296ff-c272-4272-9d18-52ea8ceabca0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6d1d9e84-bcf6-413e-ac79-9a4568a9e30d"
        },
        "item": {
          "id": "504067f1-d547-4a74-b954-1383de90e247",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40f3a5b9-9195-466f-a10e-e30c1ba6953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2bffa6-adf6-4be9-8073-f8e79380e576",
        "cursor": {
          "ref": "22ed7522-0161-4932-a813-53255682824f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "60dadfa1-8f7b-495b-8dc0-b967cc43b903"
        },
        "item": {
          "id": "5a2bffa6-adf6-4be9-8073-f8e79380e576",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "12869c02-6cb4-47a3-b232-9674c4eb7c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a136ee02-620b-411b-a5b2-68b2a99204ab",
        "cursor": {
          "ref": "f32159d4-551b-4132-a4c9-3d98f89b9e17",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1e754fa-0e3c-4f2a-8c07-e0a0222a0d48"
        },
        "item": {
          "id": "a136ee02-620b-411b-a5b2-68b2a99204ab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6b47f2b-3027-4773-9371-25735004b815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c43b92-38b5-4f48-8eec-8e89a60a3da2",
        "cursor": {
          "ref": "f2a38fac-2f2c-467a-84c4-a35c0821366c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5e922ae7-04a6-47e9-a61a-77d2bf6be569"
        },
        "item": {
          "id": "46c43b92-38b5-4f48-8eec-8e89a60a3da2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee3fbb2b-4371-4920-985b-2a3c8c2b3bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ed8d8-ebee-45b5-bdf8-41916c6ff4dd",
        "cursor": {
          "ref": "b6ccc47d-bea5-4d6a-9426-b07eeb0aa7ea",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "950631fc-2c4e-465a-a0ab-544cf16498a4"
        },
        "item": {
          "id": "b23ed8d8-ebee-45b5-bdf8-41916c6ff4dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b38b616-77f5-4552-a1bd-dbd35d48990d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaec3cb-2120-4b6d-bacb-8ad2fc0e41f7",
        "cursor": {
          "ref": "7e95cdbe-775c-4d3f-9732-50ed3ac2e2ce",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9eb4f566-2fd6-4897-a727-7cc26ea66a66"
        },
        "item": {
          "id": "3eaec3cb-2120-4b6d-bacb-8ad2fc0e41f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1e7a2eb0-a7f1-40a5-be32-e6da81efbb66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c395b13-878d-49fe-baf0-1f10667e2963",
        "cursor": {
          "ref": "a8cb4540-7708-46bc-b1fc-4fa18a909081",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc4cf0b0-6ae7-4290-9770-b4235763c9b9"
        },
        "item": {
          "id": "4c395b13-878d-49fe-baf0-1f10667e2963",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ea0eef0d-634c-495e-9533-9c77da941714",
          "status": "OK",
          "code": 200,
          "responseTime": 2319,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08733358-4aa7-4a64-995e-dd7e8282bada",
        "cursor": {
          "ref": "9c6a79e5-fa5d-4c78-a453-d896d1b8140b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fcb77bc6-2f90-4caf-8cd2-a99289134dec"
        },
        "item": {
          "id": "08733358-4aa7-4a64-995e-dd7e8282bada",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5ec9e903-c1fa-4980-b61e-cdce6859cb46",
          "status": "OK",
          "code": 200,
          "responseTime": 2531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ca95c0-aec2-48cb-9d87-7efde706fc42",
        "cursor": {
          "ref": "bc8d1e9c-bfad-4acd-8948-1072afb70ce7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8141c39d-11f7-4080-b612-cd34e12d837f"
        },
        "item": {
          "id": "39ca95c0-aec2-48cb-9d87-7efde706fc42",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "83a3570f-5f53-459b-9cd3-7d7e312bec50",
          "status": "OK",
          "code": 200,
          "responseTime": 2504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1bc34-e33d-46d0-bb70-44549f59b250",
        "cursor": {
          "ref": "98306a6d-3ad2-4af0-b42e-7aa3a9b16ee9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f4dc06a-f852-43a9-8afb-3ac0cc1ad13e"
        },
        "item": {
          "id": "ceb1bc34-e33d-46d0-bb70-44549f59b250",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ee9cc3e-3c89-4dbe-b7ad-fcbca4a6a845",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1bc34-e33d-46d0-bb70-44549f59b250",
        "cursor": {
          "ref": "98306a6d-3ad2-4af0-b42e-7aa3a9b16ee9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f4dc06a-f852-43a9-8afb-3ac0cc1ad13e"
        },
        "item": {
          "id": "ceb1bc34-e33d-46d0-bb70-44549f59b250",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ee9cc3e-3c89-4dbe-b7ad-fcbca4a6a845",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c4de46-3d78-412d-86f1-e8e64265a0e6",
        "cursor": {
          "ref": "c414da33-136d-431b-b5ee-01ac93eca01b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dadad61a-0419-4280-9737-ecd426de82be"
        },
        "item": {
          "id": "90c4de46-3d78-412d-86f1-e8e64265a0e6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eb1eb14b-7315-4ea3-a723-f1e43192041a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de85a86f-6421-458b-a544-e3bc0dd48810",
        "cursor": {
          "ref": "04e38acf-e847-49da-95dc-5b4130aff428",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "28cfe432-7b22-4dca-b445-34dbbc6095fd"
        },
        "item": {
          "id": "de85a86f-6421-458b-a544-e3bc0dd48810",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20cd548a-d0d9-41a5-abd1-aafddc6e882b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}