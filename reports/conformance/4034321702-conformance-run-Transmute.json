{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "27e18e58-34e0-4e8b-bb87-3135e529c7c9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2c06eaaa-19a3-46ca-bda7-20efd3120541",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "258ca5c0-2295-4f8a-9629-b6ea779bcc0c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "000392bc-5c8d-4e57-be19-d56c26c5004a"
                }
              }
            ]
          },
          {
            "id": "de9c6215-e1d2-4722-bb04-1e134d23aaf5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a372d5e-9f25-4849-ae4b-b9845ba01dbf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35a1a3e3-9e44-431c-8dd5-c1f1a83a2837"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c39e0e2e-a178-4dc8-9ee3-b3e0d38247dd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5b0486d4-23c9-4133-bbc2-9a4e3320cef3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcf1793c-0367-4663-9e63-80aec6d91620",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a278fa-61a2-48d2-bc96-f355465dbe90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "613fff66-9bb2-4f52-b18d-dc1952646e8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "359f38c8-2231-4878-a13d-70484c4caff3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d166238-a190-4d44-9b50-59c36e62b623"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45eaaf1f-b670-414b-867f-262e6a9ddc5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85bacdd2-d5b1-45e7-b2c2-b09e661a704b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4091491-0498-4316-bed9-2af59872cbe2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bb6c4c6b-f37c-4884-81cf-210e621fbe7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ee581a9-b7ff-453b-af85-308ab846829a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29482b68-ca44-4f37-b508-5fcd6435c8bf"
            }
          }
        ]
      },
      {
        "id": "3cd6ab28-6098-47f6-9d6b-71bab3c5e9ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cbcc65a8-6d79-48ce-9bb7-cba5c0d04114",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e34865a1-956d-4213-b650-b4de7110f605",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e04c6e73-3297-4353-8f39-f35f8812a4c0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572d78c5-2540-4094-b589-bddc2037782d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af957efa-0d9c-4c33-98ec-d528c805a21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ddde83-f054-43e6-b5f1-616e4dfdd37e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec46fa-748f-4922-aaeb-b24b65d48d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec149e7d-f71a-4c27-a1b4-cf4a0a4f4db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d20f69-366a-4029-bda9-25e864a6c740",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dbde4b-4146-4b66-bedc-c713b5d65b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf58a1be-b225-46d2-969e-88dc5a80bea2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04182620-8c34-418c-9717-ff8b542f8bd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "435beb74-946a-42ba-9dc8-bc14fb44a678",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d9e71a-8358-4937-9fa7-347e2858ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4e824a7-9e31-4c85-a344-c266846aa460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade55471-c7c9-4108-9118-69a026dc6579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04dc662-c47e-481b-9d9d-9c488a38ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5394951b-7d58-468b-828a-6fc6c5df83f3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eef292-fe46-424b-a5ad-e0879fad6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "926e6845-7139-4246-bef0-b755b39834a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43af7bc5-ab4b-4ba8-b9fa-1251b3477442",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0d170c3a-14f2-4e79-b01a-8c944dd50585"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76a42ed0-0bc8-469b-9cc1-1c14dc746c2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d6a343a-7e4a-4834-b35a-012c5eaec9b9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9b9bcfc-bec6-4b68-80e9-1adcfdc71ca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c3fa745-a98b-4241-a946-094f80383214"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc871060-182b-47c1-a620-905f078dfde6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5b383456-a56e-4d58-868c-d70e8bb9d279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2758bb2c-e83e-4c5a-99e0-7e478c7bc5b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11187195-82f1-4d2a-9e4b-dd44014864fd"
            }
          }
        ]
      },
      {
        "id": "c27de540-19b6-46a5-a187-49479edf9054",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "70978c2d-ff01-4b9f-b41f-2a7e19565567",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ccf17ddd-ab25-4e69-a546-c1afbfeffdfe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "af2db4fc-0148-49e8-b881-108a4c7d679c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d0a676-5a33-478f-b7ba-a09760b22776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb2eb9b-6303-4861-9394-02eb95dfb141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682f84a4-3e01-4ec4-b170-10e3607a5900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75b8367c-9356-438e-be1b-5fd627c7ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937cefa2-6482-4a0f-b16f-0d5c68f6ee54",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0502fe-7a13-462d-81f0-61cbfce2b314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fd80a1-5471-4bf7-8110-f117b379459e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19399f11-783f-47ae-93b9-faffba68bfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61fd6d0a-c257-4be0-871c-4cdf7c1e7e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c69ace-ab31-4ac5-a7bd-bce86f0c19b1",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1868158d-9865-41dc-b954-67784aa56d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e7bf22-ec7d-4d79-9e8f-be5b75eb4d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e1dcb3-06c5-4338-845d-c69e773597a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287b8872-98a0-45bc-b588-6d1fcfc9cf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c34762b-7a0e-41c7-afd3-c7e6721b8f87",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1226f3-3be2-4887-9df2-4008e820a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aef89a5-3487-41e2-bfdb-575025601d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c473c52-6386-4704-af51-7e29c07de4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b1b5faa-2ffa-4320-8ec7-b60bd33e0043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf30fc9-d461-4284-a163-4c8b7fc3a250",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64593399-46c7-47a0-95da-8b9a3b612be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c411ca6-ac05-47ab-89b4-9ef678f638b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30446d03-412c-42b7-a583-fd0fd810eeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3365bffb-cd5d-4b49-aa00-df7f487aedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7596e656-ad5c-43a4-9b29-24c72471642a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09790a7c-564a-467d-a48c-13310b151465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91af2241-99cd-41db-a93f-5ee987de22d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54916e7-df2d-4c6f-bbb4-cd7278041e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65230399-029b-4237-9c6c-d347bb4bee62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d276e86-035c-42df-8063-f75039531d6b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d1efca-46f9-47b9-b124-a16181a0760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5c8eee-8522-4602-a492-5f00930b5add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb58564-7ce8-487c-be9b-ef2de14733b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec13980a-571e-42d3-af35-df4de41bd9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba2673e-0393-403c-8532-b1e9448817d2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed19379c-65da-402a-8b2a-9f40f202171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3080445-d223-4693-9fd8-cc094c00d8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa22cfe-5340-4f11-afa9-3f820a747848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f89b9674-4836-4f9a-821f-13a4463805f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51a508b-f2a2-4ac2-b38b-eb6b43f58c03",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d59af3-6fe6-459c-996e-536b280433a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2405b607-320c-4523-83d1-fdc1e5abdb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d47b7-467e-4fc5-b6c7-943ab24483e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b86d5490-18f3-4f84-b77c-e87a5bc05323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708f294-1a7e-4e2f-85f4-3461399d1e5b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa527637-f523-4257-b2ad-e681ed602e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32243806-242e-4de7-aa43-821b29feb3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f08c7e-842b-4fde-9667-3d2ec3c85736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97d70929-5f79-4a21-9239-2a28983eff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5676f5-8b44-4998-b9d9-4f382424837c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae03a5-7f75-4a29-ac08-3708b3018f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f622a6dd-42ed-497e-aa77-6c8bb380cc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfe9a5c-97f8-4403-a3ea-23f34cbf3435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a1a91ac-4fe2-4ec8-958b-3800496c3b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aabbf4-90cf-46d2-a871-4c8cf732c54c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd75a71c-283a-452d-a177-7956577dcc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eef0f1-17ab-498d-bb60-1a0c2c4531fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c6be67-3baf-46cd-83a6-860189c3989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24597913-7f71-402d-889a-cd2d1b602db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17376f4f-7792-4881-a0f0-7b806ee89785",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8158d167-7c60-4621-b83f-f0be0a78765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede21fb7-950f-4a59-9654-086abe71e71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c79e1e9-a00f-4466-8b24-ccd122c7a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1e0b9d5-5be1-40de-aaa9-3080da2d0904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d31626-fb76-4cfe-ad37-1be186fec10d",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a37856a-f58c-4466-98da-896233de3bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17026cb-11df-4e20-bf2a-9163787a7b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9aa75-fcb0-4b07-b825-d450ef653fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa96379-40c9-486c-b805-97bb937b29ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c2ca3e-0955-4f0f-91ae-248ec74e64fc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1984c42-a9c0-40a9-82df-f0391b2f23be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dd4c3d-df0a-4acd-8ccf-850e52e02e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a74914e-4869-45d5-a7a5-d3a26794f88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91727c59-d621-4915-a30f-402a6dc0a504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07887508-a2a8-42bc-90e7-e25be07a2ea0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e4868-c760-4f15-847f-bf72067adfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfad4d2-e9ca-4295-af74-39f428bb4df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6c67d-a6fc-46b2-b5b1-2b41a0ecacb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd5ca0e-cf47-4163-89af-616ac197aec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0126a778-bed0-4e7c-aa40-93d6004d6643",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5f0125-f2a4-49e8-8130-30ef6109a297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b9db4a-e711-423e-a1f2-1b65d4eddd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f42eb1e-d098-4c10-9af7-81642de28d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a344819b-3e9b-4575-9b8d-6baa7f364686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab85a2-e02a-4be0-b29e-3d1ba8a3f794",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b4ddbd-c406-4b5b-91a5-3f0be93ca664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e219619f-b024-46db-8fe5-7316e67371f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce9879a-50af-45fe-8dbc-461d0f191336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52cd0f88-2bd8-4f72-a887-3b22c62e85a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843ed4df-2e30-460a-a969-799d3d25bebf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641a96ed-3c9b-4093-adc6-f069735dcccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e30f9a-e032-4cbd-84a6-8dd8adf6fd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0e9794-ee11-4b73-8d26-522a7fb1b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b51eca-d235-432a-97a5-3376f4db1634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcce9cd-61ed-4331-a57c-255464846b10",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3a6e1-fb5a-486e-b4af-3a19cc814212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0ac0df-628d-49a1-ad07-efbe731f0e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2b52a6-f01e-47c9-b77a-3313dc7181a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49454eab-b8d9-423c-96f9-78f12a34b2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0535c5f-6261-4fba-aaca-f1bee0b33939",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb8028-d367-4111-a8a3-7defa01e8bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b9aaf1-0f52-46b6-abe4-09788bb9c604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8726f0-70c9-4896-812e-2767960b7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9428cc5-b51c-416f-8cbb-b4abba2c89ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280efcbf-f2c1-44b8-9195-f5ec84e0e5d0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2899e22-0396-4291-9cd1-a69922add2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2797bde7-6dd0-4236-99d2-21313ab6a961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad8d2e3-cbf6-4f91-9264-48cf992e743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ba7ee4-e3de-4c80-8415-32d359959ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c240d2-bcdf-4a7a-af43-7c9ad873f4a4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877c0a4-b8bc-494f-be5a-4e7f0efb653b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a69c5e-29cf-47b0-9910-c16221b1f8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad28ca60-b9b1-437c-a409-d2f2b9a16e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c079c06-ef3d-425a-bd08-f1986dee8c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57b21cd-b6be-4b07-91d2-4f8c1879790b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3d7735-cc26-4d97-a80f-4cce0253c16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f194eb3-ff67-4734-ac36-e32029a85849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8159b2bb-5028-4089-86ed-42facca3208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "738476ef-0ba4-41a1-a7ba-1fabbd4db3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abbdacf-2737-4ce9-84d6-341af366c33a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aabbd44-f715-41d7-975c-37e69cb87abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f602255d-a9a0-4b32-89c9-c3f2c4688070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cb95de-4cca-462e-b75c-208cb231709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc64b7a5-88f0-454a-a527-675276c567a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18c5ba-0b03-41d5-b28c-007dbe552906",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509612a6-d007-4ab5-aaad-a6434b329627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5a6076-f5fa-4336-a418-2f7ed08fab3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a5f76c-5316-4529-a28a-a20deab84a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8281178-c329-40fe-9ec8-cede802d5584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce9e4c4-5914-475f-8647-bee710a444a5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e19479b-f7aa-4f2a-baa6-a0d1fe03653e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c20803c-d9d0-4e0e-8bda-3a0af7aa310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f9047f-fe09-4208-a766-6c839949464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24765089-cf34-4f27-a7f2-86b39db4c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7df1c9-1ace-4f75-8685-5ef1e7d02f24",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29cab41-34e1-4bd9-a7bb-aa3c21be78e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ede49a1-6aba-47d0-ab4c-82a1d27bfeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d971b7fb-f7e1-41c7-827e-67fd2ee807d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ec5ea5-4e50-4267-bf35-b470df303806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b96341e-1877-4bed-8f7b-d518279255f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059a747a-b8fc-4a8f-bdc4-41809c631b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf550b3-98a4-409d-befb-e4f86d5d0e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bf0d2f-f217-4452-9edf-3046cf32e6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "347cc605-d9ff-41c3-bf2a-597c6b5dee5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f6b42b-25d6-4eab-8a8b-60fc68ab3e8e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd68c4-1749-484b-a5bc-1041dd491f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04e54ce-c960-4555-915c-3f0e91b5b5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ef6000-ca4f-4eda-a79a-7c2871b98ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fd4f45-0aee-41c8-a7a4-300b6ff886e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d118d48-1e9d-4299-891d-5da28b2804ca",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c78bf-8250-4552-adb1-1e335c18aad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b86a9a-8149-442e-a9d6-0e24970a962c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578f404a-f4cd-4b03-8fe7-268c9cb30d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf52b05-3f79-4dd7-adf3-1cba39417b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd70926-4b80-4b74-8fe5-fbc2662eb26d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfadb87-edfb-46cd-8a11-317893f7ec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dac64b9-7274-4f94-8b69-f9eeada14d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42758af7-5cac-49fb-9b85-c75c3013c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cb3573-0c93-4f50-95f5-57cd5efb32b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2083b77c-4a2e-4a08-b187-52ecf38e32ff",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e063e18-63cd-4084-aee8-32c89f4ae8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd87d50-140b-4eed-8f1d-b54d336dcf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c6e39e-5b35-4fc0-a146-fde6a114b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58bae344-8248-4c29-8e42-ea9952ca7b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a6e85-8857-4df8-a274-c477683502cf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3cdbb7-2d1e-423c-b65f-30e4313e91c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd3859e-0c7c-4e3c-b133-061554839223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5102746-ffe4-4773-8561-4288bde256d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "680db72d-e6ca-4693-aeba-e61733d9499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb3c3f0-1cf5-48e9-b093-cff53d0ae5da",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e3ad0e-f70d-4507-8908-85ad8eda08b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c1ab0c-11f8-43e2-9ea9-cabcfed1cb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c8a4e6-d57b-406c-ac38-b2d3aecea345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb5f880-65d0-4758-8cca-64a82907c339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46655454-9fc3-4190-9936-4dcf003aff93",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de47e5-bc48-4da6-bbc4-2c5b3f3be9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c50473f-fdcf-4514-89f0-423a109e2fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7779179f-308e-44b4-8b27-ae7eddd17741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0bc349-f90a-4af1-b5f8-807df6a462d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866d971a-d761-4fc2-b0c9-2aa38569c9e2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2125953f-46d6-4934-a0fb-9dfc09d25499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7197fb78-ebbb-479c-a617-bdc838751767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e75717-810b-4080-832f-868738616f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2f1120-c4aa-4da2-b8e4-c17528389688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613e78ba-0036-41e3-96d3-40878c2da09a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a70b2b8-0862-4990-947c-f26a524fab8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a7d57d9-e451-4cfa-9370-fd0d3c7ae47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef502821-f0a1-46a5-953d-31487d8f39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08d57d9c-c16f-47d9-b61a-0f4da89d0bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d78bc8d-d4b3-4c56-a382-c039b4364a4d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe700d9-64e3-4ca4-9210-1d4e1e1b6e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd46eee4-aa1d-46e1-bcbc-57ac61a746ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd680b5-db06-4339-9a6b-18ba526a3c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6275ba3b-8102-478d-98df-5caaa8411d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3972d912-1678-424b-9817-021a20b2a2b5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9d99c3-d9c8-4c45-b263-7df12153b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063d7828-d853-49e4-839a-e9605bcfa546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15258960-7a9e-4f82-a9e7-ae052173c903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce34e569-0167-4633-bda6-f6741f87069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4744d1e0-cb2c-4b5a-9f7d-452bd92b3eb5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ac796e-3d69-4ac1-b3e5-27dfaf48ebce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3979ea32-4c45-4e50-8135-a5f9a5446d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19004d4-983d-4ff1-9a55-e491a6c6fe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e113e497-04c0-4dd4-941b-16f020525745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e10c8-45c1-4228-ba7c-e95f0d7b2d29",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4890dd19-d355-4b05-b497-55c7f5a0fda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38b343a-c4a8-4718-a385-0b069d437115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88260846-1c87-4f99-b23e-a3854833b74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "959f9cf4-d5f7-409a-9615-171ffb97c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9ed30c-943a-4060-8e00-f087252bf712",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e8dea-fd82-40b2-b4ba-d52d090f59d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec97a91e-a59c-4c29-b29c-b890e351c189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90501597-099c-4779-815d-b1dcb0fef288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e27a8ce-2aa2-4a8e-b288-59090e81d12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061be9c4-661b-412f-b7f6-227d7955a818",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec48072f-bcfb-4c24-8e00-fde41d6dc4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0739af58-84a7-4682-8050-8b887a5a39e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a408c1-5fad-458e-9195-c575d6828b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1a454515-1824-4e98-9803-3a568b0475f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd79a3b-11f2-46ac-864d-c81598891656",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd41031-5c97-473e-85eb-8fa9c664461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b99919e-5949-4628-9655-d66d9b12360e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963a5766-6408-4c0e-b718-6cffc0570456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8af673d-654b-4d6b-911c-5686b106b4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64931da-f146-4c89-b86e-7abc06395287",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba1ebab-0fb1-49e2-b9f1-491acbbf4328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f278b62e-1717-417a-8b51-cd2437e71587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a1f421-a176-46dd-a907-29d9de6becd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37bf787-97d4-451e-9f70-66f640c5af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a899125-63d8-401a-ac4a-27688a1ca3c9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eacbb00-640d-454a-87fd-1c1d966145c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9110a8b-a7df-459b-a1ea-ecf46f3cfe60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34608c6f-9417-4389-aea3-cda54cb07418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "041b4d20-c2ae-4b76-bd16-78459917556d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97b0456-bf35-4d9e-8379-4e2f8f669c46",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f129f6aa-b7ef-438f-9841-d956c8954a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c848b9-9487-4420-98ff-86f77ae673e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4316e330-7349-48fc-b9c2-7fd7e0e91042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a05f40c-584a-4f2f-823f-7885488cff80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435a6466-e901-441a-b257-a320e22480b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842544c2-87e1-4f75-832e-e147c1f14e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1089f3-06dc-41f4-a018-d7b589de94bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f7d6b-5c52-46cd-8081-c68f3fde6598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d92650-e108-4479-b4ea-4d8fe1feaa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce2d59d-f063-458d-b0b1-f0b781666610",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31de5e6d-6025-47be-a32c-380c8a91257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb71343-3b96-4ac1-a5c2-f0b4450c7f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09778d0-35f9-4287-a0fe-c68652cc975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ea69da-50aa-4f58-8dc2-aeda3563c857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c45188-52bf-439c-a3da-6481850539b7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e33c4d9-9c13-4056-96d6-a9ab93535f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d28900-704f-4407-adeb-16dd12932895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd4f5e4-9d77-410f-9735-0af458dd77a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "326407d9-0498-4181-af2c-26e695e29412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad95ae2-4078-4d28-9d7f-46d30f742c90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a8cade-40c4-4a7b-ba4a-a3a8a60dff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92fc325-002c-445f-84ca-689f646d8ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef8f60-7245-49b7-ab89-7bf8a790e2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "581ced6a-06df-4873-8232-c849f65361ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a665750b-accd-458e-9daa-6a329add4ff5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f342767d-6928-46ec-bdf6-9ebf44692890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17619f23-e4ca-4f2a-a718-909183ff6c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab07939d-eed0-45e3-b22a-a91872986f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9729533d-687d-4078-a294-d50383a127c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f004e-28c2-4b61-b110-158bac5d09e5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4be390-aed1-4fd7-8683-cc3876b112fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af11a065-50eb-4eb2-a17c-132fe61f181a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c119c1-a78a-4535-9d9c-8e7565ee32b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47e853b-ac53-4cdb-a57e-c454af30b3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccbc43d-93e2-4050-8525-6a3624fef4d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7b707b-81b9-46fa-9c1b-ea82f2e11e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9494ae-7a4b-4430-886b-4b1e0c6d9fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ddc3fb-ef4e-4028-bc75-f5b1827a7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c0608f-f163-486c-8f0e-c8ff7369c8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3faa890-4378-465b-84fb-4d205f1db2ec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb3bc5e-22e8-44d1-ab95-35c2adc23fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e3c730-78a1-4273-b478-262b3f034984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e869031-72c8-4698-9989-5391e9d7a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aedca3-ad17-4673-a9cd-da2fb48bc27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46170c6-8383-4746-9693-9f5f2cf165f0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84404b6-37dd-47e9-98ae-1be4e70c1d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df96104-5c38-45cd-9b3c-9688b2efe39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529d859-8799-4333-bebb-3b858545ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b89cd9a-ed71-4793-bfdf-5997d50a21cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb708354-b5f9-4577-9b3a-050f9af18d2a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3b1de8-b24d-49dd-bf0b-2dae050159fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d9f00b-441e-495a-afa0-fe5d7e091a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf55719-78c9-45c7-b9c6-89bf994d69c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b11778-d42a-4832-bf3d-62ed34fe73db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e295894-0195-47bc-bdc4-a07b4705678a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786e2f6b-e4f9-4809-9a31-595b920c1d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada021cb-c6f0-42fb-b54e-5f65cb2b7cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583ce97-54ae-4bf7-93ad-325815ddf08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74eb1d0f-4a8c-436b-9003-5cc2ed542765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4dae8f-b8ae-44a9-b365-d7181d72d540",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2451811-9a26-4420-ade9-42143c9c0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7350f8-d873-4cd2-a55a-88fba029a3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a35afd-b5cb-4d69-988d-ee0e1a47b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "231eadc1-8047-4647-bd06-069c85125b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf7cd5-6f54-44d8-adf7-e8618d2bea86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bf4e01-8e70-4230-8e37-3c961c9b1b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0cd62d-427d-44ac-81ba-ec94f3326ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58838642-0732-436c-92ea-3283575b6cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f172c2c-ff8c-4770-b623-88d34eec27ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca7e6db-0381-4e12-adfc-099b283f9469",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54663fd7-ca9c-4d5a-9586-3e099ad5c152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8c6d1e-e021-4dd1-bb88-705e586e389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bfbbb7-0855-4d9a-930c-f89dbe312d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a82f1269-3474-4d06-8516-ddf47fb75464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7db4874-50f7-4507-acd2-e4fd30d323c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1912e337-932d-44f4-9277-2821a83d6510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea123ed2-48d9-487d-aee5-044dfa268bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab317b0c-d3ef-4365-972c-a3f91f1dd837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d05ebe3-6a27-4501-813b-a19dd0d8e6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60739c55-21d4-450d-8d8e-e78cc84bfad1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2d83d-41c0-4fe2-8910-810dc37a6fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fab4ec-d8db-44cd-8bdd-a44930142f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb07ab1-500b-449d-b032-225b3cf21f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8204639f-22ca-46c3-a1bc-2aa5f810c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1643da8-9c2f-4e71-a2b4-766338625ce7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3b61a4-8602-48a1-9b61-d540a9d22af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9271919-7faa-4da9-8919-c903bf04bd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98df14f-af0e-48f4-afd2-341282d2d7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1b8f71-508f-492a-bb16-55b1b0d398be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94d9260-89a9-4dbb-95df-55bbd82d87a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43032683-b641-40da-86af-16e1d4e176d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707d1841-e433-4b53-9d24-0924e2b9b339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08a3fc5-dbb3-4ebe-b60b-29184ee0aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1cec02-21ee-4253-aced-1e1e9763f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ca52f0-ac4a-409b-965b-d04802fe9278",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175a6449-e49d-4a59-8c74-8f0bfb4aad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e5af6c-f278-4d17-90b1-79868ea7345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686ac2c3-7b52-4a7a-8663-30d36e942c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12169cb-1954-43c9-b496-ca541a71529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eeb165-9ea0-4a2c-b093-b1248ffaea5c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be50ebc-4fa6-41aa-a29f-67d1bb518014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4fd78a-3fbe-4e73-9fd3-1412b401293c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c257d159-da8e-40f1-8197-2d1a1728319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83534512-9a43-4e72-bfd6-7bf831239c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ef4bc7-f0c8-4c00-8899-e115d88ec682",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb119af-d3a4-48cc-9e3e-f2cc938c9186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9cc95c-af0a-49e6-b342-693307eb60e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e892827-f08b-408d-b2cb-ddb10b641fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e20b17a7-c863-431b-a662-77c610928c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8914d32d-a147-464f-9127-f35e84092bd3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef668aa3-7589-440b-b1c2-2d396e306570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0744878-15fb-47ef-be8e-e4ea39dcecf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272f1bbb-26fb-47f9-9cf5-f0676765f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6678ed-2782-47cd-8c16-01d7af8e009f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3da25f-88b2-465b-9880-aadbe0334a96",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae81531-300a-4565-a1ce-150f4d5be8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cd7a92-da80-48d9-bdf0-a26eb294c7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e65032-62db-484a-9070-08c528210900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01393fec-39a8-4b84-83d5-eeaa83a57a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c8bf8d-ada3-4a6d-b74c-107f8b7e5d2d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95b290-e74e-4904-91a6-c8da0738909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c05e7c4-b904-435a-ae19-eab3aa7ad4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e1b752-b732-408f-b294-1df6a09ea27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf4926d-95d7-48aa-bc62-bd3fad1f2512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ba26c8-a0dd-4ad8-ac11-ea9c52386135",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ac9184-9672-4820-af3f-aeb22f961247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b557a452-da0d-4500-bd36-510375de6f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4008a30b-d114-4568-95e8-f9844c948179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a2f6c4-0a94-45df-bbe7-50b4ecf8a76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0f9cc6-c948-4b60-ab78-1baad98f79d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f01287-c276-402d-be8a-3fdf1076c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f128c7-34ce-4920-b10d-2cbc90432d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39967513-95d7-4adc-b425-021e8b74a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa569883-c3b5-4556-8b36-8a69955601c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e56a259-2445-4699-bbcb-38484124d8bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba096e2-98d0-451e-a141-ca22c45826c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fe2921-2a16-4445-9cba-811db34726fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb93690-97c5-45a5-8c02-ac8196c46616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a398041e-d381-4153-8228-753a71e4be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d2e5c8-e102-4991-839d-6c41e36e429b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983eb703-fad7-4fcc-8958-2e361435d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f39b5b-5afe-45bf-bd13-f44a5ce87332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1326ddb3-7954-47db-89c6-2f10622b3a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "664c2650-7841-4ccc-9e10-5a08cb83a31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df277b87-0d55-4f0f-aa7e-f202706d6c69",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a2f9fa-2d54-48f2-a9b6-9b159243c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c85f2df-661d-454d-a261-b9f078e649dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56ebb64-2391-4770-87de-6276efcc7414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d587e4-54f8-498e-89f0-e9b09e5d2cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ac2498-58b4-4a98-8660-a190d3fb6f5e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b5332f-858f-4c8c-a77a-fd13c037cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70958fb3-4a9c-47b0-b036-7ccd8e260a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f5599-9dcb-4497-bfeb-0b67b2b77fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5081be-c912-4382-ac52-678df5f82623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e176c1-da79-4a76-846c-68c8adfe1740",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdd4a3f-4303-45f8-b276-f0ce5053d305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34decf0-3079-4a59-a381-112a9b80571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783ce53d-a41c-414d-9b63-132df21a11f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b7e0c-22b3-4dbe-9a20-99f62448fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9d77cb-2581-45da-8726-447ba889b6ed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed53277d-bb72-4a88-b78f-1fe53dfa2a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de566961-c92b-4a97-ae38-129438a648e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dbc2e0-da24-4b63-b8db-9bf9bc2f4dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4992adf7-ea06-407e-8ffc-18575e9ce20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14968aef-1774-437e-aaa0-6ba5f4b1d760",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1094bd08-d246-481f-8a9e-d55ca23cbe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28713e38-0703-4286-bb8c-77e66eb64f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e077eaf-f9f1-44fe-b562-86a6746f274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5218ca8-c5b0-4f77-be03-aaa9eaa8da05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247c19f3-d874-4c5a-91d0-871c3120026b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed366a12-9946-4f00-b0d6-e71564332ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9c3230-34a9-4ff0-958b-d604f5add9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0f6536-7e19-4c83-811a-2a3e5c8adeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d8d9fc-e57f-45d0-9d7f-f1fe5e0e0e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deda4af-b443-45c8-a393-636d432736d6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a2db41-2987-4adf-b4e5-abbeafdba501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f02949c-d6ea-4ed3-9166-12d7ccfc0fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa712d8f-a09a-401e-91a4-9921e3a90fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a383a53-043b-4aef-8738-2a8022685737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42241998-116f-4585-9f5b-30473303c96d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f6ac4a-e4ec-44da-8d72-fd40efeebe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e4e8e4-29fb-44e7-bb8f-3b77b01e6578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2757f2f1-033c-4421-8f89-e4af9d13028a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e982e7d2-f084-4263-b8f8-96b94e1d22aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d349642-214c-4a1f-b524-bc9b389a31c5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83f2bce-55ed-4dc0-bb57-792108fd6a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2826f6dd-5c5e-478c-9605-c0147ac332d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1b99e6-2c11-4599-b9ea-2cd9ee26b3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f5fbaf-fc6c-48ff-90dc-10f7f2577d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae5e874-ed12-48ac-9453-b015b885949a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c171492-f04f-4aa1-96da-c19c6d893e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb6548a-f3a0-4fa4-afd1-4ecda9f1432e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2dd811-a280-46a5-8138-1455a1589b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "195651b7-d101-46f7-9f1f-c2465a80276b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff23866-e82a-49c0-9f5b-f17aa20e9d5d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc53c33-bd37-4a1c-9310-1909599f09c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31b7eac-cb71-49b2-95e5-6476dfdf47b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891cf510-658a-47cb-984a-d78d923fe56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f88a23c-9fa3-4433-961d-e4e8033a126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89cd013-fb64-44a4-a36c-e5c6d37398c6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23b1609-af0c-4a4a-8367-14adcce09792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f2ffa4-3b78-42bd-80d2-e03def8a7d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8048f959-8765-4d9b-896a-c29601c11cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b8c214-37f8-4a08-9b83-7fe82d804615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5855383c-5f0e-4c53-bf21-d2409cf9609b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd23b25-a2c3-4bd8-b2cc-219badaa0b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0983dba6-ade8-410f-89c4-034ee9b816a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbeecbc-ae56-4179-b7fa-4f66a06e15bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5be595-9266-4856-8370-269d47a3d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35a95b1-fbfa-493b-8328-52bd6a88b44a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161fa72a-8c8d-415e-8ea6-61c30eefb3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb25be3-f6bd-4e32-8eff-6bef576ada58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074f913-8330-41aa-b29b-8ed76b62d8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b49bfd-1081-4799-9bba-6dab9627cbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc45e0-731f-41f8-ad88-fbd03a1e6bb0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720e397a-55f1-4d95-866d-c6120fda7908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aab138-8058-4f2c-8b42-fc2a6a06747a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac26691-7010-47d5-a2cb-e8663b0aa97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "846b2cc0-6c8e-4ca3-b18e-02c5c251fc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba3ea4-ebc4-46ec-a300-a22f63d851d1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c1fc42-d75f-4653-a74d-51d55255c440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd6a5e1-253b-4464-9abc-c33c25b6804f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f149875a-08b6-4b39-bce3-3c5694ee9304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2719cad-3de8-4941-8fbb-b7863b727675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544ce72-91c5-4dee-a16e-5c019500aece",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4b54df-b9ec-420f-87e1-25b4cbbc083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4947a375-4abc-4bf5-a7d4-c93fba13c0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c619858f-bb54-44e7-970b-3ce8ccaacaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d512fa-90d2-4398-83a2-05cddb0e8afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70bc8e1-60db-491f-a8d1-e294dc55c8e1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5bfd4e-215f-4211-9e29-242eb3b97bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb97ffb6-c044-4aae-ae9d-5879573391aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee1623a-4cb0-438a-85a5-a907745ab6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a54f93-1cb9-41db-b395-2d2baf70b3dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e36ffb65-79c7-4a8f-861d-5731611e9474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2297c0c-d86f-435b-a399-4466dbf2dd38",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93ec172-1791-418e-a743-f2703dd69aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "370d75ff-727a-41ab-bac9-cc3e7928c59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1451eab-ca41-4b82-b7ed-80b40e7ff995",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0ecc68ba-df99-42f7-b64d-9103de49d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6922d4bb-1978-490b-9906-aa9a5b4cfbce",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b17956-74be-4205-9b3f-759de8f06b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8eff1d5b-02ab-4494-b9b5-db03d5921043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b223aa-bb4f-4fb1-a3b6-815c842d629b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9734cf28-06ab-4af9-a0ed-eaeb9045d512"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31f7038f-41e8-46d9-93c1-0445cebad7ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a325beb6-8efb-4cf4-98de-7c24f8b0d393"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a6cf08-431f-43ed-8a44-76f60e6e35dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d8a937-f769-42c2-adca-29a0999f98de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90e2b548-3c1f-4c12-9bc0-75827e3c5a4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7f800a0-7bf2-4250-8547-c58dcabd548a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e4b7c98-d74a-4588-8244-008e6a8d4e5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56dc426c-a730-4170-9d70-3bd2ee4268d8"
                }
              }
            ]
          },
          {
            "id": "a3df4e03-ad24-499d-a00a-b5b19ac99cf7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7afa4d9-bfd6-4cb8-b7d9-a3d953d83d37",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa241c64-af1d-4860-aa3b-87cccaed5fb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c6c4fdf-6b42-45c5-8627-cb66d2ccd3a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4348f448-dd84-4fd5-bb7c-7ec3fee93426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c236ce3d-a6a4-4b06-aa49-47e0c311bbb8"
                    }
                  }
                ]
              },
              {
                "id": "a9c13d5f-4958-4500-b5ed-f551faa9f8ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66ac9aa-3b6b-4e0d-88dc-c316bcd7bec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41bf7031-74a2-4fd5-9438-5f79b8134fe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42c43fee-1bc8-450e-bc77-8ae4db01f037",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fe911fd-327c-48fd-8d3c-c2950844a2d8"
                    }
                  }
                ]
              },
              {
                "id": "f18d5952-318f-4914-ab59-eb2a5699b05d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51c9da7c-0313-43e0-bef0-6962ddb75c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "884f49bb-3c30-4eff-bb98-ac621e343b98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ca20a29-645a-474d-8190-e894f2f79d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b2c1a76-01d6-4fbd-b61f-394a18f5e765"
                    }
                  }
                ]
              },
              {
                "id": "38fee29a-8c63-4b09-8148-1dcfc5228bad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e9ae66e-adbd-49b6-8635-373f07a6bb83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e319fab-64e8-4f82-a049-9d711cb08b6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d1b16a-94e8-49f3-80c4-c31713e72c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e4576879-07d5-45f0-8395-29a42bbc370e"
                    }
                  }
                ]
              },
              {
                "id": "57a7da6a-8cc7-4b76-bf26-df22d09a5c8b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bb24ab5-0884-41ff-b3a7-7bd49ae7bfb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66d5d463-08e7-4956-b324-cc2336cf7778"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f802db19-7e24-4157-83df-5697d9cf22a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18eae500-8e5e-4efd-a6d1-64f6d22e5bbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df4791b9-3169-4f45-b589-cf5ca9ae8774",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9f1997a-f92e-416f-90c2-ed6d1dc00e4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ab7b16e-8040-463c-8534-0386e3e7beeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb8d2dab-708b-4ef9-9741-ae5f26463574"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203af5e2-6df4-4dd2-ae37-33c70446245c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d99e60e7-1321-4a33-b2f8-bd0135581c4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "103bec9f-94c7-4c07-9f9f-3fb3375fecde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0a1adbe-3b9f-453e-87cc-9fbc17083283"
            }
          }
        ]
      },
      {
        "id": "15c0a352-9165-4ab5-ad0a-64627f3fc34d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fea42a24-7fb3-417b-9f7a-0e104c876b5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5eb9e926-0b5c-4c61-88f4-9aac0efd9f26",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "daae072b-53a1-4ec8-a2e8-e0b67b7350a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d73d1-3b69-4b15-ba07-ad68c03bb853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6f8fb2-cab0-4235-873e-83bae78ce1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3933f64f-21d3-43c0-b953-2d246c356c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f97f72a-f8bc-4bda-a388-2006e84549bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df1e5f3-ddcd-4794-a082-2e58da16a9e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6a873-2fee-4ad4-a97a-5c2a2be1f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f06af0b-2229-475a-af64-ff345d55f522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115d8a8b-e276-4bc2-89cb-fde93eec3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "628373b1-31be-453f-814a-120e2d36cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934edf4f-b92b-4b84-b503-64efa9429b06",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcfd801-2f08-4fcd-8ec8-0d9f40d9faf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2295086d-d411-4917-955f-0306603b7960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f12fbf6-5840-4e4c-ac8d-7942ca469e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a873e983-1076-4276-93bc-41d43c07eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd88799b-d33e-48bd-8fdb-08b9073da243",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5111ac2d-a9f9-448a-8cbd-bfb51ecb2cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e797c228-a0ab-40ec-9c43-cc053e3619c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1488c54-8641-4043-8081-6139a48ed296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c3dcc7-e30e-483b-8c0b-dd83875b5904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c702eec5-aaeb-4c03-9773-209d98d36c4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c044611-f85a-4a1b-b153-426ff3bf6505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb93a1a-ebd8-4b02-abcf-92d74f3fe71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3fc8d5-fc39-4be0-969c-a505f34fe702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b6fc75-03e4-4f78-940f-bb7e6ccc1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14a9116-9dc5-494e-8f09-db5b4efb120a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97119a60-df4f-4666-a527-e9c380ea9d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd48d48-d258-4387-9d39-36adf4e681b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e7e4b-4c5d-4667-9e24-ff8e552ca1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e98fad-ee69-481d-bcdd-8a57b652811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6d0ae7-6380-4ba5-b4f2-46409f99e082",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d81eaf-b1d0-4cd9-bc94-c62f35e4bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b728234-cf6e-4f30-b073-b1eaac4aa1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b2456c-4e6f-4134-a68f-184476b617b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b13e66-cef4-4d4c-b27f-56fc084be499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f007870-c9b5-40e1-b033-c6a37c927175",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368dde5f-bf75-483b-ac0b-5c36c5c49745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41913181-967c-412c-8094-535483ee8cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0136927-0b5c-4cdd-83d8-41210af5622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf38bf3-5321-427f-adb3-b552c121185b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c8a83-c33b-4b80-acd1-5bc1eab878ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1c76e5-81ac-410b-a3f6-d8208e93d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dabd0e3-a7bb-4bc4-9ee2-908cc9401e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf29e72-3aba-4d95-81f2-00e19cd987a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5210a5d6-3dd4-4cfa-955d-0f37fd8a8326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da71dc8-fe74-4d72-b32c-dbade3748a7d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91154802-4884-491d-99b3-a97cc0db35fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b44253-4c39-4ff6-b38d-743070f09211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0116ca4d-4550-42ef-84af-3fc206af0489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d8be7a-d896-4c0e-8782-8acb17576b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0305ba8-f21e-4315-b1c5-8e53605f5294",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f0a593-6b3b-4265-959f-ef4d737da97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9583e4b2-f5c0-459c-8566-45b811ffde71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd906f55-8787-4e92-b48f-824fd6c1826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ead99373-ec7c-407a-bebf-09b0f9f2932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24f001-bc30-41e6-862d-2407ebf926c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183ea186-e96b-4a04-867a-366641ca9fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e81e449-2970-477b-baa6-f16890b016e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6653c2-4b2a-4e42-84d8-373f7445239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "019d70fd-d9d9-43a4-ae51-b540b9ea31c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c351dfe4-706a-4e05-a6d4-ed145f062ca8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd930c1-f6be-4a21-a196-be008f253cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e5dfa3-8204-46ae-b6fa-e51da4ce33ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece6deed-3162-425e-bb47-0b714afb96d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4225b29f-4ddd-4243-a8f7-c875594e83b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddcbe07-8246-4b9b-ace7-5b6e8da6b4b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5712a601-2950-4372-b8a5-09ed2ead5ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a24f68-6f45-4a6a-b93a-4d00c5fa0ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa3b263-837e-46cc-8e85-d53eb95912f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94dfce3-5d49-4268-a9a0-6445a57fef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81637e8-2c8e-4da3-9431-3ecf1dc12a57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a62d6e0-2fa2-46c1-9955-4d4cbba2b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a970c7b-4af3-499c-b6a9-ed2669ea8b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5349ef2-cc14-465f-92e3-ff8d499645a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e788b578-319c-4f1c-b0a6-19a7c5efeaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861d5997-a995-496d-99f8-4c919d8a3676",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54be72-64c9-48fd-9a20-a74bf853711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5074ef54-e8fd-4158-8591-7afa1f23d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174a832e-77cb-4966-8815-2f70201b70c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b42b76-f647-4517-ae20-ef1a033d9157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c6340-65a6-40fa-aac1-be733b17ca84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c710cf47-5ee5-4b59-a887-edf345657b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555f1e90-8b10-41c7-9c75-3ae28bf8e69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639304cd-5318-4ef8-b71a-d97f139ca9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9e6386-77ad-4685-a1ea-864898e1ecea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3b3c23-3ab1-4d93-9419-771a16674c77",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a0999-15f3-4efd-9739-c633d30f5e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df652f0-2783-4356-bc22-d75202bf2677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc03c3a-d0e3-4441-965d-9305fdf1ef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "409af1b4-578e-4839-aa00-4b35eb183c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4088f047-a180-49cb-a668-4e4efcbe7a90",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb6fa3f-feff-4c1c-9965-8172f1b0ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3771cb52-55c7-4a08-8eaa-1becd545f303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1070f8-5613-4771-82b7-0b6ac19212f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87989486-5e88-4526-bd21-795dfd50b5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3455d74-8c64-447b-96c7-896e7ad39454",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad443d66-76f7-4eae-82d2-bd227703d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e18f47f-89ae-41a4-8cbc-ee69fe40c4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89b9357-5978-4784-92a8-9e3819d0e8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f27afc1-dce7-4a60-ace6-8d989619e215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f8ab3a-b145-419c-8151-f99c198b590e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f04047-d7c7-4eff-ba09-1b072bbfa3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a408a1-f714-40fb-a55a-6db7b0de8e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbf7395-8996-467b-b1db-c7c7107999de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd70d651-a5e6-4a44-a4a6-930229af8192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd37c1a9-88b3-4978-aff3-674ebf1155cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cfd1b2-9f7d-4c98-8a63-47e775ffdc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d5118c-d9f3-4084-a50d-bfd801ed27e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c59bac7-bba6-42f8-834b-a1201ecd9c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbeabb88-7c23-4be1-b67c-8df5d4117f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce3bc9f-1200-4a65-9547-047454fb1b18",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1deed7-0b4c-4dec-8cf6-d5907f4bce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5ed57f-5dbf-4ce4-9283-2c88108932d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea83a3d7-593b-4d81-b3bb-0583e09cb88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b86bcf-57c7-4c0c-a39d-1581f4605a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89748fc6-e7df-4015-a68b-bf3853042fd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101ecc2c-fc30-467d-9bf7-3bc1c5873418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371dd4e1-5fd1-441a-886f-73b89de7d80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f02ef4-c5c5-41ac-8816-3b34c1b8c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfca9b4a-48c3-4d9e-a1d5-53292d8bfacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe56d3-38d3-4cbf-a0d3-730aff1a9a31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf88fe-cd2f-4180-94d2-29b8ba9b05b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fadfe97-0443-4dc0-b9a0-b0141536291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344d49b-3b54-4532-accf-3fd075004db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609bd2d5-6d0c-4fed-8496-00fffe19601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df51196-45b2-4b2d-a41b-603e2cd07b6d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3058114c-0d1c-4b7a-be46-ee09b378a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fcefde-aced-4191-a64a-71fd6178db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18afcd89-2f48-469e-8880-7bf84440db51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14666132-3c38-483e-9db2-d02a67443e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da939d6-f3e3-43db-93ec-a7d173af1bd5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc69764-5973-4f02-847d-01dbd6fb7472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df48edb3-b7a1-4c8c-8563-69e5dd5d2346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b16ef37-c293-45f2-97b4-492c5393e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c95a3c-96d2-4ac9-a292-3b0423e12e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49fba1f-9d7d-467b-b590-62fad1069924",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75830a5b-7696-40ff-becb-49c06fc578a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afe8adc-35ce-46d5-9cdd-3d608e984eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e56996-3791-4a32-97c2-427edc38a024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "799cd31a-3b2e-4a50-a398-42316b3664d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae72ef-fc8c-4921-9fca-bdddd0f0a2fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a90fea-97ec-46bb-b624-3b16bc15a891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cb536c-e956-4f68-9c78-5c03b16e5663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0845be4a-4b3a-4fde-983b-f68de377cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e47fbfe-85be-441e-b0fb-fd4da2ce55cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ba8b0-262b-4209-9b04-f3a183a39501",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441c95a6-f836-44bd-913a-9b3c9de2c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487f112a-9e39-4015-98bc-75f5d5e584ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acae451-354d-43f6-8d05-2660826741c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e184457d-9228-4ed1-83e3-3b745fcd22bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6467b0a0-0c1b-4899-81d5-3a1c759af004",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c5cc4-f154-4aff-95d7-44b40d1de96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a82ac93-d78e-4484-bbcb-897c7e464b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b0d156-1d55-44ed-80df-14c34400f83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6d9df2-26fe-4d99-afa7-b69df7a65f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacc547d-4f56-4c4d-b55a-1fe673e23795",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf5b5b2-e01b-416c-970d-70ef1b5d9cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad452587-007a-49e6-acd8-d582eb9af193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc8cea-c97b-43c2-95a4-0ead43a486ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ec88eb-18a0-4b31-8fe7-921c41c8f171"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3be0e5d6-0267-4de0-b016-bcbfe618ee5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01aa7f18-e217-4738-ab8c-7d56e948cd5e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30358f8e-6f10-4287-8b35-5e48cd0c47f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6e4ceb-1af0-4046-b180-876b7f9ee061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2de072-4218-44ec-afa3-fde840348055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3fccf16-4705-43ed-9847-f7db02fc3d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2f171b-558d-4336-97b9-b367af1e4898",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45538665-f445-421b-ba3f-7a3f6f40630f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a9c22e2b-70af-4268-94d9-da23b320b247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fb1417-e846-40ac-97f6-6e059294ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8feab80-5ef2-4b17-b7e6-3a05629e0e5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f48f2fd-ae5d-4076-be5d-37b62dad0f61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb3dde2d-da47-4c40-be35-404bd4b76311"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dce80e7-f3ab-4a72-8356-d3367b5f1943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e73f486b-1b96-4a56-8279-1ede0b0e5524"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7224ef36-4da9-4249-8a6f-3e7c0527f38f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7d95213-3270-4839-aa1b-27db9b9fd04c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f58af62-722e-4542-b69d-35ba52b9232c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a0df63-4e95-4730-bfda-49fc208f1008"
            }
          }
        ]
      },
      {
        "id": "1756edef-6635-4580-8d74-cee41a1780b5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c74952de-10fa-40ef-8846-d0c25dd17c9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9010f4e2-e320-459b-866f-2751a42c4151",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98c4e24f-77e2-4411-8aca-1491d42bc699",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56a962a-d7b1-4a11-8dda-a22951a98dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd896de4-3ab7-4f94-a2d8-1404d57b15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091aa316-a72c-4405-8399-efbb9fc9ef2b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a721188-c7eb-48af-89fb-79b8b292ecf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77cb6f2-39de-4e12-9de1-10166490330b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb2f7c-7abb-40a6-92a1-6c52558588c5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfaa69c-3329-4f99-a8f5-4d7c9c3e21e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f33b6a-e9ef-4c46-8ccf-f1944a1e229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c7bc11-593e-4051-9f88-692061fc64c1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a665aaf-8111-4ec0-8f84-9b4635c870b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c65687b-4bf4-470f-8826-420050bdb8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea14c52-e052-4386-bcbb-cd3727157e28",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecfc2cf-3643-4094-a820-1f8262fff7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80890b2e-802b-4bb4-8489-fdaccf98281b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df80bde9-591c-4df5-ad7a-4da8110fc12c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08acae46-74cc-4e17-8d4f-0a4c65638184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08d462a-5c77-4b13-ae18-6eed93ebd578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2c3cd1-b2cd-4f81-bd0d-9f591aeb472c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1ac4b-172d-481f-9cda-0a64e1afa644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8456a31-8a5a-45c2-817a-4937befcd9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ee6090-f8d0-4457-bf0c-2923932bddf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b074ab-465c-4b63-ab0b-682fbe62aead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2660bb3-253e-499e-8f1a-4c02b6d0b043",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42234a-bdd5-4dd6-bfef-0c3dabc5f520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ca3cac-7868-43c9-b0ab-ab6dcf548545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3ff796-9a18-4a31-8a9c-edf02dc5c3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f068e5-d857-4b59-aadd-5f1c9fd6908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495eaa30-c443-4e2b-b6e2-25e83fa7b089",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c44837-6051-44af-adf1-5db1a58b304a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37c24ca-5ea2-4612-8275-41fe9165048e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b5dc6-18d0-42de-afbf-facb774b729f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10593cb5-bcff-46be-b10b-f2e2f97380b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478270be-c19f-4379-9a39-f5b0ed813de6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55566327-e083-4f30-a7f6-62ac527c5359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d8e697-39e1-4f95-8c36-6599b6a1bde3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56b7a1f-02ba-476a-b65a-7ff41c1c1595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93108467-bec0-4692-9e37-83e04fffd496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fbb128-6538-4c11-b4de-2f64323c7a71",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278f63b5-214f-4de2-bc44-3280d64ee216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740f4c67-ffbf-45d6-b878-e1f6e62ae9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdba24d-23c4-4d3a-86e5-84cec4214063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2715b9-5ed8-4a65-8228-5c950daa9b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0473937c-7c3a-440e-ad2a-2a7a7974496b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7bdfd9-56d6-4629-bb75-96363077be85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887a9bb4-4864-4445-af54-bb917d298b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294dc7a0-29d4-47f0-8a6e-ec7dc2c758db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff68a8c4-c9d9-4296-ae74-d97095069396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d1ffe2-458a-4943-94a7-647b9f49e0ad",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796ddba-c874-47c1-8c13-03055d2d47ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ecaf38-4f95-4289-9120-b92db9b22de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8238a2cd-0b53-44e3-b799-ab96595c9eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0743ed5b-e45e-4479-87ed-429f87893af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504360f0-c9de-4988-aee3-d902af5937db",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228cbbb-e2d2-4d5b-896e-f9af341771ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521cb87a-ff81-4f47-b146-9ff9a0bed8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad3c24-25b2-4303-aec2-11ba603723a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6702d54-cf1a-48c4-99ab-13aebf0b800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db024733-5360-4aeb-b6d2-de01a7e3ee94",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ab381c-278e-4432-843d-6a354de67d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181d1a60-29f5-43db-9903-02e25efd85f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255cae01-cb36-492d-9aa9-d5eeae891c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297d6c48-68f1-4000-9663-41d319607bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ed31a0-8781-451e-b055-a0880d5468bb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c41ad3a-ae59-4739-8632-e9de7800e405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e5e585-93dd-494a-99d5-2ec68dbbba45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a533cb63-7b4f-46e8-83a2-eda7b363b388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a7c42b-a754-4938-953d-d7d6a4ef37dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa039807-537e-4b86-9ba7-a82597404e9c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37626994-9bc1-4ac6-b5f3-4279b1ec107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e94bd50-6bf4-4cdd-abc0-329b8f5e510f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddb6899-a957-4968-b3a9-2078ae9528d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920d0f88-40f5-4de1-b1c8-1482eb88fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8a121a-f128-49f2-b2b4-4affd2b94452",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96d050-1917-4081-b0cc-8a7bca4e06cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafb823f-cfc3-4af6-9ef7-1285a81dce12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f21b3d-563c-4260-b7fe-1f8c60464d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0ac057-fad2-458a-8657-01f96484eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ecfae-49d9-41c0-a5ca-77a34f52cfd7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bda0507-0238-4d76-a38f-08d9534940d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab170c5-96e3-4c6b-8cc8-6b86a4cd3c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dae00ff-b280-485d-9ed0-e34c0815fa47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907aa149-ca72-4f6e-8360-61bea72a8e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fc987c-ab34-426a-8a8b-2c5caa277b41",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5814491b-7b39-4788-9288-e193f9a31e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c666914-05d6-4fc0-9572-4028cffcdacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85bf265-95c7-4cde-be49-b8331e5758bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69751fc-3ed6-4051-9476-0679dd9d6858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213770d4-59dc-4c2a-acb1-4027c2f45de4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb4b998-8319-4ce8-b06d-e5951b08fbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6239f294-7f96-43a0-918a-49bfef36982e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55da979a-925a-486e-a706-b142768715cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765101c2-003e-463d-b112-e88bdf1bb948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed275af-bad2-465f-a0f4-54a64cd881ea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b037f86d-9523-40e7-b53e-26e22b283684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab897ed-e08a-47fb-a741-2ea113ee7e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f436e44f-1f4f-4d22-8a9e-1cf32b0c824f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e07d4e-5311-4397-a345-a1d5f84b16ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befbb30f-caa6-4bf1-b54d-8b1bb1c54fdb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0e211-28ba-41d3-a8ef-9d50573c1408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c5b9eb-3557-4af7-8403-6aff999d729d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3242570-a528-4048-a3e4-f81428a15e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21200cf5-e46d-4a0c-8459-8df5656136e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c94ccac-a1e1-4c30-92f0-f1defc19b9d1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784ba97f-ebca-4bae-a5ee-d820a76f2682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1335f4d-6805-4595-aced-98bd08cc2037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15656c05-784a-466a-ab09-d2c57a0befc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aac6b58-a0b8-4ad3-ba4b-f6d588957fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0e9451-91c9-4fc8-a151-d1981486a961",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc9f98-2ffe-45bb-afff-4b660ba658a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6053f79-1ae7-4f51-b656-a5ed6aa41f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d140b08-e29e-458c-afa2-5b9fe83a16dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e6e204-f53b-48d4-9071-9b6efb604dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bb0a5e-c012-4cbe-8ce1-4cfe5746a4f8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc55947-90a4-4e61-86ab-6aab2ea4a123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef9efa9-0ac2-4d14-9eee-eff0aff5a0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2d5fc1-e47a-40b6-8627-8f601bd965a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcae951-493b-4c4f-93b6-8af329dd91b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a954c5b5-2c13-4132-a38f-787f09b9c090",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c22b50-eedc-43cc-82ab-520048c62b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27566159-4356-42a9-a622-d7e9db56be90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232eb2c3-8c16-4db9-9b35-663e45ec8103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a97119d-ed88-4f01-b5bc-18d48e0c0b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c77fbeb-fd9b-4929-8482-8609c68e92be",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c987bc4d-21bc-4d01-b4fa-effad1c0eb96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45081f0-1ab3-4077-a086-efd692ad7160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc262afb-3dc2-4fd7-8f07-8cf1fb3af5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb674d06-341d-4d76-bcf0-cf09d8401e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7ad3b5-eaf8-42f8-a924-556ab0be3a8d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac366f-da07-4354-9399-dd9e1d3ced64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407dfe91-74e5-4b6e-b228-0ea58f85e9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48af61f5-5eda-4b74-a19c-de0bc234551d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dc1de6-0c72-4bcc-bd74-cb2e43a35b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b8dae-3f31-4cc8-ac5e-1859f7986898",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4556a526-3c63-47c8-9e91-be4088e3f66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c89432-37fa-4bd4-9ced-3d61397805d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cfdc24-f665-4777-954f-91a0230812f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810b70a1-4fbf-452c-b30a-368da8139a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01ad201-550e-449a-a11a-cac8bd909c58",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36480138-eba3-48a4-aa09-d4513a1c55a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f733dadd-78cb-4fc9-8daa-870ce1e74d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e28430-45f5-4313-b2ba-f1b0caa32c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7956f9e-0a3d-4e91-8b97-67548e588008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f2cb4e-3841-4dd3-aa01-c09abbc8422d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7831321-e2db-43d1-aeba-fd5a1f107de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447eccdf-35a8-4adb-94f3-a621e79e75c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f2fa6a-007f-41c1-b822-dfa6418c826e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ffce79-032e-4a73-8c15-28e51d37b46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6232def4-7a03-4f78-81da-d69ca2c3861b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651026b7-fec5-4f16-a3ec-aa81fc1ffdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19283348-5a61-4087-b6d1-54308f75f158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe42e31-64aa-4da6-8e4d-a400c5233952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76fd661-1838-4347-bfed-82a38023659d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed05a77-a927-431f-929d-119f7477d067",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf68e0a-ceb2-4b85-9793-fdf30734f557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4b4e68-5e38-459e-a2a4-1c2f9509ba96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8f6235-3ec6-46fd-acc6-441f8c493420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8ded32-0969-4bfe-922f-e2c904c82cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadcad00-73bb-40a0-b5c4-e1186a1b808a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dedf2c0-952c-40e9-9a3e-b09b8d304c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426bfefd-9dcf-4331-b00c-848309b8c797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d4f0f-6323-477d-8a64-fe6e298ca060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e0239f-081f-431a-b9a7-fde32ae92cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744cf574-b8c4-49c6-92c1-1b85f4fb8770",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42650c73-841a-4749-b640-16519ab3031d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c1b3f2-a986-4d0f-9bff-3e77e2c37640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88fdd56-6cb3-49fe-8989-c6da999ff483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d35caa-9ef9-4974-a268-fe23cb14b1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac2cd27-d475-423c-a83e-708f04659f78",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ac711a-819d-40c4-a029-c281071cd510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d46ba2f-99e8-492c-bf98-90b836b98616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae819e8d-988c-45a6-b282-3d162e4872d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e923f8-669b-4398-9d5b-b3693aa88d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49a8fe-f982-4b1e-b044-f5eb32975696",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1971c1d7-d1a0-4ed9-aeb2-e3e0ea33b610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f4e5e3-6cee-4b38-a6d4-f79c527ba86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5016763a-aba1-4f25-8649-204ff70ea5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69a71e5-ddeb-4476-99a0-6a2621aba3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b01fcea-3df5-48b8-8937-cea0c2daddc9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5c9153-5007-4f85-9f60-5de3852a2cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c8556f-ac05-46dc-8b34-a7a8b1f133a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed97fef-4ebe-46dc-be7b-4e8cbfef9101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0eede6-8c78-4447-8461-6bd9aec1dc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e2a780-2e83-4e96-8982-2a20379cd6a5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bcb028-53f6-43d0-b39e-186b66e27be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b29ee91-abee-4c3c-9e0a-db1202ecfd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df731480-3d66-4ad5-80aa-2f59aab9577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0c375f-dbb0-4085-9c70-31e6739c9e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7146609-b5fa-445b-bcc7-f0596981b148",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d3620-85d1-499f-b3c6-3e4132586080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13809c6a-c290-43db-8bc9-48aec07fa14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a40a9-a333-4147-b1be-032ba68d736f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f08d05-a56e-49d9-bf49-86138639c679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481ec452-1f47-4327-ba67-1cf116f27205",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566d4d51-8c2d-4f56-811e-26c487c50539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f99d33-8958-45ff-a09f-32c0fd289a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de011503-8ba7-43fe-b717-fa8e4682864e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1add7c-fc14-468c-adc3-00207de9a4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80e338-3613-4f8f-96e1-88bcb95f6f67",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e86809d-47f6-4536-b700-3466a1498687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac31070-c4d7-46f4-8e56-71220ff969ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601824f1-7338-4882-9793-b69c425adc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bb30dc-3c7e-47b7-a9b8-601111b44c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd3ff8-6a97-40b0-9f05-dfa4fd4a3da4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12323653-5f94-443a-a7dd-d07fceecf4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9482d1-9a6e-495f-bd48-08be327ae0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41806d3e-8511-4623-948b-4779886ffc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3a59fe-16fc-42a7-8ec4-14dc411429e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc87f6-fb12-4db1-83e3-17713a5b2c5d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face4a16-df16-4a68-84aa-14123597ebc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bc7a62-d3d7-4863-8c9a-906dae001c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da75f5d0-f8e7-4411-87a9-6c3210a32e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99255c1-2b8e-4d1c-b337-d9518f308191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1cce7f-4f8a-4fc9-a66f-5692cc839709",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c6697d-7a52-4d1a-9348-f3e4afc9c06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bc82f2-a398-46e0-a966-d19fcd3042d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f778b00-ea6f-47ed-8640-33cfcdf82855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a8e936-e2df-4a62-b284-397a6d26a51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc1451a-7d56-4b76-a38c-8565418f85c8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa032124-c94d-4298-9d8b-e6f05fc148c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99082425-0e4e-433a-bafd-725ac59731ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b3502-8616-48d6-b355-389c69eed24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b530e644-8875-47d6-b645-b9f96057cf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123bd58a-95dc-4222-874d-e92025482d26",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ecfe88-59cb-4482-be78-c50234252ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad025a0-7ec9-431f-93ec-2001dafbea72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056ba9ad-4923-4ae9-89e0-04bf4370c579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444bce73-16fb-4d7b-b552-6da90bf8f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0875360d-0291-408b-856a-dec4f0e3ff16",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e060c1d3-914e-4c46-a41c-01bd27be455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2568d8f1-1635-4355-982f-7ded1a8af194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856fa85f-426a-45f4-b604-3cbc82e1d7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e4cb9e-87e6-43c8-9ad4-7f191139b8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5e2e9c-dae3-4a13-92fa-57b7ed72c1be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e266708-8f09-4811-8f67-fef7f3bb15da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d23b1d0-80de-4430-a6fc-36746abb73b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e9b4dd-a368-4903-8e91-5bd748fa6457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21310936-5077-4e87-8aa8-de551880ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0adffb9-ac83-4f2a-b418-7765dd9dd08c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1e5dfc-e9d0-4ab8-ada4-189ce37e8cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e79171-3dfa-4cb7-81a9-f2a9543efbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12e25c9-384c-486a-a682-10e674ce3b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76467e8-1e46-4b4b-8a55-f0f6e4511239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be95827e-f268-489f-b62c-a9f395edab74",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deb7264-2a89-4b4e-beb4-bea865882e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e775c3e5-bc07-46d9-b714-b8a15abb1226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d865079-ebf5-411b-9e8f-02014580083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b62ae3-31fe-4f09-a443-b4f151edb07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a183274c-f90e-409b-aba9-1965bcc4ec0a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da2562-b473-4640-b7da-33893b36f850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16640492-c4c6-4569-8f0d-8d2dc46f5c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03296304-d1a8-4b2b-8dc3-4f530f996d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbff0ef1-2cad-45f8-98e5-1e0678c53a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffacb98-7289-4aa4-908d-8f68260a3d46",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7abd8a-61a7-400f-bf71-81aedf570f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8754a87c-f854-4a3f-b80c-dc3c503b43c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94f3100-ace6-448c-925b-f3c7f4033951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee27a7b-7645-4f28-8881-be7b36f7ab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496e2688-750d-4e0b-9d54-8c193b5063aa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844ba8d-c3e3-4be4-9989-a3eb7ad10753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1054e31-4512-4060-bb37-9338e3586aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05676e08-7884-45bc-afdf-70bd50df180c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624b0bf7-07c9-46ac-bd70-d7fbf31c157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8b6263-e54d-4923-8f33-c8c0986b65ec",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4b2e0c-d771-4b60-bca7-365f4c5b8fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070a4ad0-5832-4dd7-9bda-735b56698870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1fd7c-3d0d-4576-95e0-77430706a406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1258cc-1f5c-453a-a8f0-a48266cad7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffaccb2-f3b3-4031-b350-d951f1f67dba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961da5cc-ad6e-4485-ae9b-49a9171d555d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5580a65b-ec0e-4908-90f3-b62bd8b74532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf59bf35-313b-4068-9f0a-3facee07b365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b10ec0-70f1-46af-93a8-1264cf5eee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff9abb5-f32f-4dfc-ab7f-caa622efbea4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ed0503-aa97-45ad-bda5-85e0a8e4310f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d3ad48-152f-4bf0-9a6b-8eaff7c7e464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d70ee-c68b-47ce-bae7-f220156dc622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea2d521-f320-40d2-9d58-f676b5b8c1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3275a835-fd1a-4bf1-bd18-5bcce242a456",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a6d6eb-82a1-4014-84a0-c1a8d641f16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d874d8-a826-4178-b758-0defd14b0911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de841af7-6878-41aa-8b02-d8ad4bb58c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7d77d7-5397-4bfa-ad55-d8624d47aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f55004-1725-47a0-a3a3-24c0ec12a0cd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaa5eba-cad3-48e3-a8e1-25a107f6da6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e2bc79-e6cc-4306-8dac-720676568d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad8f563-b58b-4c05-ba9d-f3c81b9f840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fae82c8-9231-4918-acd5-4b7e6cb605b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9275adbc-ab89-4245-886d-b9d6aed76892",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b29b15-c757-4f80-b5ed-33632ef57202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9acf719-cd7f-4837-a480-419a735f6548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e756826-0c92-4e51-b343-910277454b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1be42f-8440-430b-84b9-81ee5739ab78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7641393-44cb-47c0-9913-f91c17f7c9f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e03fdd3-5ec5-4ecb-89a0-ee5611980208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03e4e58-5a26-4ce8-87af-b218ed518b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ab4441-71d9-4410-acbc-e029fa7cfe27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566332ef-90ca-463e-9e07-0217b86923b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946a3646-614c-463b-b42e-4136e1539649",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839d8988-3025-45b2-8fd6-91de8a1fdfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7dd53b-be49-49e2-a783-13b979ef33d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64168384-d5c6-4afd-bf84-dfcb0e6400c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f259226d-8cc4-40e1-8900-b02856c177a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104344db-25fb-40f0-9717-03d106d18c58",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd227ed7-24c4-4442-bd5b-d90d67ce503b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105ebf5c-69a4-416c-8fdc-49f9715dffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa05ea4-8f21-4661-82d7-157539ee5a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5200c449-4484-4395-afae-b23477dd0a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51352516-9909-4cc6-bc35-43a068bfe219",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04635d00-bb0a-4fa7-b6fc-1b9421bb6b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397a0f33-8c46-429a-a384-671e54397d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703be8a-f7b6-41c8-92f9-8d78c4917112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638e817b-e7b1-445b-9b7f-cf82a17a1da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101d94df-d00d-4129-a541-60bcbac1094f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5005f36b-2e41-43ce-9eba-956b783d11df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b020ad91-8482-4613-999c-19a930f0fd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119172a4-a047-4770-95d0-89feba3894b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f0d189-8e09-409c-b66b-395f005d17a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e85ed-98a9-4173-903e-36002171cd9a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445f27bd-697d-456c-9cd2-b03ae41e34ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc07528-0281-4643-88ac-8527bfb2a21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21cd883-6d7d-425d-9742-93c0fc716412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca70530a-d088-49fd-ae61-c88ce8d3b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41a601f-161c-4906-8421-cc544e87520a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1fa58-a1f0-4a3c-b99d-8355dec3b055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7f185f-127f-4c6f-b8ce-b1331d0e7f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a51ba8-e7ac-45c6-9df9-48ea19096b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8178e55c-9e9d-4781-837b-97b1e376691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520efe5f-3ebd-45ca-bb00-cd25408294e2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee00b0b-db96-4f65-953e-ba3eb951701c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5166f9a7-d4e7-434f-b9d5-7f15cebbd928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07e1b03-ba23-472d-9e38-72ad7c2ceda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663d87a1-f48f-4b12-ae64-35c63c8c0825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfa470c-1c55-412d-bf37-90c190e995b8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b549fe7-d569-4631-a92d-7f47bedb7384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee6bee3-5f6c-4a57-9f00-b56555fb5478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e620d4c-93f8-4dbb-89c0-4af10fe7b0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9f75df-e1dc-415f-9bd8-0069fa4a8ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253c094-915a-410e-9935-0c49bda44b09",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758d8702-a227-46ff-82a5-0bc068e693e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80562c9-ccda-437c-9639-26000cdb8d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c05434-7dda-4d53-8de6-b1d1ac0b2010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e884c0e-c4d0-4329-b85e-bba8aa02c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65192477-c23d-4c10-bfde-9cb96b1bd0d4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9305f9ac-ced0-4c6d-a8a4-1eb8b24cdaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d453e4-9d8d-4522-9290-d0612521f955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7f8e06-3e60-4f40-918b-af35ea9c6db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d97a30-45e4-40a4-ad85-6f86f0e67b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa7735e-c6e9-4c49-b93a-bf546e76e973",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5c7453-c6db-4eb2-ad64-d78c2d1e8e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fc7a43-ce3a-4457-9fda-03b89a239cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829451ef-f4dc-40b2-9f8b-33bb0a6a5a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c065374-2258-40f6-ad29-ba9fb6e9e0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5af7fb-121e-4afd-a80a-84c87f4b48f9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd21f7a-d7d6-464f-8579-3610f472a353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f6de2c-92c4-4970-972f-b252b4b451d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dcc775-8f5f-459b-a4a7-3252f89b00d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b7c315-4a42-4728-87d1-c43f48cfc775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a357aa-f3be-4474-9612-49e8eaaad475",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dcbd35-d757-4b9f-82a3-0b1a762a4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb2daad-a3ed-4e70-bc14-b12c1dbc2993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ec3c64-ea21-4257-a1f1-48783a1b3b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044021a3-375e-4be4-8023-597db29bebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d7a1d-1d2c-4ce8-a71b-a0c013ebf39e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7bcfef-a904-49a1-96a7-311d97a8bd23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce29f65c-e227-4578-93b3-2cc1527ce8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87512751-9c03-4f38-b95c-5ae38d81fb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48332f02-0986-4132-85fe-c0e753769e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caa90fe-41df-47f8-889d-2df78e0af301",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b18863-eecd-4db1-baf8-329451160245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a76a3fe-6209-4aaa-ac16-63801e2615b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a104d8-2142-463f-827d-834911442f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5c4ce-8f48-46d8-82a2-0f9d1581ae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7973c7cd-eb62-4844-b920-67d8d38e3678",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c823e32d-7ac0-4ae6-b2f5-7787a306139d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b171c8-7a4f-4c5b-9747-15c6d1debaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fcdf4f-9215-450b-ae94-e339d01158fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbf8536-f079-4b8f-9e79-d83edf14026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51a0ea3-f883-4f36-b21e-b80a310b7b0a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f9e0cf-ebc4-4849-86e8-829d04ab52d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a460196-43e2-485f-98bf-4447761871d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03587f6e-18b4-44b0-a5f3-a9c41847f87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca56c7f5-b802-4bd1-83e8-f4f09e37f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d24050-7651-4599-ad54-8b1f5a645ff6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941f352c-5216-45e0-b13f-d3a578b17e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00704253-ecab-4ab5-891d-988bde487ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a0a65c-9c33-4987-96da-2a16eb9eb0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ca11d2-51b3-407a-9c98-b71ea3a47532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627c6fd1-0d1f-428d-96b5-df67609cb866",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ece4ec9-ac31-407a-9709-e8d6f06dce73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedc0587-6339-4a77-afca-ab5391ec63ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd0aef1-943e-48b6-9fcb-3319d21fcb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbaac92-784e-4a96-b015-4316e8f72072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa60b86-b2d9-4297-a269-55230c5a5ebb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c26625-b428-4433-b557-899d74ae1e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e87d87-93e2-420a-9c58-6e2086db535b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8618ac29-2cb5-4a8a-a023-f71aeed94782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dfed06-e4e2-4380-bdd6-d447701dec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b0e16-2037-48c2-83ad-1e1c96cd4b68",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64774503-ea80-46be-b671-458796748e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e255d6f-d93b-438d-8924-8cfc294bf728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34c32b4-8b1c-4a14-b59b-9feab9630e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a647fb-7f3e-4458-b987-8f6c9794e3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c67679-0013-46ad-85a8-04251eef4ec9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4187b9dc-8890-4850-9bd1-5d78b4e819eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e01264-6a71-4d31-9874-b99b2f1158fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c97af2-4df8-4a1d-acbd-1cb60e37f6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6aad47c-fd5f-487c-85a5-e8f85e31769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f612b678-5fa2-4dec-b3d1-b54bf0667785",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42714525-0502-443a-89a3-b9e0d8e7f904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e9178b-6eb9-43f2-bbcb-3baca0f121b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfaf660-9014-4b5b-a416-cbf7050eb279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99de92e9-33d8-448b-9aad-76f827dcb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67e865-be58-47c7-968f-4de6b8b20fe5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea3b36-36cd-4537-b16e-28617d2035bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefb1d9b-d0e7-4b0b-af65-cc8322486029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862f9b47-9b6a-41b2-b23d-825edf4c753c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b399d2b3-0ad6-4330-863d-74ad5128fb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02114014-753b-405f-8bad-970af23c568a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c353c2-e8b3-406e-b5c7-b52c23a2d44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd4569e-529b-4540-8f32-3cd374c9e2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201963cc-ae8b-430c-bca6-9fadffc46ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f14df5-d7b6-405a-b78e-82fdd18ea874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416d8d39-c5d8-4540-90ae-0ca2e5d45490",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a86f7-8720-4fdb-ab3e-99d068842f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cdb3cf3-2c68-4b25-9141-adeff1e11b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f13a6-b072-4805-bd00-91b1d5d9d42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025b1653-5249-4681-95bd-de9458fdcb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea67b3e-3c2b-42bb-b70f-b8c8d564793b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba81cb-1662-4457-86a4-d0d82b913a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8225e953-072c-404c-a19b-f188ab53ad7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ff1b57-c33d-4fdc-beb2-108791518312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8690df97-8d37-422c-ab7c-92c09d2a8960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386c7f40-039c-48c7-86f7-b069790aebfc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d3b652-eb5e-4098-9e64-cf8906f484f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9b66e8-623c-4541-a9bf-46534d5cd59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df3e92-8748-45c1-8928-c285ef37bbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22b80f4-9d47-4081-ba95-736fa9ed71ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136e03c1-0740-4014-b895-541e3cbbd8aa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52896bca-69df-4cf3-9eb4-8e0635a0d028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974a171d-1dce-4bc2-977a-3899004292ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00fac47-0abc-497c-822f-e7aadaa0e32a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674bacf6-b0a6-4ec7-9d65-a80fa45c7c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba4893a-8a68-420d-b332-0b1b6679a6a5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa4b531-95ce-4a05-8acd-4500d5c66e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074e03eb-d113-4224-bda9-926191eb710b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16469bb-3a22-47c1-b63a-38d7211d1b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c740a9-cb12-4772-ad9f-0213a4faa3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d98b0e-fd6d-4eaa-b494-2c1e078fabb2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde4341f-65ca-423b-8428-edcf7a06757a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79692b18-d20e-4e93-91f3-4a3af00cf544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9569a401-2780-4557-9714-de8c23df4d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0cd23f-b944-43b8-bb11-e8eb3e51ed8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d005ac92-10b2-4670-8bd6-d8f063d0b7a1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4995ae16-f98f-467c-a3d0-25a822be1934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0659b95c-c632-4f5d-b6e3-a3af152f837e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dcedf9-1ff0-42ef-abc6-631304868336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba061019-9730-47f9-9dcc-90817beeefa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2b3b0b-d9cb-4142-942c-4e747a9ddad6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9ca0b9-20b4-4a60-8f07-ad2c4c7e016d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a74d57-77fa-435a-b385-5f786b39d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20a3d9-0ad4-41cf-8f54-d3c5d84b989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d1a287-8730-4d6f-b3e1-8559ef222778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e8f06-3225-4069-ae2d-ad17a0776f1b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e105b942-44a9-493b-8a60-70038b17634e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e24e52-b1ba-48a8-b39f-638ca3a97543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e14ec6-78b5-4b85-a1a1-7b0cbdf9a76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5438439b-ecdf-4980-91d1-e54dc0c716c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03158258-4f56-4230-8dd0-555552531527",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079c27d2-533a-45e4-88f0-7ac7fcd737f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851734f0-e062-4d27-8962-ab56b3b4ecc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19631574-bad0-4b56-b72d-45f3c8fa1140",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca106af2-a487-4ff4-a4b8-fb0c8e1caaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac108647-4598-4d46-9889-a8f5183e92ca",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adbfc95-11a5-409a-96de-40bff38433d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236b2de4-40ef-4c79-995f-f6dceb4ada0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919c2286-9003-4b0f-b588-af5430589808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d4b00b-bbe0-40db-8b76-3f8514b7f4b6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea9ea3f8-e04e-4552-b712-5a40660b5c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fafb36c-488e-49e7-83b2-a96868cee660"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e1ae919-9b9d-4bfd-a67e-06cce505a852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "229fa909-8518-4bfa-ba87-f158fc74dcc5"
                    }
                  }
                ]
              },
              {
                "id": "f985f6be-e925-4acf-87cc-a1b2494da966",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9ccd2d1-f9de-4148-b724-fa69ef806936",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed86b22-67bd-4a22-882e-25aa99efa807",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30efa715-c7cd-4baf-b389-8c9449d68e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92067aef-7e54-4875-821a-11ed62583bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "705d8e38-595a-4a70-aa3d-084daa65deaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945d4299-6ce9-41cb-841d-aafb699bf2e5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7965348-1a7c-4f21-9ceb-5a4e46e6e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d55c2f26-6150-40af-bba4-fdcea2b30dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee896e6-2d9a-4a2e-8b3d-e301d33f63b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "419215c1-21d4-4c1a-9519-ea7f4708e4fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a9f422-b1d8-4318-a091-af512df15e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f464033b-ed60-4dac-9fad-8d30fbbee503"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0767aa19-604d-4f45-8b12-de7658df7a0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d3c5ef7-faff-42e5-88e1-fc93d90ec6ee"
                    }
                  }
                ]
              },
              {
                "id": "8eeeca72-7151-4c05-8f3e-21c475375169",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4276a5aa-a123-458f-bc6a-f38a1e438859",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba22330-18b2-4c7a-a57b-62eb92b45c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6953eb5f-2706-40ed-b1f6-0f0935f4837a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c9a02e-71b5-48f6-a27a-1950c6a46d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489343de-01a6-427e-adcd-8be9f4c003a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ade96558-c662-47df-a18d-fb0aeed71120",
            "name": "Positive Testing",
            "item": [
              {
                "id": "926636eb-e3af-4584-b045-d9d79c597ff9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "118743f1-2edf-48df-a1b3-106278a40d49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c6294cd-0bf4-4dcb-9135-f10f9d31e657"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fca12dc-33db-4bc9-8535-648670255ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b425e12b-0b58-48f2-8f1f-3421b9514013"
                    }
                  }
                ]
              },
              {
                "id": "55ecfd37-18b2-4daa-8a1f-2b90a49d1f13",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11be60f2-54ef-4be1-8092-334a101e46c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31550ee4-d541-4e2f-b789-2b9b7f38383a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db43448d-34b3-4395-b782-bf67ddc88dfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6398940a-84b1-4518-9991-3ced4836ef58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9bf8fd9-4542-499c-bddc-3525dadfcfc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c5e5f462-5322-4fd0-9674-006f8618990b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4daf6986-3040-42ae-95c3-abd6077099bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74c5806c-342c-4e3f-8913-489b09ad63ee"
            }
          }
        ]
      },
      {
        "id": "749dcdf1-3cae-4490-ab8d-3706980dc5c1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3535130d-3c83-4a27-a764-c005561b1b37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4301697-11b8-444f-965d-2695e10012c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f727791-a534-4346-a27f-ea0370a781d2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845aa5d5-5a1e-4452-9953-8af63271df09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83ae6133-541b-4406-9987-85937ce24a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a8617e-acdb-404e-8f3a-031690651f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "168d5718-45a0-4bf6-aaea-09714a0c8feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8308ae-3348-4dfc-8373-f443fd9a04d8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46c2985-5c70-4b6a-826c-50ac72278f3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09a991aa-41f0-470b-9416-f71143d0525b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c770afa-9e4b-4b8f-816f-5b96d0bc1303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea43f3b-17fb-415b-9349-39f1fb082e11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffdff2ea-3c7a-4529-8e9b-0de9d69bfe93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b0155ed-acde-4166-8876-5e5c695e0619"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6845796e-cf3f-4844-8a07-6cbc5329a547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a35a0041-51e3-42ff-9bbc-0eb18e1fb1eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80286792-1d57-41d7-88e1-9210f6db3a8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f023b16f-156d-4744-92be-c7bdb913a22f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd6b7393-c8f1-482c-877a-94a2e4efa422",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ca2b7ca-a197-458b-98a9-7e6b6a4221d6"
            }
          }
        ]
      },
      {
        "id": "9ab2af9c-b227-4a1b-a187-fdc0b41021f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "743467ae-a92d-40aa-8acb-e3ee7941485a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c3d271f-4320-40e4-9f1b-cff627ddd16a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c2715e8-b75f-4873-8283-c06ac3e96d4f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95634987-41f6-484d-8ea8-59ad4a58cb79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "13b78858-5cdc-46dc-9e4f-73764707b5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db650894-3969-4c65-93be-9de0f6c353a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79f5e447-8db8-48a2-bfdf-722e43b2d91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee537a4-e4fb-47ff-ae56-f16d47b55783",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abc78aa-cb66-4f11-9f80-2c2f57e84a71",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d10f6fb-bec8-4cf5-a0b6-5be285b840f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6d3903-07df-4b83-afc1-407b2c197e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1fc2df6-ca72-44de-b02e-e6aeb7363dee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d405c59-64c0-4beb-8c06-27a385997dbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26fd413-1aaf-4f26-b6c6-5e7c387fe645"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09e69233-3268-4da5-8881-9464df0b3255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396a4097-1065-42f9-9234-7ff49ed3831c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cc9cb19-74fd-43a1-8e80-3a5e0c5da507",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a3cce305-3399-4696-9767-a645ef8aad26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ec9d8e-1cd3-427d-8102-b835ad143e5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf0b0a4a-8b2d-4e8e-9f4f-34ce51cf9efc"
            }
          }
        ]
      },
      {
        "id": "89ac7fea-9673-486d-9889-cd076a4aed72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "042e133c-69f9-4e35-b622-62d41ffbf6ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "635cf6fc-3aa8-4190-8b48-a3d14d773049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a42fb143-5549-4c30-8894-587dc1d76326",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc3d76a-49b7-4db1-846e-d93c1efeb9c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "92fc64b0-381c-4983-97b6-39c83aa0ada2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8c467f-cede-486e-9507-43d7354d3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57de7e9f-1e8a-46d4-ae8b-5c05e4ecf750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66067bf3-507e-447a-8c0c-241fa40ef262",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145fd80-c6fe-498d-b791-9ead5b8f4dfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9c4dd36f-9ea5-47d9-ae07-fde75706e4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74903f55-d461-4add-84b3-31a001df3584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "852dc55f-70cd-4c48-94a1-ff54fd105b9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c298821a-acf5-4811-b793-a46d62368c6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d77dffc-dafd-4f0a-b8a7-4cdf0bfc788a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a61923d-74f0-497a-83cd-869a4fdad84f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6f7fb08-6c3b-4202-99d4-d3a42205494d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f04cd02-c86a-4f2d-9d53-d2a89cf8f117",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "df72c0af-5747-44c3-8098-8aae5658f388"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da7dff7f-a0e8-4fc2-90b2-c54c4d9413ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "930ac3c0-7ca1-4b86-bd68-ec55303a60c0"
            }
          }
        ]
      },
      {
        "id": "ee91da8c-a75a-4af8-843a-c92dd76d352d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0931b9ae-2d26-4a1b-8567-6c3db465bcfb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d23ab0f-28c6-4a17-a1c2-36a9fd33d823",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "44793b52-5d32-4f15-a010-06bb037b7768",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15dd9d3b-8825-4427-b4a7-6e6662175157",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcad4a20-c0cb-42ca-895b-989a39ea4257",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 569.0267175572519,
      "responseMin": 21,
      "responseMax": 6188,
      "responseSd": 715.4639951065373,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674953019903,
      "completed": 1674953179493
    },
    "executions": [
      {
        "id": "2c06eaaa-19a3-46ca-bda7-20efd3120541",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b0c02c18-364c-49af-baf6-d312628e48ed",
          "httpRequestId": "9dddb25c-b96e-497e-adf7-d935401e1ca6"
        },
        "item": {
          "id": "2c06eaaa-19a3-46ca-bda7-20efd3120541",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7749ede0-ede8-4496-8731-c9ae127a10ce",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "de9c6215-e1d2-4722-bb04-1e134d23aaf5",
        "cursor": {
          "ref": "4bbd41af-f667-434e-960a-1f305c365df5",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "397e7891-4140-47a7-bfe5-d72aaf16f3f6"
        },
        "item": {
          "id": "de9c6215-e1d2-4722-bb04-1e134d23aaf5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c8c97ca2-78a0-4c92-b028-0662e1da1db1",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "fcf1793c-0367-4663-9e63-80aec6d91620",
        "cursor": {
          "ref": "f2692b8b-b828-4218-81b3-e2d51e8ae7fd",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6a4eaaca-4ad4-4ed7-9dcf-a4e9ed8fedcf"
        },
        "item": {
          "id": "fcf1793c-0367-4663-9e63-80aec6d91620",
          "name": "did_json"
        },
        "response": {
          "id": "3ab99c77-8430-47c3-bdd3-f68761ded24b",
          "status": "OK",
          "code": 200,
          "responseTime": 522,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04c6e73-3297-4353-8f39-f35f8812a4c0",
        "cursor": {
          "ref": "1c2af92a-1d91-4548-98df-afba1253b8f1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ec9de06-73b2-4e95-9a9b-479933b5e5b3"
        },
        "item": {
          "id": "e04c6e73-3297-4353-8f39-f35f8812a4c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc48438b-62d0-42b5-8a58-c28a1ff8b084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04c6e73-3297-4353-8f39-f35f8812a4c0",
        "cursor": {
          "ref": "1c2af92a-1d91-4548-98df-afba1253b8f1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ec9de06-73b2-4e95-9a9b-479933b5e5b3"
        },
        "item": {
          "id": "e04c6e73-3297-4353-8f39-f35f8812a4c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc48438b-62d0-42b5-8a58-c28a1ff8b084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ddde83-f054-43e6-b5f1-616e4dfdd37e",
        "cursor": {
          "ref": "aa8535c8-d603-4bf8-b749-f44ef65f3042",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bdbbbee5-6e2e-406b-b170-661c1285def3"
        },
        "item": {
          "id": "00ddde83-f054-43e6-b5f1-616e4dfdd37e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "41d1a072-ac55-4f4f-9ebb-9a77ef68fd5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 573,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d20f69-366a-4029-bda9-25e864a6c740",
        "cursor": {
          "ref": "686f85bb-7a22-43b0-a34f-1222880bc3b2",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9255098d-7617-4496-a40e-6633965319a2"
        },
        "item": {
          "id": "f9d20f69-366a-4029-bda9-25e864a6c740",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f5b08a3-641c-4ede-a9fa-e626b9276afb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 520,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435beb74-946a-42ba-9dc8-bc14fb44a678",
        "cursor": {
          "ref": "40d86ccd-d70c-4a72-9e19-e37d95cbaa11",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd5c6ba8-3930-4152-8504-df0b08365615"
        },
        "item": {
          "id": "435beb74-946a-42ba-9dc8-bc14fb44a678",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4889e14d-ace1-4436-8c84-8343775eaef6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5394951b-7d58-468b-828a-6fc6c5df83f3",
        "cursor": {
          "ref": "a5c9f3a6-2254-414d-8fa9-8987fd33d8ba",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab1f7777-d84a-43bb-a551-30bef3d0ba9d"
        },
        "item": {
          "id": "5394951b-7d58-468b-828a-6fc6c5df83f3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5d0d2d74-1894-46f8-a2ba-4992fd02d5a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5394951b-7d58-468b-828a-6fc6c5df83f3",
        "cursor": {
          "ref": "a5c9f3a6-2254-414d-8fa9-8987fd33d8ba",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab1f7777-d84a-43bb-a551-30bef3d0ba9d"
        },
        "item": {
          "id": "5394951b-7d58-468b-828a-6fc6c5df83f3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5d0d2d74-1894-46f8-a2ba-4992fd02d5a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a343a-7e4a-4834-b35a-012c5eaec9b9",
        "cursor": {
          "ref": "c5d284f1-fd14-4ce8-9180-3d99383057cd",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fe8f6d13-97d5-4165-94b7-adb0fba73f7e"
        },
        "item": {
          "id": "5d6a343a-7e4a-4834-b35a-012c5eaec9b9",
          "name": "identifiers"
        },
        "response": {
          "id": "60796008-6846-48f1-a9d1-ebec89813a99",
          "status": "OK",
          "code": 200,
          "responseTime": 733,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2db4fc-0148-49e8-b881-108a4c7d679c",
        "cursor": {
          "ref": "1a7f2ba7-d88b-4616-9095-75f5fe1ddc99",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "692720a8-3443-46e5-831f-efdc039c5643"
        },
        "item": {
          "id": "af2db4fc-0148-49e8-b881-108a4c7d679c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "649d8aa9-eef8-4b85-8581-99e05af765f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2db4fc-0148-49e8-b881-108a4c7d679c",
        "cursor": {
          "ref": "1a7f2ba7-d88b-4616-9095-75f5fe1ddc99",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "692720a8-3443-46e5-831f-efdc039c5643"
        },
        "item": {
          "id": "af2db4fc-0148-49e8-b881-108a4c7d679c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "649d8aa9-eef8-4b85-8581-99e05af765f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937cefa2-6482-4a0f-b16f-0d5c68f6ee54",
        "cursor": {
          "ref": "0de1a8be-2acb-42eb-be5b-8a4db4f3595e",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d4852d2d-6036-4265-a8ed-c39f842d2ce4"
        },
        "item": {
          "id": "937cefa2-6482-4a0f-b16f-0d5c68f6ee54",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "57d6cfcc-0f9b-41e1-b3e6-c164491f0b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c69ace-ab31-4ac5-a7bd-bce86f0c19b1",
        "cursor": {
          "ref": "85cee12b-0bdc-4e5f-86de-3bab101b764c",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9aefb60d-8e31-47ac-9d01-096a7a8513c4"
        },
        "item": {
          "id": "40c69ace-ab31-4ac5-a7bd-bce86f0c19b1",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "cf3ac9e1-fc78-4f77-83e8-f8b90667b98b",
          "status": "Created",
          "code": 201,
          "responseTime": 2183,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "9c34762b-7a0e-41c7-afd3-c7e6721b8f87",
        "cursor": {
          "ref": "34c10f05-2d28-4a51-983c-cb41ff807111",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "15feeb02-13d1-4caa-bcfc-c52f7b189a76"
        },
        "item": {
          "id": "9c34762b-7a0e-41c7-afd3-c7e6721b8f87",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "36e570dd-9b23-48bb-b718-c50a1bee7944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf30fc9-d461-4284-a163-4c8b7fc3a250",
        "cursor": {
          "ref": "ddafaf9d-1406-4c04-876a-06ddd29b486e",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "529d20a2-8a2a-44f2-a7ad-517bad25836e"
        },
        "item": {
          "id": "fdf30fc9-d461-4284-a163-4c8b7fc3a250",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6aab082-cf46-40c7-bf8e-6ddc79f9c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7596e656-ad5c-43a4-9b29-24c72471642a",
        "cursor": {
          "ref": "5a5ffee1-2315-4246-8b0d-7a91c7433287",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa96454e-47a6-4d8e-bf6c-1326da78418e"
        },
        "item": {
          "id": "7596e656-ad5c-43a4-9b29-24c72471642a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8637bb72-9078-491a-b3ba-94f3dc6629dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d276e86-035c-42df-8063-f75039531d6b",
        "cursor": {
          "ref": "08c2220d-fd65-406e-a58d-65b8f75768d4",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bee8b7e5-fb69-457f-922f-1b5163397e86"
        },
        "item": {
          "id": "0d276e86-035c-42df-8063-f75039531d6b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ec50222d-13c9-4eb6-8360-a91f32909f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba2673e-0393-403c-8532-b1e9448817d2",
        "cursor": {
          "ref": "20f446b8-9085-419e-a8a4-71962cc29dc7",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "abd7672c-8f8b-472c-8fea-edbea8a059ce"
        },
        "item": {
          "id": "fba2673e-0393-403c-8532-b1e9448817d2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd3b97de-6784-4941-936a-67825e679bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51a508b-f2a2-4ac2-b38b-eb6b43f58c03",
        "cursor": {
          "ref": "5cb4bef0-3100-427a-b3b5-fb40bff6ee43",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f2add45-b3f5-490a-b705-b057b9e96a87"
        },
        "item": {
          "id": "f51a508b-f2a2-4ac2-b38b-eb6b43f58c03",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7560ecde-c6f9-42ea-8cdd-2641eafa3e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708f294-1a7e-4e2f-85f4-3461399d1e5b",
        "cursor": {
          "ref": "46d0aeae-b7f0-4702-ba45-ce93dca9f3d1",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "db610a59-9528-4754-9aef-62129ccda5e3"
        },
        "item": {
          "id": "c708f294-1a7e-4e2f-85f4-3461399d1e5b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4c4bda4d-3f37-45a3-b778-baee660e0edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5676f5-8b44-4998-b9d9-4f382424837c",
        "cursor": {
          "ref": "b7324c0c-65ef-453f-8d7d-c09ab5892032",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d2e8ae6f-33e8-437f-aa94-9cb131398501"
        },
        "item": {
          "id": "9d5676f5-8b44-4998-b9d9-4f382424837c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ef76603f-b3ae-4ffe-98b1-5e50915a1684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aabbf4-90cf-46d2-a871-4c8cf732c54c",
        "cursor": {
          "ref": "5d3782ae-649e-41d8-813d-e2fbe7b7fae5",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8e97e125-e67a-46c2-b0aa-6736003ec0fa"
        },
        "item": {
          "id": "f7aabbf4-90cf-46d2-a871-4c8cf732c54c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "16e0ce1a-8248-432f-ad74-f2d5dcb17553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17376f4f-7792-4881-a0f0-7b806ee89785",
        "cursor": {
          "ref": "21c974f3-0e38-4218-8216-41a6fc8573e4",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce649b44-1f94-401c-8ea9-2a3577dcf348"
        },
        "item": {
          "id": "17376f4f-7792-4881-a0f0-7b806ee89785",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e06b5d1-3f02-4346-ad1b-3edcc74b7504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d31626-fb76-4cfe-ad37-1be186fec10d",
        "cursor": {
          "ref": "5651f595-04f6-4659-ad94-34c29b1cade7",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0db58e34-ce70-4db6-a11c-2651b7859e55"
        },
        "item": {
          "id": "38d31626-fb76-4cfe-ad37-1be186fec10d",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "db6fb89e-cb30-4641-96cd-ff12d84fa9e2",
          "status": "Created",
          "code": 201,
          "responseTime": 4788,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "92c2ca3e-0955-4f0f-91ae-248ec74e64fc",
        "cursor": {
          "ref": "d84f9f52-d874-4cc8-a5e1-9d5826898d3b",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cae3aa5f-463b-4c9c-8571-4a8b65aa19ae"
        },
        "item": {
          "id": "92c2ca3e-0955-4f0f-91ae-248ec74e64fc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "712b78b2-6b2a-4dfe-a585-0f102f78d33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07887508-a2a8-42bc-90e7-e25be07a2ea0",
        "cursor": {
          "ref": "9bbf6496-9535-4e41-854e-fc4656efe03d",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48f24663-29e4-42b6-b91d-75d45ecd3d15"
        },
        "item": {
          "id": "07887508-a2a8-42bc-90e7-e25be07a2ea0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5a370a50-ece5-4148-aa5e-77abf2f9a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0126a778-bed0-4e7c-aa40-93d6004d6643",
        "cursor": {
          "ref": "febfb3ed-f97e-4501-a023-9462a61dfc4c",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f866fd9d-31e5-4279-89d2-bae58c7f8c61"
        },
        "item": {
          "id": "0126a778-bed0-4e7c-aa40-93d6004d6643",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b448469a-defe-4532-89af-f1a87f1e0d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab85a2-e02a-4be0-b29e-3d1ba8a3f794",
        "cursor": {
          "ref": "b5736dc9-f3f0-44ad-90d0-99bedc746fba",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "00e2f948-8010-4784-a271-09128c7cc916"
        },
        "item": {
          "id": "8aab85a2-e02a-4be0-b29e-3d1ba8a3f794",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7db23419-9368-4c4d-89b8-9a732cfa58fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843ed4df-2e30-460a-a969-799d3d25bebf",
        "cursor": {
          "ref": "66b38d55-91d8-48fb-bddb-c348a3c10121",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0f66492d-7d00-414c-a44f-ae9abf2e7c75"
        },
        "item": {
          "id": "843ed4df-2e30-460a-a969-799d3d25bebf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "29a3e8d9-f9d0-4585-81d5-b9c01c8fa634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcce9cd-61ed-4331-a57c-255464846b10",
        "cursor": {
          "ref": "b8dc6678-ec52-4da7-90eb-20909e1435fe",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0237fdd2-1767-4275-9691-0f8fa36bc323"
        },
        "item": {
          "id": "fdcce9cd-61ed-4331-a57c-255464846b10",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15aa48ee-3636-439a-aec9-e2ed401f5f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0535c5f-6261-4fba-aaca-f1bee0b33939",
        "cursor": {
          "ref": "bae0037b-1b67-4730-9944-20376ee74059",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4654452e-9234-4d64-81c5-5631f192b6ab"
        },
        "item": {
          "id": "a0535c5f-6261-4fba-aaca-f1bee0b33939",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "68edc259-c8c0-4d2f-9619-17828c8b5598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280efcbf-f2c1-44b8-9195-f5ec84e0e5d0",
        "cursor": {
          "ref": "373682d1-c41d-43b0-bdd0-d7bb8682188d",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "62cc83bf-3eba-431b-bde4-e16585b6af31"
        },
        "item": {
          "id": "280efcbf-f2c1-44b8-9195-f5ec84e0e5d0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ffe241b7-8d70-4fe6-8984-6be24d8d19e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c240d2-bcdf-4a7a-af43-7c9ad873f4a4",
        "cursor": {
          "ref": "dd3b4cb3-8f44-4e2a-9ec4-3e04236f4ef4",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b467c669-e07a-4900-b467-fb31a6842298"
        },
        "item": {
          "id": "16c240d2-bcdf-4a7a-af43-7c9ad873f4a4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef86e46b-70bf-4f66-8a9d-4e13c881c0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57b21cd-b6be-4b07-91d2-4f8c1879790b",
        "cursor": {
          "ref": "7b20a647-6310-4c49-979d-81833ed2e32d",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8dd2c3c1-2c9d-4532-b987-9cb470d83c38"
        },
        "item": {
          "id": "e57b21cd-b6be-4b07-91d2-4f8c1879790b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "324e4b82-cdfc-43d5-8364-28b169e41a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abbdacf-2737-4ce9-84d6-341af366c33a",
        "cursor": {
          "ref": "c018dde4-d36d-490a-8f9a-9d939e35ee4f",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60b827d9-b608-47cd-9779-40989ebc29f8"
        },
        "item": {
          "id": "2abbdacf-2737-4ce9-84d6-341af366c33a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a16ac767-a863-49f1-8e0d-89028bbd48d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18c5ba-0b03-41d5-b28c-007dbe552906",
        "cursor": {
          "ref": "798b5d6e-b503-469b-ac2f-906e4c689efe",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "532c8b08-a3f0-4768-be3e-8205b16e7a9e"
        },
        "item": {
          "id": "ca18c5ba-0b03-41d5-b28c-007dbe552906",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "75bc29e5-cdc4-441b-ab8f-8fa582d2a50c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2281,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "1ce9e4c4-5914-475f-8647-bee710a444a5",
        "cursor": {
          "ref": "3d4e3343-bb24-4eb5-8471-d8c1ad46a7ec",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dc6e3cc7-1a7c-4f7d-b02f-5aff6fb2a6d4"
        },
        "item": {
          "id": "1ce9e4c4-5914-475f-8647-bee710a444a5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "996ab130-1263-4909-ab5a-8ad4865478c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7df1c9-1ace-4f75-8685-5ef1e7d02f24",
        "cursor": {
          "ref": "c662abae-c264-478b-bc0a-c078735aa160",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "76619266-9dfa-485a-8fbb-1171028eae5f"
        },
        "item": {
          "id": "aa7df1c9-1ace-4f75-8685-5ef1e7d02f24",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "36988949-00cc-4f48-8aff-71d5a5333bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b96341e-1877-4bed-8f7b-d518279255f7",
        "cursor": {
          "ref": "dc35ceba-2a7f-4146-ad7c-27a6fd943156",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c361e401-411e-4b2e-8ea8-db976a5d7d6e"
        },
        "item": {
          "id": "4b96341e-1877-4bed-8f7b-d518279255f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "268d21af-81a9-4006-83c9-b4f53cbd53a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f6b42b-25d6-4eab-8a8b-60fc68ab3e8e",
        "cursor": {
          "ref": "1eaedfdd-a4b2-456e-88d5-648d2c7875aa",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f757747b-6b4a-4962-8ef0-06b36d4340de"
        },
        "item": {
          "id": "79f6b42b-25d6-4eab-8a8b-60fc68ab3e8e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8f2bea7c-d426-4ee5-a820-67e89b31bb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d118d48-1e9d-4299-891d-5da28b2804ca",
        "cursor": {
          "ref": "e3f36de3-ede0-4c39-8009-413ae447a1b0",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e182ed5d-2ea1-4d73-9691-f864bbb33f4f"
        },
        "item": {
          "id": "3d118d48-1e9d-4299-891d-5da28b2804ca",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2991561c-3495-45bf-a24a-ede61bcb6bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd70926-4b80-4b74-8fe5-fbc2662eb26d",
        "cursor": {
          "ref": "c9a36332-7515-4016-9139-4c06c068b3ba",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fb8c2e73-7d14-49eb-a5c1-1568054d658f"
        },
        "item": {
          "id": "8cd70926-4b80-4b74-8fe5-fbc2662eb26d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a54534bb-4c4e-4714-86cb-64a597b7d9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2083b77c-4a2e-4a08-b187-52ecf38e32ff",
        "cursor": {
          "ref": "275a6c59-fa1a-43f0-ab3a-efeef45f75f6",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0c311f8-1093-4ae9-81d9-7e54585f024d"
        },
        "item": {
          "id": "2083b77c-4a2e-4a08-b187-52ecf38e32ff",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "09c57389-0d58-4b3c-8876-347b5cf09b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a6e85-8857-4df8-a274-c477683502cf",
        "cursor": {
          "ref": "968eaa08-38f3-4296-ad88-04e9312860e7",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dfa46255-79ce-41d9-a6dc-66f3b6dd5132"
        },
        "item": {
          "id": "649a6e85-8857-4df8-a274-c477683502cf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "58eec970-6398-4688-86a9-46a25a0a1864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb3c3f0-1cf5-48e9-b093-cff53d0ae5da",
        "cursor": {
          "ref": "ae0e8fab-f801-4e4d-a370-64bf7ce5875f",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3d06da1c-bca8-47b6-a923-37d93b1bcf68"
        },
        "item": {
          "id": "5eb3c3f0-1cf5-48e9-b093-cff53d0ae5da",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "20680f3f-31a9-491e-9212-cde1e9283c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46655454-9fc3-4190-9936-4dcf003aff93",
        "cursor": {
          "ref": "626fabfd-9584-42b2-9467-13cd419c6f83",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6256230f-1d09-4e73-84d9-15dbf56b0181"
        },
        "item": {
          "id": "46655454-9fc3-4190-9936-4dcf003aff93",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f50f6df-3d41-4e2b-a678-212039ba56ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d971a-d761-4fc2-b0c9-2aa38569c9e2",
        "cursor": {
          "ref": "4c66c0fd-1c2a-4b70-bbc0-ba413a3ed566",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "00ad419b-923d-4ea6-b516-b8335be933e4"
        },
        "item": {
          "id": "866d971a-d761-4fc2-b0c9-2aa38569c9e2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7af07b5f-e0ed-4c0c-8213-89a17dd2c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613e78ba-0036-41e3-96d3-40878c2da09a",
        "cursor": {
          "ref": "f98d0a2e-6b9b-4730-8a0b-707601a4c6f8",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7312f7bd-6256-49f9-8187-4107487c63e5"
        },
        "item": {
          "id": "613e78ba-0036-41e3-96d3-40878c2da09a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ef7b0f90-49c0-413c-93f3-7f60dd407fce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 928,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d78bc8d-d4b3-4c56-a382-c039b4364a4d",
        "cursor": {
          "ref": "33ceda2d-ce01-447c-ab83-dd45c9b59896",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3cb3e75-5686-4ce1-bba7-ce840d52256b"
        },
        "item": {
          "id": "8d78bc8d-d4b3-4c56-a382-c039b4364a4d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e6600c92-8cb3-4b00-88a1-05d76bc30a9d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 752,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "3972d912-1678-424b-9817-021a20b2a2b5",
        "cursor": {
          "ref": "7639c116-3314-44f4-b68f-6c0a12ebbca7",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dea34204-7911-4482-9d0d-cd83c716a9e6"
        },
        "item": {
          "id": "3972d912-1678-424b-9817-021a20b2a2b5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00c8b369-c19e-4965-a405-c00883d52eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4744d1e0-cb2c-4b5a-9f7d-452bd92b3eb5",
        "cursor": {
          "ref": "fe1781ee-cca1-45ab-ae2b-e65326725503",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "06d88fa0-8c92-4385-92a9-bfa06c7230f1"
        },
        "item": {
          "id": "4744d1e0-cb2c-4b5a-9f7d-452bd92b3eb5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f305344-6f25-429c-993e-dd622a50051d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e10c8-45c1-4228-ba7c-e95f0d7b2d29",
        "cursor": {
          "ref": "6a202345-ac50-4e47-a2b8-5f7807b66906",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "67299b3e-7307-4240-945f-0beff0c7764a"
        },
        "item": {
          "id": "367e10c8-45c1-4228-ba7c-e95f0d7b2d29",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c566cba-2ce9-42c3-b502-c82cce8a8c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9ed30c-943a-4060-8e00-f087252bf712",
        "cursor": {
          "ref": "8ad129d4-1093-45ec-bb0b-3dcfc80668b8",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cbd26a69-5eea-4708-b823-240e6b87aa62"
        },
        "item": {
          "id": "4c9ed30c-943a-4060-8e00-f087252bf712",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fbf2ef5f-50d8-4722-9132-eb44d9607cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061be9c4-661b-412f-b7f6-227d7955a818",
        "cursor": {
          "ref": "0ad8a30e-5d2c-4fba-b692-d728e4249b4b",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a21c111f-e144-4a40-96cf-a537998e687e"
        },
        "item": {
          "id": "061be9c4-661b-412f-b7f6-227d7955a818",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4f76ff5d-80d7-421d-9f5e-d962be852be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd79a3b-11f2-46ac-864d-c81598891656",
        "cursor": {
          "ref": "fdba2c35-3038-439f-b5b6-991b7eca7c08",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7186c61d-09d5-43e1-8cc0-f7959b6b9173"
        },
        "item": {
          "id": "6fd79a3b-11f2-46ac-864d-c81598891656",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c4fbaaf4-d458-4207-aa77-fc3a0e7afa9a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 560,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64931da-f146-4c89-b86e-7abc06395287",
        "cursor": {
          "ref": "053b8e9d-1dbe-42e7-9610-ad0efee0784e",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "171dd9f0-b03f-4cde-806d-a30a651d4555"
        },
        "item": {
          "id": "a64931da-f146-4c89-b86e-7abc06395287",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "701f86b2-54a3-4d0b-897d-7a9134328628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a899125-63d8-401a-ac4a-27688a1ca3c9",
        "cursor": {
          "ref": "b93efe8d-6c3c-4754-95d8-78ac06927efe",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "be312359-f276-44e7-ac67-dcac04aebad9"
        },
        "item": {
          "id": "7a899125-63d8-401a-ac4a-27688a1ca3c9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "40b749d5-bfca-48ad-94f9-ab8683ec8aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97b0456-bf35-4d9e-8379-4e2f8f669c46",
        "cursor": {
          "ref": "88522f82-7a48-40b7-8328-994c19054074",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "47223f12-bfd5-4663-a486-c2e0e81bebef"
        },
        "item": {
          "id": "a97b0456-bf35-4d9e-8379-4e2f8f669c46",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e0b0819b-6412-4774-9242-e41dc3e3b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a6466-e901-441a-b257-a320e22480b0",
        "cursor": {
          "ref": "365d08da-82d1-4970-a5eb-950238b694fd",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb835db4-4775-4063-9498-fd68c1d1816d"
        },
        "item": {
          "id": "435a6466-e901-441a-b257-a320e22480b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1d9cb985-4984-4335-bbb1-7e563c6d3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce2d59d-f063-458d-b0b1-f0b781666610",
        "cursor": {
          "ref": "2aedd349-71e0-4c23-808e-8272178e0c49",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df23b483-c78e-4438-99f9-44cf200ed1c4"
        },
        "item": {
          "id": "cce2d59d-f063-458d-b0b1-f0b781666610",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bf0a7126-1f6e-4628-bb31-816eedc58ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c45188-52bf-439c-a3da-6481850539b7",
        "cursor": {
          "ref": "8fe97e1e-dde1-4875-9b5a-dc525b7329f1",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "89a077a4-0b0c-4657-86f3-2d6cfc0e85c7"
        },
        "item": {
          "id": "a0c45188-52bf-439c-a3da-6481850539b7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "42167f9c-3996-4a1c-a57f-41af7506deff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad95ae2-4078-4d28-9d7f-46d30f742c90",
        "cursor": {
          "ref": "44785b11-dfb1-4554-b67a-adcaa79785c3",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bd171390-3f5e-49bc-b0cb-4544add1d2fc"
        },
        "item": {
          "id": "cad95ae2-4078-4d28-9d7f-46d30f742c90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4805d2a2-cf80-4a09-99a4-faeb24026336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a665750b-accd-458e-9daa-6a329add4ff5",
        "cursor": {
          "ref": "38493d0e-0dbf-4ceb-8d7c-f2aa70ffb69d",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d2af5608-8b6a-463f-a9cb-b21c42b9ffc3"
        },
        "item": {
          "id": "a665750b-accd-458e-9daa-6a329add4ff5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30c8228c-ead3-4961-b23e-0ad9c5e2aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f004e-28c2-4b61-b110-158bac5d09e5",
        "cursor": {
          "ref": "c462b929-32b0-470e-9cb5-92b600c25417",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6218ac5e-a40f-4eb2-a767-6a6eb0d7a52e"
        },
        "item": {
          "id": "269f004e-28c2-4b61-b110-158bac5d09e5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "92e0cb44-b3c3-40c9-a7f3-50becd9023ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccbc43d-93e2-4050-8525-6a3624fef4d4",
        "cursor": {
          "ref": "6897fb9c-38c0-49a2-bc06-815d41d4c516",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "76cffe06-6d5a-4b1b-93a3-4f6469e0f231"
        },
        "item": {
          "id": "1ccbc43d-93e2-4050-8525-6a3624fef4d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e50d70c-7d9e-42e4-a803-d2ef54f02861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3faa890-4378-465b-84fb-4d205f1db2ec",
        "cursor": {
          "ref": "d0fde5ad-d62d-47b0-a10a-1cbd0e66716a",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86768638-a3cf-4952-a93a-11f0267cae2d"
        },
        "item": {
          "id": "b3faa890-4378-465b-84fb-4d205f1db2ec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0537bba4-c79e-4317-af6b-dc6438cd011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46170c6-8383-4746-9693-9f5f2cf165f0",
        "cursor": {
          "ref": "7baa8264-134a-4db9-8499-cb8a713e470c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "290b0fba-e35b-475c-888a-5bc141f48d39"
        },
        "item": {
          "id": "f46170c6-8383-4746-9693-9f5f2cf165f0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "215eb400-4a37-4a64-92db-f45100e6b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb708354-b5f9-4577-9b3a-050f9af18d2a",
        "cursor": {
          "ref": "bed74817-eef3-4d91-85a6-eaf4f5b447e4",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c6128ae4-fad7-42d6-8baf-0b2a47b8cb6f"
        },
        "item": {
          "id": "bb708354-b5f9-4577-9b3a-050f9af18d2a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c360775-9c17-43f1-ba1b-99ab99b25cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e295894-0195-47bc-bdc4-a07b4705678a",
        "cursor": {
          "ref": "d69cf94e-e187-4b31-ab46-5a807bf59daa",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ba0e17a7-828e-4229-9e81-b9c4bceda0bf"
        },
        "item": {
          "id": "5e295894-0195-47bc-bdc4-a07b4705678a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "57ea3e4e-febe-4491-a456-f389f785ace4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4dae8f-b8ae-44a9-b365-d7181d72d540",
        "cursor": {
          "ref": "e63312bc-b0fc-41e6-ab7c-103fb4a2fbd6",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d5b560d7-3655-4504-a2f4-4308646e61d2"
        },
        "item": {
          "id": "0f4dae8f-b8ae-44a9-b365-d7181d72d540",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1d887659-a9e7-4a1c-9e7f-3d3191661b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf7cd5-6f54-44d8-adf7-e8618d2bea86",
        "cursor": {
          "ref": "d8634211-c671-4e2a-8213-f95a7d7057d8",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8e005fde-0eae-4b77-be54-553610a488bb"
        },
        "item": {
          "id": "cbaf7cd5-6f54-44d8-adf7-e8618d2bea86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8c15f1b6-0479-49b2-9fe0-726773014ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca7e6db-0381-4e12-adfc-099b283f9469",
        "cursor": {
          "ref": "629e1ffb-ab9c-4e4c-b09b-07e3bffe231b",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4c084608-d62c-45d2-9e1b-09d8e0ab17e8"
        },
        "item": {
          "id": "fca7e6db-0381-4e12-adfc-099b283f9469",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "76d74e42-c90c-48f4-911e-8b1b1b9d0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7db4874-50f7-4507-acd2-e4fd30d323c3",
        "cursor": {
          "ref": "891e8087-37ff-4585-92a1-c186a69aa692",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "791bc460-c640-4dde-a688-7e98c72bb6d6"
        },
        "item": {
          "id": "a7db4874-50f7-4507-acd2-e4fd30d323c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2f71de2b-e126-4609-86b9-c8cffb1a88d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60739c55-21d4-450d-8d8e-e78cc84bfad1",
        "cursor": {
          "ref": "332a4d7e-f5ec-41a8-ac15-1f5b50075bc9",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "93b0bed5-d2a3-404d-a6fe-e67738d6717c"
        },
        "item": {
          "id": "60739c55-21d4-450d-8d8e-e78cc84bfad1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a3751314-1ce0-42dd-8ab1-d2bb802b96ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1643da8-9c2f-4e71-a2b4-766338625ce7",
        "cursor": {
          "ref": "61c1dd77-f51e-4b79-b742-ba4fd277f8d5",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eaa7b080-f4d8-4945-92e4-0a2320a7820d"
        },
        "item": {
          "id": "d1643da8-9c2f-4e71-a2b4-766338625ce7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8fa5c3f-3e88-4925-8e2b-ef88c30f0ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94d9260-89a9-4dbb-95df-55bbd82d87a6",
        "cursor": {
          "ref": "1bd2246f-eaee-4ba5-bec1-6402c097a093",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "03c0e185-6987-4615-b35b-4b70d40b2e3a"
        },
        "item": {
          "id": "d94d9260-89a9-4dbb-95df-55bbd82d87a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "80c6b1b6-482e-4e48-81d1-1753f9eea4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca52f0-ac4a-409b-965b-d04802fe9278",
        "cursor": {
          "ref": "3ffa929e-4ab6-40d4-a3d3-903e588e42a2",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "877ef374-24dd-45f0-b9da-77ce8d2feac7"
        },
        "item": {
          "id": "e6ca52f0-ac4a-409b-965b-d04802fe9278",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e988b07b-69f2-472f-beb3-8754deb9dc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eeb165-9ea0-4a2c-b093-b1248ffaea5c",
        "cursor": {
          "ref": "8c0bddc6-65d0-4b1c-89b7-7216368072d0",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c14e04c1-c91e-4cfa-baa4-d304933ce5fa"
        },
        "item": {
          "id": "91eeb165-9ea0-4a2c-b093-b1248ffaea5c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c96f86e-65aa-4cd6-bad9-8630911fd7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ef4bc7-f0c8-4c00-8899-e115d88ec682",
        "cursor": {
          "ref": "efc016a7-eeeb-4022-adeb-74eaaefc5692",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc19a279-80a6-4752-9204-02259c4dd5ec"
        },
        "item": {
          "id": "61ef4bc7-f0c8-4c00-8899-e115d88ec682",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f16a14c6-2418-4e06-9c5f-f3c2fc818e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8914d32d-a147-464f-9127-f35e84092bd3",
        "cursor": {
          "ref": "988ca669-8040-4fd5-9e71-9502b518c39b",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "62d38bc2-c7d2-4fdd-b4d3-9927864c4313"
        },
        "item": {
          "id": "8914d32d-a147-464f-9127-f35e84092bd3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9ff8f93c-4544-4a9d-9597-259bff73dfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3da25f-88b2-465b-9880-aadbe0334a96",
        "cursor": {
          "ref": "01d1adc1-23c9-4992-914a-d192158f8761",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5fd39a83-3143-4568-ba77-fd11f9320d24"
        },
        "item": {
          "id": "1e3da25f-88b2-465b-9880-aadbe0334a96",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1cd2cb16-1ea0-4ab7-8106-28db0ad45cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8bf8d-ada3-4a6d-b74c-107f8b7e5d2d",
        "cursor": {
          "ref": "c5f774f9-1f58-41f2-baae-4ee42b0ea2d6",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d727f650-1b57-41e4-a7c7-a346a106491a"
        },
        "item": {
          "id": "f9c8bf8d-ada3-4a6d-b74c-107f8b7e5d2d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cede27cd-f503-47ff-a988-8a10c6340620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ba26c8-a0dd-4ad8-ac11-ea9c52386135",
        "cursor": {
          "ref": "495c15fc-51a1-487a-805d-18e23b022ad4",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d1d11655-1a5f-4d0a-94da-b9f3a4dee5c3"
        },
        "item": {
          "id": "a1ba26c8-a0dd-4ad8-ac11-ea9c52386135",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5c1badf4-7af1-4ee5-a70c-512e9950c0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0f9cc6-c948-4b60-ab78-1baad98f79d6",
        "cursor": {
          "ref": "11b1d4c6-6093-4ef0-9207-b04b081530f8",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5d3d75b5-1b9c-4a35-b76d-8f99a7b3716a"
        },
        "item": {
          "id": "9f0f9cc6-c948-4b60-ab78-1baad98f79d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b855cb9-9806-498b-996f-56001acf8848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e56a259-2445-4699-bbcb-38484124d8bd",
        "cursor": {
          "ref": "a39cc656-7775-44dc-8c8a-da25cc1b8f84",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "55f521c9-45fc-4eeb-8675-cfeb60e2e6df"
        },
        "item": {
          "id": "6e56a259-2445-4699-bbcb-38484124d8bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d5975b79-a79e-41dd-b2ba-3c7650084bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d2e5c8-e102-4991-839d-6c41e36e429b",
        "cursor": {
          "ref": "77f5ba9f-2064-4356-bb8f-3884a0c862d1",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5c733434-73aa-46a1-b01c-f7b72280a7f1"
        },
        "item": {
          "id": "20d2e5c8-e102-4991-839d-6c41e36e429b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0fa4b54e-9f4e-4097-af4b-f799aa940484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df277b87-0d55-4f0f-aa7e-f202706d6c69",
        "cursor": {
          "ref": "a2ba7a8c-ce52-4e77-8d3a-214147b01002",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5179cfc8-e455-436d-882f-c84b60654b5c"
        },
        "item": {
          "id": "df277b87-0d55-4f0f-aa7e-f202706d6c69",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b167bda-6d62-4d62-8138-15f281922033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ac2498-58b4-4a98-8660-a190d3fb6f5e",
        "cursor": {
          "ref": "6385ca62-ee9a-4d97-a9f2-e9f1776d6936",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a9b55c91-3ccf-48c2-8f87-12fe3c2028a9"
        },
        "item": {
          "id": "87ac2498-58b4-4a98-8660-a190d3fb6f5e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6d97616c-d291-40f7-acfc-3b4a5437446b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e176c1-da79-4a76-846c-68c8adfe1740",
        "cursor": {
          "ref": "49e57632-ff54-497c-ad77-b4a5b70a3edd",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31b6406b-5eba-4db3-9b75-9720a5058e01"
        },
        "item": {
          "id": "76e176c1-da79-4a76-846c-68c8adfe1740",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "08618056-9e4f-4cac-b3cb-5ec3838e6d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9d77cb-2581-45da-8726-447ba889b6ed",
        "cursor": {
          "ref": "08cff0b6-c10e-44d3-b894-eb232657b7e6",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "17aaa4af-de72-4e7e-b631-5cd62f5d8e78"
        },
        "item": {
          "id": "9d9d77cb-2581-45da-8726-447ba889b6ed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8eae1597-a28d-4146-bfaf-16946780cc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14968aef-1774-437e-aaa0-6ba5f4b1d760",
        "cursor": {
          "ref": "ebf56dea-7df8-4f63-b572-ca5318793ba3",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3dcc29ac-819f-4ddc-a00a-c038445cb7d8"
        },
        "item": {
          "id": "14968aef-1774-437e-aaa0-6ba5f4b1d760",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55f421d8-c505-4df4-888d-d071652fbb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247c19f3-d874-4c5a-91d0-871c3120026b",
        "cursor": {
          "ref": "b97dc6d2-8c55-480d-95b3-5d151c90e23e",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0667d51a-368c-4396-999c-3b043b6269b3"
        },
        "item": {
          "id": "247c19f3-d874-4c5a-91d0-871c3120026b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4621184e-a44d-4c17-bc3a-cf4faeb5e92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deda4af-b443-45c8-a393-636d432736d6",
        "cursor": {
          "ref": "21d157eb-34f3-422e-b9b7-ab0ad0780b78",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "87dfcc51-a0bf-49e2-a7b6-b5534412a7dc"
        },
        "item": {
          "id": "9deda4af-b443-45c8-a393-636d432736d6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c96ba35-6957-431a-8e46-d4fba0c7a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42241998-116f-4585-9f5b-30473303c96d",
        "cursor": {
          "ref": "30109ec9-f6dc-4ae6-9bb0-4573431902f9",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a062ef44-ed57-4518-adb3-ed9842389c0a"
        },
        "item": {
          "id": "42241998-116f-4585-9f5b-30473303c96d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3a837434-b103-4e1d-9bb0-843569936b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d349642-214c-4a1f-b524-bc9b389a31c5",
        "cursor": {
          "ref": "8b5c6238-969f-4a16-b609-82ded286511d",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "45b076a2-8acd-4592-b63e-ec530edc06fb"
        },
        "item": {
          "id": "1d349642-214c-4a1f-b524-bc9b389a31c5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3cfb2bf4-02d3-4ce6-bba8-5c0a78ed5f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae5e874-ed12-48ac-9453-b015b885949a",
        "cursor": {
          "ref": "091ad6c2-53b4-48b3-b42a-4b33e5947c7c",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b749ee5f-80f3-407e-9fd5-6a69841fc0c4"
        },
        "item": {
          "id": "bae5e874-ed12-48ac-9453-b015b885949a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9c5170dc-4982-4671-ab9f-159cb9f5bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff23866-e82a-49c0-9f5b-f17aa20e9d5d",
        "cursor": {
          "ref": "d76edcfe-abdc-4cea-b54d-5ad125d2c9b7",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8149e1ba-92a0-43d3-b922-758e6c448ac2"
        },
        "item": {
          "id": "bff23866-e82a-49c0-9f5b-f17aa20e9d5d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2748f3bc-1aaf-4e3b-bda0-0740f134e91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89cd013-fb64-44a4-a36c-e5c6d37398c6",
        "cursor": {
          "ref": "a57d9551-88a3-4d65-abfa-e9aa7526677c",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0128687c-39f3-4cf2-a671-c8d6c0ce9345"
        },
        "item": {
          "id": "e89cd013-fb64-44a4-a36c-e5c6d37398c6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e67c18d1-b5b3-4cc9-ba0e-cc1c4645e590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855383c-5f0e-4c53-bf21-d2409cf9609b",
        "cursor": {
          "ref": "c6ba90fc-fe7c-44fc-b4d8-9d0abb179c4d",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "54d2c444-7e80-48c0-ac7b-889cfc3f451b"
        },
        "item": {
          "id": "5855383c-5f0e-4c53-bf21-d2409cf9609b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ecb16963-5f81-4620-9764-3ee00b8e4826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35a95b1-fbfa-493b-8328-52bd6a88b44a",
        "cursor": {
          "ref": "a721b139-7049-4037-8040-4add66ade6e6",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "de841e7c-de35-471d-be66-76ad42d16f35"
        },
        "item": {
          "id": "e35a95b1-fbfa-493b-8328-52bd6a88b44a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "58621621-dcbb-4793-b7db-793cfb519dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc45e0-731f-41f8-ad88-fbd03a1e6bb0",
        "cursor": {
          "ref": "d0876add-3397-464d-8003-3543e2c5c63f",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2507f15c-3617-48df-baf9-ecaf571e8e01"
        },
        "item": {
          "id": "26bc45e0-731f-41f8-ad88-fbd03a1e6bb0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "067c988e-905a-439e-9a24-fe4415f15996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba3ea4-ebc4-46ec-a300-a22f63d851d1",
        "cursor": {
          "ref": "f51cfbb8-b80d-4570-9a95-aaa8f01f8cb0",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "24b6f3b4-60a6-4320-bc72-008ae925488b"
        },
        "item": {
          "id": "c4ba3ea4-ebc4-46ec-a300-a22f63d851d1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "56451209-9f56-4ea6-8f6b-142b65feaadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544ce72-91c5-4dee-a16e-5c019500aece",
        "cursor": {
          "ref": "a2b7e9cf-7944-430f-be44-6ecc27cc6d15",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f88b9c32-ad9a-4363-b319-22d6d63297b7"
        },
        "item": {
          "id": "8544ce72-91c5-4dee-a16e-5c019500aece",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "292ece5b-f233-4425-8e16-f1ac7c848a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70bc8e1-60db-491f-a8d1-e294dc55c8e1",
        "cursor": {
          "ref": "78a2fabb-0f1a-4dbb-8e80-4858cdfb8052",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "21ca547f-364f-4df0-8dc5-fa664ebc5dd9"
        },
        "item": {
          "id": "f70bc8e1-60db-491f-a8d1-e294dc55c8e1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5a08c448-c761-4903-92ac-98569f8e5e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2297c0c-d86f-435b-a399-4466dbf2dd38",
        "cursor": {
          "ref": "0f39919f-a0aa-4f77-ae11-1710356a7982",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2a116990-e343-49bb-9e18-44054fb08d47"
        },
        "item": {
          "id": "d2297c0c-d86f-435b-a399-4466dbf2dd38",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cb991c62-13c3-4785-abae-96bd93b81b87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6922d4bb-1978-490b-9906-aa9a5b4cfbce",
        "cursor": {
          "ref": "dd34a68e-b6f5-4c21-a9a5-2b48d163be95",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0f2f5160-2f46-43d1-81d1-1bec51a5b3ea"
        },
        "item": {
          "id": "6922d4bb-1978-490b-9906-aa9a5b4cfbce",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "027a05ea-8cb1-4e50-81ad-4ba4c6106d7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afa4d9-bfd6-4cb8-b7d9-a3d953d83d37",
        "cursor": {
          "ref": "471e5c6c-24d5-49d8-a023-30b200ac9ffb",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be399e98-3c22-43b6-895b-8a7103399736"
        },
        "item": {
          "id": "f7afa4d9-bfd6-4cb8-b7d9-a3d953d83d37",
          "name": "credentials_issue"
        },
        "response": {
          "id": "53092787-0026-43bf-b214-ecdf8adc92f9",
          "status": "Created",
          "code": 201,
          "responseTime": 4062,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "a9c13d5f-4958-4500-b5ed-f551faa9f8ef",
        "cursor": {
          "ref": "c3dc8e36-633d-409f-a838-54911cde3d3e",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ee537641-9c85-4127-bbb5-b4c001dffdee"
        },
        "item": {
          "id": "a9c13d5f-4958-4500-b5ed-f551faa9f8ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c6085582-a37a-4c32-8f2b-2faf41ff1af2",
          "status": "Created",
          "code": 201,
          "responseTime": 4495,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "f18d5952-318f-4914-ab59-eb2a5699b05d",
        "cursor": {
          "ref": "23b740f4-a508-42a0-a784-2aae4ebcd74f",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0982985c-2a75-4d46-9326-7a55634cbcea"
        },
        "item": {
          "id": "f18d5952-318f-4914-ab59-eb2a5699b05d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "16db0290-2957-4aef-a0bb-044fa721754b",
          "status": "Created",
          "code": 201,
          "responseTime": 3813,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "38fee29a-8c63-4b09-8148-1dcfc5228bad",
        "cursor": {
          "ref": "75d72d93-ecc8-4d90-bdde-74d51d42b0f8",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a14361a1-c660-4f30-8015-28fe9e169612"
        },
        "item": {
          "id": "38fee29a-8c63-4b09-8148-1dcfc5228bad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d6e7850e-3fdb-4327-9705-1527f09ce3e2",
          "status": "Created",
          "code": 201,
          "responseTime": 5432,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "57a7da6a-8cc7-4b76-bf26-df22d09a5c8b",
        "cursor": {
          "ref": "7744e4c1-ebdb-493c-9332-e8dbdc70d085",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86a010fa-85f7-498f-90b7-fdcbae4ce409"
        },
        "item": {
          "id": "57a7da6a-8cc7-4b76-bf26-df22d09a5c8b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a685f502-4092-4037-bd17-21558f0d85ae",
          "status": "Created",
          "code": 201,
          "responseTime": 6188,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "daae072b-53a1-4ec8-a2e8-e0b67b7350a5",
        "cursor": {
          "ref": "d33e0464-68f0-48e9-a7ec-5c14e3582ca5",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "83ae485c-9129-4da9-ae32-b686051d8fca"
        },
        "item": {
          "id": "daae072b-53a1-4ec8-a2e8-e0b67b7350a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2a89125a-2d13-4221-98af-523c3d6650d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daae072b-53a1-4ec8-a2e8-e0b67b7350a5",
        "cursor": {
          "ref": "d33e0464-68f0-48e9-a7ec-5c14e3582ca5",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "83ae485c-9129-4da9-ae32-b686051d8fca"
        },
        "item": {
          "id": "daae072b-53a1-4ec8-a2e8-e0b67b7350a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2a89125a-2d13-4221-98af-523c3d6650d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df1e5f3-ddcd-4794-a082-2e58da16a9e6",
        "cursor": {
          "ref": "a607adae-5f25-4fba-9978-cfee95d2458e",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f2ab1ee8-6e8e-4d39-a451-34e2d74a3428"
        },
        "item": {
          "id": "9df1e5f3-ddcd-4794-a082-2e58da16a9e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "88211b53-e6b7-4d26-b919-614436e90eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934edf4f-b92b-4b84-b503-64efa9429b06",
        "cursor": {
          "ref": "bcd772a5-d1e0-46c7-b7b8-b355fa45ee7e",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "587f7a6c-cdf0-4713-bc25-c490ccbd657b"
        },
        "item": {
          "id": "934edf4f-b92b-4b84-b503-64efa9429b06",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "99f75326-d320-4867-b32f-be889ee37e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd88799b-d33e-48bd-8fdb-08b9073da243",
        "cursor": {
          "ref": "a8bfaa6d-eaf3-4c9a-825c-7b6688d79496",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b8de2938-286b-4633-ab4e-56afa35abc94"
        },
        "item": {
          "id": "bd88799b-d33e-48bd-8fdb-08b9073da243",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c97c079a-e15c-42a7-b825-62a57acca754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c702eec5-aaeb-4c03-9773-209d98d36c4a",
        "cursor": {
          "ref": "cd8bbf10-0218-4edb-ba69-04fe8dc811af",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b087b78-3472-4919-b0a7-ac1680bf5928"
        },
        "item": {
          "id": "c702eec5-aaeb-4c03-9773-209d98d36c4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c73ddb7-0edb-4b51-a783-6cbc8b26fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14a9116-9dc5-494e-8f09-db5b4efb120a",
        "cursor": {
          "ref": "3dd23a06-d86e-4d96-90ab-d49a0625ba3a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "611839ac-c0a6-4531-81ce-89deba82a8c6"
        },
        "item": {
          "id": "e14a9116-9dc5-494e-8f09-db5b4efb120a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8f2fc9b-2f42-4f71-b1ef-87291220fc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6d0ae7-6380-4ba5-b4f2-46409f99e082",
        "cursor": {
          "ref": "97ae5d02-a9ff-497d-93b8-628e97ed696a",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "78e74474-bfc4-478d-ae6b-c5c0d89196a5"
        },
        "item": {
          "id": "ce6d0ae7-6380-4ba5-b4f2-46409f99e082",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3cebd1aa-eb3b-4abf-8413-9eda863bb4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f007870-c9b5-40e1-b033-c6a37c927175",
        "cursor": {
          "ref": "5dfc12bf-051f-499a-b8e8-ed7f22e46fe2",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff73a0cb-62ca-4e90-9795-c609d7eff5ef"
        },
        "item": {
          "id": "2f007870-c9b5-40e1-b033-c6a37c927175",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe592b73-6814-493e-8d37-204c41687ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c8a83-c33b-4b80-acd1-5bc1eab878ab",
        "cursor": {
          "ref": "18e3ef3f-748e-4957-b6f4-4b8b5278f6a5",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ebacbe1-ca69-48b9-ab6e-99323f400369"
        },
        "item": {
          "id": "826c8a83-c33b-4b80-acd1-5bc1eab878ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88775a93-bbb5-433e-b4eb-0532214f868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da71dc8-fe74-4d72-b32c-dbade3748a7d",
        "cursor": {
          "ref": "cb242193-c596-4cfe-ba90-0c43657c0ffc",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2d88abbe-b49e-46a1-9f4d-cdce9f4e7e0b"
        },
        "item": {
          "id": "4da71dc8-fe74-4d72-b32c-dbade3748a7d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46125cd2-954e-4226-93c4-43f11378c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0305ba8-f21e-4315-b1c5-8e53605f5294",
        "cursor": {
          "ref": "d755e89a-ba6a-4303-88a3-7aae0b184a65",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6776dc29-2d0c-4f88-8e88-8bbb483dcd36"
        },
        "item": {
          "id": "d0305ba8-f21e-4315-b1c5-8e53605f5294",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "14f318cc-e0dc-4722-a694-74ecad658d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24f001-bc30-41e6-862d-2407ebf926c8",
        "cursor": {
          "ref": "1d43f238-63f2-4eea-9717-805f73983afa",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "462aa6c3-d293-4954-93e7-8f075cfc90ae"
        },
        "item": {
          "id": "8d24f001-bc30-41e6-862d-2407ebf926c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14cce0bd-27f0-41c8-b77c-9163811ef489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351dfe4-706a-4e05-a6d4-ed145f062ca8",
        "cursor": {
          "ref": "fab741a4-fe5d-4cd3-a472-7888a82630db",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f179da2c-b6bc-452e-b9f5-255a1bfb9904"
        },
        "item": {
          "id": "c351dfe4-706a-4e05-a6d4-ed145f062ca8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ad90cfa6-b587-4af6-af53-872f0940b44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddcbe07-8246-4b9b-ace7-5b6e8da6b4b8",
        "cursor": {
          "ref": "b1688f2a-fe54-4fa1-aec1-2265d19ed07a",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f78a8a96-982e-4740-86fa-56b9f4df6c67"
        },
        "item": {
          "id": "7ddcbe07-8246-4b9b-ace7-5b6e8da6b4b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "edf33213-be63-4c22-b8dc-8b4c5a87bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81637e8-2c8e-4da3-9431-3ecf1dc12a57",
        "cursor": {
          "ref": "b503651e-0433-4dd2-8fe3-3974e57c2d09",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "be8f91ab-0316-4607-bcbb-6f2ef89628a7"
        },
        "item": {
          "id": "d81637e8-2c8e-4da3-9431-3ecf1dc12a57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1193685f-4afd-44e1-83cf-a95d6b9256e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861d5997-a995-496d-99f8-4c919d8a3676",
        "cursor": {
          "ref": "19daab56-5803-44f2-895d-f5119a3396af",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "86e240d0-47ed-4733-822f-99786aa5ab5c"
        },
        "item": {
          "id": "861d5997-a995-496d-99f8-4c919d8a3676",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29d65f20-e59d-4609-9739-bbacf80af20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c6340-65a6-40fa-aac1-be733b17ca84",
        "cursor": {
          "ref": "2d7b86b6-d42e-4cf7-9238-6beea83c9db4",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2dfe4e6c-8838-4fc8-9b34-8382fff4173d"
        },
        "item": {
          "id": "6d2c6340-65a6-40fa-aac1-be733b17ca84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b721fc64-6cfa-4d37-a15f-b42744dbf65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3b3c23-3ab1-4d93-9419-771a16674c77",
        "cursor": {
          "ref": "0a445160-e6ec-40e3-8e5c-74e16298d05e",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ab5ddae-a65e-4f54-90f4-7892eebede81"
        },
        "item": {
          "id": "ad3b3c23-3ab1-4d93-9419-771a16674c77",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "60e69e46-7424-46fa-a7fa-aa56db3e7ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4088f047-a180-49cb-a668-4e4efcbe7a90",
        "cursor": {
          "ref": "d019481f-d00b-4857-a984-08dbf2905e2c",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b83a9661-99b8-4a6e-bcd2-586a54dc141d"
        },
        "item": {
          "id": "4088f047-a180-49cb-a668-4e4efcbe7a90",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4898a73a-0cb2-49f7-894d-abd116bc18a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3455d74-8c64-447b-96c7-896e7ad39454",
        "cursor": {
          "ref": "74c588ab-4304-46d0-b163-c6c03b54fea4",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8e599d49-bd06-479e-96c9-69a240816333"
        },
        "item": {
          "id": "a3455d74-8c64-447b-96c7-896e7ad39454",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f7fa2552-ec25-4d99-bbda-59d003cadaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f8ab3a-b145-419c-8151-f99c198b590e",
        "cursor": {
          "ref": "c772fa3b-ef20-493d-bffe-ea1848837595",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f986d94d-95b4-4d21-8a02-efce2452c4bb"
        },
        "item": {
          "id": "a3f8ab3a-b145-419c-8151-f99c198b590e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25dbac46-d7ac-453b-846b-8aff416a0910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd37c1a9-88b3-4978-aff3-674ebf1155cf",
        "cursor": {
          "ref": "bbd67ab3-ce1d-4d80-8485-5ba6711235c3",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f3c62591-3652-43fe-84f0-8a601846e9cd"
        },
        "item": {
          "id": "bd37c1a9-88b3-4978-aff3-674ebf1155cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "59ad6fc9-2f7f-43bc-8d84-21a43c0e6976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce3bc9f-1200-4a65-9547-047454fb1b18",
        "cursor": {
          "ref": "af8d3fee-613f-4235-8f67-10733bcd7450",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "33645f79-c5a9-42d0-b221-8e14a49a84fc"
        },
        "item": {
          "id": "bce3bc9f-1200-4a65-9547-047454fb1b18",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6cc7e52a-ff22-4c07-8b84-a6b61087d50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89748fc6-e7df-4015-a68b-bf3853042fd4",
        "cursor": {
          "ref": "79575cd3-1edf-45b9-8d50-994a131e660e",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0a5d1833-c4e9-41e3-b373-65f91a8db41c"
        },
        "item": {
          "id": "89748fc6-e7df-4015-a68b-bf3853042fd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "af4d4b43-8c02-4b17-b818-69b6781a4d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe56d3-38d3-4cbf-a0d3-730aff1a9a31",
        "cursor": {
          "ref": "d7a64272-0582-4d64-93a8-59c40915da00",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b4510fa-4e0b-4012-8781-1e5d46d098f6"
        },
        "item": {
          "id": "6abe56d3-38d3-4cbf-a0d3-730aff1a9a31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1654cdd5-cbf8-4a4f-87ad-1ab07e70c5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df51196-45b2-4b2d-a41b-603e2cd07b6d",
        "cursor": {
          "ref": "86257695-f879-4b87-804a-7fc4b2e2c134",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "147100d1-19c2-439d-a2ca-91a4ac6684c3"
        },
        "item": {
          "id": "7df51196-45b2-4b2d-a41b-603e2cd07b6d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe0e3a6d-665c-43c2-a5a5-163a36c5bb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da939d6-f3e3-43db-93ec-a7d173af1bd5",
        "cursor": {
          "ref": "39eaf776-5dbd-4dc4-84c1-46db17be8155",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2a1f0582-0173-46a0-be2b-028dce73b806"
        },
        "item": {
          "id": "5da939d6-f3e3-43db-93ec-a7d173af1bd5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4c11f9b-6433-48c8-aa68-65195cdd9820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49fba1f-9d7d-467b-b590-62fad1069924",
        "cursor": {
          "ref": "35d59380-1ba4-42dc-b624-76c78049aa6a",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c77da015-d642-419c-8835-824a9458ecdd"
        },
        "item": {
          "id": "e49fba1f-9d7d-467b-b590-62fad1069924",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7b96579-1d1d-4978-8823-6164d70748d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae72ef-fc8c-4921-9fca-bdddd0f0a2fb",
        "cursor": {
          "ref": "b51d223d-4487-42e6-897e-39bd6f08daf0",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "250dc762-fd31-435c-b8af-10e6af4e6102"
        },
        "item": {
          "id": "afae72ef-fc8c-4921-9fca-bdddd0f0a2fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1df69d6-0b1a-4a30-b7e0-715ae10ec375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ba8b0-262b-4209-9b04-f3a183a39501",
        "cursor": {
          "ref": "07c865c1-45f3-4664-a208-d8f0be716fe1",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2e307f57-7c53-48b0-a913-3c7e4704d411"
        },
        "item": {
          "id": "319ba8b0-262b-4209-9b04-f3a183a39501",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cbab4667-9144-4d06-890f-1ee4033e66b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6467b0a0-0c1b-4899-81d5-3a1c759af004",
        "cursor": {
          "ref": "442ba29e-26ed-43f6-9eb3-96e2d9cbb583",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e124bf9b-8d65-4334-9e76-4158799b6237"
        },
        "item": {
          "id": "6467b0a0-0c1b-4899-81d5-3a1c759af004",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "046cbd78-de23-4e8b-a386-e09e49c8a8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacc547d-4f56-4c4d-b55a-1fe673e23795",
        "cursor": {
          "ref": "d78f8ec5-3764-43e3-8795-df0a557161ad",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8e81b600-2499-496f-b195-9c9d0f20d81a"
        },
        "item": {
          "id": "dacc547d-4f56-4c4d-b55a-1fe673e23795",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "546d24df-19cc-4786-af9c-7b2f4ca0cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01aa7f18-e217-4738-ab8c-7d56e948cd5e",
        "cursor": {
          "ref": "e3b27904-4097-4ff4-a472-b95ca418a8b5",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2b02971-2b17-4fe7-b744-5aab9eaa0313"
        },
        "item": {
          "id": "01aa7f18-e217-4738-ab8c-7d56e948cd5e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "13ee192c-c9a6-48bd-a6e8-3b16b39d95a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2f171b-558d-4336-97b9-b367af1e4898",
        "cursor": {
          "ref": "4dd5bf43-9301-4cca-96c2-7a9180580ff0",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ea468146-041b-4d2f-a675-965f4bf48cef"
        },
        "item": {
          "id": "ae2f171b-558d-4336-97b9-b367af1e4898",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0fcb9d6d-568d-4758-b39c-e67850e635b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 488,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c4e24f-77e2-4411-8aca-1491d42bc699",
        "cursor": {
          "ref": "02050225-7c57-457c-b50b-79373bd78e82",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cafb1bf4-9a8c-42c5-a207-4f74b7907bd6"
        },
        "item": {
          "id": "98c4e24f-77e2-4411-8aca-1491d42bc699",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e41ceddb-2a63-410c-9e10-1de9eae67c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c4e24f-77e2-4411-8aca-1491d42bc699",
        "cursor": {
          "ref": "02050225-7c57-457c-b50b-79373bd78e82",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cafb1bf4-9a8c-42c5-a207-4f74b7907bd6"
        },
        "item": {
          "id": "98c4e24f-77e2-4411-8aca-1491d42bc699",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e41ceddb-2a63-410c-9e10-1de9eae67c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091aa316-a72c-4405-8399-efbb9fc9ef2b",
        "cursor": {
          "ref": "8707b079-0f01-45fe-bf1a-6e901fbe506d",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "62915a10-6f31-4f6f-ab35-caed223bb9ae"
        },
        "item": {
          "id": "091aa316-a72c-4405-8399-efbb9fc9ef2b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5d94989-0417-43d6-a4b7-4cbe476ea2eb",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "d6eb2f7c-7abb-40a6-92a1-6c52558588c5",
        "cursor": {
          "ref": "edbb330c-52be-4993-81ba-2420ce472a10",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f31b6f54-aeb8-43dd-8de7-d217337c41e5"
        },
        "item": {
          "id": "d6eb2f7c-7abb-40a6-92a1-6c52558588c5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "262855f3-e6cd-4a1e-8631-b13a3b57c557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c7bc11-593e-4051-9f88-692061fc64c1",
        "cursor": {
          "ref": "36e4845b-3ec3-4c06-81a3-9af88f1b2aac",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "27c676ad-c0f6-4af4-b8d8-b9693316ae0c"
        },
        "item": {
          "id": "d4c7bc11-593e-4051-9f88-692061fc64c1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eada3662-8f99-4b04-8b80-c8446fb61df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea14c52-e052-4386-bcbb-cd3727157e28",
        "cursor": {
          "ref": "87cc107c-c723-458b-bdcf-cf34ec0881fb",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c0f68c1e-52a0-44b2-b44d-23299806138d"
        },
        "item": {
          "id": "4ea14c52-e052-4386-bcbb-cd3727157e28",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "472fdc65-d8cc-4287-904e-cb5b390c36a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df80bde9-591c-4df5-ad7a-4da8110fc12c",
        "cursor": {
          "ref": "15d7f6c0-9522-4316-83a2-8069b6620df1",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5d690d1b-623d-4ff1-bf03-f192cf5d8fe5"
        },
        "item": {
          "id": "df80bde9-591c-4df5-ad7a-4da8110fc12c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70dcc57e-94c7-4608-bb51-13296fcbbc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2c3cd1-b2cd-4f81-bd0d-9f591aeb472c",
        "cursor": {
          "ref": "f8076211-b0bd-4bb1-9fb0-404996ac1efd",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "daba8d50-6ab3-45f3-988e-016c01c147c5"
        },
        "item": {
          "id": "fd2c3cd1-b2cd-4f81-bd0d-9f591aeb472c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49eaeb9f-c3e3-4222-9dc6-9ce93bbf406f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2660bb3-253e-499e-8f1a-4c02b6d0b043",
        "cursor": {
          "ref": "28684012-3b45-4c01-8dc3-49649afea746",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d7c0124b-0324-45ea-ba19-7d8ffb0245f3"
        },
        "item": {
          "id": "b2660bb3-253e-499e-8f1a-4c02b6d0b043",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01595953-966e-483b-b28c-fa11d7ec8494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495eaa30-c443-4e2b-b6e2-25e83fa7b089",
        "cursor": {
          "ref": "b7a9498b-65ee-46ca-ac8c-4701ab0f8323",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "86f4c237-9b96-48c7-9d6b-159e5ecd1965"
        },
        "item": {
          "id": "495eaa30-c443-4e2b-b6e2-25e83fa7b089",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5ec6cc64-2fdb-4691-b50a-e81d5cd74ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478270be-c19f-4379-9a39-f5b0ed813de6",
        "cursor": {
          "ref": "41b6cf5f-2633-4d9c-973f-da394cd09ac2",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad1390e7-15a1-4774-b4b8-314e34d129d9"
        },
        "item": {
          "id": "478270be-c19f-4379-9a39-f5b0ed813de6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ea65f05c-8b0e-4152-94a7-42a72071d6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fbb128-6538-4c11-b4de-2f64323c7a71",
        "cursor": {
          "ref": "2c9d76a9-fca8-463f-bdd2-35a3265e3bd2",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f37ccdc-6022-4a5a-91e5-1949f1f699ea"
        },
        "item": {
          "id": "a3fbb128-6538-4c11-b4de-2f64323c7a71",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "872d7b35-45dd-4f47-ad23-652d0537f1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0473937c-7c3a-440e-ad2a-2a7a7974496b",
        "cursor": {
          "ref": "0b298909-4dea-40f5-b43c-22ec1d5edcb7",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1613071c-7411-4acc-8799-8fe3fa31eb18"
        },
        "item": {
          "id": "0473937c-7c3a-440e-ad2a-2a7a7974496b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "54e67fc7-2379-45b9-856f-42bcfd200911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d1ffe2-458a-4943-94a7-647b9f49e0ad",
        "cursor": {
          "ref": "844409c1-e50f-42dd-a569-18b2b84e2998",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6cc2d4bb-a160-49b8-a209-c67d06d932f9"
        },
        "item": {
          "id": "c6d1ffe2-458a-4943-94a7-647b9f49e0ad",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b5df9c92-d2b6-40bb-82c0-f423f2ed0131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504360f0-c9de-4988-aee3-d902af5937db",
        "cursor": {
          "ref": "134b2308-a0b3-4c04-8aea-10b1d774cbd6",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06252010-19e8-4376-8030-8877bdb616b4"
        },
        "item": {
          "id": "504360f0-c9de-4988-aee3-d902af5937db",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7d6764c0-a6d8-4496-8c94-49a31866e8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db024733-5360-4aeb-b6d2-de01a7e3ee94",
        "cursor": {
          "ref": "dcb3e411-b340-42af-9ca8-6b2110a01e7c",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3cb0b51c-1121-4e36-8ac8-60166a9ddd42"
        },
        "item": {
          "id": "db024733-5360-4aeb-b6d2-de01a7e3ee94",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4f344dc2-592e-4e6e-a05f-bfb7387658ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ed31a0-8781-451e-b055-a0880d5468bb",
        "cursor": {
          "ref": "01d049fe-187f-4a66-abdd-9cd7d4fdaebc",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0bc552aa-3376-4d1c-8d8e-0c8dc717fb1d"
        },
        "item": {
          "id": "f2ed31a0-8781-451e-b055-a0880d5468bb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "93efaf7b-cee5-4652-80ba-3164ac269fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa039807-537e-4b86-9ba7-a82597404e9c",
        "cursor": {
          "ref": "104a182e-5057-4b5e-a4aa-a47474888764",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ee04f90a-0abb-4446-9823-639c53049348"
        },
        "item": {
          "id": "aa039807-537e-4b86-9ba7-a82597404e9c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d6da9b76-33a7-4b95-8ec2-c86185eb18eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8a121a-f128-49f2-b2b4-4affd2b94452",
        "cursor": {
          "ref": "22a73ec4-3fd4-48e4-8209-c419d7054588",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0cee2ded-1183-42ad-8eb5-566efaf8851c"
        },
        "item": {
          "id": "6d8a121a-f128-49f2-b2b4-4affd2b94452",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "e5435cee-aba5-4f45-9d3d-eee9e09da7f4",
          "status": "OK",
          "code": 200,
          "responseTime": 2261,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "cd4ecfae-49d9-41c0-a5ca-77a34f52cfd7",
        "cursor": {
          "ref": "f22d5771-7ac8-47b3-82b8-232743deda06",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3fb7c596-4650-4328-ab90-84acad834441"
        },
        "item": {
          "id": "cd4ecfae-49d9-41c0-a5ca-77a34f52cfd7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b0502f69-57f7-4fa0-900a-f6ce051d4656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fc987c-ab34-426a-8a8b-2c5caa277b41",
        "cursor": {
          "ref": "0f1e4b4b-0d2a-4910-9e11-70f6a2818aed",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ae1d2b7-e815-4287-9741-8ca6ee17bcee"
        },
        "item": {
          "id": "d6fc987c-ab34-426a-8a8b-2c5caa277b41",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "97db32d9-4457-4602-8f80-eb5f56e8bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213770d4-59dc-4c2a-acb1-4027c2f45de4",
        "cursor": {
          "ref": "6fc2b82c-7208-472a-bbe8-8f75d45c49be",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f12bf75-a3d7-4707-a8b8-87b4286baea0"
        },
        "item": {
          "id": "213770d4-59dc-4c2a-acb1-4027c2f45de4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ee1ae3b1-dd93-44a6-b21a-5b531890ab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed275af-bad2-465f-a0f4-54a64cd881ea",
        "cursor": {
          "ref": "76971a69-8211-4372-b031-61d5d186725a",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3525877-d0fa-4c88-84b2-db4cd69863dc"
        },
        "item": {
          "id": "3ed275af-bad2-465f-a0f4-54a64cd881ea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03e277ab-27c1-49c1-b9d9-2b6672ef46a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befbb30f-caa6-4bf1-b54d-8b1bb1c54fdb",
        "cursor": {
          "ref": "66ab6477-fea4-41dc-9beb-dc658247f330",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "34277118-c02a-4b0f-9db3-96919497860f"
        },
        "item": {
          "id": "befbb30f-caa6-4bf1-b54d-8b1bb1c54fdb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cfbb9f1f-add6-463f-aab6-6e421a81051f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c94ccac-a1e1-4c30-92f0-f1defc19b9d1",
        "cursor": {
          "ref": "b2ecd0e6-dd84-4dac-a97a-be85d96341d8",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "311ba704-45ba-4537-8ef4-0ded7388c271"
        },
        "item": {
          "id": "1c94ccac-a1e1-4c30-92f0-f1defc19b9d1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1c374294-f859-4e75-88a4-f22e2a0c8b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0e9451-91c9-4fc8-a151-d1981486a961",
        "cursor": {
          "ref": "18d1ecd1-bdb2-42b0-ab7d-82c297f12903",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5a1c7656-1c62-4602-b364-114d5fa8098e"
        },
        "item": {
          "id": "ba0e9451-91c9-4fc8-a151-d1981486a961",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "89dafac0-d207-476a-8361-372a56e91ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bb0a5e-c012-4cbe-8ce1-4cfe5746a4f8",
        "cursor": {
          "ref": "cc86ab34-9d4f-4f79-ba3e-b3b01efee63c",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2ac75bc8-13c6-46d4-a11f-178dabe49d7a"
        },
        "item": {
          "id": "87bb0a5e-c012-4cbe-8ce1-4cfe5746a4f8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5491e00c-0ce9-435d-ba87-629309bcea25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a954c5b5-2c13-4132-a38f-787f09b9c090",
        "cursor": {
          "ref": "83ddec52-9dde-4bc1-b052-8d997dd4a9a5",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cacec146-9b4c-40dd-b0df-b418131321aa"
        },
        "item": {
          "id": "a954c5b5-2c13-4132-a38f-787f09b9c090",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "170b034c-fe53-421a-a04b-9b804b359dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c77fbeb-fd9b-4929-8482-8609c68e92be",
        "cursor": {
          "ref": "65f53002-cf55-487a-a2d8-538cea575e61",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9482c28e-ffa8-4388-8e3c-9429f351fa13"
        },
        "item": {
          "id": "0c77fbeb-fd9b-4929-8482-8609c68e92be",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "44aeaa7d-611f-4f19-afe3-d7b498234719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7ad3b5-eaf8-42f8-a924-556ab0be3a8d",
        "cursor": {
          "ref": "64eb5782-57a1-4789-86cf-8a028bc3313e",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4ce2143e-7a43-47ab-948c-147dc9776eda"
        },
        "item": {
          "id": "da7ad3b5-eaf8-42f8-a924-556ab0be3a8d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "60cb4098-0f29-46b5-9c88-7803ca866aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b8dae-3f31-4cc8-ac5e-1859f7986898",
        "cursor": {
          "ref": "66f592cc-0c39-4fb8-b4c3-3632b446a030",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "06703a24-724c-4489-bc8c-3755af2ad4c3"
        },
        "item": {
          "id": "d33b8dae-3f31-4cc8-ac5e-1859f7986898",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e7f4881e-1c56-4292-83e4-7be4a17862bd",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "e01ad201-550e-449a-a11a-cac8bd909c58",
        "cursor": {
          "ref": "7e981b2f-7b77-40e3-af26-53e937180045",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "abdc0b70-47fa-42d1-982f-1b11f72f3d1e"
        },
        "item": {
          "id": "e01ad201-550e-449a-a11a-cac8bd909c58",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f4ce59ff-8a99-48fe-ae21-18c3a5222e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f2cb4e-3841-4dd3-aa01-c09abbc8422d",
        "cursor": {
          "ref": "604336c9-c5e6-413f-9e37-1cf9a4ffeee3",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "161f601a-cbbe-4eb1-84f7-409c3c0d9081"
        },
        "item": {
          "id": "84f2cb4e-3841-4dd3-aa01-c09abbc8422d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af7bea67-704c-4155-b980-ca5591fd5464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6232def4-7a03-4f78-81da-d69ca2c3861b",
        "cursor": {
          "ref": "0e552adc-dead-459a-aed4-f9d6f24ebda3",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1189a2da-7b8f-4265-8d96-0af8a203d854"
        },
        "item": {
          "id": "6232def4-7a03-4f78-81da-d69ca2c3861b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8a30c844-9f58-4c4b-b232-b7ec4f976c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed05a77-a927-431f-929d-119f7477d067",
        "cursor": {
          "ref": "f6bf33ca-1f5c-456b-9861-d03c6c12535e",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e7cfde9d-b853-4ecc-a55f-94c06f7a885d"
        },
        "item": {
          "id": "5ed05a77-a927-431f-929d-119f7477d067",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "169ec77c-50ce-4728-a53b-de21596f285d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadcad00-73bb-40a0-b5c4-e1186a1b808a",
        "cursor": {
          "ref": "58829e98-3bf7-4a32-bcf1-249debafc34d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ec89922-1626-4be3-b6a3-14750f8ee74c"
        },
        "item": {
          "id": "eadcad00-73bb-40a0-b5c4-e1186a1b808a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5850be7d-ce9f-45bf-b23c-0413dbe02143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744cf574-b8c4-49c6-92c1-1b85f4fb8770",
        "cursor": {
          "ref": "f1f28407-727b-4209-aba3-c8b64554336b",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "28bb240a-a3e0-4ecc-9357-1dd478b01a40"
        },
        "item": {
          "id": "744cf574-b8c4-49c6-92c1-1b85f4fb8770",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "efbd0f92-40f1-4b11-8a18-bec3eba0fdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac2cd27-d475-423c-a83e-708f04659f78",
        "cursor": {
          "ref": "66de3444-dcfa-41a1-9a43-c4bc7e0bcb54",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cd5894bb-a990-4476-9359-bac2d8f0e5b1"
        },
        "item": {
          "id": "3ac2cd27-d475-423c-a83e-708f04659f78",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c90b804a-e860-4698-8c06-211098b309dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49a8fe-f982-4b1e-b044-f5eb32975696",
        "cursor": {
          "ref": "75c451a7-bea2-4e90-a0fb-0d8e04603333",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b5293066-7fb3-44be-be42-208889e017ff"
        },
        "item": {
          "id": "2c49a8fe-f982-4b1e-b044-f5eb32975696",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "76f6e4b4-2f15-49b6-b52c-12b8505e64ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b01fcea-3df5-48b8-8937-cea0c2daddc9",
        "cursor": {
          "ref": "81f1b882-a91d-4ae7-a093-0b482f4879b3",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb28cf65-5b01-440a-a225-a27185219864"
        },
        "item": {
          "id": "1b01fcea-3df5-48b8-8937-cea0c2daddc9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cfaa11c5-7413-4e01-a340-8ec795711580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2a780-2e83-4e96-8982-2a20379cd6a5",
        "cursor": {
          "ref": "6bd992aa-cd45-4958-8963-d6ca36312fd5",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8c13254a-5496-4b03-9f2d-63fb92660da7"
        },
        "item": {
          "id": "a3e2a780-2e83-4e96-8982-2a20379cd6a5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "35ef0d04-227d-45c7-bc10-6fcee072a62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7146609-b5fa-445b-bcc7-f0596981b148",
        "cursor": {
          "ref": "db8c6a16-8d59-4487-ba65-ad84a8d70fe5",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0d946541-1ac2-48dc-bd30-eaca622d166f"
        },
        "item": {
          "id": "e7146609-b5fa-445b-bcc7-f0596981b148",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5f40bd1d-cbd9-4e30-a60d-ff7b35b19f96",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "481ec452-1f47-4327-ba67-1cf116f27205",
        "cursor": {
          "ref": "b90ddd78-7f30-4e9c-acce-0bc368358761",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "28904f43-a2dd-4705-a4a9-0a762356b213"
        },
        "item": {
          "id": "481ec452-1f47-4327-ba67-1cf116f27205",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0cae9270-7337-4128-9922-05f6db0ddb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80e338-3613-4f8f-96e1-88bcb95f6f67",
        "cursor": {
          "ref": "e1f49120-539e-4645-8fbc-8f0789ce7b82",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3278f701-d49b-4d55-be4e-ab074efe52fa"
        },
        "item": {
          "id": "3d80e338-3613-4f8f-96e1-88bcb95f6f67",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b769f03f-a8ca-4b30-a83c-e7993cf37f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd3ff8-6a97-40b0-9f05-dfa4fd4a3da4",
        "cursor": {
          "ref": "81965824-5f0e-49e8-8a9c-543fa48cd934",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e33a5f92-8db8-431d-bacb-9d1806fa691a"
        },
        "item": {
          "id": "88cd3ff8-6a97-40b0-9f05-dfa4fd4a3da4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3d389585-0162-4826-9a31-694946e6bacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc87f6-fb12-4db1-83e3-17713a5b2c5d",
        "cursor": {
          "ref": "a18cf0c6-3457-4599-8803-574d71842de4",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf4c7754-b4aa-415c-ad54-6db2ae2ae78b"
        },
        "item": {
          "id": "40dc87f6-fb12-4db1-83e3-17713a5b2c5d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "948c34d8-1fb1-4919-be67-61a1e72340c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1cce7f-4f8a-4fc9-a66f-5692cc839709",
        "cursor": {
          "ref": "0c604a65-f732-46a7-bb18-dd23cb5db2de",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3825cf77-07b4-47bb-987a-7f38cdfa0d24"
        },
        "item": {
          "id": "ba1cce7f-4f8a-4fc9-a66f-5692cc839709",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e920c764-dee0-40bb-91fb-54fb6ea739fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc1451a-7d56-4b76-a38c-8565418f85c8",
        "cursor": {
          "ref": "40a1a7b4-8902-488c-afea-7ce9603b0acf",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "416d967f-9982-435f-87e0-94eeb8919004"
        },
        "item": {
          "id": "cbc1451a-7d56-4b76-a38c-8565418f85c8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fea8fe85-91ea-4d7c-bf5e-cd8ace9099f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123bd58a-95dc-4222-874d-e92025482d26",
        "cursor": {
          "ref": "79847728-2ec9-4b78-b0ac-8031fe8f7adb",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0d85e820-c391-4499-904b-d9021de312d4"
        },
        "item": {
          "id": "123bd58a-95dc-4222-874d-e92025482d26",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8bbea950-f1e7-435a-96d3-b8a23f207a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0875360d-0291-408b-856a-dec4f0e3ff16",
        "cursor": {
          "ref": "00fc3db2-9729-463f-80da-1d0dd7e232f8",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "31b06451-cea2-4551-ad0e-82d871246818"
        },
        "item": {
          "id": "0875360d-0291-408b-856a-dec4f0e3ff16",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "614c8693-9e41-43ce-8fb8-8f95ea5e2725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5e2e9c-dae3-4a13-92fa-57b7ed72c1be",
        "cursor": {
          "ref": "1e98b3f6-c381-449b-86d5-851b6457e759",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fc1b16af-df5d-48b9-84d1-76402ab8b41e"
        },
        "item": {
          "id": "5c5e2e9c-dae3-4a13-92fa-57b7ed72c1be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "08b97e16-ca5c-4f92-bff9-338bcff3eafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0adffb9-ac83-4f2a-b418-7765dd9dd08c",
        "cursor": {
          "ref": "b3d523d7-46a8-4bbd-be43-4f259c796eec",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12839af1-ea59-442d-80d6-04ebc1778911"
        },
        "item": {
          "id": "b0adffb9-ac83-4f2a-b418-7765dd9dd08c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "767e9963-0237-49b3-b27c-f6e17271e5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be95827e-f268-489f-b62c-a9f395edab74",
        "cursor": {
          "ref": "818fb6dd-104a-431a-b6bf-778d6ea5322d",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d9b5d89-672c-4e66-a2fb-3b9aa7e28fc3"
        },
        "item": {
          "id": "be95827e-f268-489f-b62c-a9f395edab74",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a30b2245-e2b3-496f-a73b-33accb0d27b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a183274c-f90e-409b-aba9-1965bcc4ec0a",
        "cursor": {
          "ref": "b4ee107b-58c7-4fd9-9831-b9a92560bef1",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "69e08b6b-b536-4552-ab1a-8d7daed6ccae"
        },
        "item": {
          "id": "a183274c-f90e-409b-aba9-1965bcc4ec0a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2ea9a980-f747-4631-8c10-a970f0728679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffacb98-7289-4aa4-908d-8f68260a3d46",
        "cursor": {
          "ref": "80c95456-1167-40f6-a475-6c62460f590d",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f97b39a4-4de8-435b-85bd-211ed1cfe628"
        },
        "item": {
          "id": "6ffacb98-7289-4aa4-908d-8f68260a3d46",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d106ff53-4179-4a13-874e-883e6efdb685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496e2688-750d-4e0b-9d54-8c193b5063aa",
        "cursor": {
          "ref": "b5aa1a6e-cca4-4bbf-bf4f-0b5ebf1d3c6a",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c0cad4f-9fa4-46c4-ac10-66baf77505e2"
        },
        "item": {
          "id": "496e2688-750d-4e0b-9d54-8c193b5063aa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "93695a61-ac2d-4b6b-8200-81e0912bd38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8b6263-e54d-4923-8f33-c8c0986b65ec",
        "cursor": {
          "ref": "f80544b3-8ad3-4be2-ab96-3756c8ae5153",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "66c638f2-52bb-4dc6-8a62-b5259cb6d826"
        },
        "item": {
          "id": "0b8b6263-e54d-4923-8f33-c8c0986b65ec",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fc66ca02-2282-40b1-b72a-12bb8757065d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffaccb2-f3b3-4031-b350-d951f1f67dba",
        "cursor": {
          "ref": "5fcc5807-d6f0-47ab-9220-0196bb444caf",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab0e313b-5f13-4369-b804-9b4d64985a70"
        },
        "item": {
          "id": "2ffaccb2-f3b3-4031-b350-d951f1f67dba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1826f92d-bc14-4c6a-a88e-fe1969c19ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff9abb5-f32f-4dfc-ab7f-caa622efbea4",
        "cursor": {
          "ref": "d7277ae2-7ad4-489c-a000-2f692b20db27",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fc5b8586-f1c6-43f0-9988-a68590302a7a"
        },
        "item": {
          "id": "aff9abb5-f32f-4dfc-ab7f-caa622efbea4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "51b35869-50f2-4ada-832d-5329398ede38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3275a835-fd1a-4bf1-bd18-5bcce242a456",
        "cursor": {
          "ref": "f1f1e809-b417-4d0a-9564-36d948f96581",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "504595aa-b4ee-4e9c-94dd-91940236e7a0"
        },
        "item": {
          "id": "3275a835-fd1a-4bf1-bd18-5bcce242a456",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c6a9c28a-c532-4a6f-b325-efe30a9d99b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f55004-1725-47a0-a3a3-24c0ec12a0cd",
        "cursor": {
          "ref": "fa19f309-1d43-42f5-b805-8447bb493a4f",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "07db14c0-607b-4573-9348-7396d3c12fef"
        },
        "item": {
          "id": "96f55004-1725-47a0-a3a3-24c0ec12a0cd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3597c198-10fd-479c-88b9-00591bf54d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9275adbc-ab89-4245-886d-b9d6aed76892",
        "cursor": {
          "ref": "81964be6-149f-4796-ba2a-854c30b4bce2",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5521d08e-a27b-46c0-ad5e-27123db7aaee"
        },
        "item": {
          "id": "9275adbc-ab89-4245-886d-b9d6aed76892",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5067ca9d-1ed3-4bb7-9af1-a37aae31fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7641393-44cb-47c0-9913-f91c17f7c9f2",
        "cursor": {
          "ref": "78ea9de9-f1d5-4be4-b55c-fffe640acdb1",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fa5ca063-b14e-48fc-8e01-3b7f347fda9a"
        },
        "item": {
          "id": "d7641393-44cb-47c0-9913-f91c17f7c9f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f0b80d2-4311-4964-9b15-88f1d0f2ae2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946a3646-614c-463b-b42e-4136e1539649",
        "cursor": {
          "ref": "20fdc286-8741-42a3-8b33-327c8071b09d",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8984bb56-d6b0-41ba-bec1-267a7cedd85b"
        },
        "item": {
          "id": "946a3646-614c-463b-b42e-4136e1539649",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2f7cb8a9-dc69-4160-8dc9-a8f231f26b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104344db-25fb-40f0-9717-03d106d18c58",
        "cursor": {
          "ref": "5723ad97-9b09-4dd3-afb5-29fb38229491",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "02a2cfe8-c457-492f-b03e-e0ab4ec0e08e"
        },
        "item": {
          "id": "104344db-25fb-40f0-9717-03d106d18c58",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b57b157b-81fc-4815-b5cc-f9fbf77266b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51352516-9909-4cc6-bc35-43a068bfe219",
        "cursor": {
          "ref": "d02b1df4-5218-4ef6-9d7e-b6ba26ef1824",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ea275b29-b386-4912-bca4-e14a4aac8261"
        },
        "item": {
          "id": "51352516-9909-4cc6-bc35-43a068bfe219",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fda75338-ed72-46dc-a45c-1b924784058e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101d94df-d00d-4129-a541-60bcbac1094f",
        "cursor": {
          "ref": "72590c4a-a8c0-4178-b572-117e0c17b39e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d2b58bdf-9b9a-470a-b361-175be08753a6"
        },
        "item": {
          "id": "101d94df-d00d-4129-a541-60bcbac1094f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "30dc41ac-a03f-44c0-9d98-191db5cc2a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e85ed-98a9-4173-903e-36002171cd9a",
        "cursor": {
          "ref": "112d1dfe-e71e-461a-b943-7017e7148a38",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3efee858-1aad-4711-9bc2-29775d7683e2"
        },
        "item": {
          "id": "af7e85ed-98a9-4173-903e-36002171cd9a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9ea68087-0bbb-4886-9332-ea5e90adec71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41a601f-161c-4906-8421-cc544e87520a",
        "cursor": {
          "ref": "5cf1f82b-6e80-4358-a772-09295e2ca790",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b767ed4-f000-41e7-8f28-471fe1f16201"
        },
        "item": {
          "id": "c41a601f-161c-4906-8421-cc544e87520a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0050c80f-0a1e-4d7b-91b7-9a047cfa89a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520efe5f-3ebd-45ca-bb00-cd25408294e2",
        "cursor": {
          "ref": "d653f490-1ed5-42f4-b0d1-9c4d3b45bcd9",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "035e19b8-5f0b-4ca2-923b-c36790f7f2da"
        },
        "item": {
          "id": "520efe5f-3ebd-45ca-bb00-cd25408294e2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "28556523-b9db-4b85-ac47-a9269bfdaf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfa470c-1c55-412d-bf37-90c190e995b8",
        "cursor": {
          "ref": "c9c4a24a-1861-4f6b-bea4-5ab6cc35a5ca",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "833df517-3dad-41b6-b8d6-d0c1ae392bba"
        },
        "item": {
          "id": "7cfa470c-1c55-412d-bf37-90c190e995b8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8e66c2b8-ebfd-4d2d-9b17-49d9bc5e4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253c094-915a-410e-9935-0c49bda44b09",
        "cursor": {
          "ref": "d8fddb59-7ff8-4bc9-95b4-a12fea2b2d30",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "11981831-099b-4d17-89eb-9af00339367f"
        },
        "item": {
          "id": "9253c094-915a-410e-9935-0c49bda44b09",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a841f684-20f2-4d56-878c-d190c6244aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65192477-c23d-4c10-bfde-9cb96b1bd0d4",
        "cursor": {
          "ref": "1784d123-63c8-43f4-b01d-315da3630169",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75eda67a-e1c4-4b95-bee1-9e7b38c0566b"
        },
        "item": {
          "id": "65192477-c23d-4c10-bfde-9cb96b1bd0d4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7adec447-a666-4240-899d-4cf9d72a9c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa7735e-c6e9-4c49-b93a-bf546e76e973",
        "cursor": {
          "ref": "1857f3d1-d1e2-42ee-98a0-54711f94c854",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8a4f13fc-22ed-4278-8929-3821bb9fb845"
        },
        "item": {
          "id": "8aa7735e-c6e9-4c49-b93a-bf546e76e973",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ba93a0c1-c395-42b4-b1dd-69eb58ccf54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5af7fb-121e-4afd-a80a-84c87f4b48f9",
        "cursor": {
          "ref": "879637d0-2600-458f-85dc-8b8bd09e341f",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8e72d22a-5cca-4976-963b-08fd3ce6b07d"
        },
        "item": {
          "id": "9c5af7fb-121e-4afd-a80a-84c87f4b48f9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f8b7f564-1503-4f86-8499-9bf994d14930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a357aa-f3be-4474-9612-49e8eaaad475",
        "cursor": {
          "ref": "1a736cd1-ba3a-450b-8733-b38602dc7680",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2f776ed7-5b17-4de8-873a-75d04e55ae95"
        },
        "item": {
          "id": "87a357aa-f3be-4474-9612-49e8eaaad475",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d237bbd6-53ae-4034-9750-a21d479ba8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d7a1d-1d2c-4ce8-a71b-a0c013ebf39e",
        "cursor": {
          "ref": "7b4492f8-c388-4940-a633-6e2dfc1e28d0",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b01a644-3ec0-4452-8c64-d1c4f74e386c"
        },
        "item": {
          "id": "db0d7a1d-1d2c-4ce8-a71b-a0c013ebf39e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b2152349-4ced-476f-ac81-ff1f33c90e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caa90fe-41df-47f8-889d-2df78e0af301",
        "cursor": {
          "ref": "5ba7a45e-50ee-444b-801c-2c3f2a796ccf",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fc3c261f-6822-4a7c-8079-df1e0f612625"
        },
        "item": {
          "id": "1caa90fe-41df-47f8-889d-2df78e0af301",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b93448ec-c1a3-415f-96b5-b469bcd83c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7973c7cd-eb62-4844-b920-67d8d38e3678",
        "cursor": {
          "ref": "abf65f23-bdea-4d82-9a03-7acec2b822c8",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "84c53a91-3118-4ccd-9518-7049e94c40d7"
        },
        "item": {
          "id": "7973c7cd-eb62-4844-b920-67d8d38e3678",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d6f593b4-1d1c-467c-ba21-c6f7042b0945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51a0ea3-f883-4f36-b21e-b80a310b7b0a",
        "cursor": {
          "ref": "8474500a-ad1f-44d3-9f34-76c313bf83bc",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "328a643e-0964-453e-841e-6c88c1326d60"
        },
        "item": {
          "id": "f51a0ea3-f883-4f36-b21e-b80a310b7b0a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "857eb290-53c5-4308-939e-b6191e07d6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d24050-7651-4599-ad54-8b1f5a645ff6",
        "cursor": {
          "ref": "e90d9cd3-3c9f-4f41-b96d-7c925f3d26d7",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "14851d35-a69f-4965-85a8-3efd1ca4b1bc"
        },
        "item": {
          "id": "69d24050-7651-4599-ad54-8b1f5a645ff6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d308d933-75f3-4d18-8b58-2f5c06445f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c6fd1-0d1f-428d-96b5-df67609cb866",
        "cursor": {
          "ref": "12874406-3c0c-4b1d-a10c-25e68d4b3e43",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0505504b-7b64-45dc-84e6-016043026c1d"
        },
        "item": {
          "id": "627c6fd1-0d1f-428d-96b5-df67609cb866",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3317b928-bc70-4e36-93b0-d5207009481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa60b86-b2d9-4297-a269-55230c5a5ebb",
        "cursor": {
          "ref": "863b851b-0e59-4ac2-98ff-e1b5f9528992",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f69a2b6e-2e4a-4c86-8948-01f4cf38583d"
        },
        "item": {
          "id": "6fa60b86-b2d9-4297-a269-55230c5a5ebb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71861db3-b3a5-4102-a936-96b55b344233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b0e16-2037-48c2-83ad-1e1c96cd4b68",
        "cursor": {
          "ref": "6625c3ca-62e2-46c4-a79d-e3a0337a7025",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c4890488-5536-406e-aa4e-5dec3547c381"
        },
        "item": {
          "id": "8b7b0e16-2037-48c2-83ad-1e1c96cd4b68",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82fb964d-5085-462d-8f16-f7fc664f20a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c67679-0013-46ad-85a8-04251eef4ec9",
        "cursor": {
          "ref": "19828e97-ac86-410c-bc42-754da1ffe328",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43b96f93-2b50-4eb4-9fc4-87730ae525e1"
        },
        "item": {
          "id": "65c67679-0013-46ad-85a8-04251eef4ec9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a739ec04-b8ba-47ad-beca-4f86049b55eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f612b678-5fa2-4dec-b3d1-b54bf0667785",
        "cursor": {
          "ref": "b75fa736-8043-4289-b076-7042280d45a6",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1bc1c772-4769-4388-b5a1-0feed459b003"
        },
        "item": {
          "id": "f612b678-5fa2-4dec-b3d1-b54bf0667785",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d37d66e-ef57-4ad6-b6f6-5166224e4cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67e865-be58-47c7-968f-4de6b8b20fe5",
        "cursor": {
          "ref": "98cce5ef-fffb-4fd3-8530-a64b9037a209",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e1f64401-b6bf-418c-86bc-a924fa899a46"
        },
        "item": {
          "id": "1a67e865-be58-47c7-968f-4de6b8b20fe5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e8b256e1-db06-41d3-9195-72eaffd8d6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02114014-753b-405f-8bad-970af23c568a",
        "cursor": {
          "ref": "f8888547-9775-4241-8730-ee30ff9b0cae",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6cbf17bd-4704-4b46-a6f4-edea9ca4dede"
        },
        "item": {
          "id": "02114014-753b-405f-8bad-970af23c568a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bde8e62f-e4ad-4603-929a-a277ed6cb914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416d8d39-c5d8-4540-90ae-0ca2e5d45490",
        "cursor": {
          "ref": "c7a9b8db-faa9-4e42-9cb3-0d7ef42f1d39",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "863ecc12-6ed9-427a-8585-7f9374c55f42"
        },
        "item": {
          "id": "416d8d39-c5d8-4540-90ae-0ca2e5d45490",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "71f36fdc-3e1b-4c23-986e-ef4407019264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea67b3e-3c2b-42bb-b70f-b8c8d564793b",
        "cursor": {
          "ref": "822fe918-88b2-4a00-8ccc-012eb24eb70b",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "42cd06fa-082d-4c44-9cc6-81bd91c2ae68"
        },
        "item": {
          "id": "4ea67b3e-3c2b-42bb-b70f-b8c8d564793b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a9cf3508-ff10-421f-a432-006c97b2afdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386c7f40-039c-48c7-86f7-b069790aebfc",
        "cursor": {
          "ref": "7cf34562-01b3-4011-87b9-f026bd381848",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5e6adef7-fa72-435a-b0a5-c034f9b371e2"
        },
        "item": {
          "id": "386c7f40-039c-48c7-86f7-b069790aebfc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "70fead96-4531-41c1-a27c-adc015868645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136e03c1-0740-4014-b895-541e3cbbd8aa",
        "cursor": {
          "ref": "91e5d34c-5a12-4ac9-b551-657765189543",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7173c2d-4b6a-4629-9555-b56a347d9534"
        },
        "item": {
          "id": "136e03c1-0740-4014-b895-541e3cbbd8aa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "34a487b4-a25b-4d3e-b802-4ff0a6d5714e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba4893a-8a68-420d-b332-0b1b6679a6a5",
        "cursor": {
          "ref": "31e6fa0b-e52a-432f-af66-4cceac3345e6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "66b5bc41-6e26-46b4-a67e-b95dabc74802"
        },
        "item": {
          "id": "8ba4893a-8a68-420d-b332-0b1b6679a6a5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3559b44d-fb2a-4abe-9d96-5fccc878f8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d98b0e-fd6d-4eaa-b494-2c1e078fabb2",
        "cursor": {
          "ref": "f33bc90b-c266-466f-a82b-4a690baa3450",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4bd714d2-5fba-4099-a576-e61f5c51b6d5"
        },
        "item": {
          "id": "91d98b0e-fd6d-4eaa-b494-2c1e078fabb2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12db45a2-0811-44cb-8bcb-88982e64cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d005ac92-10b2-4670-8bd6-d8f063d0b7a1",
        "cursor": {
          "ref": "7c79a85d-4c64-40d2-8950-0a68b1c808e3",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db77e6f0-dd3c-4610-b34e-9148f23aa430"
        },
        "item": {
          "id": "d005ac92-10b2-4670-8bd6-d8f063d0b7a1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a4361701-d1ac-46e9-8f1c-eb091b581c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2b3b0b-d9cb-4142-942c-4e747a9ddad6",
        "cursor": {
          "ref": "c213deb4-c9f6-43a5-8f6d-85f71b848688",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e521e289-c5bc-4789-8b5f-e84f6a4f9d13"
        },
        "item": {
          "id": "0e2b3b0b-d9cb-4142-942c-4e747a9ddad6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ad52a4f0-3591-4289-a268-8057b503c462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e8f06-3225-4069-ae2d-ad17a0776f1b",
        "cursor": {
          "ref": "9951085c-1826-4b12-8c67-edf0130b65ec",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2368882b-c623-4c2c-b214-8e7d53a71c13"
        },
        "item": {
          "id": "a06e8f06-3225-4069-ae2d-ad17a0776f1b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7648bdd0-2ca1-4ae8-bb12-3d0f4faf5b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03158258-4f56-4230-8dd0-555552531527",
        "cursor": {
          "ref": "a203dc2f-9732-47f9-a932-956926544598",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4dcfe869-b4b5-4fc4-93de-7342883c3983"
        },
        "item": {
          "id": "03158258-4f56-4230-8dd0-555552531527",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "609d6a6c-2804-4e8e-8160-ef08714778da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac108647-4598-4d46-9889-a8f5183e92ca",
        "cursor": {
          "ref": "bd948f88-34e4-4509-9769-02aa48e688f3",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9777ffdf-85c9-4aca-a700-d7a36771aab3"
        },
        "item": {
          "id": "ac108647-4598-4d46-9889-a8f5183e92ca",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5c7b7df1-d809-4c10-a8d0-48fc671fe0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ccd2d1-f9de-4148-b724-fa69ef806936",
        "cursor": {
          "ref": "ade46ed1-e1a7-4e3e-82b5-0e7c46902f8e",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "17a88297-ba0e-43e8-87c5-663f8ca5e332"
        },
        "item": {
          "id": "a9ccd2d1-f9de-4148-b724-fa69ef806936",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "32cea078-5572-4f69-888c-5aa809598d1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 99,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945d4299-6ce9-41cb-841d-aafb699bf2e5",
        "cursor": {
          "ref": "f6993ac1-203f-4734-adbc-1bd182e75a6e",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c1a181b-7d7d-4a12-921d-0658d0c11e89"
        },
        "item": {
          "id": "945d4299-6ce9-41cb-841d-aafb699bf2e5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f925a999-f980-4910-b9c4-065e0fe7cd1a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 376,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4276a5aa-a123-458f-bc6a-f38a1e438859",
        "cursor": {
          "ref": "55ef7eb3-b668-48d8-aada-2c39fac6ec18",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "69e2822c-3d91-4cd8-be6c-9c6f58f405df"
        },
        "item": {
          "id": "4276a5aa-a123-458f-bc6a-f38a1e438859",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "313c0832-be87-4ffa-a239-c2deac09fdf1",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "926636eb-e3af-4584-b045-d9d79c597ff9",
        "cursor": {
          "ref": "797185ca-224f-4c2c-8d19-22633ae688f4",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17453192-c4ff-448e-9954-7a719621ba4c"
        },
        "item": {
          "id": "926636eb-e3af-4584-b045-d9d79c597ff9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "110575ed-85ff-4a8f-b461-1eb74bf7b71a",
          "status": "OK",
          "code": 200,
          "responseTime": 2084,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ecfd37-18b2-4daa-8a1f-2b90a49d1f13",
        "cursor": {
          "ref": "e36e37d5-da33-418f-9a6e-0eb6ce83962d",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b6c13bc8-8604-414b-8c33-bcde34d8c0d8"
        },
        "item": {
          "id": "55ecfd37-18b2-4daa-8a1f-2b90a49d1f13",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "33478739-2d74-4ef6-974a-2133672ee3df",
          "status": "OK",
          "code": 200,
          "responseTime": 1795,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f727791-a534-4346-a27f-ea0370a781d2",
        "cursor": {
          "ref": "074fbf65-a7e6-4088-a75c-0fda4ee6a48d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5d51b8d-2419-4d0d-88a7-cf7de44e5379"
        },
        "item": {
          "id": "6f727791-a534-4346-a27f-ea0370a781d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09bbb0f5-b459-4960-b96e-fbabb6310da5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f727791-a534-4346-a27f-ea0370a781d2",
        "cursor": {
          "ref": "074fbf65-a7e6-4088-a75c-0fda4ee6a48d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5d51b8d-2419-4d0d-88a7-cf7de44e5379"
        },
        "item": {
          "id": "6f727791-a534-4346-a27f-ea0370a781d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09bbb0f5-b459-4960-b96e-fbabb6310da5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f727791-a534-4346-a27f-ea0370a781d2",
        "cursor": {
          "ref": "074fbf65-a7e6-4088-a75c-0fda4ee6a48d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5d51b8d-2419-4d0d-88a7-cf7de44e5379"
        },
        "item": {
          "id": "6f727791-a534-4346-a27f-ea0370a781d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09bbb0f5-b459-4960-b96e-fbabb6310da5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8308ae-3348-4dfc-8373-f443fd9a04d8",
        "cursor": {
          "ref": "a89fa767-821c-41b9-886a-ec013fec29b4",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fb85389a-d637-4699-85f7-5428e400c8a5"
        },
        "item": {
          "id": "4c8308ae-3348-4dfc-8373-f443fd9a04d8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "cac2f6f6-4524-4e57-88b5-4c2a040489c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 298,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2715e8-b75f-4873-8283-c06ac3e96d4f",
        "cursor": {
          "ref": "fa1f0f4b-c6c1-4447-adfe-30d4912333b9",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "41173aff-d065-4d65-a558-231622d79d52"
        },
        "item": {
          "id": "1c2715e8-b75f-4873-8283-c06ac3e96d4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "54cee06e-fac2-4a61-9450-7415c1091030",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2715e8-b75f-4873-8283-c06ac3e96d4f",
        "cursor": {
          "ref": "fa1f0f4b-c6c1-4447-adfe-30d4912333b9",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "41173aff-d065-4d65-a558-231622d79d52"
        },
        "item": {
          "id": "1c2715e8-b75f-4873-8283-c06ac3e96d4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "54cee06e-fac2-4a61-9450-7415c1091030",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee537a4-e4fb-47ff-ae56-f16d47b55783",
        "cursor": {
          "ref": "b0ccd9b2-187f-417f-9827-9a88d7406808",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "17fc290e-1c2a-4e4e-9e0b-99ab2b566acc"
        },
        "item": {
          "id": "fee537a4-e4fb-47ff-ae56-f16d47b55783",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "53b71812-1807-4862-bc32-1e63da5ea577",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 568,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42fb143-5549-4c30-8894-587dc1d76326",
        "cursor": {
          "ref": "45133889-6125-4b9d-bfef-41c6d2be19de",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "70aac53f-f648-445a-9b12-84fa3a297ac5"
        },
        "item": {
          "id": "a42fb143-5549-4c30-8894-587dc1d76326",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad4a6050-8eeb-4fe4-8570-45ddb3a4c3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42fb143-5549-4c30-8894-587dc1d76326",
        "cursor": {
          "ref": "45133889-6125-4b9d-bfef-41c6d2be19de",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "70aac53f-f648-445a-9b12-84fa3a297ac5"
        },
        "item": {
          "id": "a42fb143-5549-4c30-8894-587dc1d76326",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad4a6050-8eeb-4fe4-8570-45ddb3a4c3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66067bf3-507e-447a-8c0c-241fa40ef262",
        "cursor": {
          "ref": "71c804e7-a7e0-4074-a638-857f3c8046b3",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "76350c53-ea58-46ec-8c7c-9c168fb522f2"
        },
        "item": {
          "id": "66067bf3-507e-447a-8c0c-241fa40ef262",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f21fb0f3-0e5a-4f2e-88b4-023c48faf284",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 592,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}