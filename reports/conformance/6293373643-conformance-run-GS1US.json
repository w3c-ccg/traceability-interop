{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b854eab-f407-435e-9821-639efcd7c26c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3b5a0d6f-d48a-46af-8562-0f3ab06e7e4c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "add9758a-e2a4-4056-a56d-39c262bd7a01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0597148d-c40c-43fe-b9d9-718c993b5273"
                }
              }
            ]
          },
          {
            "id": "090c1f67-7bec-4b26-aeb1-954610c0c992",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d014d41-742e-40a0-ab68-e4ef04daf274",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3eb5f1b-4070-4551-b528-c1b7e507a605"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aef1f66f-dfbb-4ecc-b4ee-f4559d408af7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4679ab3d-71dc-45f6-9968-cf3888f031b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a53b10a0-dc48-4983-b8f2-9bbaadad5354",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3cff1c2-aeaa-42da-9526-ff522553d99c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6880ac7a-344c-4ff8-8527-34d218ba7c18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02baa54d-7f12-49b6-9946-46ee73670b2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16caaebc-df68-4974-aed9-3cb71bd5186e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8788f7be-c4a3-42d3-b96e-95433b0e028c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b47a5b5-e23e-4233-8438-a4c07c2212fa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bfc855d-0601-4327-be0c-8ec874405d75",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f0f417dd-39f9-4982-9f21-c44836a6632d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c08197c5-e1e1-4b6d-8f84-b5664b30c31c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2048f3b-000f-4a8d-98a0-abea29334411"
            }
          }
        ]
      },
      {
        "id": "5950e9cb-46b6-41b4-a435-835d19e648e4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e1c9c13-a26b-4f13-91ed-101e8a310454",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21e4164b-04dc-4209-83fb-5d3c375d2354",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "197419d6-043c-40e2-b630-aeff630e8318",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4b9b3-cbac-4325-bd57-4d6d040ef61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0501a9cb-e910-4a28-bd2f-dcb60f7b4d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31712e0a-92ec-4636-ae38-4b2c7bd442ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43facfe5-de6c-4b5d-ba7e-ba1307d189c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e15ea1d6-4db2-40a5-a317-8af122748a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3df136-0994-431e-8ba3-03191a784a93",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c13c6-9cc0-486b-b16d-89abc0c7b488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17176630-2dc8-4d5e-bf7c-2c483bdde584"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffd0129c-81b4-425c-ba7a-827d6dcea3ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec07dc69-232a-4fd8-af76-dc9454ff87c9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430cb141-0f4b-4d37-a470-2eae1f20ca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "700d1051-bfad-4320-8bb4-5b4d387b0e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12da9f7-33b8-406e-b62f-75a9b52646b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bac3ad7-a41e-4158-9eb5-b5ae507a9ac5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a259075c-e6f0-4739-bd2e-953faea5356c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "745aab11-d639-4caa-ba9f-a9d140182b70",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa89db55-840a-4b51-a647-c48632107e11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e5fea2d1-e196-44dd-b946-6ff451388e66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d52ffd6-659e-419f-a549-5b5436ecb4be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "64946a63-6d69-41e7-88ae-6b84f1c13a9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e52b1fa9-1717-4543-96f5-4e354a0b4b60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc7edca4-bdf4-49ba-88ae-280ec99e88f2"
            }
          }
        ]
      },
      {
        "id": "8a0d6f3f-619c-42aa-8ad9-c87f89ec0f3c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a8e5d62d-8bd1-4878-920a-b446d9b76fcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeef7071-edee-4f8a-85bf-7d516aef3af7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "251e4681-eea4-44fb-a6d6-5338e8eef637",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51345b3b-6b3d-44e5-9bec-fd436d981073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc94404-f856-49df-bd5d-7945fc129e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cec61e-463f-4092-8cca-d54027ed79e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b3b0223-2258-4c3a-a178-aac17a806038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f570373-3127-4fb0-bba6-061c6e11cb87",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b726647-7db1-4d0a-9cc7-0cb9d7140e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f504a-d5f2-4413-9a0f-ec066e2eda74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75cb09-5820-4a30-82be-4289bbd1f19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfbe4d07-64d5-44a1-b657-1a87ba6b6478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6c8879-7931-4f0f-9d32-237340904a03",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527cea7f-ab42-4821-8494-9771d327d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fd3ba8-4389-4940-8227-e7897635922d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4e9bda-04ab-47ce-889d-d0e15af82982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35796207-0494-4118-a85e-dfbfcf97ce33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd50d167-eb04-4632-9cb1-d438d25eaa24",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161ac305-e025-4c46-aefe-64002de91cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef4e729-b0e5-4d37-a11c-bf4bd4c9bcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78da000-ac3c-4538-96f5-70b314f7b013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a76f0b61-abe1-4e0a-a82a-ae58879714ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aafbc9-d180-4e63-b592-1eb087fb527b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a33dc6-4a1d-4170-988d-cd461294c9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8ff86e-2d2e-407d-b1b4-e16807ee3ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cdd888-eae3-43f2-a895-c0a3afcd6376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6840156-9c7c-4050-bfd4-6c1e9cda40bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26201c3-1968-4d28-ad28-937e023c0aad",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453108b5-a30e-4865-9358-93e9c33dc633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4564f2db-03d3-4f9e-8b5c-4652ec215466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135326b6-27ff-4c35-a9f1-0fc4d87ac2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0325b7f6-9709-467e-96f9-36fed8937933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ada1c8-3620-485e-9420-9a89d47b64e8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0202f8-0c60-414c-b61b-d546f0ee2915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db56251f-5e08-4215-ba4a-9032f018e2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d414cd3d-e239-4643-b651-1e1b0583d841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "604f827b-0e19-48e4-a78c-985cf8791d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fb2477-bc64-4c4d-946e-2d79481b7f85",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e10558-245d-4135-8547-78cab5dd4a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1913f9a1-25c1-40f2-b7a8-9f959a4e5caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aed65c-bd00-4885-a1d2-d329b89efdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d166596-65d9-4c59-a17d-ef2e06880d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c2119-bd23-4ae1-a968-d87ad22f1edc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abb87ab-6e1f-4ce3-b0a5-f220ac75d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db64dfa7-ebaa-4211-8869-a6c1de294a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc56daff-58f3-47f6-92ba-bcef72f34451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45371dcb-d6b2-4c06-9257-658873218aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f6e6a0-bea2-4221-8a57-55023a716310",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc85352-0995-4a7a-85c4-86789b5bfe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30ac2fd-742b-4818-9070-5295860eb811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35d6bd6-6b20-4cad-a463-daef814c64b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ae56b3-a17a-4a58-8707-39fd5a7685f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b36610-bee4-4a1f-a236-5611b73f9dbb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1acc4f8-83a4-4d20-89e9-9fed9d650f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856caab7-8bbc-4e2a-94e1-37084fd16559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ad511-e0e2-4cfb-8c8c-0093297861b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e94f702-bcc4-4612-9620-441c6f4895b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a75b15-37ca-4b6a-a1dd-6ba114aaa3a7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7702f38-f7d1-4ea7-8f39-c21e0b2207c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ba6094-0742-4e7e-a27d-534ac64ff9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d1706-7688-4e84-9bc4-3ce45889b734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8046f6f8-8143-410c-865b-bbcdfd1e838b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c980498c-3606-407d-8ba7-51115f1eae10",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ec0559-6842-4b64-a6db-1a0bb463134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a3b299-f2e2-4edb-9fcc-4df3ddf01216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c0a7cb-6f0e-443f-94e7-f55eeaf59a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90f824cf-553e-4566-8f1a-822aa124793d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb018a0-0d03-4577-a147-a33a4f84f57a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29165a5-b67e-4faa-84d3-d269a49e3696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fe8fd3-6f4c-4be6-8a3f-d353fe3ac714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db951242-10f0-4972-8908-d98232083fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22685f8f-e419-423d-9b83-782f7153f4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291a32c1-27a0-484a-abb5-7f7c5777e8d8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b6e2c-8702-49a4-b216-bbe0deee4041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34d7940-3f7e-415e-a1fc-c5c10b7499e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd183461-d5b5-4cb6-96a5-9bf84dfa86b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47618d85-e505-432b-a367-c4218792589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df602c-a345-4810-adfc-dc54b2d35ec1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a2f18-eaca-41b0-a45a-6bd51039f448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f59077-3e3a-492f-81da-4765075bd7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0a942c-54ee-4498-b87d-f0641a237cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f9bd236-67ca-4101-9723-dae9d5569f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16f2ae3-4f7d-4366-b176-abaacf4c0ef6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37edb85d-e0c0-43a8-a43b-aac9c01188ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f37310-3564-4b9a-a77a-8da5f736da40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15ea967-5bf8-4760-9030-b658ec715cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c899876e-d7af-42e2-959f-27504ed3be71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ce36ea-4618-4141-8995-32d0328f41d5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df58598a-d647-4dd2-a0b6-7ef140910b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0cef13-5080-4bda-8e81-028f76367816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6dc785-7409-4745-aea2-12e1ffc6ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58198533-0849-4aef-98a2-319d289f720d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0d3056-f2a7-4479-a645-3290862f7ab9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3be8f9-7785-4119-aad9-f3076833086d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1cdf4b-d2b8-47f1-bdb2-bcbd6fca5ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf07b2-060a-431f-918e-bd8863e590d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c616a3-b3c8-45f8-9512-6ed70e6fa906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db75cbd-0b3d-4b64-aa4d-636812ccee0e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02863fc9-41e7-4cee-b424-b1dea359fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9408c1-a190-4b27-bc9c-7011586ed31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b00c7ac-bd00-4614-8005-43aee0176d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d770b521-35a2-408f-bc25-341495bd8339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2f2875-bfe0-4176-a001-373a9e186764",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b077750a-c09b-4f83-a3ae-6565b09ea0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fd1601-26be-4006-ae83-ecff1b4d05ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a810fd41-e932-45cf-8f73-522138a76013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5ace05-6f2a-4075-8322-e5365956c950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6255a411-c5bb-499b-a063-a70055364fed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caba85c-7205-47f7-983e-63737cc6638f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f258d63-2e10-4c1f-8de0-81fc8a791457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2658aca4-cd54-4f79-b44f-1c709c554db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62af4a68-01bd-4d5d-a2cf-05faf39ea9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa057e52-bd7b-4bb7-b22e-16442c6c2cc2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d08e658-c47f-494e-acc5-f7a71f72fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555c9e54-4317-49c4-a994-a2a001d70d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d5e41e-7894-4aec-89af-2b518e868229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "641762cd-2b9c-4068-9be5-f0d89bb4e6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919b3818-8d0c-4eff-bcaa-202bd0733c33",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfe72a0-61d8-4bb3-bc46-fdc398e4983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3bebd3-ca86-4727-b325-34de8158a9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fbb74e-3801-48e9-a402-deef86f2e5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8a03f5-846a-43db-bc31-b9b2b51b7a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9ee856-49a5-4a0d-95b8-6c745742721e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081b488e-c9c6-4f52-a71c-3b37c50f0a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3edf10-5fd0-41a0-908e-f6233f7e975b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ec552-34a0-48a0-919e-99d22f61a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4ad358-38bc-40ab-8812-fab1fe32462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ff40f-1db5-4eb5-b881-83ce375ec5cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c20583-d59b-4f39-9e3e-3c7a09eae305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeabfd9-b129-4904-982e-7934e581ea40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff16481b-6f30-4ebb-9e62-a14a0858b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a694718a-e393-4507-9f66-f4db39b11289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d6b9c-384b-4010-93a3-954176ce17f8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d383b-6dff-4657-9fda-65c8ac2eb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b978c94-6567-4d84-ad39-f34d669087c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf17760c-b2f6-41bf-bae8-b48133403b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d287056-e17a-4f5b-98ff-21ba70a3f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b788bc73-c79f-4b59-97e6-b4e62f78a4bd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6298dd-7594-47a5-98ee-667717b0e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238bc69d-57e5-49bc-8ff3-9d6aa2ab5312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb6a71-e2a5-40e9-80e3-706614c216f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d634f29a-92a7-43f8-b089-05617912c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b4ce43-e392-4565-9ad1-c947e775ff0f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357c5d64-863f-4102-8fbf-d3b33f9c1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cf29c5-bdac-424b-876f-8dc3a2bc3196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9f9be8-b34a-427a-9cc2-18160764be3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4157d7d6-b8c3-428a-9875-1dcd9534714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10048fb-68d1-4a58-aef4-9e4db39a4853",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2f6704-fe01-468f-ae88-426abff02665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ba09c8-8e47-4cc4-858f-a9fb33181b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b30d06d-5c5e-4719-86f1-81f7c6fe4ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cefdbe0-699d-4be8-abb3-69f84d8bf093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e2d6dc-363a-4b84-b173-8e0b3fca48a6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de3a2b3-d7a2-4c25-8e16-f8ca978a274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c2a385-816a-432f-9291-9a79b2bba018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bf147d-3a30-4f03-8d56-11f592543b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae77e58-844c-462e-9a71-4511cdd41ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fbd46b-426f-4ba1-a6b0-0100985ce95f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7fc798-c089-40ea-bcb0-2383203c3105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df761a9a-f84d-49c9-b30f-1a2e618b6a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138c3ec6-2907-46bc-8b21-cd842a10ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2e2a4b-5e88-4dc7-a308-e5b9d7e9964e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6618e5a4-7040-496c-9294-433a42d69c50",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e9b568-fd2c-4e1b-b1a1-b469387a32a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72a8065-1cde-4fe8-92da-ec04305e4197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c8f41-5420-4c1b-ac97-2eff743b2dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b964355e-7894-4552-ba02-b3f9ad029bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfc06ea-b6ae-484a-a46f-13f0dd027b96",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adef9de-213f-492c-999c-608de5780701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1f2c9f-59ec-4f59-95a2-42e2904f9410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aaecea-44e2-4540-8279-80279a2693de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daef186a-f0ea-4661-8d2e-a53dc438a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631db793-226e-4c00-9f6b-79858e1fb464",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a492b73a-c75b-4e2a-8f19-53d0abe6d4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951b1177-6ada-4dfa-9f87-73a82ae8689d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19d3994-ff89-4a69-bb00-ab58289d3d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3d41ef6a-0eeb-494e-8eba-0a21cca627a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82dbfca-34f7-40b0-9e21-7e6038620f92",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c40a29-5ed5-458b-b195-f50577ad5201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "760fa8aa-d2de-481c-8925-91d7efce1bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45687e5d-c294-4128-a74c-1fa70dbf152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59069a6a-bd3c-4868-a24b-0d203b5765e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43bd796-537c-4041-838b-c9d7d1d234c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efab8cae-5ed1-4ec5-952e-ab4efa0702a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39d37f8-035c-45c2-a83c-de4b6a246f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e19162-96e4-4649-bb48-77668fdb4ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d345acb-39aa-487b-a6e1-c826a5a9641c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f4c30b-df2f-44a4-8297-e4ebfe779371",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295ab06-8a11-4c6f-8633-d7ba9bc72197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea0c0ae-bfdb-45ab-bedd-d650513e72e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bd3931-dfd1-4d91-9bf2-74ea8a3c3e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b63285-e64c-4d85-ac0a-856eb2df3b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e968e5f-83f8-47da-a2ce-67140f41c300",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ec84df-747f-42b9-a52d-53b8a503fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ea79ca-33d0-4954-9e66-54db1cb8797d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b754842c-8496-4a16-90cb-29ee1b9fd388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b94e3c63-e73f-452d-b7fd-161873a052cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6503e2f4-3f74-40de-b762-5c2061c1215e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87e7528-e251-402c-94b9-d82dfa20dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdc5f40-f021-4b61-bb91-0b3833ccafd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ff4c8-4b30-4f2d-8783-5bf2e409847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3884ae72-5c88-4d12-9b21-b4e8153a4821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a99306-f283-454c-af33-6b36a45bcf13",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9b1c4c-3274-4706-8186-05f343e2d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49c60f0-874e-47ff-bffe-dd9e63a91baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8b5511-c019-4914-8b09-36cb23836008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51fab3d-d94c-4950-bb07-f9c4a8d65518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd564803-9d5d-4113-a93d-5cac0f70e0fc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af910f-b304-42dc-a6cc-fac71c039843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838c403a-525f-4eb4-8fc9-e93d64ddc4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd41aeb-4340-4175-84f2-49e63791d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c6396a5d-6f9e-4b7d-bdfc-dc2d4f8d131a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfe411b-7065-4a88-b11c-60a5ca91a508",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c586d58c-372a-41d0-bfd4-a5c4f8d882fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6312b286-c8bf-47df-8775-01480708ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da5349-1cba-4699-97b0-9f8e34a7db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a1ff8e-7f31-46c0-86e4-f52afbb4fbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92710bd6-683c-43a8-a4c2-edce16ad919b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e81e8ac-c6be-4ab6-9918-4b0514c958b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6530c18b-e33d-4193-a1b3-099d29755a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8fd292-c922-460f-ae83-0b0fe8269af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "21190b24-3c50-4f46-af8d-94ee5419e441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d279d25-d939-40de-af93-0c407f08fda2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c6486-c62b-4406-b9e3-09fd7e3842e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100aff09-2ea6-4ebe-badc-0d87b6ad45ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2895465-231f-47cf-b859-51f26886ffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82c926b-14b2-43c9-9fea-d0b90953cb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81173e96-8221-46f4-9692-d2b98d4d79fd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92541ba-a4dd-4ae1-9ba4-fecb6559b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2729e34e-3eca-4d29-8061-07048d00545f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137bd805-4639-48e6-82ed-b6116cf55a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d98edff-a03d-4c05-88ae-adeeb1753de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4672f5-9dc7-415e-9e93-2a87eb380a64",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bfd121-6fd7-48d1-a16a-b1f013da6842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eaa29c-46c4-4d9a-bd43-75081265d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c20e55-d166-46c0-bffd-61c4d0a0563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a876c38b-fdcc-43e2-8727-d3e5031dc9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18665e67-c22f-41c3-b92e-af2f0029c64e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e5eb94-d9a1-48e8-8187-b0af8061d9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b644f68-76fa-4fb9-9bcb-6d02dece2aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fcc7b5-6535-4e20-88d4-5e6999c96725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5158dcc0-8680-42a5-991b-68a736766a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a5c93-4804-4915-98ff-0c85752caac7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd6328-6483-4c09-8a15-c00d59438d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a736446-73bc-4aa3-a26b-a1161839cc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff228b3a-6b78-4bc2-9312-dfe6d49b3674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e9882e-cd92-4dd3-996c-88e4fc9b9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf4155-ef1a-45aa-a965-91f4f9440071",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba032b5d-3ad3-4159-90fc-f88c8c9a9bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac36d6c-8a2c-49d6-a813-c624b7d1a67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90307e4-3925-4638-bd38-ca325618e066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e103977c-0c53-4608-b78c-c2ddc82eab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b35adfd-c632-4728-b752-340e446978a2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2185965a-d5bd-4221-b740-fc599879cf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d438184-6b55-401f-9229-aa7f55517fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302c1c5-209b-40a7-8c28-1a6bd0dbe89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1a5f36-eab6-41af-a76c-a8f23d950618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd643ca-a415-4850-9a81-993969f01c17",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74dcbf8-dce7-4d3a-b89e-c9a200fc86a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1417ae4-53d6-4312-964e-5858f29e2a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5f4c53-8eb6-4a7f-b626-2644d9d05265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf9427d-cb68-4c9d-95f4-4e4da7ba54eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e14d19-e48b-4a16-9a5e-6a4c03846652",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd49a05-5b00-43dd-b411-fba597d27b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f193b7-ae06-4ddb-8b95-d05e2b7f01ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fd86df-e222-4ac8-9996-162823fa0c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "657ffef7-c621-4105-bb5e-6fe924161c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35a22be-298f-4c62-a37f-574af50d5204",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dab6ab-c30c-493a-9fd0-43cecb99df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c528ac-d41d-46b1-96bd-d0ca87964098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81198be1-39b9-4293-ba6e-607837165885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28db0d15-bfe5-402c-9a64-fec81156f02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629d39ec-552a-4abf-abad-de43cae0980a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f80d53-f9e9-42d1-9f44-91e6b3f50ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab58e5c-374c-480b-8cc3-f1c1aa840912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c899a782-b503-42e8-b2ec-d667aef93491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "892acb5d-307e-40da-934b-44d74124413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36aaaa33-c14e-43cb-bdef-ec235347928a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba72cfa-7bab-4095-bd30-f56247d527d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79c1a4e-a1fe-49fe-9ccf-bf897d1c2604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c18b2da-905f-4d6a-b95f-5194825dfe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e37dad70-8733-4690-93d9-644e08a01bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d71d405-821e-4c59-af28-4857a0dd9bb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932deaa5-5680-4307-b9df-eb327e4a1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c88aefd-c787-4e67-9be5-a62dc8750298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc3ed8-2c7c-472c-9aaf-0688fb223252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40441ffe-7832-46c9-afc8-3b0bfd8e64ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3267ef07-37c9-44c4-9a57-87df1e794ab0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28567194-5857-4ad7-aef8-72d99910af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14067cc0-15a2-4776-ab76-530cbf599637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c042d2d-7647-4454-aed9-fb89e38727a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fccce472-a037-4b18-b154-d55187a3c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defc83c8-6ebd-4948-9e5a-ea335de7308d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b74d8-431e-4a6d-b8c0-ceeee027e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8dfa3c-8501-4112-a5da-1ccdf6e2ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7423d5-e8b3-46a2-910e-f752040416f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e2e3f1-297c-4df1-b55b-427a4848935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640a1aab-1faf-4d81-a0a9-7d9e9bb86404",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb69008-88ee-4bd3-bf1b-fb0765dad1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f09786e-5f96-4f78-b681-b63573d06369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234e1e68-29d4-4497-b2b7-68cf2a9ff931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75ef3d87-bdaf-4c84-9a99-ff60e8760faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7e62d6-9afd-43e8-b91e-38b073570331",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9463610-f204-450b-b9be-f3b075ac6489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baef0f1-6360-436e-93f3-b2687d33ec95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4520470-9bf8-4835-ab48-83e791b7d567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f8a6d9-3d4c-497b-80d3-4bc3a746e060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24743ac-2874-43f9-b1d7-95f04e7d991a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c762587-1138-4e63-8e0e-e501806cc04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e424220-84f4-4526-bd8f-649aaf938211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7bed90-441b-4192-9562-a653c86d4d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c535a79d-c09a-45aa-af82-ccca86397ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4928a40d-4914-473e-8860-6e1028b4c09c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d305ec-960f-4882-a0f5-26155da2ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97c8504-bba0-40e5-8aa8-778d092f4f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9f5d85-f027-4e1d-bf42-0cb858a69e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb93891-1419-4edc-a507-c3b6a3b78695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c58d8b7-3f90-4703-bf6b-857a121fc038",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2ac197-1a42-44c1-a124-963477432fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197c8bb6-e0f1-4195-ad5f-1c9f561b5fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7ecf0f-78db-48ba-8e32-63026be4703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4b5c0e-75af-420e-a476-e22436b7ed79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b83d50c-ad3d-4508-bd4e-c3aa7d41f9a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55443279-067a-4c65-b4f0-a4d75c80ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eb2718-52e3-4882-86b3-efec11e8fd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1618f82-c8c0-468f-9930-760f65248115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26884e5d-edac-45da-89d1-9311908f0834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29764a5-47b4-44bd-a6de-39b88d010a0c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf0333e-632f-47f6-b31e-f70aeb3a3205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b298e5-92c8-4be5-bbcd-69a6ad44cc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d50f58-c244-4a65-b47a-d92b7e47fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7a2867-3614-4a84-aff5-d4b0d80662a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa70ce2c-7f34-4d32-a366-63f4b1ec022a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74170b51-c41b-4414-9f69-ed3adaff97e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a191aa-0cd3-41b3-a2b1-3629c3ca28fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18cb09b-c44a-4fe1-8ffb-1e859fc4dbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d190ccff-6334-4394-9d0a-9724b086fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c08d1c2-02be-47c4-9d2c-884c74095ddf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c24e7e-2d8f-45da-b9f2-016dc7015e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4a43f2-0065-4263-823e-2096ad337bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26513402-d22e-496c-baaf-26bf7da79830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2147198-03ee-44a4-95df-5df19c0e657a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454448ea-c6fd-4ae7-8aac-5c73c3ddc174",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c964944-31b7-48e3-a40f-5b9aa5822607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc111900-f966-4a82-9496-721bc71de3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d5ca5-c68e-41a3-a41b-6447c998e616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f9899f-dea7-4cf6-bd16-7da9e83048ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5072c3-1e46-4e96-85f3-e6c350bb0b3b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01532fe1-d448-4836-863a-c7ebf6488176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085fd22e-b2a3-4d5c-817c-19aba0390207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1a0a06-f09e-48d6-8af9-76194e438c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2137bfdc-1c98-4518-ab40-418e018f7e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609c134e-480e-4d3c-8a04-399f9bae30cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb133d9-b7c3-4f4b-bea5-a5811a45ec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a16a18-46d6-4862-832f-784a54981d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766b6d4-d01f-4e12-a569-d3d494eb1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a83ace8-d4f5-4b74-8838-e8b3b2e38e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fdb3d6-6ab8-46e3-ab51-a36e8552a90a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d776bf-ab09-4d63-9843-b03ac1f1b052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e673117-5725-4563-a7fc-c2fabb5f9204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2aeb1-640e-4fa2-bf1a-151f1a5e0829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "283e56fa-d0a8-443f-bb2a-4408865a8525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec802fc4-9d46-40f9-9761-5369e628cf58",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dd237d-c9d4-4224-9d67-7aa5b9e5ddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ba82f1-9f3c-4698-9f47-16ef77d096d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83e5f4c-b759-4ecf-9685-82a1a743de34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53f34e2-8360-46a2-a2cd-b5de2b26086e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e9a814-38db-4576-ae62-305207854aa4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c266dfb-df51-4396-a414-d08c8c5e8cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d088823d-4c6b-41e3-8280-1587751429a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a2b468-3a86-42ba-a546-3766d94cb1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ed6f21-0349-43c9-a6bd-815435014692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b5dd8b-2b69-409a-be6e-bff99390d2e5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db52d401-b9e0-4d18-ab66-88deb4cf8c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8140adb3-4488-460c-83a1-04ef17c2cb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e4710-c238-4aa4-80d8-9bbb1b701868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "328f0d46-fa14-4793-aad9-6056d031ca02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc695c65-4635-47e3-a772-2d3d3a4b222a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c3f3ed-3af8-40d5-9d0e-c02431b543e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631efb7e-826c-444f-8810-230bce866bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33c522c-aa58-4fce-bbf9-41686ad7b965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1394f2-128e-43c6-9e28-7da645ab8260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7101342-a0d9-4c04-96ff-dd61a7dbb28b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5ac53e-bc65-4996-82a6-b59dbf261e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6d64a5-31bf-4752-aeb8-a71afb5fb67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffd078-02e1-48ca-a883-a83f57f10954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a5889d-f03a-4b5b-8f4a-608490a7353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8129ab54-75fb-4f9d-8368-54fa90a90516",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32ea532-159e-497e-9b9a-21d0ced3ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ec82f4-ac29-454b-b413-68fc8af60d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5b7613-37d5-4496-a350-88577c3a3c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60bdc963-a82e-42c1-81c0-1cfc5c312d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf85859-e74a-4b96-82ae-1e3290227904",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00511d-8250-42dd-b043-2161477f5813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891d3355-0222-4c90-9878-0fe00d8d5096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f533f43-c243-4c17-98a7-4fc03863a827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14be17e1-fd77-4bd2-b915-febe34884933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f458e9-23e8-472c-b9c2-6cb6e0cbdc18",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bac3c3-2de9-427f-a3a6-18c03d2efc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e795d965-0eea-42d4-badd-2e4170a0ffa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bea50bf-699e-4f9b-a469-9d1a3739e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8865675-3308-43d7-9f84-8da2732575f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e20ac72-39dc-4a5a-80dd-68e8fd6e18bb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062ef503-d533-4bf5-ab25-e79e77263dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca06022-8d9a-41c7-8873-fbd1858ab31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3ede5b-898f-477d-b1d7-63c7ae28d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be7aba4-75fb-4d2d-849b-a81fdf174ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07122947-4bc3-4231-9d40-36fd24e1980f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551af1ed-ffe0-4eee-b969-ab679609bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16604c15-c6da-40fb-a3bc-4fbafc865ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be08125a-896f-4805-88cc-d259940a0d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e3bdef-9b93-43d7-bd17-9cbad10b801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520f62f-d189-4e07-823a-214540cd4ae3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b8ed6-eeab-416b-8bb9-83fa4b5c9d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19975d4b-b30d-428e-abcc-4ee80fe04c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4af9f44-6242-4536-a206-5ab416aa3ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0281416-cc1c-45e8-8d2e-2e1b13e32092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d9ae99-cfef-4325-bc77-87d5b502e09e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8288abc-cfb0-48d4-9a8b-64efea5ca070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11670cb-c3ca-403b-a976-2d64a23f87b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550ed38-78ad-452c-b8f8-248b5a3fb977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3de3bd2-61bd-458d-9463-f28e54a5e6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511265c-891d-499c-a302-7231bf013a91",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044ef435-318d-40fa-b178-2a9ef6c2f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d969e256-9618-4571-9ffa-f61fe0304e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a52b5e-a558-4f2f-98e2-4f0fdeb02888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61902e62-5c4f-4902-b150-0dc25360651e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc6dc2-602e-4a21-bb0e-7ed16ba694f7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77678aaa-0469-4f07-a7bb-e3c1d5f61675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2305213f-a80c-410a-bcb9-fa850c34f923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed3184-ff78-4ef6-a95f-d27b30781b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa25e49b-f5a3-4202-aafc-157971a79ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777282cc-4874-456a-ac07-12f8ada64f91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6e761b-2221-4047-bf96-77f598ff2474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aa7b69-9019-4c54-8e6c-fdd204d8f87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292b9266-3153-4ddf-8803-de83b51f1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f07ac8-badc-4c50-8afb-d5ad3ca8d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86f4ec5-b8e7-485b-b479-c68e8af5c051",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8a0f50-ee4a-4aca-aba1-466a4a2ae796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a985859e-9baf-45e6-bf4c-73f05f10e66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918aec48-8b83-4169-8e3d-08e9e0c00118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33994132-e282-44df-ac39-15f5913a2237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6a2568-184f-4e3b-aac6-0c4d178a76de",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5dbd70-f5ad-415f-b4b9-ab33815947f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95b113f-c6ba-4e18-bf03-1f80b3c58b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ffe5cd-f4d4-413a-924a-e040795dbc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae00c9a-fc4f-412f-a5f1-5df535ddbc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c7b19-3b6e-421c-bbe8-a7e95b8c80a2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff47eed-001c-41f4-99e4-3d2f0ede4e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d50d90f-08b0-4eb2-8c0b-b70bb180d573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8e907-fcba-4fdb-8f17-99ffc5e067dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a680c36-efc4-412f-a06c-0c6e057b6063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6699b70-8d41-4e19-b53b-202a5a9f1f27",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390f31c8-d875-43b0-939c-6f43923feea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea292454-7773-4ba3-a201-4d29558bfc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c48df44-305a-4ab8-b721-e7fba6897de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb13bb45-eb41-4e21-bcd9-89d5be89a3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237d89a3-267e-4a41-a1a0-f212a4731cc6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a6afeb-1fb6-4bc0-b045-d7394842ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13ba4bde-86fa-4e8d-8c78-ab8061bb02fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0087c6-f089-4598-a54f-f67685c17b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "158a0856-76fd-4cb0-9fd6-9f5ae74ac4f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e47b5923-2197-4c4d-a4a5-b9f13d54f81b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fbf4724-d2b3-42ed-b266-591363de7b5c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f59e2b-ac6c-4845-a3e1-bd9559fa8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42d1b90e-6a64-4292-a3d3-1d8e27c83ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ed399-5e19-4977-887b-1bae29283f86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d5e68d-df01-4850-981e-3ad05f5fd8b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eeb057a-5a69-4df0-ad84-c64187bb7766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06badfe9-39c0-4994-9ced-d099901a1a4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca56868-7f2b-4ecb-a225-15457e622737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08507db7-fba0-4ff9-832f-327806aa5842"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea0a849a-08a2-478a-ac6f-7ad06d062fb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57ed5c01-626b-48ea-83ee-caee0c671c4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "337711c0-ef9d-42fc-a591-d8ddb2da8c2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d57be186-56e7-4821-ab02-407a9c2a974f"
                }
              }
            ]
          },
          {
            "id": "c0e9d031-f06c-4ce9-b6bb-831fc5efc68d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d765fe4-ffb2-4267-9a35-492495422d9b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1510eb85-d6c0-4d6e-964d-bb05232e4484",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "baed25a5-033e-4f50-ba7d-50d8415290c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b3f5d38-4ebf-4304-831e-7a50e95e3406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5451f73f-1d82-4e9c-aee9-d6a4f450d850"
                    }
                  }
                ]
              },
              {
                "id": "32fc42b7-7088-4445-996f-0e9e11eadf0d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37720e32-e003-49b0-88c0-6429392f7a67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e48d704f-bbd3-4b27-9731-e7596c4ac6bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80c88aed-7253-49f3-8306-e15c70b8421f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56214f3e-c64d-476d-b8e8-9b1fe05f10d6"
                    }
                  }
                ]
              },
              {
                "id": "996f0c3e-48a0-452e-bcdd-662b523e69c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d4068c-0c2b-4eb6-8fd6-902a664bf433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44a9048f-3281-4ca7-b7a0-4e4a88f3f398"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1a9c02b-8b2a-4da2-820c-9d9d4db8d628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a2d2520-59a4-47b8-9b6c-5ee5751252d5"
                    }
                  }
                ]
              },
              {
                "id": "4fad3519-8d86-43a9-9dd1-f66bcf3e063f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d6f61b-1b86-47db-a3f2-c01edcc5b638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "745028a4-f286-4709-aa16-ad10602ec041"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4883746c-588c-4a7b-94b5-4a2adc375eb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0dab4d8-3836-4ddd-b960-cf086e8b85c5"
                    }
                  }
                ]
              },
              {
                "id": "a483d6b1-fda1-4062-9370-fe8b3cd45ce1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aad46e1-9913-4750-a4fe-cad8637a1b95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d961ef6-c624-41e1-90b1-21fa4e2c21ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5fe4a36-4012-484f-96bf-a0be6d09085e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "70b9c46b-0cdd-4595-9ac9-80f4eaff4c76"
                    }
                  }
                ]
              },
              {
                "id": "071ac4bb-cf4b-4413-a358-6fc731fa8d51",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a45b8341-3ed5-48fe-8c75-2eaac526d313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80517a82-4e25-4780-ac13-48c9f16cb44c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4873eaf8-5ecb-4354-942d-07a445370ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddabbb17-a484-47d7-894e-3d168d42d5fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f820a54-9455-4a77-b6d0-6c5037d85419",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "368b3743-f080-4791-ab1c-50e7ffb61422"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1767352a-47b6-4405-885e-eeaf7807105f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d6006fd-c72d-434c-988b-4ae4a784a2ba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2878f6c2-abfc-45de-882b-502fed19894a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3f84ad1b-7dca-4de4-bb9c-958ee6011204"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a564b286-1311-4059-90a3-e0541bec74e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a52957e4-4b4c-49cd-aadc-1e453dc79b1e"
            }
          }
        ]
      },
      {
        "id": "179f47e8-2a0e-47ef-bc7d-43e33b42d237",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e07210ad-5993-4ac0-9d7b-58341bb7a90a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0ae9fe5-5902-42b4-a280-32262f75edb3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13804b16-0981-432b-a315-bc62d1341b09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb587e-8c88-48d5-85f1-4fc54e8d4165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cdd217-7a72-44e6-9a90-f6de2380885f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0825f3a-84e3-4592-8183-1124d31f1e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27f5d78-cba3-4a68-800f-0d46c8478eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28438255-fe46-4ea9-983c-2875c2518ec9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dadb7f-9aeb-47cf-978d-53a2b1e7a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ee4d58-42b1-4116-a1be-72ce66421c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957586ae-0fd8-4b61-93ff-fdde37dd0af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fb62ed-63c0-453b-afe1-afae3c0389b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b62066-4b6a-4d54-bfb6-08b0f6f6fc9b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea04b19-7f83-4e81-b106-241f90142b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e2abac-2f20-45a9-a5a0-ace1e6a76db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb38f854-fedf-4e49-a439-f6ed2a4c0ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f32606-7c61-4848-96c2-fa5ca2801dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9343e720-454c-42ae-b12b-648b667fec4b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57245bb0-49c3-4354-af4a-467fe8a00081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed1ed60-1fa8-482e-a016-a0e4018667e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76753ba-21f3-4534-a688-49ea38c1a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "841c9a36-d2a7-4e4e-851f-86b0da5bf782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff8770-e9a9-4b67-ada6-592d1808fc6a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb0770-116e-488c-8137-cb8108d434b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f222ed65-610d-405c-afac-5dc01eb144be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f618aae9-791f-439f-80f0-e63916f1bc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fd4c53-b54e-48fa-858b-2b63c345152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde9808f-4fc9-49e4-8ccd-5cf42ed1f031",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156e50a4-678b-49ad-8a58-d433e0567e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70358ba-833d-4304-8743-48cec220e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7660049-424e-4511-80fa-341376609857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "805bf5e9-c347-40e8-9236-577bbd2f005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4a82dc-6da7-4e95-ae4f-02cc02117f2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4597ee81-20b6-4b9a-82e7-4cceb6baf1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10542608-1e9d-41ef-9404-8257d9d484d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc2d945-8c3f-480b-a293-750e4a284bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3518b3d6-3383-449b-a383-3e76cb9c5b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa54265-a24c-434c-9519-1dbdf9129101",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae753e8-c3f3-452c-b818-f7b1edfa5e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2895c81d-41a6-40e9-8985-ce4aa0d13095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051bb126-9673-4737-955f-9a3d50b45a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f1a252-101d-4797-9fba-d984f425d2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d51ce4-091d-47b9-a9fe-2c5f809423c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29098c4f-5eae-4795-bf4d-db1a0d75c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbab669-e232-4cdf-bf4e-0f34144138e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07ccb7a-40b0-4be0-a9df-f15bdf631772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b849315-4f53-4f5d-9d30-1cf0a5c2aa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2e0ed5-1a56-4c47-9a2b-0e349a8f1456",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155c0afc-3e86-4b9c-8c5a-b416cffa70e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d9b4d7-9576-4603-b812-2126420f4c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b54ee4-91bc-4ace-bd93-7e54cb2b57a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ba4cd-f54a-45f9-80bb-d21c92de8799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de7e4b5-33d4-4978-85ab-c963618f8496",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a779f0e8-2073-4ef8-9b6a-79ac5969c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d638883e-4b17-452b-aef9-7d82715af5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e64a1-f602-4997-8722-ac958ec63f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a585a12-7246-4017-9616-24eff42f7cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e186bc5-5c1a-4b3a-8046-6f2cd48f16f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e876a0-ce1b-4f9b-966a-9404f78b55ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6874c36-c728-4b3e-907a-04ab960baf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a4c57-c3bd-4246-97b5-8ef6688b1d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7768b3-fde6-4753-97a3-fc019ee8b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e20ff-ad0b-4077-a7e4-66a176c4bbdd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e9935-a226-4ddc-8f7c-5249b79be48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310ba7bd-f5ba-4f14-8abd-fe38a9b4bda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b441143-62ef-43fc-9861-f683c83ce304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ef1d0b-fe63-4cf9-aac1-48a31c383fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c68405-fb01-4176-9b1b-21f0ef5b2cc7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c2c18-1d9c-4fd5-af5e-d9bdd6993ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac4abb8-f67b-4971-8751-23711090eadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe18683-e853-4069-ba78-0e9e743f37c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f419f99-9acf-4b79-9873-41d659c54a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6ddaa2-ae8a-4d6d-8840-530e020eb44c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cfba76-38af-4142-848e-b94bdc26cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbd6bf7-dcc0-40c3-89bd-838de06e80b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ff01e7-1879-4be6-ac58-72c845181460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb9c7c7-4c3f-4f67-9ae7-641482ce1bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996cf669-fc23-48f8-9edd-8bea0ef335b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22bd481-1507-410e-aad4-916ea1e1717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62127326-6f76-47cc-b0da-b3598ae1b4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560768be-611d-49c2-8b82-716bb6f89a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3d36b0-6f7d-4109-9eee-f28d669fb627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e253a89-e014-4f4a-be00-f913441be600",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d8a672-9468-4e15-8f59-06ade17a5d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b007aeb9-d9d2-4642-9b44-9d4532e2c58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b889a6d-ad9d-43dd-81d9-88397afc6ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5f8d56-a52e-4bbf-8b26-5c3523df0dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c102262-22dc-48f8-a3a6-b3af6d1f0058",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de268a10-4fbc-48d4-a771-2788921806f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e738924-2e16-43f1-8498-8ded8117c440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc886c-a909-47fc-ae15-5de537018a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef249197-d289-4f2c-b6a2-23f97f92dd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecd8971-d361-439b-ba56-b4be917633de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e84ba-7a57-40e8-93e7-1736603666d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14ff3e5-e869-4e69-86f3-743e75cbe326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c5791-0946-4e3e-ac97-2285dfbb14d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd40f01-5341-49de-827a-47c1860e600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff658892-9869-4291-a8fc-caac18ed45e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54124469-3c6e-4ef7-874f-2f459906cb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07624b87-3381-4ee4-a1b4-2483b5a2ea11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d27811-32cb-4ca1-bc36-fecdb0f6e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a356409c-b947-404f-a469-70a1308e9851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6e9caa-43ae-4e59-bb03-16dff9a440ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c3ee63-812e-4641-9855-85b168f81ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6002b3-d66d-4c2c-9c68-9b511a62101e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086ffda7-2b6c-4158-9702-490354a01c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "052237d4-f63e-4ac3-aa46-0cc2df2320ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2824c26f-45f9-4e77-bb03-de8a04366417",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf67f543-bcf7-4fe5-92d2-2c911526d587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aae01c9-47fc-47d4-964a-b925ef691fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15360c68-b036-4df2-9bcc-7cff3b3d95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe7b766-fe46-4af1-b731-9f2eb2d81d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba7d9f9-9fcd-470e-8d75-a5a9d2491521",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d072df-f9ca-4bca-963a-0177b83784e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a47a90-52f2-4a18-bbca-72293d4338e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c361f9ea-1479-4cdb-a9d9-aadeb9d5b547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ecf5fe-fa0c-4ce2-850a-af47ff98f53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a468cf-524f-42ba-88f6-78a6fe2babcc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768018d0-ddf7-4d6c-81e8-7608c943fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942f2e51-4ee4-4038-b7ce-09096dc254f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daf191c-d8b7-464a-9a9d-ae71251c2864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ce2b55-4644-44ea-98cd-4639663d69b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def99f59-e435-40c5-a6b1-053339a046cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f086b30-7f5a-4edc-a83f-d3ff0fa319ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fce4737-e0c8-4d0b-a277-e7984bbad7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d1b99b-6ce4-4a41-9f21-4e19c45cf527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56dd826c-c4ef-4867-87fa-0612f2e376b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126d9789-5188-484c-b922-57edf54d052c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7a78ec-da66-46c8-9168-e2cd5ae27a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f728ac7-79c7-4483-a2eb-0057d2e43325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100c4e4b-058b-4039-a962-e8c0233b8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdde4cae-cda2-4760-95a8-09fb78538626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac5c69-7ecf-4327-be47-6b4353017e30",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474224d6-3741-4036-8ff3-cf97d30d66c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6948758-44c8-4467-becc-c3a950a765f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cabaff-7300-405e-b9d2-cb6d44c3029b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98645cf9-95a3-40d7-a1b7-77aaae7592d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7303b93-1811-4548-8038-47fc33f44e4d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08c696-3490-44e4-95f4-9a5b0a3123d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e8cb6e-f816-4df1-843b-c6eceb22d371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20378b7a-ced6-4ddd-9a30-088d2d0f70d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87064437-e513-499f-b587-5a3dba73bda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac3e015-7a3f-43bf-8f5d-c1a02a287201",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218a8d7-7cfe-4a8c-a3e5-66ca017f7978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca2dd61-3564-4581-ab0c-738da72b4c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2939439-8aae-424e-aa53-0d6cc487e792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d6c35b-3a38-4720-b764-dd2b43c47d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3675bfa4-39a7-497f-8d95-3b7d449f176e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281fc852-ddf1-43b6-a534-7f0f34990e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef5be67-22e3-4ba4-ac07-624b839e32dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a62421-4e4e-4476-aedb-18eda8c72c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8e4f8a-484e-429a-af19-149a838293e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b18df9-4130-41b7-a9d1-0c13392527d6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3408fcb-46e1-44e8-ab9f-81e579350dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8352c50-9d1b-4c75-95b8-566ffc612de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c51269-f4d8-4c42-9237-165533ce944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f40e5178-7ae4-4f58-998a-dbf107196b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d321c9-f986-4d13-a623-5e042cd8b722",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d95b0-fd5c-4e05-8ece-fed320329b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce52bf1d-500a-4691-a64d-327ca62324dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9af2c50-1340-4001-9797-9d862f803f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4180263b-b13a-4663-94c1-193baca640f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb2ef319-1507-4067-951d-1e8109288519",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6b0cb3-3526-420f-8781-8e0cebe188cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c77cc5-754d-4865-86ef-2f6ccae4bc04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23223fa2-8293-433a-89b2-8acf7a0d2dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1bafe2-d68e-453d-a00c-89fa7abb7303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9f11a9e-de3e-4261-a071-7108b766c032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d4fe68-11fb-49a1-a1ff-855345006508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "073efd42-bc03-4eac-888a-da87007e614c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ca7983-9a8a-4bc8-ba94-0937b796c10f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47d5595c-75d6-4cd9-ad48-68823d2c07fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3afffe-6526-462a-886e-8a0a221e1213",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "732eaf16-d471-4198-8d0c-0ee717fbca81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d009c58-4e30-4e24-a33e-35ca351f4fe4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e02de39-4360-48db-92ce-711818dff05f"
            }
          }
        ]
      },
      {
        "id": "d71b8f8c-d9a8-4e47-aa4b-5f87edd7b893",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7ee9e045-b3d0-489a-b9cc-6d8149f9f985",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e37c93d6-4e9f-470c-a17d-b5b5c5d1292f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48e8e8d1-17be-48a2-92a3-2437599e6bf5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751ab5cf-1b41-4e2a-b907-2c650ca7cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dad790-6aa4-46e3-a08c-689dd1fb6b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab548fe8-51ed-4615-b51b-a739570451c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b7767e-6c07-4aa2-a547-0cc7a93357a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e2b7cf-9460-4f4a-86dd-deb137bcf437",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220f7a91-7c14-4027-b95b-62acebe19f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6f6e2f-e914-435b-9087-652380b6b60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16648bb-2a46-42b1-9edd-4d28dba52192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d90e92-c81b-4378-8daa-b4cc1a888026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4135118a-76e5-4f4f-8453-430d98d7ba56",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd09001c-4ebf-4f00-a7d8-bbfc4653decb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6ffb4a-5cc9-44dc-82fc-70aa3b23431a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0bfda4-3c83-4eb6-9445-4f0e207b969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f76105-8284-43d4-ab90-45e668d38153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0691d823-17c7-4314-8191-713ef3492f17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e35d6d-a0ef-463b-bb60-9b657781456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28597041-c451-4a22-b57f-8a671420e6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa551a-0511-4ba4-8c6b-bbd693b1cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a39584-17a3-469a-b9ec-038cc4a00024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c89a64-2184-4276-8c20-93a7a5be0d85",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b422824-535f-4a68-8f9e-b3db79bcdd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e706ca-5dda-4f6f-9a3b-f2759642e33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b04374-eeb0-4be8-9fdb-724d9ec013de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "797ae2ee-ae69-4544-aa98-fd9239377f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b26dc4-2bdd-4168-a7c5-d83cda49b3a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d8e47-9644-46ca-8fd5-5578d8e26d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbaeec-f312-4e8d-b657-be12c38f7391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d44355-8469-4128-9f05-0d40323218a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f120f175-502b-4a06-9cc2-d1fc5801ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe13557-f14c-45e9-8fe2-9782c0dc5cb4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c6307e-9692-40bf-b97f-4466994c144d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97dee05-07c1-4908-8138-27fe4e8e5f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae68656d-8818-4f5e-a42a-3bbaddf60a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4da7c7b-2734-4bb5-91be-de8b0419bc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0e0f04-723e-4c6b-9b4f-723aff3717b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ea8cb8-4f54-4ed7-94a8-95ad256cd985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077103b7-77a7-4256-a58c-c56b755640ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7fedd5-8da3-4ba0-92fe-2aa6cdc4eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "379a2674-0de4-4e7f-b261-66373f109947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be73987a-6c90-40c1-8aa6-b56e50523dd5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3b8ce2-820b-4b34-a83b-103f24a9b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184753d9-890d-4cb8-95aa-a65b62ce4660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1d0342-0eea-4db8-8b52-4f047408d312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb02171-e88f-4823-8675-9fd20abe7c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745580d7-3719-4ce6-98e3-b15011507f0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87243707-8b3b-40da-8b2f-41ecafbd4e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a80696-6543-4661-bdfa-f7b9205835d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f5a92c-750e-4da9-9e5b-5c5a0141a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21575ce9-c6a3-4b12-8b61-53f6ab7a5d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3b9454-a701-4c2e-bd74-d33472982450",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44394ea-55df-41fd-8ef8-78a5d50569b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40029ec-2704-41b8-9f26-bb41bf85318d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644caca0-6e7b-4801-81e6-55a4f0d32592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cb029735-c76c-4c76-bfae-725e5be6942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbbe9f6-a473-4280-bafc-8fa268593d28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f5ee7e-90ee-481f-99f0-934b4905f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac1d71a-9626-4511-bd9a-fafa86b39a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862a08c8-6da6-4040-bdf0-e53756e2cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63f5c4ff-1616-480f-bbbd-e3701ee48722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db649cd-7a85-42da-a304-5a5feada1144",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f213a974-36a6-423f-8ef1-bdee543934a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5731c68b-9469-4d1c-9ef0-804cba3a193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8f4c16-9d1c-43c7-b521-3bfeb7032ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11dd4e27-da52-4ee4-884e-1461f076266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97a4c44-5990-4e91-86af-87ce3981b138",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78790e30-7ce6-4098-b6f9-ff852c935ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7dfcb4-ed80-4ce1-89d4-173bcc91497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a846fef-7df3-4f85-8fe9-8c2eff23674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "942b91ec-0b37-45b7-8487-d5e6c92d539a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced9f891-a273-4e7e-924e-7a63668a1fb6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c695ee-061d-4ec5-bdb0-b4d4b5fa872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6371afe7-6b2a-45bf-8f8d-59bfee8c3cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a384e8e1-8c26-4dfc-bb6b-870927f4e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9d7aba-f170-4c51-8671-46f8bd096672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b5289d-48e9-487f-9a67-9146f37a5b8c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f56b5-c69a-48a5-8944-6925e7926f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f2b2f5-9d02-4d7d-8064-62e44009ab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbde1e6-b10f-4517-a3d4-b2f15bcbd45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc3066-ed19-4697-9e3a-0432c494de5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeb61be-1bdb-4f00-99b1-8f929940f79a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3422680-e218-427d-a7b6-c7faac4c7d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde6330b-4e5d-4f59-a3a3-20fc5fcd3c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac770b3f-721a-4a30-9211-b194315824f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b551bb-db25-4009-b8d3-399a9dd229ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c21000f-7493-4623-9305-f68d166da052",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b371e883-82ed-48ee-b223-c04caa098818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2318f4-aeca-439f-8a45-3e2c24ee87c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb6b886-bacd-4fc8-97c3-ddeebc108c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cb077a-d4d9-4e13-8b0d-410f26a37bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9b4a3a-89c0-4d60-8e33-c9f1d79e15f8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d9ae02-b549-4899-9cb2-55ec88d3db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64633558-fbcc-4374-9f51-35a6f0d7a766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134667d6-11c4-42b3-9ca2-e0c186795f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad47882-2eb6-45ea-8538-592c838e9d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70196c78-b9d5-4f8a-b278-d2d9e7b7f536",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b98b8f-c879-4295-9fd8-7bba1837b962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369b7119-f291-4697-bda7-4da5cccf7f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992ae3eb-f429-4718-b5d1-85e8ef525be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76736e36-d0fa-4db6-ac9c-2a4b2da764b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd4dd01-ede2-4433-a4de-ab5f979566aa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3c00d2-5d9b-4208-8ff7-974c8bd90c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00e537d-fc04-4144-8aaa-6894cd6832f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b100764-9a9e-4eaf-a736-b20454ffd9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5689a63b-8507-4f94-b9e4-15b30c73b03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7860ac9f-366c-4d3f-848b-3890099df8c8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc9c894-0477-433f-8f70-cc5ca46456a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e528cc5-cdf7-432f-84dc-0940906fd20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc69bbf-4a38-4be3-8fa3-cd2c06efdda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadc8564-e847-48b7-ba4e-8a970549bf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb2cc05-1e54-460c-83b3-973865ed30aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587f8625-5c4b-4846-b735-1e4518679bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee18fdb-bbd9-4b08-9307-c3da9cd72d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6da913-2f4f-45b7-8072-bfc15fc844f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9bb00f-af6e-4d5c-9fbb-71eb1622317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b02a31f-de6b-43cc-a3db-2bf08bde3c6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea65254-4e5e-41cc-9bd8-acfc611aefef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9bd680-0421-4bea-bba8-a550707ae8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a92a15e-484c-4fc3-b29c-137c98d0cb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c222d27-74de-414c-a0c3-fb657bf9d1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f44290-c6c5-40a9-870a-359cc33c2322",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cfeea7-82f6-4797-8acd-cb4ce71e1dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be614eb0-0734-4e98-8955-5adceffe733c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a07f8-6784-4d54-ac37-7b3f5d1b45bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14bf3b53-a846-422f-8379-983865531571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db0b233-a3ad-45c1-8849-f77586e9e83d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72081ef5-13f7-4f0e-8738-7726f7402be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753c578e-b422-4d6c-821a-6b255ea24d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e875dd79-33dd-40af-bd50-1f608cde6e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e900da9d-be2a-4ba9-94e8-3f1bb19d5555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017fc1a2-20d9-472a-8242-68b42d3f36e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb6af28-0fae-4c54-b972-0b39de6e09a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb94230-da2b-478e-b9be-e3b48bfdb7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3205e45-4acc-49bf-840e-6b1add0c6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "328cd1c8-b672-496e-b34c-5fefdf5e1054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4970c8c-467e-4c7c-b29f-31b959e639de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6615b28-8347-4a3a-a36a-5c4dedcfa466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fd006c-e97d-4f9a-b10f-a00a741b4dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fdc44b-3fc9-4219-b50b-5d3fb0ed75fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3abe939-7489-49e8-8001-d76105bc3ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0255f354-db49-478d-acc1-ccd717e47062",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9317529a-4923-4cb5-9b1e-150ed56623e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b1e12c-cda2-4711-a4cf-c4ccee524115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8924a878-d79b-4348-aff1-21ccde5f247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ae0e1a-a687-4516-8fec-8d8f2e0a6cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb42488-6271-437f-8559-b78a4b0b5b03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee33086a-7aa5-447b-aa57-dc90aa5cd041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a386943-7590-4f4c-a22f-7f389d1e8c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0b624d-fbcf-426e-99d7-60ac9afac4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d90cafc9-4f03-4b87-baca-77a088c1913b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa184223-3482-4c53-b518-955da0d3c6f0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6607b3bb-b08c-42e3-95ea-99575a930fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad05c371-3046-4e46-8a80-cfb152327565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2bd9e2-ad1f-4cb0-915a-32b0e90e08a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "549847fb-326a-4d61-9d7b-7125a7bc9852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60feb31-9e93-47ff-9b1b-08314dcb54b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0ae678-2390-4077-ad8f-bceb6c3fbaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c517d77-8f28-4cfb-a838-8d019b838545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dcb4ee-ea66-42b0-9ecd-ce916fec9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0524a581-661a-4ae1-b71c-238a1e9e351c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a445230-b517-4335-ad7d-7261909a22f3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64da7e9-a45e-49db-918c-8e7070cfa1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d3bb0b-f1f4-40b5-b15d-575d08c77ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37036f4e-8cb3-487e-8863-b865f000ecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d14f61-1506-4136-8734-ca492403a33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5460ee19-1b21-4659-8bf8-69dcb95219aa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae99d29-b66a-43e9-ab86-ea9f2467b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc8fe79-1ca5-46c8-9425-160674ff4f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e962d574-0e76-448b-afe6-d0af3373b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f080e5-4e10-422c-8613-94258e0340c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8959d5eb-8c90-46ce-b0aa-228c28e646f6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd76c1df-465e-4698-a0eb-d2be2bd76cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a88a22-6ca3-4793-a027-2e71a2dd6c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326a1539-e9bf-443c-a722-96343ddf4903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e84ec63-5112-490d-bd64-5de66dda46c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d968dd50-30a1-4862-a237-8203234c2a43",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878b1ece-1fb7-4e69-bb2e-e1d66f30aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e39622-e797-4e69-a390-6f0181ec9116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a541538-568c-41bb-b168-47e25aa61e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b79ff84-37a7-4663-a772-ea5af1b73bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28fc86f-7c56-43fa-a81c-a51bbc49b24d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f626a3-cf80-49ff-a344-4bea77d8ff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbe3eb3-336e-4f3a-aef0-0326d14c550b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7651da2f-28a2-4271-b799-a8d02334c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9304c839-7ff4-4db6-bcd4-b0653cf1d344"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce247782-6be4-49cc-809e-76ff058c67a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e05c756-cca5-4a4a-a652-f7feb1aa549a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5eb8b6-ff6f-4c10-a92b-97ec74867b06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bd44f60a-1d83-4c36-8de2-244d41625221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be8062-87f7-424d-8675-0eed7b2b440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "287d7c1a-349f-4337-8303-10b41cd2f294"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16857c6f-e433-4e3a-b099-7f8c10fef05b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c692a185-1250-49d5-8a1f-62bff74aa17d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac6d5883-11ad-463c-a0fb-794dd47f5820",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "358de657-98a0-4823-a843-6b8a85e32bed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c321f59a-1df3-4ed4-82b0-d07e62a4b8aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb9459e8-0654-453d-a266-2c3dfab0f73c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf2be6d-766b-41fe-bd96-41354e813a62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc8367e7-0f29-412b-b014-f9176db6dcd8"
            }
          }
        ]
      },
      {
        "id": "f68422cf-2b1d-4e36-92bd-bdacb7ad37c2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "93fd6f68-e27a-49dd-943f-5179d2dfa174",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38acc893-e59a-4303-98e5-002411199cf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06a09f96-5875-4c30-91cf-23723fbc03a3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615ce91-cc33-4368-beea-22d605e0ac4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8dcae7-a224-43ec-af54-c64b531a69f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f6d3c2-63d6-481d-a14c-e8d0028ac36c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cca093-8280-42b7-b9f8-5215e935630a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d220704-3574-49df-8438-d6209b18a864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b3f8d5-25a7-40ca-aee9-a34e7710a912",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b29f9-008f-4940-b437-7ce75a2dad75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d945f7-c746-448f-b621-0a0237a0b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9373f7-eee9-493a-bd5b-a48264f41005",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e82a9d-b169-4859-9168-b8fab75d8a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9bdfc2-690c-427e-817a-64b4b066297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6013de72-5b0c-4eff-a044-3c600b679be8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45cad7c-27dd-4193-998c-13059cbd9b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd60e94f-6316-47c2-9878-f83cc3dfff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a85e482-19a2-4f8c-8004-406162108ff8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b464d3-9982-4f4a-be82-75f31d6f6a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7e0e93-c1ad-47a2-8a16-26b3ee54d279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edabdadb-ea9c-44aa-ae4d-22fe6308a714",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a840bbd3-1062-4652-b902-843e68ea2633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74290047-4efc-4897-a076-e801f3c67616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717644de-bd92-49aa-9544-a3d655a88851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a4f10-9863-4afe-bdc1-889606fc7dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462abdb0-cd27-47ec-84b3-583cf699cd31",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53debe1d-1c5f-4cd9-80ae-646f2b9b2a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2ba101-fd7d-45f7-8dd0-d802dfe83d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96211b9c-9c5a-4306-b9f5-b746a4f7d564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6664067-4d40-418e-bef3-43aa207cba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a4c99-2419-4aff-b12e-7e56e7c54814",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7ffd7b-2749-46c6-9cdc-99b663b70097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035d4021-f205-41ad-8190-4329e41c0d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7021baa0-1360-4d14-90d0-8406da840493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32da129-0ebc-4c29-89ff-60e19e7bd1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000c014d-41c6-468c-b610-7560d92e8a0a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db901452-4a1b-48ac-8c55-9c17d9e10862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68853a8-fb5d-4656-8867-b2184841e95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42624e49-4f64-4a06-ad22-1a0670308c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f221465b-8325-4f71-be1d-8c159332bad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8e8e60-992b-4944-bf24-5d07301db2fe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe0600-8798-4a79-a402-4e5a73e9efcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674662f3-309e-4628-a543-67fae3ebdc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2783e693-c9c6-4747-ae64-dada3766f1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ec628e-ae33-403e-acc7-c0ae184bba36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025b6d10-5d23-4e16-b0e1-f9cc0c02b1de",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24817986-fa97-42d7-b31e-362aa16637fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb95e65-8930-4b93-9c59-cd8512a64c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f9d859-d212-4439-ae0f-20efad48f18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31338e4f-82f4-444c-b54b-b00d68920f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6b13b7-1615-44cb-83ab-c0350546302c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa98debf-55d8-4373-b04b-1350601acf1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18c9623-c591-4b47-9fd5-c854d61a3048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a6d62-1390-45b0-8598-f635d1bf5ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e883a78c-75b0-4e76-92c2-a92c52ef01ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffd6a85-feec-4566-bd57-6726cae0f5bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccf5b3f-8beb-4d82-8c89-e369d5a8b4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c68dc9-6c07-4f80-8124-9d96bde6ca69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef571c8d-bc5c-45f4-9948-dd9760bfbf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ef3f1b-3ce7-4817-856f-51e063a3b769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9b0140-c01b-447c-903a-e83ad6ad7338",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c820b9-e478-42b1-b9ec-9c4f9cb0cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40fb269-a309-49b7-9e7f-b8dcc8c7ae6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e5f64-fb62-4a5f-bd77-8bb07cd87a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836d4be4-840b-4b48-9428-2a97dd967cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f6835b-fb67-4635-b350-a552523ba614",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fbf46a-cb67-4400-834d-babb5678fb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673da351-ddb7-483c-a724-2501840cbed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ba120-619e-4d36-b4e5-bab07a329977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7d5844-c8c9-4ce0-a4c8-0c7d3c61e6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2a545f-c8d0-4bb9-aac9-ad206a366b6a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c135cf-a9cb-4d9b-9dbb-77700a18f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875a3f15-6120-42a6-8aea-382e87343a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdc46a-1305-4dbe-90a7-32a0e31e5848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cb0e59-00e6-4eb7-a6d6-8700378fdaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f68321d-e96e-49e2-b39d-ad6d799548a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7b3483-c7ed-412f-aa6d-65a23ebd2766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80ec754-109e-4ef2-be7c-a607810a3c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5748dd-9aa8-421a-b9aa-b38691854d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a782c5-cb68-4d39-8b37-c1a2f1247477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f25f7cf-58ce-4416-a8fd-62210fbb7603",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c142f4d5-a8d2-423d-9752-862bc74558fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef6bbda-f232-4f9d-82bb-c4b00960d815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79711e03-de77-45bc-b24e-641900d2f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43c0f97-7b38-4439-a225-eab15143a231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71dbc9e-5729-46be-90c3-8b88fd12356c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64e3b8f-50f9-498b-992a-5349923cf860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019fe72b-8b4a-44fa-8672-d15ab2cc54c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f84db9-e259-4c4b-a9f6-f3b9318cf534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2036a82-fff5-4aa6-984c-4a7a1655be9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30973c7-43f9-41e0-bd49-dfa16b47ce36",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afda8d2f-b5d3-49d6-88be-82377ebb34d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aa0377-15f0-49bc-9b7f-ad2a04cd6cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92211471-544e-4ca6-a017-22868f674a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1a4905-4ddb-4688-a221-198589a4c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a077393-4db2-4cf4-933f-48194b0a59b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b011ff9-3d53-447c-8206-f77518601ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d42fbb7-7cd7-429d-9292-764d1a5e6305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c260c36-3e87-4041-befb-5dfb9bafaa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c68ea33-7ef2-45e7-a63f-d4069e83d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535a5916-b119-4604-ab82-9c14cf4b387c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1068bd-0b0a-4aee-977a-b5c96be0aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fa14ab-c209-4c60-8c9a-6aa69904b347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a07d93-8f89-43ea-8d34-d3a3dad51d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4188a805-ef2b-487d-9e7b-605684b2e656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0738bf7d-d66d-4629-9247-cc6207bde531",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9064b9e7-fc78-456a-ac77-873b249f3a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a593dfd-ef25-4be3-9935-d20942bf35fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988356c8-d1ed-4ca1-8898-50cbc6962bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44472dd-e437-432d-ac41-fa958366d0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10bbc6-3982-4160-8f82-879332e870b1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177d030e-0557-4338-a58c-0344f5e92b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6822696d-eb96-4c8f-9dbf-a239f3dcc949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c16a6-901a-4407-9bc7-35129f8686d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a5e847-024a-48c3-ac8a-3a40fa20cd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b1eb22-5f8f-4a96-b9a0-e13c70475ac2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f539633d-c96e-4ea9-813a-93102c661f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf0902c-9d8d-4ce1-a5f5-6dd8f571fcb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1dd4ac-8e8e-4ce1-a900-76065f771ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddae4f1-ee6e-461d-9c2c-db3947fcb482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f516a30-383f-4b4d-849b-e9024ef77eb2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545d77a-eecd-4017-903c-0a7413bacc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292f8866-8880-43d9-9864-bd064e29d95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d310e60-ad0b-45e0-a3e4-210ffd09901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8abbebe-ebb4-4f1e-a9a3-b1b6564e9073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97b550-3193-4ade-b97e-bb5d3daa039f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbfa0a9-de36-4587-9fd8-1851554658d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793858af-4fab-43b2-b148-78063230b696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2215dcc-3f83-46fa-b1e4-268bbc2237bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06724d2-f071-41af-8d4d-5e4eb89f803c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7abb5a1-d9bf-4320-b674-f2401b534733",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004bdede-add0-4fd6-bab5-0754eddd5045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4ed761-9a14-4e9b-ab9c-e6004596a05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2a576-6551-42bf-bebf-09de40986a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9943be3-2d12-4e8c-8431-01e75ef9dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d376e33-ad17-4d8c-97c4-8f0bd29c7e64",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b8d32a-d705-46fb-9138-f81307cd5f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd64aa87-c691-4567-8b8b-aedf14ca68ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040aac95-19b9-430d-9256-1db928a7ab21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c8b68f-93a9-4307-af3a-be8f72194f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a10794-f9d2-4d7f-96b7-422ecad92084",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b7eaa7-1dc6-4c64-b2cd-b17effd11887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2595a63-6bb0-41d4-8e98-531fc0eed5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc26a8-1f28-4bf0-b047-fe4826f8e589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a0d95b-51fd-41dc-a6b2-8eadd3b90a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8904eb9-b9a3-4c4c-ab6a-0d5cdb374062",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49940787-fd4a-4e04-a6c5-63d248d3040d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae2cbc4-95ba-44f9-bee2-7f032e8c42ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaaf5dd-7f62-473a-9e31-5074b2e488e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5227a2ef-5900-4a38-b68f-c412189df2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee9a537-0fff-4d07-9a25-76c3603c93bd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c016b2fd-40a9-4545-b550-8004cf2012a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c04048-c81f-4db7-bc1f-f6fb6d05e088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db1fe3f-8f8d-497f-8375-fd972a02f158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5300b9c-e510-4af5-a65c-74bbce1f1957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5dbb52-b373-4ec0-95b1-3489fde6e38c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09f6236-6c5b-4f1e-99e7-812cad40aed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98dba111-6d81-488a-be64-53f0314b5619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712652fd-b05b-4835-825a-cb8721847694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f266534-357e-4d3e-bff2-b4859c965b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c75c065-f9bb-4b43-af2b-52e25dee4bb1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3197a5-b7d8-4c82-a5ec-a3758653d142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84045c2c-29b4-4cf4-9b98-c63f9aaac08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73826a6-a6fd-4ade-bede-bd06e6edc5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddef6d18-d532-4645-be3b-4f7c757f26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2a8a1f-b03d-4a3e-af7d-88eb7ebf13a8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad14cb48-2376-4eb8-a0d3-ff7ae2074be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0f47b8-7116-4bd9-b793-0157fe25bf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4100aa02-9a79-412b-9c25-1d33d7e16654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7baae0-e056-4dbd-adda-ec2ef545ee21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c5314d-d152-4b52-bea8-5a2ab214a42e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8627d21f-f143-463f-b702-dfec226f2eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2194a99a-fd02-4bd1-ad5f-16710c6a295f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910cec1b-2714-4bc2-b964-a5f1657f3af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f2bf78-7fa7-4f10-861e-7c89d8784ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0227919-7d1a-4013-a852-6ede8dee58d4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8afdcd-300c-4680-a16d-85d212b3f7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05931df-8198-4d55-8c80-f80b95287a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c61f7-161d-4b5d-9931-47cdbcfec9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aaacec-7db7-41ad-b76a-bc73a1b4def3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efb55e1-f393-4527-84dc-85ce19e13309",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46d45a4-4c5a-4407-9549-3d5d7b78f0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7052503-1565-4660-b57a-c1fa15c45495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa523634-e82b-40e2-a9fc-7dfdd5753327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75130856-1b1e-4591-bb16-6350d8a6211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0156bde2-1a2d-499f-8d82-2d456241aabc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2fee96-3192-4ea2-8b56-2683480fb1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b6d4ee-71f5-4217-8695-724b36c05f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316310f9-fd2a-4e9c-ba89-5b108b49d413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2741fd6d-4ad0-4d20-8680-23a621b8a5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad6fe5e-7f8e-4aba-ae3b-b6da348d0ccc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518cf11e-2092-4861-952f-b282e78811dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619d17f8-39e3-4ff1-98ce-e2bd6954fb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463767b1-d892-419f-bfb8-bebce9bd1366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376cba18-3f83-4cac-a5a1-d69628baa5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec59324f-22c1-4f69-8286-914fb79f66b6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f710463e-b54a-4304-b3c2-0c3cb1460394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9323dc15-d872-4594-98e2-16a1115ca43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c188d1-ae50-48c1-bda1-adbb31acf7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3aba6f0-eff6-49cb-98bf-a74ad5221361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9125c6ad-cf91-4f93-97de-1dfc6db51184",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bc7fd7-bfba-4092-91df-54dc7e8ef2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7146ce1e-7333-48cf-bc3c-c28a6b829652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3111ea-98a7-42cf-a6b0-ccc2b8a91279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f450ed-c4be-4fb5-a587-af07d234820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4364fd0-321f-4142-b290-8004be31607a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e5f7f-2d8d-411c-97fc-8e0502b95116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fd6532-b376-4fd4-abee-8a83cb8128c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab6c4d-fdfe-4f60-b34c-a115dcf15060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efa09ba-6b33-4deb-b5db-48bdd7dc2dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3be4eb-ead0-4d37-bd15-0692ced3f523",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d183cff-181a-4fc7-9e89-75fa2c820a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e29904-9010-4098-8d01-19dccd266314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea36dc01-8f99-4b65-bc63-ed96504a7565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd47f555-97ae-45b1-ad56-6f4f69fafd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de41844f-610c-46f5-b354-94e50f792b40",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935c112a-e54a-4751-8ec3-21c9db8b5e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f5533a-7093-461d-adff-4665255f45d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb7dc6b-d2da-4228-bfd3-470bd78d55ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe35f3f7-733c-4a07-8529-3fb1358e82de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d9299d-fd8e-4f04-ad7a-da4ec1b7042b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74f2701-de01-4674-8e32-d8ef57b2648b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db5b0f3-39a1-4e6f-9389-2d32fa1ff42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1031bf-d00f-47c5-a135-ce457e89d278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f48d372-5617-4536-9c84-8b340cc004a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb1674f-c389-4437-ad04-58a3baa736f5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db456029-ff79-4218-8185-be2b0f25e8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df63abd2-1afe-472e-9b7b-0a8085cf9201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689397cb-4cdd-4541-8b7a-32d26b4efba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcda46d-ca3c-42ba-9d08-d768ba0cc342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd518b85-6940-439b-be74-da355b7e9ec6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cfbc9c-203b-4ca2-978e-827c73cd2e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390ba8c6-59b8-4785-ae51-3c66a9b2b2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba1271a-596b-4a45-9316-ac2602c2c461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdc99b6-e4c4-4897-bbc5-d8eb92afc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c47eba-e59c-4bb0-91f2-f444a149a013",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eeb83a-de39-4465-8947-cc0de57d9ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4037472a-ad50-4955-8795-8c4b192ca542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be4b11-b293-439a-ad04-611f07700291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dc14e0-4cdd-4fe1-a073-519cc92fa836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4157bd6b-ca41-4216-938a-05822c963fe7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8733bc4-3e2f-4cc0-80de-119bc2c7db47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac90824f-44c1-4053-9e4b-8396ddbf4137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a6e086-17b7-436a-a2f3-aa04de757f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ab7b29-0a6a-42fd-9ea3-6c6e61d44202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018ab97c-2834-490c-8108-45eff29dbec2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb210e33-8d90-4a43-b6ae-3ab667a36779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c5311a-cff5-4f93-b0d0-7cf125c22c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ffd8e8-14e6-49e4-8352-5af50dd6da44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0936f28f-48a1-496d-b271-297843ee06f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e679d33-29dc-4ef8-840a-fb827f42760c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446810dd-fea3-4c8a-bb38-370d40e06262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7c21d7-df42-4d36-85ef-569c24b1e7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06400ff1-c1c8-4ac9-b7e2-b5f637c354b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d1e6a9-e04e-4828-a78f-ad4d438ddc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1491d9e0-68b4-484f-b127-07c6003d4529",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fb50fb-e448-41eb-943e-5c13488c3f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b256f916-fc43-495c-a2fd-f2a9fbb60f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae3d762-f97f-4567-9e39-579ce8cfe960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6a1f30-c885-46e9-8087-e801ca322050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00bd79-48c1-4cb6-8552-095700395418",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a27fbb-b9bc-404a-ba2b-396bc5e06411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24c8c85-82fb-4fe5-9821-2b8f6c97d1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56952561-0035-4f4c-9f08-e2b7acc821c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63adce55-0b95-452f-b6be-66f7b35104e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e35d57a-b65a-4dd1-b214-50c874800a87",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcc81af-c7a2-43c9-8df7-162f9173e724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f27edf2-ad64-4dde-be04-579d1e8743c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaba4aae-c136-4ba5-aea0-d7d5594bf1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f27ef-6621-417d-bce9-9a179f812696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b93b50-7b1c-470e-a352-220d6918e8e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3920321-afdd-4a7d-ab39-451d469bc2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d47663-9654-4e18-b5b0-2236bbf9662e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cc0389-87a0-431f-94e0-58250810e32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25178e23-e394-4a4f-a73c-dca28102ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d99650d-a38f-47cb-a5d0-120e9f1efb42",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d618c1-3fad-459a-9327-f3af569c9639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22ec4c5-d0e2-4756-868c-9f2c01887abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039bbbbc-be23-4c57-8382-b7a94ba0c191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e9ee4a-1c7f-4a86-9648-4f04a9190b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de217c17-ab32-4111-b92d-5779a46148f1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6049033f-3d1b-4657-832c-82839f352c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79a5026-d43a-419c-9062-8e4fc054e7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef363dd-b712-48d3-8c56-dc3f474a31d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f15b8-435e-4825-9517-ab77ee225908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd6f2b1-f362-4eaf-b836-2b65ae7eafe0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4393c0cb-b044-4f1c-84f7-cf153b7f5650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c1e819-28fa-418f-93ae-d7265fba6b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba063f7-e7a4-4f0e-afad-f173048afde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75782da2-81a4-4845-bb91-d798f5f1afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e595a70-45df-4b87-b2a9-1fd9064076aa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977dc57e-2fd4-4c1c-bc9c-60005b4d7bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a64d0f3-7bd0-47fe-8f51-8e06faa32fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d5165-13c1-4677-be59-6781ac4b3750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a10b63-9f9d-4503-a8c8-3ece1bd4a4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be89a0-8bea-405e-9892-8d762a6cba3f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293a854e-e06a-42a6-a9fc-d8fded8245e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63c34f0-1fbe-48ce-9c03-0b1b8491c009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cddf63d-2e4d-407d-9ebf-32dfd7cde7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9daf52-b471-4643-b46e-9533483d3dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c092bd22-4ff9-4069-902a-a397ae9617a4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a50330-b228-4973-b413-ff2700fb3a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051d8359-589c-49e1-b723-2239330f033a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec82a2a-2485-4f46-9296-41e7660a80af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24d09be-5f1e-4184-bac0-8231600f832c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0788f862-7072-4a97-9a9a-9f9585945a30",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb30eb8-37db-4581-bcc9-b22fe783702b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd05cf2-7752-4882-bfe9-82ad86c896d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0475f7a-44af-4239-8fa8-7238e42e8034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a816f10-c443-4984-9836-37e292aaea6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f80134-7a4d-4132-a2f9-0e9d9db41e33",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9c441a-5fca-4d91-8a62-9b6dece0695b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fdd5b2-3e4d-4edd-a5ff-929316619173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f9bc85-2bab-4931-b6ca-17f6001ad0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaceafa-7ac1-40ca-a8b0-d51dec025431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45457e35-e76c-42fb-82c7-9df5b51d293a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba659d4-5581-4a45-b6b7-7bf155bfe030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ac3581-a678-4536-991c-1c6a62c0e612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5961cf3d-ca93-4d3b-b1ba-9583704c112f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0f6cdd-5b82-4626-b785-92cc256eb4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3daf361-6d63-4587-b8ad-8ff8800d0714",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2a871c-5fa7-4ad0-8c2d-44f91409c312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789f3485-b405-4b87-ac57-62fa0cf131a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa2293f-2c4d-414d-b3ac-7a124458282b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c912d24-9209-4db5-a200-4ccb7b8bfe97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb32daa-7f46-4c86-8384-0e4b9e1c0f86",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb84c1be-dd90-41ff-894a-44453eeb9477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d73f83-44dd-4c4f-86db-ed641ba2ff2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef846a4e-c094-4a1f-9776-a546469ec795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18f1e89-7120-4477-815d-b848907deaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c645698-07af-4d56-aa20-15d0cf6aeea9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afaf2b0-296b-4b85-9ee3-ddcf08a5b905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adec9a4b-830b-4474-8160-00af047dd795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fb7d8c-caa4-4c89-95e5-a497572fec67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6eeeefc-e1d3-4afd-baaa-d1d06198c961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dbd30e-b075-4f90-83e4-d0db6728231e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb208ef-6218-4976-b486-0c9a83a1441e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af768cad-453a-44cc-a2b1-c1c0bfc40f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de60af8-44bf-4987-a52f-43b4ac9f3b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea4888c-8a45-4fc5-8986-b50174547cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cfd9f5-9a67-4cc6-8ef9-e29ac1be1767",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197fb43e-3a0e-4682-9b1d-3bbc11731e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8474da01-8038-4b6b-9ec5-4ca99957c0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f9193b-82d5-44ef-a837-3713c00efaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe62803-19b6-42e0-b224-0847febecca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e807c-9774-4cea-9572-fc07c4c9a531",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe07d71-4465-4e52-9d28-1f800fe91351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a258ab-1dbc-484e-8444-c2dbe27c8529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b54a9c-9185-4ca0-9314-ad5dbd67ef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c1f0a4-14a0-4cf8-8cd6-364ec10ef7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742fb31d-b8a4-47c2-9a2c-b88154e4b0d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e469794-ecbf-483e-873d-8359b0a5ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a2b156-cddf-455c-b5b0-5f5b8a8a074a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb245b8-cc72-416f-9084-f749fdb611a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1efed6e-d7ce-4a5f-b377-f80f313bc786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6118cd-b81f-4978-9358-116753239fa1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e5d14-ba16-49e2-923b-8623d219c234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c467ddb1-b80a-4a7f-a016-a42e599cc743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec54e627-c868-4d2d-a95b-0ff1cfc00973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33804b9f-10df-4e23-a609-cf14974da3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e437881f-c277-4f25-8e38-ccca03fee8d6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eb577e-e6bd-4e4c-9640-9931a8f38bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c40baa-11b1-4f99-8e0c-5892d0de590c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a6e415-c1d1-46a8-8c15-1bb0aa7b7657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e587c3-69d1-4bc1-8a31-53eea03e2a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ca3f2f-c1c2-450a-a0c5-f4a7dfd36b29",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a70d45-3327-4809-a3db-be73a764e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b47cf91-f13e-43ac-8a30-37eadda0af96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe59ca9-9e46-45fe-8f54-645ee3a770b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a159fbb-747f-48f6-a47e-6b9554298b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9fc338-0a03-4dce-ac7a-198efde5b0e4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5822a15e-aa02-4511-8f73-e915334fa53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857f4b9f-cc3c-41cc-9f93-edf044b4c9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bf8898-7666-43ec-a850-635bb03291c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bd821f-e1ac-4edf-a8b3-e950242b98d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3521ee-febc-41de-91ca-8ffedd17fb44",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dae1104-f866-454e-b702-3ad8e11edaa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f4651c-0f47-4c04-8280-725955bd557e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9567bae2-7501-41e7-aa0c-bfef0aa6415c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6601d26b-c99e-4cb6-a12a-42a5c0c49d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ee4bbf-342e-4305-bfce-e43691126650",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71368e71-a0d1-4580-a071-fe294ddb43e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0686d65f-bd17-4d19-bbf8-83ed5bdd3fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5270b67c-6240-4383-983a-a8df53a0b91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e1a5e9-f8a5-401e-b7af-c1ec0b5d22e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede0972c-17b6-4b66-b93a-3696221a45fc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e0d372-bd0d-4d78-b5df-a62bd31419c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd14055-d1b4-4191-95b8-03d401fef034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cfa80c-4b71-4e72-a4f8-570b8103b63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0994a220-a829-434f-bb3d-ff7c66d80e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b54cf37-38a7-49de-b43b-2addeea262b1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f732d8c-d847-4ee1-b943-420d75138e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ba78e9-ebee-4e76-8432-7c3c4d92ab73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a34d1-efb0-49c7-a24b-47435ca57444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19aba2e8-8877-419d-9111-248495d738ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d549179d-c5f5-4f33-adcc-16722c71a7eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d44bf42-236c-4615-98e0-53cde0f99122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f864373d-42c3-41c6-94a7-f96db69ec7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfff640-09af-48ce-9f0a-80d398e1d187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65154aa-cc7f-46d9-9148-e12e4037ee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3289695a-87c1-4e21-be39-af1b100a4f5c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8be86a-daa3-418d-8c3d-4d17adfb10d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e384be-3826-47cb-a6fc-a5b257d3f1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b89506-7e8f-4767-a02a-b38c137489b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b2e868-f287-4459-b278-ae460e079390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e926b63-147f-4391-bac8-7fe43b9c9ee9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f335b-4dc5-4e01-93f2-a166bca3f541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8752d97b-7b82-4ec0-9bdf-7457b6839707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3292778c-fc96-47b0-8b2f-2616ddb37364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50baea92-3775-454c-ab12-ebc740453954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b562b9-49a2-41c8-bbe8-6b77b270a1d8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe1c4db-c787-4329-b2dc-a4aa7f355fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebea5ff0-2f55-4da8-a3ee-f05782568d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1068c043-e54f-43a7-82b0-8b173a0fc3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1d1279-34cf-4f57-9a62-1faa383582e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697abf71-29cc-4af4-9005-fe06aa4ab686",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943dbf94-74cf-40b3-8964-6e7945ee98ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ec4617-55e9-47cd-b485-3e42f04e579c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7527380f-ac0a-4c7c-8e51-feeb41dcfb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52643d8b-71d6-48e1-bf13-768edee1befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dfdf71-e589-4af4-9f94-f9504271344e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f86577-d0e2-43e7-a4e5-a608c04abfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7ce1ad-1e40-4bd7-a6ad-549a2569a9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad57e97-e4ea-4ee6-927a-d6840591a645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f3465d-6dde-4eed-b020-d45d4787a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8063d7d9-f113-47c9-b8fc-4bb19033703d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176fc01a-d51c-4ffe-bbcf-64acb10f816d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fb5c1a-28d5-49e7-927c-ae615f28e756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a9995b-028f-4c92-8b4b-00c3a877a233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e7ae3b-b601-4850-a808-a259972c41d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e671e-b005-4648-872c-771d6978e8f3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b26a6-df31-4c43-9963-9f8a39f40e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f793629-5432-49d2-9e78-9b94981ca477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a29ed4-3dc5-4fb4-8ab8-8dd6eb6bb079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3a5949-09fb-44ee-9af5-a06f9125f1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd783b-efcd-4a13-ad51-ccc756a68957",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527380e4-e778-471d-a916-b69357e14103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f391851-f52b-4950-8691-902e4fd95bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414cf129-8c80-4a55-afa9-6f6a50856059",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be803b91-685f-446e-9fb0-47a114f7fb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9a51a0-6588-43bb-a1aa-5c8b1afeaae6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71155329-93b9-47b5-b19a-7b1df896dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afa6009-7e39-4d69-8eca-4842c060697e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ec8d4-2240-4d3f-8353-4fc738fcad8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc3eaed-2e41-412d-86c8-8e9854e2c5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ae020-660f-4c6a-b1ce-57838dae1160",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4d24c9-ab4d-4e0a-bb58-275b233aa351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c90c9c-6a0d-4042-92bb-c6173483e2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e63e6f9-7af3-4254-b967-86ae5bfe8b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b2a849-a943-4d82-8de5-cdec9320284a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec5f462-4d12-401b-b4f1-ca644db37519",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca7d752-9a49-484f-ab98-b2439804c03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1d022f-119e-467d-872b-3474350d4c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0a8700-cfa1-4ee9-9430-eefe5921c626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54876ce9-55d2-4fde-b4f4-81156a723063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc9ffcc-fb49-4096-87f3-fd542a5ce898",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b26b0ba-9f7b-479d-8770-6799a2e66129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a83c2e-aa64-4d93-bab6-82fddd85cd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5b891a-7430-4ab3-9454-aa200b01d9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7499082-4375-4906-aec0-5f240f65b047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d996e0a7-be8f-4c0f-ac5c-23260c067786",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16beff0b-b0f9-4429-b44e-8db06c03958c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a809b0-04ba-4d91-9787-f644135f29bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cc72f-fea1-48d4-9a9f-f089b20ae851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca52a09-24ab-4f0c-88db-afae3accdcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d8d7d-2bbd-4158-a7d0-65393e142f18",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59aa8a7-a3ac-4de7-99fe-b73ef0d81c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6f92eb-591c-4dd0-bb51-fad05147d318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565ddf4-0490-4879-b72a-30e70fafc5d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69968515-401f-4195-9a54-4a51cafe2219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ef4d24-0b50-4dd3-96ff-fa7b265cf4b0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906d6c0d-e880-4e7f-a954-6af434dde034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b60929-f437-4c94-801f-90391e077ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a8a51a-3699-4b4d-93e3-8ac40c259f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18d58d2-c107-4d7f-819a-d0b39118c70b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e720bea-5428-4ecc-a046-19f933840a11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf94be8d-4bcd-4a99-868b-2aec5a3c1fbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f21fb0-0d17-453f-89b8-ee42b8971da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "133d3c5c-5385-485a-9316-31408b76af92"
                    }
                  }
                ]
              },
              {
                "id": "27356b7d-b2e5-4547-92a4-31413614dca1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d3b98cc-b036-4092-acc9-44ff7bf6ab79",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c562e934-2584-4d48-8a42-5f5dc0f945b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "868177cd-9903-40f0-aec4-3fabfc29452b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cdedfb-5bbb-4599-b6f4-eeb697f45779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42ddf780-6c6b-4296-b198-10fd178be8ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d528398-5d0a-4388-849d-8f5014ceee46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e7b5886-703f-40ad-8aa3-75bd53a3f371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c281bc5b-b970-4c9c-bffc-fbc8e26dc1a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2edaa1f2-856b-4625-89a5-9a3a4cbf3b5e"
                    }
                  }
                ]
              },
              {
                "id": "9b09bce8-7618-4232-9193-7d87d618fc40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1571043e-df95-46f2-a0f8-78cda60f31ef",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f495000a-549d-4b84-b555-e749f6aa6a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "421d6d64-5e06-434e-9814-3c344e13a50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e306b1a-92f2-4505-a2c0-de965d7beb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e0bd0f-1010-4bf1-ba4b-510fc470fd82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5cc89769-5b92-4192-b90f-e70521a4d28e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7edaa4c5-a05c-4fbf-bbd7-aa67573bf688",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a94a571-5da8-40a8-93e5-6006b1cdc14d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7d88f0e-f68b-4173-8cb0-d9ca7b89c295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2ff9b11-9636-47c0-80cb-97be6c08e7e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64329b7-0f8a-469b-8fb5-3197875943e8"
                    }
                  }
                ]
              },
              {
                "id": "84d54503-1a67-4bbd-bf0d-b07536a916b3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26665f37-e088-4a9d-a928-25616084ee45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5eb2cd9e-8d1b-456f-8072-41ce837e8569"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7a8b888-01c4-4924-b243-d4ae9eba868f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6d1aea-cae3-4cdc-87af-a790aa05b5fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74800fe3-2c28-4653-bec6-09b5255d8f78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dcfdb978-8755-498f-ae56-ffcc971d927c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c18e0ca-8be7-40ff-9f2a-7a5554cb0582",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1455f06-8a65-475d-90ae-c8d9a1002421"
            }
          }
        ]
      },
      {
        "id": "e0866619-02ec-4d03-963d-76f064ec9c0f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a5fc4e34-fa3f-452e-9379-1b75a8523b5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8971ae09-cdfa-491e-9ef5-1c604e17fc0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99352405-ae4a-4064-a752-98c3601d3277",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d293ca80-86be-41b9-b8ce-28b88a8e09b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1b5de255-4604-4825-a451-ace2c4c431e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197063c0-506c-4d51-9a54-583b387ce0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb2c3dbd-2d0f-430f-8cee-eaa898fd4016"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9054598b-0d12-469f-b6ee-490bb13d72ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b8d41d8-591c-42ef-8128-23d1b956b653"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72b1ddd2-bc4b-44fe-aaa4-fa14bafe7445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37a7f9cb-25f5-4cd0-860d-63b762c620c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1eb14f8f-66ba-4a17-85f0-e4fa4c7ec968",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "da82568f-0699-47db-994d-160cf2d9c551"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c976ed3-9de2-40ee-a360-6aaaf92d7cad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21d1d01f-9692-41cc-962b-c0c20fdeadda"
            }
          }
        ]
      },
      {
        "id": "aea5bbb0-9259-4319-8537-1704caa18d39",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf6c773a-6d4c-4bf9-9572-72bddb09b265",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6abd6b10-77b8-41ea-a13f-8bddacb241b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2eb8563-b39c-47f5-9c0a-6703798b2f77",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d95116-74f6-4a77-84a0-552a1b5e457d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecd5b698-f452-4319-adac-16c15bae9f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86803c04-05c5-42b5-97de-c96d325d4690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22d904c5-33bc-4356-91d6-0f2a1e728f4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb64ecd2-edb6-413a-8580-fde161bd21cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0f9289a-4b3b-4e81-b8f2-f95a44fafd35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeca0e05-33e4-4187-87d8-d3ae32ceb39d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8627fdf7-1ebb-4543-9f53-9b7ed55930d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "283d1247-2077-499b-91d0-de154c95d8d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f499b91b-9f17-4376-a232-66d6dcfea359"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e34327f6-1d21-4b0c-9351-b71c6593b77d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51b67a4e-c4c5-42f4-bece-9a4fc909e75e"
            }
          }
        ]
      },
      {
        "id": "d2936ad7-d6a2-4951-a22a-3d23d396615a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b0c99a96-c3dd-4562-8bdd-6aa3d2051396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4da631d9-34d2-4b97-8714-b44ec3f7f492",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64d292cd-8a87-4e0f-a5b7-0db7850c1ea6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cca56d3-f54b-47cf-926e-70ece548f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d278c26f-add1-44bc-8339-4cf141824b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1495b1d-66df-4c4d-bcbe-0e01919f74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23745425-4d12-449b-861a-06c733e8174d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a0b0444-0c30-4998-8bb3-e253eee461a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de8629f0-ad8d-4101-a3e6-e05a252e6c59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7589da7-2b02-49fe-b7cf-bbc79a777cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a76e1502-b71e-4c69-a604-9b1d67c43e0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6ce1be8-6e98-4eb1-86d6-4f2bebee78e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1fea4a21-85a3-405b-a751-07f23e4197a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "818ed05f-d253-413b-8645-b3a9121d4bb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ed8e2b1-ce26-40ab-b95c-c8e1d5f11a14"
            }
          }
        ]
      },
      {
        "id": "b392cc72-e07d-477b-955a-d5c14b479eeb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f939132e-e5a9-4a0e-9d80-d62c2fe154e3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc423404-6ac3-40b2-ac1d-e6ec67319c13",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1f3fac2b-f0b9-4d18-b4df-bd525e4e75fa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bfac92f-e627-4379-8023-75d4c4265de5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11f655ab-b985-48f5-843d-fd1c84ebcf56",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.137323943662,
      "responseMin": 10,
      "responseMax": 4690,
      "responseSd": 421.9216002718241,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695602025740,
      "completed": 1695602075265
    },
    "executions": [
      {
        "id": "3b5a0d6f-d48a-46af-8562-0f3ab06e7e4c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a9813fd3-5839-4000-a578-6b73906579e5",
          "httpRequestId": "d813689f-d2ba-4bde-9db0-2809e03cf1f6"
        },
        "item": {
          "id": "3b5a0d6f-d48a-46af-8562-0f3ab06e7e4c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2b7309bf-376b-4443-8fa1-4a798fadc3f1",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "090c1f67-7bec-4b26-aeb1-954610c0c992",
        "cursor": {
          "ref": "18602a72-2359-4a11-93e0-4650a24eb6b5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "72af56c9-cfb8-4551-a598-069dde5b4028"
        },
        "item": {
          "id": "090c1f67-7bec-4b26-aeb1-954610c0c992",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b60bd4b3-9d3b-4298-a9e0-993dcac4f1b9",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a53b10a0-dc48-4983-b8f2-9bbaadad5354",
        "cursor": {
          "ref": "9bd6a623-798a-43e2-ba96-6dd0efc87a7f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2c568692-722c-43c1-9fb1-22baf6546cc1"
        },
        "item": {
          "id": "a53b10a0-dc48-4983-b8f2-9bbaadad5354",
          "name": "did_json"
        },
        "response": {
          "id": "466cc08f-3a85-47dd-bc4b-c51b793682bb",
          "status": "OK",
          "code": 200,
          "responseTime": 339,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197419d6-043c-40e2-b630-aeff630e8318",
        "cursor": {
          "ref": "c64049a4-788b-419a-8cae-7128d53ab0a4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a581c4e5-77c4-4d63-8487-5b973f34c7d8"
        },
        "item": {
          "id": "197419d6-043c-40e2-b630-aeff630e8318",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0495650-97cd-4634-912c-a8a10fbd2610",
          "status": "Not Found",
          "code": 404,
          "responseTime": 601,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197419d6-043c-40e2-b630-aeff630e8318",
        "cursor": {
          "ref": "c64049a4-788b-419a-8cae-7128d53ab0a4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a581c4e5-77c4-4d63-8487-5b973f34c7d8"
        },
        "item": {
          "id": "197419d6-043c-40e2-b630-aeff630e8318",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0495650-97cd-4634-912c-a8a10fbd2610",
          "status": "Not Found",
          "code": 404,
          "responseTime": 601,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31712e0a-92ec-4636-ae38-4b2c7bd442ea",
        "cursor": {
          "ref": "35ea9030-e34f-4b04-869c-1a65f0700981",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e73a89f-9f8f-4646-9c1f-cd5eb6ece55f"
        },
        "item": {
          "id": "31712e0a-92ec-4636-ae38-4b2c7bd442ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f14b1625-2e72-4853-834e-7cba21de7cf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3df136-0994-431e-8ba3-03191a784a93",
        "cursor": {
          "ref": "b98612ea-8596-4864-80f6-a29c4dcd188d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f0474c1b-cfe4-4900-9a9f-5151636e04bb"
        },
        "item": {
          "id": "df3df136-0994-431e-8ba3-03191a784a93",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d1e3e4d9-653f-4d4e-b147-4c7d0e57a0bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec07dc69-232a-4fd8-af76-dc9454ff87c9",
        "cursor": {
          "ref": "13309856-a47e-4782-ad9e-635d9d45bc50",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4369dd3a-5d74-484a-a5e0-4548d59f056a"
        },
        "item": {
          "id": "ec07dc69-232a-4fd8-af76-dc9454ff87c9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2c7ed131-cff1-406a-9dac-a611cf38cdcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745aab11-d639-4caa-ba9f-a9d140182b70",
        "cursor": {
          "ref": "558d22ad-035d-4e06-bcdb-392da6c1e00a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "24c655e3-4f0e-4a28-9257-7cc83abaada5"
        },
        "item": {
          "id": "745aab11-d639-4caa-ba9f-a9d140182b70",
          "name": "identifiers"
        },
        "response": {
          "id": "0e6c1bd5-ff87-4a7e-a0c2-d2c43cd4c7dc",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e4681-eea4-44fb-a6d6-5338e8eef637",
        "cursor": {
          "ref": "e5e43c21-e33b-40c1-a301-f02ed6ff5eb4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "828d0ecd-ad90-4595-8eac-e11a3da64855"
        },
        "item": {
          "id": "251e4681-eea4-44fb-a6d6-5338e8eef637",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5f700b52-1629-4dfb-bfea-4246a635fcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f570373-3127-4fb0-bba6-061c6e11cb87",
        "cursor": {
          "ref": "ff37145d-9561-46e3-8778-13c277278d2c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d493a3d-0742-41c4-88de-bd309a654290"
        },
        "item": {
          "id": "0f570373-3127-4fb0-bba6-061c6e11cb87",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1747ce70-490c-45da-8497-4b40646241c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6c8879-7931-4f0f-9d32-237340904a03",
        "cursor": {
          "ref": "377a3ae2-998d-46a4-af1b-f8238ffe08af",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb8a58e6-422a-453c-b426-37d78c8a4630"
        },
        "item": {
          "id": "4e6c8879-7931-4f0f-9d32-237340904a03",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "093f2eff-8b8b-41ab-a331-ab372ffc5358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd50d167-eb04-4632-9cb1-d438d25eaa24",
        "cursor": {
          "ref": "55f1601f-1c46-44d0-9352-38d6c77bc182",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0516bb13-0eb7-4760-97ee-2560d8145eba"
        },
        "item": {
          "id": "bd50d167-eb04-4632-9cb1-d438d25eaa24",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b27fb97f-68d8-4678-a372-e323148c056f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aafbc9-d180-4e63-b592-1eb087fb527b",
        "cursor": {
          "ref": "8cbde0c7-7306-4b6b-ab82-83ec44642434",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b82aa5ed-c22d-4c0c-b658-7d552a71d4b9"
        },
        "item": {
          "id": "b0aafbc9-d180-4e63-b592-1eb087fb527b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "95db7419-e7b2-454b-8a92-615799580f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26201c3-1968-4d28-ad28-937e023c0aad",
        "cursor": {
          "ref": "9b023be8-5dca-4164-bdea-970269b635a4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e30f22c-ba45-48e1-8d54-ab2ad804f66c"
        },
        "item": {
          "id": "f26201c3-1968-4d28-ad28-937e023c0aad",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f59a1fee-ba0a-437b-9b2d-42648dd01ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ada1c8-3620-485e-9420-9a89d47b64e8",
        "cursor": {
          "ref": "3a9b0e8d-9bd2-44ab-94a9-f2d94aa159f2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8fc4053-d4ca-4038-90cb-2788a8019a8d"
        },
        "item": {
          "id": "07ada1c8-3620-485e-9420-9a89d47b64e8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3198825a-f37d-40a9-98e2-490fdaa79796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fb2477-bc64-4c4d-946e-2d79481b7f85",
        "cursor": {
          "ref": "5e4f0170-4b0b-43a5-8c11-757ea1926ffb",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "60e442dc-ae22-4812-a401-e6c39617f5cc"
        },
        "item": {
          "id": "c1fb2477-bc64-4c4d-946e-2d79481b7f85",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "84d50413-c0bf-410f-8718-ab805903034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c2119-bd23-4ae1-a968-d87ad22f1edc",
        "cursor": {
          "ref": "de378117-4328-4a7e-beb8-700c483f84c4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "670f38ea-0e92-4ed3-a149-12f9b3f0e213"
        },
        "item": {
          "id": "735c2119-bd23-4ae1-a968-d87ad22f1edc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a4a0d323-393c-4abe-9f34-68d1c6b15a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f6e6a0-bea2-4221-8a57-55023a716310",
        "cursor": {
          "ref": "d1897f3e-266f-4ac3-8591-14159a36a4da",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "612fa870-d197-4bac-bc26-010da8ddcad1"
        },
        "item": {
          "id": "43f6e6a0-bea2-4221-8a57-55023a716310",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2f50e846-988f-4f46-b4fc-d557344d281f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b36610-bee4-4a1f-a236-5611b73f9dbb",
        "cursor": {
          "ref": "a0396a78-f569-4df2-aab0-08e10cbc63ce",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "68076e50-2cc6-467a-8cef-bbaec8541d7a"
        },
        "item": {
          "id": "86b36610-bee4-4a1f-a236-5611b73f9dbb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e1070a13-52b1-42bd-92b8-5b5d2c120f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a75b15-37ca-4b6a-a1dd-6ba114aaa3a7",
        "cursor": {
          "ref": "664f170d-8cd7-4eda-ae2e-7c5c0c803523",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "90b2ba15-84f2-417e-8a73-96fbe92e1174"
        },
        "item": {
          "id": "19a75b15-37ca-4b6a-a1dd-6ba114aaa3a7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "adacb5f5-0981-4ec8-a7fe-dff42254ab0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c980498c-3606-407d-8ba7-51115f1eae10",
        "cursor": {
          "ref": "bdc06f4d-7ac8-4a30-b9f9-982f0433e0cd",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0a85404-5664-45e5-bfbc-17790332d5eb"
        },
        "item": {
          "id": "c980498c-3606-407d-8ba7-51115f1eae10",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9e59258a-0789-42c1-8ab2-af4f3aa4bef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb018a0-0d03-4577-a147-a33a4f84f57a",
        "cursor": {
          "ref": "be94033a-568e-4b2f-b54e-d92d9f281582",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "473476e6-e33a-464f-8995-269d42cc5ed6"
        },
        "item": {
          "id": "1fb018a0-0d03-4577-a147-a33a4f84f57a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8cc5a222-3da0-457e-9727-14af004c395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291a32c1-27a0-484a-abb5-7f7c5777e8d8",
        "cursor": {
          "ref": "85308230-70f3-4340-af8a-a9214400e2ee",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a98826c0-380c-4b1e-8a57-16125aed51a6"
        },
        "item": {
          "id": "291a32c1-27a0-484a-abb5-7f7c5777e8d8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4a92ab1c-a94c-4e63-a995-155ef4ea738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df602c-a345-4810-adfc-dc54b2d35ec1",
        "cursor": {
          "ref": "dafb9841-6769-4450-976a-37412466241b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "801d727e-120a-4f75-9c2d-b5379bcc8845"
        },
        "item": {
          "id": "37df602c-a345-4810-adfc-dc54b2d35ec1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "57ae71d7-6875-4155-ba48-61c336c1c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16f2ae3-4f7d-4366-b176-abaacf4c0ef6",
        "cursor": {
          "ref": "b4649faa-3a23-461f-b818-8744436969bb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f9616b6-fb2d-4394-b028-f2457cd69e8b"
        },
        "item": {
          "id": "b16f2ae3-4f7d-4366-b176-abaacf4c0ef6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a12a0c09-c6ce-4427-b039-127ef4c54617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ce36ea-4618-4141-8995-32d0328f41d5",
        "cursor": {
          "ref": "7dd2c3f7-56fa-4310-a309-2007fea635e9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "03f9061b-6709-4017-8f38-cfd969b0e42e"
        },
        "item": {
          "id": "e6ce36ea-4618-4141-8995-32d0328f41d5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a606da5-3612-41dc-bc15-a8ce9bdf51bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0d3056-f2a7-4479-a645-3290862f7ab9",
        "cursor": {
          "ref": "1164c8eb-88c1-4ccb-aa32-393e4935793f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3d5f1441-c231-4fac-870b-029b36948d2f"
        },
        "item": {
          "id": "ee0d3056-f2a7-4479-a645-3290862f7ab9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6227d329-6e91-4203-bcaa-e2ec475ebc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db75cbd-0b3d-4b64-aa4d-636812ccee0e",
        "cursor": {
          "ref": "67ece92f-33b6-4c62-85a0-f4aee93eebaa",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "85b2a20b-4dd6-4b97-851d-513dc90922b4"
        },
        "item": {
          "id": "8db75cbd-0b3d-4b64-aa4d-636812ccee0e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5b61ad27-c1c7-46c8-9799-cecb1bbe397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2f2875-bfe0-4176-a001-373a9e186764",
        "cursor": {
          "ref": "a8597510-3082-4a15-967a-ec3dd1ad9130",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aae85525-97a2-41b8-8aec-c80185888bac"
        },
        "item": {
          "id": "fe2f2875-bfe0-4176-a001-373a9e186764",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "41ebfe7e-36e0-4d68-90f5-c71022cd47fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6255a411-c5bb-499b-a063-a70055364fed",
        "cursor": {
          "ref": "2f7d7106-d4b0-4800-883f-ecb4d124a536",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "253ee932-c419-44c8-b012-070beaaaa829"
        },
        "item": {
          "id": "6255a411-c5bb-499b-a063-a70055364fed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "98b0bdf1-68b9-4904-bb06-1af7132f1e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa057e52-bd7b-4bb7-b22e-16442c6c2cc2",
        "cursor": {
          "ref": "3d6128c5-0c49-437a-baa0-bdeb3a3197e0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "52cb52bc-9dc0-4264-b18e-ad1ca43677b6"
        },
        "item": {
          "id": "aa057e52-bd7b-4bb7-b22e-16442c6c2cc2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "31dcd1c2-cb8c-4e5a-af25-725fd0e37a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919b3818-8d0c-4eff-bcaa-202bd0733c33",
        "cursor": {
          "ref": "6a112f8b-1622-491c-8d7c-159f46df6d4e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b9e65015-b3db-402e-ba8d-eb494fc928ed"
        },
        "item": {
          "id": "919b3818-8d0c-4eff-bcaa-202bd0733c33",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eb2523cc-a9f9-4486-bf91-62dc920803df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9ee856-49a5-4a0d-95b8-6c745742721e",
        "cursor": {
          "ref": "57cd2e30-6c5a-4516-969e-0ef12d7d29fd",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6c75c30b-18a5-4320-b6d5-83e24f9d967d"
        },
        "item": {
          "id": "5d9ee856-49a5-4a0d-95b8-6c745742721e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eb1bea4b-4070-4f97-9d45-96aa7d85b2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ff40f-1db5-4eb5-b881-83ce375ec5cc",
        "cursor": {
          "ref": "510be1a4-a050-4dd1-b773-c429a2696913",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2875c13c-89d3-44e3-866a-315be9a160d5"
        },
        "item": {
          "id": "204ff40f-1db5-4eb5-b881-83ce375ec5cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1250290c-9d7f-4f12-a036-d644a0309ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d6b9c-384b-4010-93a3-954176ce17f8",
        "cursor": {
          "ref": "fe036c67-b20e-466c-9937-a45e841a7f00",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d057ec82-6531-49b7-b8e5-6b680d9d9691"
        },
        "item": {
          "id": "6e0d6b9c-384b-4010-93a3-954176ce17f8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0b9a468d-c8f2-4635-b629-24187a87d41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b788bc73-c79f-4b59-97e6-b4e62f78a4bd",
        "cursor": {
          "ref": "f35b18d8-6902-46ba-a8ab-374bb3c9a7fd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "87f71509-b650-4cbc-9f7e-f6728be2ffd4"
        },
        "item": {
          "id": "b788bc73-c79f-4b59-97e6-b4e62f78a4bd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d19e46bf-683f-436a-8ba9-f98fb8e70ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b4ce43-e392-4565-9ad1-c947e775ff0f",
        "cursor": {
          "ref": "abbd5301-8c5f-4b3a-abc9-daf4be9c2b6e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "45a54b18-8c06-4268-a880-6a3b42698a36"
        },
        "item": {
          "id": "e0b4ce43-e392-4565-9ad1-c947e775ff0f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ad15b9f7-6729-47fa-b8de-2acbfc9f69a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10048fb-68d1-4a58-aef4-9e4db39a4853",
        "cursor": {
          "ref": "77467eeb-44ce-4e1c-b767-272d26832dbe",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c9890353-426b-4ea5-a673-4a2945d98159"
        },
        "item": {
          "id": "d10048fb-68d1-4a58-aef4-9e4db39a4853",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d55052e5-9aba-4b38-b6b2-3e4f9db66d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2d6dc-363a-4b84-b173-8e0b3fca48a6",
        "cursor": {
          "ref": "c5cbb65b-6e7d-403c-a493-93a86d0bef28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "abdbad5f-bf8a-4dbf-aea1-bb24007b97bd"
        },
        "item": {
          "id": "a3e2d6dc-363a-4b84-b173-8e0b3fca48a6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff3302b0-90d6-4bde-a738-1db02ae8aa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fbd46b-426f-4ba1-a6b0-0100985ce95f",
        "cursor": {
          "ref": "cac7f59c-e80a-4bab-b940-6833a1382952",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "301602fc-3a3f-42e3-9afb-57173a1145ec"
        },
        "item": {
          "id": "50fbd46b-426f-4ba1-a6b0-0100985ce95f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "efdc6882-42ff-4bf7-bcf7-872dee02f2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6618e5a4-7040-496c-9294-433a42d69c50",
        "cursor": {
          "ref": "5a5da8f8-e348-45ad-8681-5ee5d9a71de1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96e095f6-c80a-411a-b7e3-a21410d99575"
        },
        "item": {
          "id": "6618e5a4-7040-496c-9294-433a42d69c50",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a82cd890-8ca0-4dc4-a868-5f05f58d3d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfc06ea-b6ae-484a-a46f-13f0dd027b96",
        "cursor": {
          "ref": "8fdcd704-6ab7-4482-84dc-c61651140886",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3027e735-9372-41fe-80c0-4b9fd31e99c7"
        },
        "item": {
          "id": "6cfc06ea-b6ae-484a-a46f-13f0dd027b96",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0183253c-0e17-4728-8801-37a60adaeac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631db793-226e-4c00-9f6b-79858e1fb464",
        "cursor": {
          "ref": "1beb5326-3de0-4df4-a147-a2395619ea97",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe826dbb-7124-46a6-b91c-190ae12bc9ad"
        },
        "item": {
          "id": "631db793-226e-4c00-9f6b-79858e1fb464",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c0504500-a021-48cd-887a-2697f5f88f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82dbfca-34f7-40b0-9e21-7e6038620f92",
        "cursor": {
          "ref": "b5d204ac-d02d-465e-8857-de4ad2607b5b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0059a04d-3dc8-4ae5-8e5b-f12b7311ef20"
        },
        "item": {
          "id": "a82dbfca-34f7-40b0-9e21-7e6038620f92",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1bca32fc-cec2-4e5f-be11-4e6d67d1ca9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43bd796-537c-4041-838b-c9d7d1d234c2",
        "cursor": {
          "ref": "d9a11392-ffed-4ddc-a919-4c1bbabd8b82",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bf45a9f8-a5a5-4f16-94d6-3924a8dd61e3"
        },
        "item": {
          "id": "a43bd796-537c-4041-838b-c9d7d1d234c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a5ef3e27-1c4f-43cd-8246-e943d55ed850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f4c30b-df2f-44a4-8297-e4ebfe779371",
        "cursor": {
          "ref": "eb489afa-0f9e-4588-a697-dd4a4408b6ef",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "362bcd0f-7afd-491a-99af-f0378a382811"
        },
        "item": {
          "id": "19f4c30b-df2f-44a4-8297-e4ebfe779371",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f22181bc-e9c4-4e77-8bb3-0cc3bd6d6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e968e5f-83f8-47da-a2ce-67140f41c300",
        "cursor": {
          "ref": "2c5bed76-0897-4c87-b450-d47067f0053d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ffe98689-3b6f-446b-ade5-ab218707a794"
        },
        "item": {
          "id": "7e968e5f-83f8-47da-a2ce-67140f41c300",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73334f79-4482-4b8f-8aa3-5133d9327b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6503e2f4-3f74-40de-b762-5c2061c1215e",
        "cursor": {
          "ref": "899f27cd-ccfd-4682-bba4-afcb852fe03c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fd82bc74-b2d0-4aad-8947-2dec0c21cb0a"
        },
        "item": {
          "id": "6503e2f4-3f74-40de-b762-5c2061c1215e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6b2d3c7-5107-4d3d-a75b-8428e521fd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a99306-f283-454c-af33-6b36a45bcf13",
        "cursor": {
          "ref": "55756384-314a-4235-8708-38c694f081ab",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d3fba165-9785-4b0d-9592-f771e4fa38b9"
        },
        "item": {
          "id": "85a99306-f283-454c-af33-6b36a45bcf13",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6885e26b-4938-4ae5-a8d1-a6948676d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd564803-9d5d-4113-a93d-5cac0f70e0fc",
        "cursor": {
          "ref": "f611ead6-1554-40aa-a3fa-f2b118154c34",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "76ec5005-7332-460d-9b4f-4d74a0e6e7f6"
        },
        "item": {
          "id": "fd564803-9d5d-4113-a93d-5cac0f70e0fc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1285b9d-a1e8-403b-9da9-3398b0107478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe411b-7065-4a88-b11c-60a5ca91a508",
        "cursor": {
          "ref": "e749c854-5caf-4669-a593-1f054463a6d6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e3eaed4-3950-4fff-9311-bcb87d9eeb2f"
        },
        "item": {
          "id": "9bfe411b-7065-4a88-b11c-60a5ca91a508",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "88fde226-3cd1-4519-9221-75392fc33964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92710bd6-683c-43a8-a4c2-edce16ad919b",
        "cursor": {
          "ref": "9ee207e0-037c-4c8f-823e-dff2b1c7f788",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c3d0a9e-4e3d-4da4-8f4f-78695a3b081c"
        },
        "item": {
          "id": "92710bd6-683c-43a8-a4c2-edce16ad919b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7a614fbc-a300-416e-9e5e-c45949267d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d279d25-d939-40de-af93-0c407f08fda2",
        "cursor": {
          "ref": "9f252f7e-6b81-42ce-986f-f592efdda7b6",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "56c9fd5f-caeb-4978-845d-2335e4e577ff"
        },
        "item": {
          "id": "8d279d25-d939-40de-af93-0c407f08fda2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6e15866-d757-4484-a498-4bc6b1c8a130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81173e96-8221-46f4-9692-d2b98d4d79fd",
        "cursor": {
          "ref": "63f35dbc-923f-4209-9e28-11a911be0545",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5115b5fc-734d-4831-8b65-5a076eaf7e6c"
        },
        "item": {
          "id": "81173e96-8221-46f4-9692-d2b98d4d79fd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "26c1d2bd-9d12-4630-8b94-53b722068a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4672f5-9dc7-415e-9e93-2a87eb380a64",
        "cursor": {
          "ref": "356f2fd9-2511-4dd7-a5cb-cac9bc2a825d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c976dfd9-bc49-4390-b863-13c0b5fce6e9"
        },
        "item": {
          "id": "8e4672f5-9dc7-415e-9e93-2a87eb380a64",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "39acf64f-6f32-46b2-80b6-a53a766161ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18665e67-c22f-41c3-b92e-af2f0029c64e",
        "cursor": {
          "ref": "b287946e-f7be-4fcb-a4d5-69eb7b09e52d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a72876a0-0ff5-43f5-9ae7-09d202772560"
        },
        "item": {
          "id": "18665e67-c22f-41c3-b92e-af2f0029c64e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "995af7c7-6fa2-4411-b43e-20ac72dec30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a5c93-4804-4915-98ff-0c85752caac7",
        "cursor": {
          "ref": "804d19a6-a442-4bce-afc3-ae84c56b2700",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "99951db4-0082-4636-a8b1-6188125c328a"
        },
        "item": {
          "id": "290a5c93-4804-4915-98ff-0c85752caac7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "85d090ab-6e11-46b4-8c8a-e6de5a33c2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf4155-ef1a-45aa-a965-91f4f9440071",
        "cursor": {
          "ref": "c49a0aeb-bb68-4f65-ac50-79b078adc195",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd34d44a-f402-4c86-9cc9-d17f4371d1fc"
        },
        "item": {
          "id": "afaf4155-ef1a-45aa-a965-91f4f9440071",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b0408b91-12c8-44e6-9005-a98857e53c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b35adfd-c632-4728-b752-340e446978a2",
        "cursor": {
          "ref": "cb443f04-6744-4a57-9f28-e0fe9664ca12",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8a69a628-9aae-4cee-b647-0bbeca632716"
        },
        "item": {
          "id": "4b35adfd-c632-4728-b752-340e446978a2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6ea29e30-f4aa-43b4-ae08-3f3f6c91c7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd643ca-a415-4850-9a81-993969f01c17",
        "cursor": {
          "ref": "27ed370d-770c-4e0a-8e61-7b4b8fc13895",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "acf7496a-5f3a-4499-b9d2-8af99879ae4a"
        },
        "item": {
          "id": "3bd643ca-a415-4850-9a81-993969f01c17",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f55022df-fac4-4edc-879d-79bf0c42c3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e14d19-e48b-4a16-9a5e-6a4c03846652",
        "cursor": {
          "ref": "d62edd79-4a41-43d7-b9b2-32a138b1ee94",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "08458c50-1c6a-421d-9cf8-3ed6de67342c"
        },
        "item": {
          "id": "64e14d19-e48b-4a16-9a5e-6a4c03846652",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b828eb68-b35e-4c9e-bcef-3f4ba1b1e491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35a22be-298f-4c62-a37f-574af50d5204",
        "cursor": {
          "ref": "103f57e7-0a81-42b7-b958-6d27d1a49769",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9a3bbd23-29d7-4da2-b64f-9a77c642f2b4"
        },
        "item": {
          "id": "d35a22be-298f-4c62-a37f-574af50d5204",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "733c307f-40bb-40af-ad4c-480a645bbb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629d39ec-552a-4abf-abad-de43cae0980a",
        "cursor": {
          "ref": "9891224e-8ad8-4f47-9c05-021cffbeb37f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c12627c2-5e10-480c-8945-c0b468cba34e"
        },
        "item": {
          "id": "629d39ec-552a-4abf-abad-de43cae0980a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea8b7bd2-72da-40e0-b10c-bc68ac6a3d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aaaa33-c14e-43cb-bdef-ec235347928a",
        "cursor": {
          "ref": "743c6d1f-6b04-474e-b3b2-ec586eec2688",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8ece99af-4d3a-4b9e-8818-94ab265f2a67"
        },
        "item": {
          "id": "36aaaa33-c14e-43cb-bdef-ec235347928a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a06b2a5e-3b4b-4ff7-9575-54bc263ea487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d71d405-821e-4c59-af28-4857a0dd9bb4",
        "cursor": {
          "ref": "587323cb-d4f8-4ef1-9051-cf5917c0518b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e84cfca4-57a2-49d2-a38c-83bf2a40224d"
        },
        "item": {
          "id": "9d71d405-821e-4c59-af28-4857a0dd9bb4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9b99a8fd-0c3c-49df-badb-28c9db9778fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3267ef07-37c9-44c4-9a57-87df1e794ab0",
        "cursor": {
          "ref": "0e88f183-32d6-4c89-8a85-042d5f805238",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9efac0c5-938c-4dfb-bd1f-0707cd696230"
        },
        "item": {
          "id": "3267ef07-37c9-44c4-9a57-87df1e794ab0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "feac8a0c-3ab2-44ce-82b0-7f33dce201f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defc83c8-6ebd-4948-9e5a-ea335de7308d",
        "cursor": {
          "ref": "947a78ca-ec41-4214-a856-4ab5e1001eb3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "86fe765e-f544-499d-89f5-9575538baf50"
        },
        "item": {
          "id": "defc83c8-6ebd-4948-9e5a-ea335de7308d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ad36461-1ff3-466d-994e-e8f5bbdca5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640a1aab-1faf-4d81-a0a9-7d9e9bb86404",
        "cursor": {
          "ref": "eaa76677-2568-471d-8c60-1d0746ad53a5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fbf2e88d-59e5-4d81-9b51-4a3417a22d93"
        },
        "item": {
          "id": "640a1aab-1faf-4d81-a0a9-7d9e9bb86404",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aae34ca8-03b8-4cf3-9971-05a4b506a7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7e62d6-9afd-43e8-b91e-38b073570331",
        "cursor": {
          "ref": "d21ba4cc-7fdb-4be6-8263-255c41abc892",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2adb9e2-c3d4-4800-ba61-ed16f905cf43"
        },
        "item": {
          "id": "ff7e62d6-9afd-43e8-b91e-38b073570331",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6c340de8-b5ce-4838-91e1-2d9151b0ca91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24743ac-2874-43f9-b1d7-95f04e7d991a",
        "cursor": {
          "ref": "5b974a8e-7f15-44bc-9e4a-6ec454bf4844",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "14b11f9e-25cf-4241-b03c-50f980e3fa91"
        },
        "item": {
          "id": "a24743ac-2874-43f9-b1d7-95f04e7d991a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b3ff3f05-4097-412a-82b6-175fc237e4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4928a40d-4914-473e-8860-6e1028b4c09c",
        "cursor": {
          "ref": "c1fa7244-5a67-4f2b-a810-e69cbe8bc0c7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "194bfe44-2159-47c9-9138-30eb80c857d7"
        },
        "item": {
          "id": "4928a40d-4914-473e-8860-6e1028b4c09c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "64f9bb14-16bb-4ae8-8b5d-8fe48b7d91d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c58d8b7-3f90-4703-bf6b-857a121fc038",
        "cursor": {
          "ref": "360cd16a-98fc-4e05-9122-f97d9830ffa2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "469449c5-6468-4fc4-aa3e-6efcf2cacb87"
        },
        "item": {
          "id": "3c58d8b7-3f90-4703-bf6b-857a121fc038",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "71bdb761-1a79-478e-b4a1-0cb87f7d3d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b83d50c-ad3d-4508-bd4e-c3aa7d41f9a1",
        "cursor": {
          "ref": "dcedd2b6-366b-45f6-98dd-59b2d4ccea06",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "608cf7a3-56ee-4044-882a-790713e501af"
        },
        "item": {
          "id": "1b83d50c-ad3d-4508-bd4e-c3aa7d41f9a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "844ce0e6-88eb-43f8-be77-75f7004b9cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29764a5-47b4-44bd-a6de-39b88d010a0c",
        "cursor": {
          "ref": "2f08e205-47a6-49cd-93c2-8b9201ecdf2f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "41d0cd05-4277-4404-89f1-8faac5538088"
        },
        "item": {
          "id": "d29764a5-47b4-44bd-a6de-39b88d010a0c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a31ff314-012d-4744-ac3d-348c9769dbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa70ce2c-7f34-4d32-a366-63f4b1ec022a",
        "cursor": {
          "ref": "bbebfb50-0cda-456d-80bb-5f2c5ae59630",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79c28019-a187-4deb-bfdd-aabc29c43826"
        },
        "item": {
          "id": "aa70ce2c-7f34-4d32-a366-63f4b1ec022a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "df14ac2b-0368-4e01-ba30-d2b82997a6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c08d1c2-02be-47c4-9d2c-884c74095ddf",
        "cursor": {
          "ref": "fef9fd0e-c6b5-49f8-b052-3eeb7f845212",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "085bffa6-e1f7-43d1-a507-e35281e3ed57"
        },
        "item": {
          "id": "7c08d1c2-02be-47c4-9d2c-884c74095ddf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "967fbbc3-ba5c-4ed6-8a10-df427bcdc389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454448ea-c6fd-4ae7-8aac-5c73c3ddc174",
        "cursor": {
          "ref": "ccd90041-a396-4475-9bd5-46d5cf6a3d29",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d9cd5ec-c2fa-41e8-ba80-9ac42d6d308b"
        },
        "item": {
          "id": "454448ea-c6fd-4ae7-8aac-5c73c3ddc174",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b3c6d89-cbfc-4dbb-98f8-566bd9e670e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5072c3-1e46-4e96-85f3-e6c350bb0b3b",
        "cursor": {
          "ref": "4bf74fbd-e112-4ec2-a177-506c837c4f12",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5f2ff200-b79f-4de8-9cc6-ad142abe3330"
        },
        "item": {
          "id": "7a5072c3-1e46-4e96-85f3-e6c350bb0b3b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1e2fed8-4e43-48d9-b045-519e71ea13fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609c134e-480e-4d3c-8a04-399f9bae30cc",
        "cursor": {
          "ref": "95acb1e0-7d34-4ce6-b46e-fc266b0720e8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ba67715-9753-491d-9a29-fc72c4756790"
        },
        "item": {
          "id": "609c134e-480e-4d3c-8a04-399f9bae30cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "06b7e1b0-b68b-4d33-8012-eadf178c96f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fdb3d6-6ab8-46e3-ab51-a36e8552a90a",
        "cursor": {
          "ref": "547b5ff9-6490-4e60-9559-4c6fff74246e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d05cd43e-47c0-4ecf-a7a5-c25fda0a05d3"
        },
        "item": {
          "id": "f6fdb3d6-6ab8-46e3-ab51-a36e8552a90a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c5da4b11-9ba7-4609-9448-76d937a14f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec802fc4-9d46-40f9-9761-5369e628cf58",
        "cursor": {
          "ref": "668277f6-0d7f-48d9-aa38-c4a3c1e033ef",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f8d628cd-b52f-45a9-925c-a8484ca38dd5"
        },
        "item": {
          "id": "ec802fc4-9d46-40f9-9761-5369e628cf58",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5e1c8627-b901-4640-84e3-fcbddbbe2769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e9a814-38db-4576-ae62-305207854aa4",
        "cursor": {
          "ref": "4398d764-9513-4282-b981-af908e99cef4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a6cf62ea-29b6-4175-a6c2-cc5348e74fe4"
        },
        "item": {
          "id": "59e9a814-38db-4576-ae62-305207854aa4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6b5a2b29-65ae-43d8-a775-c8bd28fd45d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b5dd8b-2b69-409a-be6e-bff99390d2e5",
        "cursor": {
          "ref": "89d6ab6e-5c4c-49ca-9882-e45247d0f5ab",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "204df1a6-fdcb-4546-8c10-3d6e3a210ceb"
        },
        "item": {
          "id": "59b5dd8b-2b69-409a-be6e-bff99390d2e5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "24304fa6-2e8e-4010-9283-49e6a909ca4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc695c65-4635-47e3-a772-2d3d3a4b222a",
        "cursor": {
          "ref": "fc71ccfd-6f5a-4e6e-950b-9aee6d9f8474",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4a5adaf0-76a5-4ea0-b821-3b05cac452d0"
        },
        "item": {
          "id": "fc695c65-4635-47e3-a772-2d3d3a4b222a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ae9df83d-7606-4fa1-b4af-2037796510bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7101342-a0d9-4c04-96ff-dd61a7dbb28b",
        "cursor": {
          "ref": "5dc55e79-f450-4d89-bc26-1c7be1ac52a1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "07fb361b-72f4-4962-b208-7b371b67d654"
        },
        "item": {
          "id": "c7101342-a0d9-4c04-96ff-dd61a7dbb28b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "591e7d88-74fb-40c9-b59c-2b3cd0adc947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8129ab54-75fb-4f9d-8368-54fa90a90516",
        "cursor": {
          "ref": "180228b4-857f-4971-93c4-c495851f9f0c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e26bf3b6-522c-4aa3-bcce-da724b695437"
        },
        "item": {
          "id": "8129ab54-75fb-4f9d-8368-54fa90a90516",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "772fd570-7496-4cd6-8bec-fe78fa8ccf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf85859-e74a-4b96-82ae-1e3290227904",
        "cursor": {
          "ref": "f2f0ae41-49ba-4c51-8917-66aed3d86656",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "814b6b94-bc60-4eb6-b3bc-4d0a79e490f2"
        },
        "item": {
          "id": "cdf85859-e74a-4b96-82ae-1e3290227904",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cb3f37bb-dd46-4022-93dc-f459543eea24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f458e9-23e8-472c-b9c2-6cb6e0cbdc18",
        "cursor": {
          "ref": "53b7dd10-147e-4475-8b68-e1678b9b71c9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "085f5735-4943-4ffd-abac-d3028a493a8c"
        },
        "item": {
          "id": "f6f458e9-23e8-472c-b9c2-6cb6e0cbdc18",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e4fdbf3b-885b-4d3e-8541-c8a90e0f2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e20ac72-39dc-4a5a-80dd-68e8fd6e18bb",
        "cursor": {
          "ref": "48ed359c-c7df-49eb-9501-27e25d98ca30",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aa71a22f-e235-4288-830b-765d545519bc"
        },
        "item": {
          "id": "7e20ac72-39dc-4a5a-80dd-68e8fd6e18bb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "96850616-dbad-4b58-922b-9f9d97c1bb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07122947-4bc3-4231-9d40-36fd24e1980f",
        "cursor": {
          "ref": "466f57d4-10c5-492e-9130-29572a597aa2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1c87733-ecb3-491f-9580-ccfdde206b30"
        },
        "item": {
          "id": "07122947-4bc3-4231-9d40-36fd24e1980f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e78d432-8355-41d8-9080-6662e79bf9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520f62f-d189-4e07-823a-214540cd4ae3",
        "cursor": {
          "ref": "f7a7d5f1-7322-4a3a-842d-a8c1867b648c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "824a7bec-6e09-49e9-be41-83214c09f293"
        },
        "item": {
          "id": "c520f62f-d189-4e07-823a-214540cd4ae3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "39f4bcdf-1207-4f09-b686-5f5c8b1dce8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d9ae99-cfef-4325-bc77-87d5b502e09e",
        "cursor": {
          "ref": "a1c3e016-c2dd-4b9b-b872-8589e64b7fd1",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9f1dbe15-2a77-40f7-856e-7e5bccc2e469"
        },
        "item": {
          "id": "f4d9ae99-cfef-4325-bc77-87d5b502e09e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89547516-e767-48b7-aae4-141ac3b1892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511265c-891d-499c-a302-7231bf013a91",
        "cursor": {
          "ref": "7bc25b4b-1fc0-43bc-aa73-d0ea141a65de",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04698008-3f1f-4742-a9dd-aac6856939e0"
        },
        "item": {
          "id": "c511265c-891d-499c-a302-7231bf013a91",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0d7cfd9-b98a-41ec-a1b4-5f6769043ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc6dc2-602e-4a21-bb0e-7ed16ba694f7",
        "cursor": {
          "ref": "11a1c006-805d-4c6c-975b-f99b23ad3c78",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f3282776-0e11-4d1b-92b4-b759dfe6500a"
        },
        "item": {
          "id": "ebdc6dc2-602e-4a21-bb0e-7ed16ba694f7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "faa42282-518d-4961-a2ec-c63a743486f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777282cc-4874-456a-ac07-12f8ada64f91",
        "cursor": {
          "ref": "89c8ff2e-b4c2-4867-b7da-15fd140f7e83",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4be18641-641b-4a8c-b332-231275dfabe7"
        },
        "item": {
          "id": "777282cc-4874-456a-ac07-12f8ada64f91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c5f19564-3311-4163-8375-fd79080c5242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86f4ec5-b8e7-485b-b479-c68e8af5c051",
        "cursor": {
          "ref": "1a2cd2ff-6cd5-493c-a2a0-8e6aaad80273",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "71254b92-2af6-44bc-9716-f024047490df"
        },
        "item": {
          "id": "d86f4ec5-b8e7-485b-b479-c68e8af5c051",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d938d801-0080-4e40-9962-08f39a2b133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6a2568-184f-4e3b-aac6-0c4d178a76de",
        "cursor": {
          "ref": "8d30cad8-50b9-4368-9cb4-25c3d9c2e4c8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6d8654a2-522f-4957-a6d3-4442adf1f034"
        },
        "item": {
          "id": "5f6a2568-184f-4e3b-aac6-0c4d178a76de",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "166f0840-b675-43ae-8a8b-743b9a1f882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c7b19-3b6e-421c-bbe8-a7e95b8c80a2",
        "cursor": {
          "ref": "f840a8e3-a8a3-4f71-a108-eecdcbccb700",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a3583fb6-8c85-4f3d-a04a-57615fff3d70"
        },
        "item": {
          "id": "483c7b19-3b6e-421c-bbe8-a7e95b8c80a2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7abcaa76-87a9-484a-8934-70a307043d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6699b70-8d41-4e19-b53b-202a5a9f1f27",
        "cursor": {
          "ref": "94217faf-4d1d-4e6e-bd68-ac3854c13a34",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0832afc-b2cb-476d-98fb-16e9b23a3a5e"
        },
        "item": {
          "id": "d6699b70-8d41-4e19-b53b-202a5a9f1f27",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e6267b7b-f26b-47db-b4b1-e70c148aba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d89a3-267e-4a41-a1a0-f212a4731cc6",
        "cursor": {
          "ref": "0040dde5-485e-45ec-bf09-96ed8740a7f4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "147cd026-1723-42ba-bea3-854f279d42e7"
        },
        "item": {
          "id": "237d89a3-267e-4a41-a1a0-f212a4731cc6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c05b53a5-7fac-4085-bcf5-15f4df681487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbf4724-d2b3-42ed-b266-591363de7b5c",
        "cursor": {
          "ref": "84937365-2dde-4b5b-8394-9fd5df597d36",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8d81ff7c-1485-4e23-a7b4-b451ed73f361"
        },
        "item": {
          "id": "6fbf4724-d2b3-42ed-b266-591363de7b5c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "884180ae-5d75-43e3-9595-36ef89339987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d765fe4-ffb2-4267-9a35-492495422d9b",
        "cursor": {
          "ref": "2fdaa708-3a5c-4279-9aed-429a189ed808",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f20ebf28-dd12-42a1-8635-da130d352bf8"
        },
        "item": {
          "id": "3d765fe4-ffb2-4267-9a35-492495422d9b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "33951422-24b7-4ba3-9b5b-6488f3bc826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "32fc42b7-7088-4445-996f-0e9e11eadf0d",
        "cursor": {
          "ref": "834b21dc-8a44-49af-b00a-0ff179876d77",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a219c1f4-827d-4605-a393-4b83499574f8"
        },
        "item": {
          "id": "32fc42b7-7088-4445-996f-0e9e11eadf0d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d98e6607-9619-4add-a6b7-7e7ece8cd650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "996f0c3e-48a0-452e-bcdd-662b523e69c9",
        "cursor": {
          "ref": "d23b8948-60bd-41e2-976b-048fe65c219d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "af730ae1-a180-472a-96dc-03b7a34ca538"
        },
        "item": {
          "id": "996f0c3e-48a0-452e-bcdd-662b523e69c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "44b18e17-73f4-43ec-9dce-1c08124913bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4fad3519-8d86-43a9-9dd1-f66bcf3e063f",
        "cursor": {
          "ref": "d1f763bc-c887-434d-b102-a6966ffb1f66",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "03a92121-ecac-469f-acda-e766dba5dd91"
        },
        "item": {
          "id": "4fad3519-8d86-43a9-9dd1-f66bcf3e063f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dddf3873-810a-4257-8c88-a6c51fa51f73",
          "status": "Created",
          "code": 201,
          "responseTime": 4690,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483d6b1-fda1-4062-9370-fe8b3cd45ce1",
        "cursor": {
          "ref": "a620c4eb-3439-4943-8778-fe9b0ee5eb12",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b075ac27-1b9e-4211-8e98-801d5ad901bb"
        },
        "item": {
          "id": "a483d6b1-fda1-4062-9370-fe8b3cd45ce1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "70fc1c6b-364b-431d-9405-6b7ad7466fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "071ac4bb-cf4b-4413-a358-6fc731fa8d51",
        "cursor": {
          "ref": "4144dc48-e4d3-4035-8114-e52b935c43ad",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f4e7fb3f-e4ee-45fa-9970-d2b325cc0f3b"
        },
        "item": {
          "id": "071ac4bb-cf4b-4413-a358-6fc731fa8d51",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "01ac9d80-f9e7-4004-8a25-b07609250824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "13804b16-0981-432b-a315-bc62d1341b09",
        "cursor": {
          "ref": "97a841c1-8579-43ed-a6a8-e07dd8f1575f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a51072b1-2224-49c0-985d-84a80798956e"
        },
        "item": {
          "id": "13804b16-0981-432b-a315-bc62d1341b09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3b05ec28-2b8f-4be8-ac82-d766a8b4670e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28438255-fe46-4ea9-983c-2875c2518ec9",
        "cursor": {
          "ref": "76794a5a-1ab6-494b-9e62-7cd9a79c2552",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78397f54-561e-425f-90c2-ad950e0e9e32"
        },
        "item": {
          "id": "28438255-fe46-4ea9-983c-2875c2518ec9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e10f1dca-cf77-486c-95e7-c0348b5236dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b62066-4b6a-4d54-bfb6-08b0f6f6fc9b",
        "cursor": {
          "ref": "d79b3e70-fb25-4f99-a356-47cc6b5963ca",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "da168fd7-ba0e-4f7e-be3a-01b94f20eb14"
        },
        "item": {
          "id": "31b62066-4b6a-4d54-bfb6-08b0f6f6fc9b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2dfcb50c-4c55-4b6c-8ed0-30e1d3eb30ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9343e720-454c-42ae-b12b-648b667fec4b",
        "cursor": {
          "ref": "c60a1a95-1ec1-492f-a9a8-40b1ac55d06f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e0e72780-8af5-45e1-a8f4-8bb347fb25b9"
        },
        "item": {
          "id": "9343e720-454c-42ae-b12b-648b667fec4b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "33fec3d6-2416-445e-ad50-38e9f3e06e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff8770-e9a9-4b67-ada6-592d1808fc6a",
        "cursor": {
          "ref": "ba1cac62-9403-4291-a920-6409cdf45323",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e195fa1b-8f90-4cc7-9436-34961d4e8ccd"
        },
        "item": {
          "id": "70ff8770-e9a9-4b67-ada6-592d1808fc6a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7b948e06-1ec8-49c3-a8a4-6008377e028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde9808f-4fc9-49e4-8ccd-5cf42ed1f031",
        "cursor": {
          "ref": "17c85ec6-acfb-4307-ad8a-ffb58d289d42",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5c14290d-89d8-4c59-96f3-7a54e32ae099"
        },
        "item": {
          "id": "bde9808f-4fc9-49e4-8ccd-5cf42ed1f031",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f6de350d-f1fc-44c3-a777-096c6a8f6b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4a82dc-6da7-4e95-ae4f-02cc02117f2d",
        "cursor": {
          "ref": "5d6a41b3-8545-454b-801e-0c42cdc3dd3c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "49944234-86fd-40e3-a2ef-44cb24d97c5a"
        },
        "item": {
          "id": "cc4a82dc-6da7-4e95-ae4f-02cc02117f2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b2de4b06-0e5d-4662-a570-a808b312b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa54265-a24c-434c-9519-1dbdf9129101",
        "cursor": {
          "ref": "77680407-f90a-4517-9711-2f1590ae13ad",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9716d606-cc84-44a8-9229-45e16064c42b"
        },
        "item": {
          "id": "eaa54265-a24c-434c-9519-1dbdf9129101",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d72939c-2d2a-4e5a-b7c5-e5e79d324bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d51ce4-091d-47b9-a9fe-2c5f809423c6",
        "cursor": {
          "ref": "ce0a3967-4658-461c-99d7-e3ff62c50f50",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d92668e-502a-4c60-898e-3bc574d27903"
        },
        "item": {
          "id": "36d51ce4-091d-47b9-a9fe-2c5f809423c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f67a786d-f294-4434-8b00-ff928617e356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2e0ed5-1a56-4c47-9a2b-0e349a8f1456",
        "cursor": {
          "ref": "67aaa6f8-154e-4212-982f-f56592b77f97",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25786d9f-3176-4303-bd1b-aa8a7c7372a4"
        },
        "item": {
          "id": "4c2e0ed5-1a56-4c47-9a2b-0e349a8f1456",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ff1efc43-c88c-4727-a784-07946b1441ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de7e4b5-33d4-4978-85ab-c963618f8496",
        "cursor": {
          "ref": "9329758d-cd19-42a6-a413-801d18031759",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "41609881-1e35-4477-9026-ec5e68cce6e0"
        },
        "item": {
          "id": "0de7e4b5-33d4-4978-85ab-c963618f8496",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eb7e090f-771c-40d0-b24d-c910493d1a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e186bc5-5c1a-4b3a-8046-6f2cd48f16f4",
        "cursor": {
          "ref": "7a9ba92d-f9c1-437c-a93f-1d9a900ed56f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88e65c21-6280-40c2-97a6-ee98902e364f"
        },
        "item": {
          "id": "2e186bc5-5c1a-4b3a-8046-6f2cd48f16f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c77ae392-4d48-4a0d-8b7f-42fee211a6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e20ff-ad0b-4077-a7e4-66a176c4bbdd",
        "cursor": {
          "ref": "2f9e5850-c718-47df-9efd-dca58c4cbbdd",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3264b88b-15c8-4b03-99d1-1f2d313c7271"
        },
        "item": {
          "id": "1c9e20ff-ad0b-4077-a7e4-66a176c4bbdd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8161fad3-d7c1-4d42-a702-7f16629e55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c68405-fb01-4176-9b1b-21f0ef5b2cc7",
        "cursor": {
          "ref": "a8cf968f-b12a-481e-a253-3d687b99706e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c1a7cfe9-f70b-4318-8a04-1637a99a7aea"
        },
        "item": {
          "id": "19c68405-fb01-4176-9b1b-21f0ef5b2cc7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "077ff804-7164-413d-91d0-29db412e93ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6ddaa2-ae8a-4d6d-8840-530e020eb44c",
        "cursor": {
          "ref": "4a1e19ea-4e28-46be-af8f-fb748221ff1f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e9f22465-3b77-4b60-805c-f68de510142b"
        },
        "item": {
          "id": "ea6ddaa2-ae8a-4d6d-8840-530e020eb44c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7d4b5387-2524-49df-9764-f68e75cfcec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996cf669-fc23-48f8-9edd-8bea0ef335b1",
        "cursor": {
          "ref": "a94fa4bc-ff4e-4b72-ac75-d42602680cc2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7223ceac-8847-46ea-84e3-d6a1aab2eacc"
        },
        "item": {
          "id": "996cf669-fc23-48f8-9edd-8bea0ef335b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5fcb90de-b801-43ec-b2bd-57e8d7cfd945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e253a89-e014-4f4a-be00-f913441be600",
        "cursor": {
          "ref": "d16d7d4b-aeac-488e-bb42-3ee3ec8883c3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bbaa37e-4092-43be-b981-ce0820e8d8b5"
        },
        "item": {
          "id": "5e253a89-e014-4f4a-be00-f913441be600",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e6bc01ce-ed29-4868-91b0-e1ea66be2122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c102262-22dc-48f8-a3a6-b3af6d1f0058",
        "cursor": {
          "ref": "fabc991a-ad7f-4e01-9ed8-97cd0b41cfde",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef0d04c1-9ae1-4e57-8a0b-9b11fdc8d235"
        },
        "item": {
          "id": "1c102262-22dc-48f8-a3a6-b3af6d1f0058",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "791e0286-beab-4a50-99db-a43f7a85daf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecd8971-d361-439b-ba56-b4be917633de",
        "cursor": {
          "ref": "f74a9a0f-97ea-45e4-b04b-3226304b3a56",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5d98e772-f41c-4b74-b096-e8950db04f48"
        },
        "item": {
          "id": "7ecd8971-d361-439b-ba56-b4be917633de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f489f3c-edf1-486e-8655-9ae39d84ff67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff658892-9869-4291-a8fc-caac18ed45e3",
        "cursor": {
          "ref": "83a46dbf-d454-459d-a249-d1978cd934f1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cfd137d8-29dd-4a4b-96ce-6eb9c7d50d82"
        },
        "item": {
          "id": "ff658892-9869-4291-a8fc-caac18ed45e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "92f0651b-09bc-4513-a9af-f44040b25bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6e9caa-43ae-4e59-bb03-16dff9a440ca",
        "cursor": {
          "ref": "6bdc3560-83c4-4284-b464-e3f570a22332",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45ecceab-f8ec-448a-9c2c-7c6b2b440ff1"
        },
        "item": {
          "id": "ed6e9caa-43ae-4e59-bb03-16dff9a440ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "078727bf-14c1-414b-9c77-5eb4b54dc5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2824c26f-45f9-4e77-bb03-de8a04366417",
        "cursor": {
          "ref": "87261ae7-60c2-4b94-94c3-b11c90dc232e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed02c4f9-407c-417d-9f16-f40dcc2857a7"
        },
        "item": {
          "id": "2824c26f-45f9-4e77-bb03-de8a04366417",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "640d430f-39b2-466d-b093-d7100b44ecc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba7d9f9-9fcd-470e-8d75-a5a9d2491521",
        "cursor": {
          "ref": "ac5e6edf-1915-4dfb-b183-271c1ceb4277",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5430efcb-870e-4f77-b110-94b50ccc0de2"
        },
        "item": {
          "id": "dba7d9f9-9fcd-470e-8d75-a5a9d2491521",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9b21c3ed-9a66-42f5-a8f0-48082a20aaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a468cf-524f-42ba-88f6-78a6fe2babcc",
        "cursor": {
          "ref": "c8b5c833-fd78-42c5-b56c-da047ab0d7ef",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "12c0a190-6ea5-46a9-9e09-f1dfa03c290e"
        },
        "item": {
          "id": "d0a468cf-524f-42ba-88f6-78a6fe2babcc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b715536b-6e6d-4249-b8d8-abeb024852d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def99f59-e435-40c5-a6b1-053339a046cd",
        "cursor": {
          "ref": "f2449358-127c-4209-8293-8f0dc7113f8d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "794f892b-e268-4e27-9067-08081f1f19a3"
        },
        "item": {
          "id": "def99f59-e435-40c5-a6b1-053339a046cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8ad535ca-d909-4275-8ed2-0e33ed28c308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126d9789-5188-484c-b922-57edf54d052c",
        "cursor": {
          "ref": "8215eb69-c287-4ad6-ab1d-90eeb05f6d5a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c848f6c3-59c5-4211-9e15-98982dc76e0d"
        },
        "item": {
          "id": "126d9789-5188-484c-b922-57edf54d052c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd86fb69-fb0b-486d-99aa-c324d6f008a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac5c69-7ecf-4327-be47-6b4353017e30",
        "cursor": {
          "ref": "e4b7b1c8-2de9-4a14-9613-3854a5379a44",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "33feb612-4429-455d-af06-bdbe4e6e3678"
        },
        "item": {
          "id": "2bac5c69-7ecf-4327-be47-6b4353017e30",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a36c0f8d-6c82-472a-978d-9eadc2770f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7303b93-1811-4548-8038-47fc33f44e4d",
        "cursor": {
          "ref": "1f6e92a1-6fbc-4111-b39d-8f10048f8b8d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f2bd4e2-296b-48a8-8b1c-3b295d2105bd"
        },
        "item": {
          "id": "a7303b93-1811-4548-8038-47fc33f44e4d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdf2dcb9-91b3-409c-88c3-268860869452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3e015-7a3f-43bf-8f5d-c1a02a287201",
        "cursor": {
          "ref": "7fed697f-e0c0-4f0c-8ee3-fa37edac3ab3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c1a0d8bb-6a23-4551-bfee-d9c13a34b4bf"
        },
        "item": {
          "id": "dac3e015-7a3f-43bf-8f5d-c1a02a287201",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "293b87fd-0ad7-4be8-8ac9-73f1f8976c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3675bfa4-39a7-497f-8d95-3b7d449f176e",
        "cursor": {
          "ref": "43fd58f4-c9c8-4713-afad-77e4a889be8c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "68ade78f-bb22-449f-bb36-1989420c6ae0"
        },
        "item": {
          "id": "3675bfa4-39a7-497f-8d95-3b7d449f176e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90c9bb94-eb2f-4e56-9802-e906d50d92c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b18df9-4130-41b7-a9d1-0c13392527d6",
        "cursor": {
          "ref": "9d5e8aa7-ce38-498f-98a5-6d5a15fcb2c7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c73f0ad8-c34c-4758-a8ec-36ad2f4f65de"
        },
        "item": {
          "id": "53b18df9-4130-41b7-a9d1-0c13392527d6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6dd06865-d55a-433d-9a3a-1067ceb8bc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d321c9-f986-4d13-a623-5e042cd8b722",
        "cursor": {
          "ref": "0c976e76-4140-42b8-9dba-60da8ae15b11",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9a66c297-dd4c-49ce-8712-fe372a8af197"
        },
        "item": {
          "id": "11d321c9-f986-4d13-a623-5e042cd8b722",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "adef3bcd-1721-4b50-9cba-7ff29eaf9cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6b0cb3-3526-420f-8781-8e0cebe188cb",
        "cursor": {
          "ref": "f6eba513-f0fe-4331-8fcf-41dfdb877235",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f4af101d-91a9-49fb-b057-eedd2e47db56"
        },
        "item": {
          "id": "1c6b0cb3-3526-420f-8781-8e0cebe188cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "146ba166-88ca-45c3-b85a-b27c099f60d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e8e8d1-17be-48a2-92a3-2437599e6bf5",
        "cursor": {
          "ref": "f0e2ca4f-b9ee-4bbc-91c1-f485e14168f3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "66ecff19-147f-4ff9-9bb7-79b64d48e1ea"
        },
        "item": {
          "id": "48e8e8d1-17be-48a2-92a3-2437599e6bf5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e58533b-f93a-467f-a5dc-b6c261c64e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e2b7cf-9460-4f4a-86dd-deb137bcf437",
        "cursor": {
          "ref": "d4a7b28e-ff82-4b80-8821-ca5cb1c68e11",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "606eba4d-a96f-4cd8-9b43-3580fcdc9441"
        },
        "item": {
          "id": "36e2b7cf-9460-4f4a-86dd-deb137bcf437",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3088b58-d91b-408b-915e-c7298bb8c5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4135118a-76e5-4f4f-8453-430d98d7ba56",
        "cursor": {
          "ref": "7bcd0f55-1a94-450e-846a-e01900d89787",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "900ac228-c0e5-4903-bfde-1f5fa001d999"
        },
        "item": {
          "id": "4135118a-76e5-4f4f-8453-430d98d7ba56",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04ab9528-7b81-452c-895f-94dbba142a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0691d823-17c7-4314-8191-713ef3492f17",
        "cursor": {
          "ref": "d630e50e-361a-4c42-8db0-ddd270cceddd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "527ba73a-3f3a-4d93-ad35-4fcd0d979417"
        },
        "item": {
          "id": "0691d823-17c7-4314-8191-713ef3492f17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0de46de-8741-4d3e-8441-99290a48b637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c89a64-2184-4276-8c20-93a7a5be0d85",
        "cursor": {
          "ref": "d0c1c6b5-1902-4fc3-9430-8c8a417e302d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "888d74c5-c946-4137-bf0f-d8786cc059f0"
        },
        "item": {
          "id": "e0c89a64-2184-4276-8c20-93a7a5be0d85",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f05280e0-3682-4a96-967f-1660f8bbe6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b26dc4-2bdd-4168-a7c5-d83cda49b3a2",
        "cursor": {
          "ref": "87e15613-b3fc-4937-b7a1-8c91d14a54e7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f8a0a1ce-3fc3-44eb-8dbf-9f4bcc9deed4"
        },
        "item": {
          "id": "79b26dc4-2bdd-4168-a7c5-d83cda49b3a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0484e2d5-55dc-4ee0-b19a-d937dadbe5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe13557-f14c-45e9-8fe2-9782c0dc5cb4",
        "cursor": {
          "ref": "2b3a7cfd-3cb6-48ba-8820-bb5fa380f524",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e46e0f55-de45-45b2-9e63-1d656258375b"
        },
        "item": {
          "id": "bbe13557-f14c-45e9-8fe2-9782c0dc5cb4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60b10e6a-a1fb-44a8-a735-5c5f676ba6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0e0f04-723e-4c6b-9b4f-723aff3717b7",
        "cursor": {
          "ref": "be302b4e-0b94-49d4-b209-cbe15ad0e9e8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "309223bf-a34a-4f35-a00a-c43585cfa5d0"
        },
        "item": {
          "id": "ef0e0f04-723e-4c6b-9b4f-723aff3717b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9cdf9e59-0a79-4839-b989-e1c9495cd099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be73987a-6c90-40c1-8aa6-b56e50523dd5",
        "cursor": {
          "ref": "668236da-1957-4408-a59d-d97fadbedf30",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2a28aecd-8ffc-4bfb-a3f8-0e4fa655e41c"
        },
        "item": {
          "id": "be73987a-6c90-40c1-8aa6-b56e50523dd5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ff8d697-21b1-4d10-9438-bf5652872987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745580d7-3719-4ce6-98e3-b15011507f0a",
        "cursor": {
          "ref": "f15af435-c2dd-49b0-8430-dc198903e78f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "81a9daeb-f797-43b6-b6a9-7c95c8c74532"
        },
        "item": {
          "id": "745580d7-3719-4ce6-98e3-b15011507f0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a9ac7e3-946e-4e17-b9d5-74c120ebe1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3b9454-a701-4c2e-bd74-d33472982450",
        "cursor": {
          "ref": "35488cc5-0b63-47a4-a5cf-391ab81b4858",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aa944d8f-3b30-4181-aec3-e75df5e506d9"
        },
        "item": {
          "id": "3c3b9454-a701-4c2e-bd74-d33472982450",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58c6d7b3-9ea3-4ca5-abec-40ed7f66918e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbbe9f6-a473-4280-bafc-8fa268593d28",
        "cursor": {
          "ref": "51be5864-632a-4dfd-9bd9-b18083bd2538",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb3a96b8-d116-4fdd-a0a7-5e9521653cdf"
        },
        "item": {
          "id": "7bbbe9f6-a473-4280-bafc-8fa268593d28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0ca91096-1833-4269-a8ab-8cfd289ab216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db649cd-7a85-42da-a304-5a5feada1144",
        "cursor": {
          "ref": "93918cd5-c035-460f-b8a7-e0a06087d43e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aa66947d-ab95-4e35-b6de-8b709576f142"
        },
        "item": {
          "id": "8db649cd-7a85-42da-a304-5a5feada1144",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "05c6c847-5569-40fe-8b9a-a592f697b0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97a4c44-5990-4e91-86af-87ce3981b138",
        "cursor": {
          "ref": "5ca7b319-2a66-4767-ad32-964b64e6c06c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "19465b17-ae0d-4de0-b394-1d1c0e8a39b8"
        },
        "item": {
          "id": "f97a4c44-5990-4e91-86af-87ce3981b138",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fbf912b-3f7d-48b2-b3cc-e2c11e22b2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced9f891-a273-4e7e-924e-7a63668a1fb6",
        "cursor": {
          "ref": "d6ab6d68-6b40-4825-a547-660430fd00af",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dd9d879f-c2c4-43b5-846a-f77eb2ccb73c"
        },
        "item": {
          "id": "ced9f891-a273-4e7e-924e-7a63668a1fb6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "715efb45-8e01-4d28-9af3-caddaa1875c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b5289d-48e9-487f-9a67-9146f37a5b8c",
        "cursor": {
          "ref": "e7f115f7-aad9-4290-b5ac-4db10242ac33",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "01e990c5-906b-440e-ba4a-2b41b97e8b93"
        },
        "item": {
          "id": "83b5289d-48e9-487f-9a67-9146f37a5b8c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "688bf5ba-3679-40a0-9450-37cbcd7b93e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeb61be-1bdb-4f00-99b1-8f929940f79a",
        "cursor": {
          "ref": "3c96a988-603e-4302-a6fa-a00b17ee7f11",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a111bb31-1d9a-4c3a-8b58-274b402155df"
        },
        "item": {
          "id": "dbeb61be-1bdb-4f00-99b1-8f929940f79a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c61926f2-aa65-4e8a-8814-69f25e72964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c21000f-7493-4623-9305-f68d166da052",
        "cursor": {
          "ref": "30f11573-720c-48b0-a233-a71310352013",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1b2b513a-073a-4033-8bd1-925f85d456a2"
        },
        "item": {
          "id": "6c21000f-7493-4623-9305-f68d166da052",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e0c7c99-7c57-4761-a363-289a02033e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9b4a3a-89c0-4d60-8e33-c9f1d79e15f8",
        "cursor": {
          "ref": "806f298a-9739-4ae1-8ba8-cabeb2eb0448",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4c9c2fc4-2a52-4160-b445-be25f0898aa0"
        },
        "item": {
          "id": "1b9b4a3a-89c0-4d60-8e33-c9f1d79e15f8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "afdc7f4b-b359-4111-8651-3acab21da25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70196c78-b9d5-4f8a-b278-d2d9e7b7f536",
        "cursor": {
          "ref": "879660f5-b0be-4a67-9234-e0bd0e7f51f0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a02e335-351b-4a16-8ade-80f24a61ae0d"
        },
        "item": {
          "id": "70196c78-b9d5-4f8a-b278-d2d9e7b7f536",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d89293a-9929-4be9-8120-f3d49721fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd4dd01-ede2-4433-a4de-ab5f979566aa",
        "cursor": {
          "ref": "7027d3b5-1532-49e3-be1a-80a0ba4cf191",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c5c341eb-9ada-4409-8a9d-76081f916176"
        },
        "item": {
          "id": "6cd4dd01-ede2-4433-a4de-ab5f979566aa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d240a5dc-92f7-4063-b6f3-d2d4e0e9ca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7860ac9f-366c-4d3f-848b-3890099df8c8",
        "cursor": {
          "ref": "26be5103-6235-417d-a003-417b11154c0d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "edb52b2e-24ab-409e-86f8-26588efcae4b"
        },
        "item": {
          "id": "7860ac9f-366c-4d3f-848b-3890099df8c8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "283807b8-d7eb-4de8-b67c-44c805554d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb2cc05-1e54-460c-83b3-973865ed30aa",
        "cursor": {
          "ref": "87d6f862-d830-48fb-818f-5a8125dab3bb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "055bc802-8e07-4836-aed3-7639eccd06ca"
        },
        "item": {
          "id": "efb2cc05-1e54-460c-83b3-973865ed30aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cadf21b6-c2a5-4fee-b3c1-c1c13b6cd04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b02a31f-de6b-43cc-a3db-2bf08bde3c6e",
        "cursor": {
          "ref": "ab476152-6ad0-4902-804a-651b28d291a8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d9cbcf24-3853-44d5-b5c0-41004ef95064"
        },
        "item": {
          "id": "8b02a31f-de6b-43cc-a3db-2bf08bde3c6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d4a5a75-82da-416e-8620-950b1a6f141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f44290-c6c5-40a9-870a-359cc33c2322",
        "cursor": {
          "ref": "b2e87693-0475-48c1-87ae-1ed50de95828",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d40c1084-0699-4956-88ff-c24fcec1dc93"
        },
        "item": {
          "id": "43f44290-c6c5-40a9-870a-359cc33c2322",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1aee6070-37a7-4bdc-81e4-a54745e582ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db0b233-a3ad-45c1-8849-f77586e9e83d",
        "cursor": {
          "ref": "8c8059bb-20f6-4692-89a5-044328d9e1c4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4d18300b-2a70-4fd0-b6b0-f242e70614ef"
        },
        "item": {
          "id": "6db0b233-a3ad-45c1-8849-f77586e9e83d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9a0b3aed-fdec-4257-805e-89c4a1023209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017fc1a2-20d9-472a-8242-68b42d3f36e8",
        "cursor": {
          "ref": "b992f50a-fc43-4e39-aca4-3478189a6e5e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bf10cc70-623f-484a-aa82-8fdf8bfb448d"
        },
        "item": {
          "id": "017fc1a2-20d9-472a-8242-68b42d3f36e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "56595224-6889-46d0-a756-6d680f5729c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4970c8c-467e-4c7c-b29f-31b959e639de",
        "cursor": {
          "ref": "1955e56f-807f-425e-a689-85205ee2c20f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c1d4e46c-49e2-43ea-90a0-26d9145e8891"
        },
        "item": {
          "id": "b4970c8c-467e-4c7c-b29f-31b959e639de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a36ad002-6dec-4890-abbc-a6864a76e5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0255f354-db49-478d-acc1-ccd717e47062",
        "cursor": {
          "ref": "d4be7cd3-c0eb-4343-acaf-da1b73047d55",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c4ae9e9-7575-4a0a-bf57-928dbfbe8241"
        },
        "item": {
          "id": "0255f354-db49-478d-acc1-ccd717e47062",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3ebd9318-6fd3-4b22-8886-a14955ca6b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb42488-6271-437f-8559-b78a4b0b5b03",
        "cursor": {
          "ref": "a4c61011-a226-45e1-8da6-ded900da5588",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "29d700ab-7846-4e03-8059-fdc796471f94"
        },
        "item": {
          "id": "adb42488-6271-437f-8559-b78a4b0b5b03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a869377-c3be-446a-a5c6-4851e46e7acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa184223-3482-4c53-b518-955da0d3c6f0",
        "cursor": {
          "ref": "a1c78409-dab2-42fc-ad40-08dd888372d8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d56c7c9b-3b8c-4835-8f87-872c862ac44f"
        },
        "item": {
          "id": "fa184223-3482-4c53-b518-955da0d3c6f0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59a9d1df-94e3-483c-b642-d60134813b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60feb31-9e93-47ff-9b1b-08314dcb54b5",
        "cursor": {
          "ref": "b720abfe-cfe0-45ab-bf47-5d6ab56bb4a7",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cb1b24b8-b520-4ce4-8f95-3db4a5cba6ad"
        },
        "item": {
          "id": "f60feb31-9e93-47ff-9b1b-08314dcb54b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3684d2e6-813a-4cce-9318-b66c1d204e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a445230-b517-4335-ad7d-7261909a22f3",
        "cursor": {
          "ref": "f0298930-fcb4-48ba-a9e8-1759a0f1ce42",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c6a277b-ef57-48b0-9e03-4a76e2430932"
        },
        "item": {
          "id": "6a445230-b517-4335-ad7d-7261909a22f3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d66343fe-9d73-4407-93d7-2ea8b74155cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5460ee19-1b21-4659-8bf8-69dcb95219aa",
        "cursor": {
          "ref": "7d138ff1-7c28-459b-8cb8-ddb273750a7f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f87f640f-d86a-45fe-ac3c-2bf0918f3870"
        },
        "item": {
          "id": "5460ee19-1b21-4659-8bf8-69dcb95219aa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e20ec537-db6f-45fb-87a3-2857cb8c7f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8959d5eb-8c90-46ce-b0aa-228c28e646f6",
        "cursor": {
          "ref": "214ab041-3b1c-4ccb-ab26-925dfbb7229b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9cfe7678-35b3-408f-be09-3d0fc35c8b39"
        },
        "item": {
          "id": "8959d5eb-8c90-46ce-b0aa-228c28e646f6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81d098bd-2718-45f1-913b-d9f48e2d1bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d968dd50-30a1-4862-a237-8203234c2a43",
        "cursor": {
          "ref": "a0daeec2-0ba9-41c0-9bfa-f28e9dfbb991",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e8fa412b-3505-4840-8876-bce91f9cded2"
        },
        "item": {
          "id": "d968dd50-30a1-4862-a237-8203234c2a43",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8381e501-1358-4964-965f-3df15ef6516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28fc86f-7c56-43fa-a81c-a51bbc49b24d",
        "cursor": {
          "ref": "232b608c-ff1b-400f-9644-06604d359ffa",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "752cc59a-6938-48ac-aca9-5312bd932bbe"
        },
        "item": {
          "id": "f28fc86f-7c56-43fa-a81c-a51bbc49b24d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "812d48a3-72d6-4a79-9791-59cbdec20db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e05c756-cca5-4a4a-a652-f7feb1aa549a",
        "cursor": {
          "ref": "aa4d14b7-2c2f-42e8-8c81-6a80ed7e600b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0145ac3c-ff45-40c9-96e2-c8f865c4680f"
        },
        "item": {
          "id": "7e05c756-cca5-4a4a-a652-f7feb1aa549a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f3002d35-d513-495a-bae9-9fcf060b7dd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a09f96-5875-4c30-91cf-23723fbc03a3",
        "cursor": {
          "ref": "50088950-4882-454c-bc33-899f6ea15416",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ffb5e436-4edc-479d-aa04-22b7662deba1"
        },
        "item": {
          "id": "06a09f96-5875-4c30-91cf-23723fbc03a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d1817b7b-938f-4900-8f38-4b7d690c8a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f6d3c2-63d6-481d-a14c-e8d0028ac36c",
        "cursor": {
          "ref": "06709154-7410-4c0e-9e99-5cb7f38c21ac",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "17f877d0-b158-4878-9513-2ce0652a9e62"
        },
        "item": {
          "id": "87f6d3c2-63d6-481d-a14c-e8d0028ac36c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c1a9d266-5217-4059-8160-525b584abcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b3f8d5-25a7-40ca-aee9-a34e7710a912",
        "cursor": {
          "ref": "8ab1db50-4fb6-420f-a26a-d4881885014e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c9ada15e-08a9-4219-a848-b57536d16ce1"
        },
        "item": {
          "id": "b5b3f8d5-25a7-40ca-aee9-a34e7710a912",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a59be1e-0b05-4751-b77b-185485e221b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9373f7-eee9-493a-bd5b-a48264f41005",
        "cursor": {
          "ref": "076a479c-7a94-4742-9ae9-32b7bb735787",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c7a77dff-ec78-4a83-b51b-08f777529507"
        },
        "item": {
          "id": "0a9373f7-eee9-493a-bd5b-a48264f41005",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7bf50f23-2987-4990-b6af-3dc06d29e314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6013de72-5b0c-4eff-a044-3c600b679be8",
        "cursor": {
          "ref": "bacc0c39-a728-40d9-a8b6-13eba55557df",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2d50bbe1-4381-42eb-8dd3-0af4d1dfb5f2"
        },
        "item": {
          "id": "6013de72-5b0c-4eff-a044-3c600b679be8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "591b0ec7-6438-4ff0-a5d5-03b9e0f5d908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a85e482-19a2-4f8c-8004-406162108ff8",
        "cursor": {
          "ref": "1b1e8d3f-152d-4a3d-9db2-79ef17f29eac",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d6353b49-a4df-4aab-8684-f636ba3ef60b"
        },
        "item": {
          "id": "3a85e482-19a2-4f8c-8004-406162108ff8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "71f3b37b-e6ab-4d03-8245-c1149ce3f5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edabdadb-ea9c-44aa-ae4d-22fe6308a714",
        "cursor": {
          "ref": "f8c9aa78-6b9b-4d5b-b5c8-e546d6190949",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "93f5d98c-4e16-473a-b16d-667dae7cdd35"
        },
        "item": {
          "id": "edabdadb-ea9c-44aa-ae4d-22fe6308a714",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "77cfced5-8589-4356-a301-c5c9530d83fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462abdb0-cd27-47ec-84b3-583cf699cd31",
        "cursor": {
          "ref": "aac38fcf-acb2-4c47-814c-07668d461beb",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ea2d46ea-3d01-4150-9e06-4c1d37ea4cde"
        },
        "item": {
          "id": "462abdb0-cd27-47ec-84b3-583cf699cd31",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05b3cb0c-6200-4bfb-a2c3-87f04a224e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a4c99-2419-4aff-b12e-7e56e7c54814",
        "cursor": {
          "ref": "d2ea9f5d-4b56-439b-bd5e-ae81d0bfc931",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d8c9abdc-c589-4fde-89e9-c4388dcfb2ea"
        },
        "item": {
          "id": "3d8a4c99-2419-4aff-b12e-7e56e7c54814",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2254eab-8216-4c35-89db-248e98f0cd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000c014d-41c6-468c-b610-7560d92e8a0a",
        "cursor": {
          "ref": "b2137435-f7ca-4b71-9883-60b5f330acd8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5c9b7d49-bb82-4df7-85a6-f61ea752585e"
        },
        "item": {
          "id": "000c014d-41c6-468c-b610-7560d92e8a0a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e95c2302-dbb5-412c-8925-1f2a30468a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8e8e60-992b-4944-bf24-5d07301db2fe",
        "cursor": {
          "ref": "c6d69e63-004f-47f8-b340-782716de8018",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e68fcdaf-46ac-4fb1-982c-fbf4ae5e9832"
        },
        "item": {
          "id": "1e8e8e60-992b-4944-bf24-5d07301db2fe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "41b4b483-5230-4a28-bfde-4fb0833e4dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025b6d10-5d23-4e16-b0e1-f9cc0c02b1de",
        "cursor": {
          "ref": "b4510603-a2a4-4ae3-9fc3-201709a9038c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1ca61181-fd58-4800-90c1-1e918498737b"
        },
        "item": {
          "id": "025b6d10-5d23-4e16-b0e1-f9cc0c02b1de",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d31c7d3-051f-4229-9d8c-2459dcf9911a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6b13b7-1615-44cb-83ab-c0350546302c",
        "cursor": {
          "ref": "a8a00509-a93f-4c25-9a29-349ae3f70a65",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "de76a19c-ea85-4c4d-bc6f-c9cb62b89231"
        },
        "item": {
          "id": "8c6b13b7-1615-44cb-83ab-c0350546302c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3f7532b2-ca39-4786-85ee-516250789763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffd6a85-feec-4566-bd57-6726cae0f5bd",
        "cursor": {
          "ref": "fa6b5c4d-e67a-4dec-8714-b13a496b73e3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "86ddb4d3-f0e4-4ca3-a842-7002528396d0"
        },
        "item": {
          "id": "3ffd6a85-feec-4566-bd57-6726cae0f5bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc24a10b-d937-4815-8651-732110866c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9b0140-c01b-447c-903a-e83ad6ad7338",
        "cursor": {
          "ref": "466ea2db-0473-45e2-8afa-ac721c90d749",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2364e461-d7b7-421a-b488-dc69450b1c16"
        },
        "item": {
          "id": "ed9b0140-c01b-447c-903a-e83ad6ad7338",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "620c77ff-39fd-4986-9772-a2f4994e3aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f6835b-fb67-4635-b350-a552523ba614",
        "cursor": {
          "ref": "773794fa-e44e-46e9-86a9-3fd2c835a0f9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5b0e2c89-d02b-4d78-a8c4-86b0b7988219"
        },
        "item": {
          "id": "43f6835b-fb67-4635-b350-a552523ba614",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "53c21be0-f53b-4fe2-8ced-66041620b311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2a545f-c8d0-4bb9-aac9-ad206a366b6a",
        "cursor": {
          "ref": "52895206-194d-468f-90c5-4ef71f6ed333",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "940fc37b-c1ec-40c6-bd7e-8abbfe367bee"
        },
        "item": {
          "id": "ba2a545f-c8d0-4bb9-aac9-ad206a366b6a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d8a06ea-0b42-4e6d-854b-76b99156619e",
          "status": "OK",
          "code": 200,
          "responseTime": 1093,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "1f68321d-e96e-49e2-b39d-ad6d799548a9",
        "cursor": {
          "ref": "ebe60c73-0a54-4767-b025-020ca770bc7d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "92387c32-10ea-40ce-9f06-b7f7be6303fe"
        },
        "item": {
          "id": "1f68321d-e96e-49e2-b39d-ad6d799548a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "391d9049-e867-4ce7-8f02-8d57b3861432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f25f7cf-58ce-4416-a8fd-62210fbb7603",
        "cursor": {
          "ref": "107b5eb6-6c96-4b32-9fdc-3b13ba135f38",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3afd6cdb-0c0a-421f-a872-7deeebed3fb0"
        },
        "item": {
          "id": "4f25f7cf-58ce-4416-a8fd-62210fbb7603",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ce919b7-d151-4d8d-9f6c-a611af442843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1993,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71dbc9e-5729-46be-90c3-8b88fd12356c",
        "cursor": {
          "ref": "f1cf40c7-0a7a-4213-bcbd-b1e5525863a6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b88a1b62-4011-4971-8e13-5ce0ad9019cd"
        },
        "item": {
          "id": "c71dbc9e-5729-46be-90c3-8b88fd12356c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9e6ca17a-0672-4207-b172-75fa8cdd366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30973c7-43f9-41e0-bd49-dfa16b47ce36",
        "cursor": {
          "ref": "14b4538b-74f8-4135-974a-448a06112a6d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84b4c053-9991-4d5a-8594-6dd8be315f42"
        },
        "item": {
          "id": "e30973c7-43f9-41e0-bd49-dfa16b47ce36",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ca9828ce-6c7d-4232-b117-0e2d47559d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a077393-4db2-4cf4-933f-48194b0a59b4",
        "cursor": {
          "ref": "5a26e0e3-36d3-474f-8a13-d111a00b24b9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9fc559b6-6c64-46b3-8cca-ee96d68dc43d"
        },
        "item": {
          "id": "2a077393-4db2-4cf4-933f-48194b0a59b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ebdfe9e8-5bcb-48e7-98ca-59ab3e4e7371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535a5916-b119-4604-ab82-9c14cf4b387c",
        "cursor": {
          "ref": "009096c1-8430-456b-9941-ead306db48ee",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2a69c115-3117-45de-b98f-dc21633f0d36"
        },
        "item": {
          "id": "535a5916-b119-4604-ab82-9c14cf4b387c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d9d04fe0-0aa7-4d5f-bbf6-b15bf796add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0738bf7d-d66d-4629-9247-cc6207bde531",
        "cursor": {
          "ref": "702d88c2-4623-4a13-813b-97bd96211109",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a16a36a-3cdf-4bec-9ecf-cb94bdb590fd"
        },
        "item": {
          "id": "0738bf7d-d66d-4629-9247-cc6207bde531",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5103640d-a52a-492c-b6aa-f4734c30eeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10bbc6-3982-4160-8f82-879332e870b1",
        "cursor": {
          "ref": "42e05d04-e35e-46d8-b3b1-63f3a6448235",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "18ec7831-8dc1-4ae1-963d-51dee9d1459c"
        },
        "item": {
          "id": "5a10bbc6-3982-4160-8f82-879332e870b1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "37614229-2562-405d-953c-30719cfadeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b1eb22-5f8f-4a96-b9a0-e13c70475ac2",
        "cursor": {
          "ref": "cf489e7a-aa2f-45b4-8cdf-504a8c22f010",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "580372c7-b12c-4e7c-b09f-ba3f5f3b3d2d"
        },
        "item": {
          "id": "72b1eb22-5f8f-4a96-b9a0-e13c70475ac2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "31039123-99ed-45ab-b159-07a39e5f293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f516a30-383f-4b4d-849b-e9024ef77eb2",
        "cursor": {
          "ref": "95d9c98d-cc89-4334-a734-6561929c4ba0",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85fdff9c-9615-4d4d-a58c-53b2c98b34a1"
        },
        "item": {
          "id": "6f516a30-383f-4b4d-849b-e9024ef77eb2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05f9b8bd-88d0-44f6-ba48-a453f2511073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a97b550-3193-4ade-b97e-bb5d3daa039f",
        "cursor": {
          "ref": "a967fd35-63fa-4a02-8386-ac3cd81ad30c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "64f82153-cff6-48c9-8ce8-e98a194ba17b"
        },
        "item": {
          "id": "5a97b550-3193-4ade-b97e-bb5d3daa039f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf56606c-3827-462e-ba75-fb00fcbe9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7abb5a1-d9bf-4320-b674-f2401b534733",
        "cursor": {
          "ref": "69fbe8f2-4dd5-4d64-bc3b-d04f8a3eda13",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bfb6f50d-eab1-4515-9e33-1414c0fb77f2"
        },
        "item": {
          "id": "c7abb5a1-d9bf-4320-b674-f2401b534733",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ba3632a9-ffdb-43d7-873c-792266b24bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d376e33-ad17-4d8c-97c4-8f0bd29c7e64",
        "cursor": {
          "ref": "f535b860-c10d-4187-987e-882a308f6379",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bac2a266-f8c9-45eb-9fe9-9269bba5b2ef"
        },
        "item": {
          "id": "1d376e33-ad17-4d8c-97c4-8f0bd29c7e64",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a6ac22e5-ed82-4340-a495-0c8d2699c08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a10794-f9d2-4d7f-96b7-422ecad92084",
        "cursor": {
          "ref": "d396aaee-0f97-472c-bef0-2d3661f36984",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "742faa7d-7cca-4f1e-9435-92265a963a50"
        },
        "item": {
          "id": "d0a10794-f9d2-4d7f-96b7-422ecad92084",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2f29cea9-02c4-4619-9e17-370ca314af66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8904eb9-b9a3-4c4c-ab6a-0d5cdb374062",
        "cursor": {
          "ref": "823370b4-6227-4003-9d6f-83be44909290",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "22a486e6-7913-4a4a-80f3-bdb09430e89f"
        },
        "item": {
          "id": "b8904eb9-b9a3-4c4c-ab6a-0d5cdb374062",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed400a79-2d2d-4b6a-be63-546fb6e4b7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee9a537-0fff-4d07-9a25-76c3603c93bd",
        "cursor": {
          "ref": "7a56e607-a9e8-46f1-9950-0e451f3da757",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e158e3b8-ff4d-4345-8ab5-79003fa3090e"
        },
        "item": {
          "id": "6ee9a537-0fff-4d07-9a25-76c3603c93bd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "78bee571-f776-4239-a6b2-0a309df69326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5dbb52-b373-4ec0-95b1-3489fde6e38c",
        "cursor": {
          "ref": "0cdc3328-851d-412b-a97d-ad58eb83464b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ef1d024f-cb54-4c9c-b231-58dddda52e28"
        },
        "item": {
          "id": "7b5dbb52-b373-4ec0-95b1-3489fde6e38c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "70bc7b44-ba36-420c-b9b2-bd5cbf11feec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c75c065-f9bb-4b43-af2b-52e25dee4bb1",
        "cursor": {
          "ref": "33c78a68-1cfe-402b-9dd7-573676ae8fad",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e2cb7e4d-f9c8-4a18-b6ac-42c02d2529d1"
        },
        "item": {
          "id": "0c75c065-f9bb-4b43-af2b-52e25dee4bb1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3c212419-b3f6-459b-a692-50c8878a263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a8a1f-b03d-4a3e-af7d-88eb7ebf13a8",
        "cursor": {
          "ref": "44be328c-4e67-4898-a99e-c6f4403c64bc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cd99b1d3-195d-469d-88f6-572ddc1a4f8a"
        },
        "item": {
          "id": "ee2a8a1f-b03d-4a3e-af7d-88eb7ebf13a8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "393d7181-40a7-4c4c-b846-83b72584fb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c5314d-d152-4b52-bea8-5a2ab214a42e",
        "cursor": {
          "ref": "ddd8af3e-340a-45e9-8e3c-e804d2b857bf",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "21fa7269-a7ba-48df-9099-a4b6b36887b8"
        },
        "item": {
          "id": "00c5314d-d152-4b52-bea8-5a2ab214a42e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0d22a744-2f23-49c2-80f9-5085fc3abb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0227919-7d1a-4013-a852-6ede8dee58d4",
        "cursor": {
          "ref": "88de1b43-a9b1-41f8-99b5-4ac02723a77c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "90b6c11f-06dc-4969-9ada-21944365d444"
        },
        "item": {
          "id": "d0227919-7d1a-4013-a852-6ede8dee58d4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2bd67d35-a87c-4906-a9b4-66592a42c0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efb55e1-f393-4527-84dc-85ce19e13309",
        "cursor": {
          "ref": "cf7585b9-e9fa-49dc-a71c-86121525d870",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e62a6c06-b696-487e-a025-2ad6da425a97"
        },
        "item": {
          "id": "7efb55e1-f393-4527-84dc-85ce19e13309",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "22b989cf-31ee-439f-bbc5-67ade60ac1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0156bde2-1a2d-499f-8d82-2d456241aabc",
        "cursor": {
          "ref": "423bc3a6-a31c-485a-8201-d00627bd625f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d32167bb-c900-487a-88b7-225458ec51be"
        },
        "item": {
          "id": "0156bde2-1a2d-499f-8d82-2d456241aabc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a80328ef-fd3d-4571-ae20-bcf5bba37434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad6fe5e-7f8e-4aba-ae3b-b6da348d0ccc",
        "cursor": {
          "ref": "193d2110-7d84-4c03-9c17-cb0785583819",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e5bad9df-1006-454b-a7fb-3b1bc6c69161"
        },
        "item": {
          "id": "1ad6fe5e-7f8e-4aba-ae3b-b6da348d0ccc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e5fa159-7cb9-43db-9e75-cce977ceb5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec59324f-22c1-4f69-8286-914fb79f66b6",
        "cursor": {
          "ref": "ce21a6d3-e924-459a-a933-40ff7791b4dd",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bc957776-fc76-4ccc-9edf-0dda87fd0eb0"
        },
        "item": {
          "id": "ec59324f-22c1-4f69-8286-914fb79f66b6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8f426366-1662-4aac-bbbd-54c3c80ee5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9125c6ad-cf91-4f93-97de-1dfc6db51184",
        "cursor": {
          "ref": "6ab1ec9b-2c1b-4ddb-8583-8f3ee78ba688",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "23750396-24eb-47c8-bf38-34f58ae45273"
        },
        "item": {
          "id": "9125c6ad-cf91-4f93-97de-1dfc6db51184",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4aaeb02d-fbd2-4a6c-a1b0-ab88ae624054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4364fd0-321f-4142-b290-8004be31607a",
        "cursor": {
          "ref": "c3033796-7e7c-4618-b51f-9cde9feeb5ba",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5fe0b889-46f8-4199-b527-97e56e17ea96"
        },
        "item": {
          "id": "e4364fd0-321f-4142-b290-8004be31607a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8a071957-cf4d-444c-955b-2d5c9eef425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3be4eb-ead0-4d37-bd15-0692ced3f523",
        "cursor": {
          "ref": "84ba8090-d52b-4ed0-98a4-213dcb00d220",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b6cca947-d760-4b05-be32-2ff545e10e51"
        },
        "item": {
          "id": "5a3be4eb-ead0-4d37-bd15-0692ced3f523",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1c0905bd-7207-4e26-a832-39d3bef9d801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de41844f-610c-46f5-b354-94e50f792b40",
        "cursor": {
          "ref": "da2803fc-12fa-477d-b2a7-429ddba54c1c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f45e5400-d19d-4ad7-a5b4-8f41b3c52f55"
        },
        "item": {
          "id": "de41844f-610c-46f5-b354-94e50f792b40",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8463a7a5-e29c-4b9e-ae8b-b267dcb36233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d9299d-fd8e-4f04-ad7a-da4ec1b7042b",
        "cursor": {
          "ref": "7c99da06-99ae-4382-9be7-4d6bf3f1ecfb",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cae8e295-0789-4204-8e7a-9f6169c509ec"
        },
        "item": {
          "id": "a7d9299d-fd8e-4f04-ad7a-da4ec1b7042b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ecb5ba32-3415-4803-9ffe-e2e2ce69cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb1674f-c389-4437-ad04-58a3baa736f5",
        "cursor": {
          "ref": "790c8cbb-e1e9-4d5f-97c7-ab8e355091c1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d5652384-2c11-46c3-b975-42d9ef3f5697"
        },
        "item": {
          "id": "feb1674f-c389-4437-ad04-58a3baa736f5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "af9f7ba2-8e93-46f4-b1f4-482a367bd584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd518b85-6940-439b-be74-da355b7e9ec6",
        "cursor": {
          "ref": "be3efbf8-6dac-4bfe-a396-0d92a2a48aea",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40dec366-faa2-4ac5-9cb7-5f04aa73e603"
        },
        "item": {
          "id": "fd518b85-6940-439b-be74-da355b7e9ec6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7bfeb4b7-dcd7-4cab-b657-cac29d112bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c47eba-e59c-4bb0-91f2-f444a149a013",
        "cursor": {
          "ref": "f5e4529f-e684-4ffc-a274-07e3f6a1dbe4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bd1ff644-85ab-4224-9714-c2aba81c1aae"
        },
        "item": {
          "id": "29c47eba-e59c-4bb0-91f2-f444a149a013",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c24f690c-4b00-4352-ae71-b6788ea4e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4157bd6b-ca41-4216-938a-05822c963fe7",
        "cursor": {
          "ref": "f713233c-6628-4fd6-abc6-f6bb5c94ec55",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "01ce4112-8842-43b2-a8c3-b6e62dad2175"
        },
        "item": {
          "id": "4157bd6b-ca41-4216-938a-05822c963fe7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0be281e8-7392-4698-8786-43b1839576f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018ab97c-2834-490c-8108-45eff29dbec2",
        "cursor": {
          "ref": "1320c7cd-a912-4122-925d-e526d42ecb26",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8f3a5ac2-f5ee-4df0-a6d1-f2d9a91fb57f"
        },
        "item": {
          "id": "018ab97c-2834-490c-8108-45eff29dbec2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d17a2737-bfb4-4747-a125-2249a72109c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e679d33-29dc-4ef8-840a-fb827f42760c",
        "cursor": {
          "ref": "3b344dc6-7702-4252-962e-83a6d8401118",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c835a20d-4fc2-41a4-8d8c-ee48c8285293"
        },
        "item": {
          "id": "2e679d33-29dc-4ef8-840a-fb827f42760c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7217137b-b9fb-4257-b055-ad34b32969b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1491d9e0-68b4-484f-b127-07c6003d4529",
        "cursor": {
          "ref": "07c58a3a-ad98-40eb-a4e2-238648b27d43",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3b60b12f-ee4e-4ed9-a529-bc2b4a441c88"
        },
        "item": {
          "id": "1491d9e0-68b4-484f-b127-07c6003d4529",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "746ba9c7-ecef-4150-a0e3-7d6bfbffe41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00bd79-48c1-4cb6-8552-095700395418",
        "cursor": {
          "ref": "c6e971c8-3d61-444e-9efe-daeb51780a84",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "36c5e7c0-80b6-4b43-be89-9909bb0730eb"
        },
        "item": {
          "id": "3a00bd79-48c1-4cb6-8552-095700395418",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bd87dec4-1039-4e14-b83e-0bf34bd8de8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e35d57a-b65a-4dd1-b214-50c874800a87",
        "cursor": {
          "ref": "1ea29084-cc0b-4d9b-878d-463750ce0332",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b0a4ab82-ef56-41c7-a8d2-04449ab049cd"
        },
        "item": {
          "id": "2e35d57a-b65a-4dd1-b214-50c874800a87",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "594dc3fc-455c-45c3-90cc-2ee275b01c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b93b50-7b1c-470e-a352-220d6918e8e1",
        "cursor": {
          "ref": "eac721e4-9e26-4da1-bbd1-9102b779021a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a3135b42-487e-4a3f-9328-f6366f3c883e"
        },
        "item": {
          "id": "d8b93b50-7b1c-470e-a352-220d6918e8e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1b9887e0-d523-47d2-aece-aa23467523fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d99650d-a38f-47cb-a5d0-120e9f1efb42",
        "cursor": {
          "ref": "19978bc2-7131-4277-adec-79ee549e2192",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "862a1028-3581-4c76-8e12-dd16e23134fc"
        },
        "item": {
          "id": "4d99650d-a38f-47cb-a5d0-120e9f1efb42",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29b8bf1f-6a3c-4f2e-a356-fe8a92be2655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de217c17-ab32-4111-b92d-5779a46148f1",
        "cursor": {
          "ref": "b2066f93-c4c8-4ca7-afce-75986b75fc70",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67616307-432b-42b1-98d4-d7d8ad5a131d"
        },
        "item": {
          "id": "de217c17-ab32-4111-b92d-5779a46148f1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46961d9f-cc3d-4c7b-ac25-c153daa7d04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd6f2b1-f362-4eaf-b836-2b65ae7eafe0",
        "cursor": {
          "ref": "52ba70b5-ff0b-4f40-b6bc-6767b5cd0f2e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24c520bd-814e-4818-9a39-248f1392686e"
        },
        "item": {
          "id": "9dd6f2b1-f362-4eaf-b836-2b65ae7eafe0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8c423a3-4121-4cbb-ae6e-c65fad268cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e595a70-45df-4b87-b2a9-1fd9064076aa",
        "cursor": {
          "ref": "44987883-cd93-46ac-80f8-b9080d318f72",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "487a85a1-76aa-4862-a1a0-99a05f3f8980"
        },
        "item": {
          "id": "0e595a70-45df-4b87-b2a9-1fd9064076aa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "638237f7-b9b0-4b5a-b96f-34c513cb350f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be89a0-8bea-405e-9892-8d762a6cba3f",
        "cursor": {
          "ref": "718685f1-2e82-48f5-84f9-95aca31a111d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bfe91e0a-697a-48e9-8af2-fac9c19e526d"
        },
        "item": {
          "id": "81be89a0-8bea-405e-9892-8d762a6cba3f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9233318e-faea-410d-9343-a4b343c1c283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c092bd22-4ff9-4069-902a-a397ae9617a4",
        "cursor": {
          "ref": "7978719b-df85-47cc-8e1c-378b235379ab",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41bd70e9-2cf7-41d3-add1-4cba151796f3"
        },
        "item": {
          "id": "c092bd22-4ff9-4069-902a-a397ae9617a4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e2d9c22d-038c-4841-9e31-68648c32b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0788f862-7072-4a97-9a9a-9f9585945a30",
        "cursor": {
          "ref": "77d8b844-6401-400d-a237-0c76aadaa91e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "901e1cdf-2401-4993-83cf-09cf752fe091"
        },
        "item": {
          "id": "0788f862-7072-4a97-9a9a-9f9585945a30",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a2f31be8-84b2-45aa-8cb1-659952e96a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f80134-7a4d-4132-a2f9-0e9d9db41e33",
        "cursor": {
          "ref": "9fc4ad04-7df7-4fad-a682-f1d51b3c00e3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d494537f-1188-4eb7-8756-49f0ed7a5079"
        },
        "item": {
          "id": "70f80134-7a4d-4132-a2f9-0e9d9db41e33",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "decf357f-9c0f-433d-b249-c9bff1e40c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45457e35-e76c-42fb-82c7-9df5b51d293a",
        "cursor": {
          "ref": "74795749-28ea-4bc3-9909-62818ba15250",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "26e101c9-524c-40c3-8478-66a117650741"
        },
        "item": {
          "id": "45457e35-e76c-42fb-82c7-9df5b51d293a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c12357f6-1703-415d-bc33-2893384e64a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3daf361-6d63-4587-b8ad-8ff8800d0714",
        "cursor": {
          "ref": "ab612783-2f36-44eb-b997-c2e85053095e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e92975c3-ce23-4071-aa6f-543bc5182bec"
        },
        "item": {
          "id": "e3daf361-6d63-4587-b8ad-8ff8800d0714",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fa54e5a3-21df-4a2c-9ab0-99f3a2bc8a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb32daa-7f46-4c86-8384-0e4b9e1c0f86",
        "cursor": {
          "ref": "87952256-fbd4-4caa-9a2d-0f31762f6fcb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42829ed2-360e-40a5-8ce9-72065889ad42"
        },
        "item": {
          "id": "deb32daa-7f46-4c86-8384-0e4b9e1c0f86",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c1e306e-6d93-456c-9db7-61a8799c5efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c645698-07af-4d56-aa20-15d0cf6aeea9",
        "cursor": {
          "ref": "3d0bd44d-08cd-4acb-87c8-14f8a3928732",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2d92851f-08af-4c8d-a3be-b2f14d2fd4c8"
        },
        "item": {
          "id": "2c645698-07af-4d56-aa20-15d0cf6aeea9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ae62bf4b-10e2-4c63-b681-c1018c9cc8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dbd30e-b075-4f90-83e4-d0db6728231e",
        "cursor": {
          "ref": "265a931d-133b-4886-89ba-65e9ab15d271",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1f0f1729-e474-43d8-9669-a9525bc58d8e"
        },
        "item": {
          "id": "a9dbd30e-b075-4f90-83e4-d0db6728231e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2f134206-5c97-48e8-8b9d-046e5d9e271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cfd9f5-9a67-4cc6-8ef9-e29ac1be1767",
        "cursor": {
          "ref": "ae3a680d-1a92-4bd9-af7a-3448c6dd67ba",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7f308b0-a9ba-4a75-9dbd-a6e6b80699c3"
        },
        "item": {
          "id": "60cfd9f5-9a67-4cc6-8ef9-e29ac1be1767",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "41873193-928d-4ebb-af1c-edd4d5e046b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e807c-9774-4cea-9572-fc07c4c9a531",
        "cursor": {
          "ref": "67e5dd09-e4c1-41cd-afcd-c9a43e487c37",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cbdfca9e-0c25-4a39-af20-37112ba987af"
        },
        "item": {
          "id": "250e807c-9774-4cea-9572-fc07c4c9a531",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea91c5fa-1686-4ea4-9673-a12dc3fee46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742fb31d-b8a4-47c2-9a2c-b88154e4b0d3",
        "cursor": {
          "ref": "5a0e42f7-9482-41d5-9d05-4c4abebee2ba",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ae7ac7ce-4bc7-4747-be9a-244e533c38ee"
        },
        "item": {
          "id": "742fb31d-b8a4-47c2-9a2c-b88154e4b0d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c419415c-5f8a-4090-bce9-d5007be3c9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6118cd-b81f-4978-9358-116753239fa1",
        "cursor": {
          "ref": "bc19c90d-d116-49a4-bce4-09716e6bd759",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b7f69dfc-94c8-47d9-a076-6d2d92c787b2"
        },
        "item": {
          "id": "1e6118cd-b81f-4978-9358-116753239fa1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "375d52b8-232b-4da0-8a80-bef2801b47d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e437881f-c277-4f25-8e38-ccca03fee8d6",
        "cursor": {
          "ref": "44fa0b91-0734-4d1f-92e5-0f52832dcf03",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "339fa352-94f9-4bcd-9da2-a5fe5c2ad19f"
        },
        "item": {
          "id": "e437881f-c277-4f25-8e38-ccca03fee8d6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "71c63d20-a179-4914-82b3-09c1b5e72f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ca3f2f-c1c2-450a-a0c5-f4a7dfd36b29",
        "cursor": {
          "ref": "5b09a7ba-ef56-4478-87bd-7b65d51bc31b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "913bdfdc-90cb-4d70-b298-f90ae4f58190"
        },
        "item": {
          "id": "d0ca3f2f-c1c2-450a-a0c5-f4a7dfd36b29",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "54e39e48-61ab-47cf-a579-22c68bfaa052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9fc338-0a03-4dce-ac7a-198efde5b0e4",
        "cursor": {
          "ref": "d746454e-cf1b-4a6e-8f6c-63696b9260d6",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dafcf17b-ddf8-4ae9-9af1-c39d6f3bbcbb"
        },
        "item": {
          "id": "aa9fc338-0a03-4dce-ac7a-198efde5b0e4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7e289c53-05c1-4b73-a3de-d2bd91984293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3521ee-febc-41de-91ca-8ffedd17fb44",
        "cursor": {
          "ref": "bbf18a19-ff79-422c-b0e8-d13b97f88ba0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bb6ddb1a-d843-451b-920f-f58def5f07a8"
        },
        "item": {
          "id": "ce3521ee-febc-41de-91ca-8ffedd17fb44",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e983c586-6f3b-4d72-809f-584ea3700755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ee4bbf-342e-4305-bfce-e43691126650",
        "cursor": {
          "ref": "823a920e-2a81-4731-af22-6e3cf13fadf3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fab50d20-80f7-450f-bcd9-c15c4863a2d0"
        },
        "item": {
          "id": "95ee4bbf-342e-4305-bfce-e43691126650",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "26fddae3-1290-4d8f-b95c-176561ff25d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede0972c-17b6-4b66-b93a-3696221a45fc",
        "cursor": {
          "ref": "3451ff2e-1aba-4e6b-9f77-6047cbd9d0ac",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8b3fa161-1992-43fc-9067-bd0ed263181f"
        },
        "item": {
          "id": "ede0972c-17b6-4b66-b93a-3696221a45fc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d6df5341-1fa0-44a2-be26-cdb386d14fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b54cf37-38a7-49de-b43b-2addeea262b1",
        "cursor": {
          "ref": "f4ea09e4-f41f-44a4-a347-4af640510711",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d6a5713a-a50c-4a37-b796-533a5cc0800e"
        },
        "item": {
          "id": "5b54cf37-38a7-49de-b43b-2addeea262b1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d38a2bdf-1385-41ac-b372-bef9ef45adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d549179d-c5f5-4f33-adcc-16722c71a7eb",
        "cursor": {
          "ref": "ea2990f3-e0e2-4614-ae34-130b6cdf62c8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "24b14ba6-efce-450b-a571-4ab961e06ef8"
        },
        "item": {
          "id": "d549179d-c5f5-4f33-adcc-16722c71a7eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75f5fcd9-7a2a-4bed-915a-43df999d3b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3289695a-87c1-4e21-be39-af1b100a4f5c",
        "cursor": {
          "ref": "e3d4d04e-563f-4203-be66-a24cbca13728",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8c91f4a2-f48f-4c45-bc7e-4d0352003a20"
        },
        "item": {
          "id": "3289695a-87c1-4e21-be39-af1b100a4f5c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "11f53f43-0fa6-494a-9b71-a320040da0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e926b63-147f-4391-bac8-7fe43b9c9ee9",
        "cursor": {
          "ref": "79b9a1ca-d609-44cb-99aa-f60e16b53781",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2b67cfc2-405f-451e-a327-a99f52753a2c"
        },
        "item": {
          "id": "7e926b63-147f-4391-bac8-7fe43b9c9ee9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b10118a7-36b2-4e8f-a7b2-580039a8352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b562b9-49a2-41c8-bbe8-6b77b270a1d8",
        "cursor": {
          "ref": "9aa490ab-32c0-451f-ba66-17929a3f1d72",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2db38c3a-46a7-4dc8-abe5-0a87c19d5645"
        },
        "item": {
          "id": "72b562b9-49a2-41c8-bbe8-6b77b270a1d8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d4a73ce8-dfbe-42c8-8263-e5691feadabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697abf71-29cc-4af4-9005-fe06aa4ab686",
        "cursor": {
          "ref": "ac0aa5d6-67b2-44d7-8482-7cf9cc64a738",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "853e678b-3c80-472c-a687-b83ecab64756"
        },
        "item": {
          "id": "697abf71-29cc-4af4-9005-fe06aa4ab686",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2457ea4f-f2b3-4eba-986b-c667e754f648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dfdf71-e589-4af4-9f94-f9504271344e",
        "cursor": {
          "ref": "692f484d-2ea9-42f0-8744-4f1cfcbde070",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72a002aa-54ea-4557-9763-726106043bac"
        },
        "item": {
          "id": "90dfdf71-e589-4af4-9f94-f9504271344e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a7e08e18-411b-450b-9642-a69f85866c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8063d7d9-f113-47c9-b8fc-4bb19033703d",
        "cursor": {
          "ref": "f4cec852-691f-4bf2-9096-caff1117e363",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6ce9f4c8-be82-40a3-84dc-1e2db6150e26"
        },
        "item": {
          "id": "8063d7d9-f113-47c9-b8fc-4bb19033703d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e00ecb53-716f-423b-9f4e-34a1bc10f3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e671e-b005-4648-872c-771d6978e8f3",
        "cursor": {
          "ref": "bda96eb1-b143-4b70-b9ca-314672f24926",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8f16740c-cc25-433d-9ef3-8e75a9749960"
        },
        "item": {
          "id": "f54e671e-b005-4648-872c-771d6978e8f3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "be13cd5d-1405-4dee-b895-58c11f9c3204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd783b-efcd-4a13-ad51-ccc756a68957",
        "cursor": {
          "ref": "a77c6fa0-f837-4e64-8489-1ade3a65edd6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6eb3ecdc-215e-4960-b68d-3edab118911e"
        },
        "item": {
          "id": "c5fd783b-efcd-4a13-ad51-ccc756a68957",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "62663c34-96cc-4d43-9b37-fc1e953e99e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9a51a0-6588-43bb-a1aa-5c8b1afeaae6",
        "cursor": {
          "ref": "dbc2564c-1990-43b4-b847-ae9d51d2a854",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "255b37cc-53db-4c1f-96ea-a277f9d51668"
        },
        "item": {
          "id": "4b9a51a0-6588-43bb-a1aa-5c8b1afeaae6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae22d90c-a28b-4101-9c6a-6824f5201660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ae020-660f-4c6a-b1ce-57838dae1160",
        "cursor": {
          "ref": "45df09ec-64cf-458f-9684-0fd3da2e07f3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8ac4bf1e-4ca4-4e31-8e86-2040bf2c4740"
        },
        "item": {
          "id": "182ae020-660f-4c6a-b1ce-57838dae1160",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a770059-2adb-49a4-a7c3-44c4b174986e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec5f462-4d12-401b-b4f1-ca644db37519",
        "cursor": {
          "ref": "836f1735-da85-49a0-bde7-c4bb9b7ee161",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c5ba8155-e6ef-403c-9573-859bf1b4465e"
        },
        "item": {
          "id": "8ec5f462-4d12-401b-b4f1-ca644db37519",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d1a2bdb-5fd8-4582-9408-e2158755844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc9ffcc-fb49-4096-87f3-fd542a5ce898",
        "cursor": {
          "ref": "f6440f88-49ff-484f-9748-8317fa6162b4",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a17a49a9-74ad-4219-beb1-62781a8d52ff"
        },
        "item": {
          "id": "0fc9ffcc-fb49-4096-87f3-fd542a5ce898",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "75498e45-26bd-4958-ae2b-2f2500984368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d996e0a7-be8f-4c0f-ac5c-23260c067786",
        "cursor": {
          "ref": "0bc8d127-b128-438a-b722-76e2a9312b98",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "153e7f93-fb64-4002-a228-fd6847abcc1d"
        },
        "item": {
          "id": "d996e0a7-be8f-4c0f-ac5c-23260c067786",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7b6395ab-2ab4-462d-b62a-e7efe7fe62de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d8d7d-2bbd-4158-a7d0-65393e142f18",
        "cursor": {
          "ref": "17f457e5-e849-48cf-bab3-1b4eba5fa1af",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "162c8232-3952-4465-aefd-cf7652016587"
        },
        "item": {
          "id": "643d8d7d-2bbd-4158-a7d0-65393e142f18",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "de41baed-2710-4654-985a-308cfb53a991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ef4d24-0b50-4dd3-96ff-fa7b265cf4b0",
        "cursor": {
          "ref": "6be7473c-5dfe-4081-92cb-6291c3172de9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5934a5b4-c60a-41a3-b573-345d9b3a30a4"
        },
        "item": {
          "id": "90ef4d24-0b50-4dd3-96ff-fa7b265cf4b0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e09b578-09a9-406b-a47b-34d8cb5f8e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3b98cc-b036-4092-acc9-44ff7bf6ab79",
        "cursor": {
          "ref": "8beab44b-5072-4e4f-846f-4d9aea81fac9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "44156a79-9699-43d2-862d-eb19b778666e"
        },
        "item": {
          "id": "0d3b98cc-b036-4092-acc9-44ff7bf6ab79",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "aae454ee-9695-49fc-b60f-f0a0725869c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1571043e-df95-46f2-a0f8-78cda60f31ef",
        "cursor": {
          "ref": "eb2703e9-567e-402f-bbd7-477b209f1011",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "156964c5-5e7d-4699-a2d9-a63e9c8d8b92"
        },
        "item": {
          "id": "1571043e-df95-46f2-a0f8-78cda60f31ef",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6105dc4f-0398-470d-9b5f-cc30ca189298",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edaa4c5-a05c-4fbf-bbd7-aa67573bf688",
        "cursor": {
          "ref": "b879d7fa-bbe9-458c-b290-167d8d921063",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e27ec3bb-299e-4475-9db6-0780957768e2"
        },
        "item": {
          "id": "7edaa4c5-a05c-4fbf-bbd7-aa67573bf688",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2b595a53-a37c-4835-8272-883510a9a80f",
          "status": "OK",
          "code": 200,
          "responseTime": 3017,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d54503-1a67-4bbd-bf0d-b07536a916b3",
        "cursor": {
          "ref": "6a9f0b32-b4b1-44e0-be74-274334c89f4d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88981320-282f-4ad7-963a-a249867355d3"
        },
        "item": {
          "id": "84d54503-1a67-4bbd-bf0d-b07536a916b3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef1d1fb7-1b27-4299-af70-01ea70cca548",
          "status": "OK",
          "code": 200,
          "responseTime": 2548,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99352405-ae4a-4064-a752-98c3601d3277",
        "cursor": {
          "ref": "42ba2cae-fb15-4daf-83d8-94907572b73b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3def2f67-afdd-4235-913a-6261d981827c"
        },
        "item": {
          "id": "99352405-ae4a-4064-a752-98c3601d3277",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aad806eb-fa61-4775-8b2b-fa35755d6051",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99352405-ae4a-4064-a752-98c3601d3277",
        "cursor": {
          "ref": "42ba2cae-fb15-4daf-83d8-94907572b73b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3def2f67-afdd-4235-913a-6261d981827c"
        },
        "item": {
          "id": "99352405-ae4a-4064-a752-98c3601d3277",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aad806eb-fa61-4775-8b2b-fa35755d6051",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2eb8563-b39c-47f5-9c0a-6703798b2f77",
        "cursor": {
          "ref": "ddd5ff1f-4a56-40c0-894a-a58e436cae47",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "36132760-497c-45eb-94ef-eb2ad180be2a"
        },
        "item": {
          "id": "e2eb8563-b39c-47f5-9c0a-6703798b2f77",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "915efdab-3494-45ee-98bd-0fd25cf1f3f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d292cd-8a87-4e0f-a5b7-0db7850c1ea6",
        "cursor": {
          "ref": "28e2463b-23bd-4982-892f-b855ae91a497",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "871060f7-496c-4c7c-9519-fece2715bfa2"
        },
        "item": {
          "id": "64d292cd-8a87-4e0f-a5b7-0db7850c1ea6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "53d73e17-bcf6-476a-bd3e-9da6264f9078",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}