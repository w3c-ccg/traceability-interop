{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cae8fc37-e426-4af8-84f4-7ecde42beb3a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1530cda-e152-4ceb-855b-ec67352551b1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4301941e-226d-4478-97a8-2825330c7e94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb065f52-70d0-489c-ae36-239084e5acd2"
                }
              }
            ]
          },
          {
            "id": "e7630d07-cb94-471a-bbaf-104510aa0b8c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ceebc4f-1348-4445-87e5-235559dded35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3a79513-3f91-48b4-a0ff-456fda4772d9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c50ec9b9-c72f-460c-b31c-a8b1e6d26168",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a85bfe05-1e90-4133-850e-c0b922ccedb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67fe8c53-402f-45e3-b3d2-68aa0f93a4d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fb878ae-63b6-48fb-8d9c-974309d8f12f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9476861b-509e-4fc9-a5e3-7a9325157c03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2db6b57d-b85f-46d1-8635-dce30ce7dcd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "127abf4b-e10d-4f79-bcfc-b03d5e6749bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a42f01c1-41c3-4fec-9724-c27a1b4baa70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d72e82c0-d832-42af-99f6-adb38073587a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79680f81-b0be-4c3b-98da-f762ff319329",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4c1853a3-8aeb-451d-9b39-5961ddd8af14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df05e487-2e54-47a3-8168-f3f4c91f5839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78a545f6-0162-4798-92a4-08634b3baac8"
            }
          }
        ]
      },
      {
        "id": "eb2c11e4-3ed9-4bf9-8f8a-5531b4964ae5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "36e3d175-c76b-47de-8d05-50a13ecc87e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2a1d396-998f-4d8b-9ac4-9c2c93b9d0e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f833493e-36f8-44de-8a14-c6c1e2eaf0b2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2b4bf9-8037-4c2e-b7ca-2d8c0140e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def56454-9106-40eb-b4ca-1eac75940fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116bfcfa-05b7-4e1d-9db5-363ba455c6e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa35924c-9ad7-4386-b971-9bd493270ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66077e7a-7159-457a-b04c-b06a0fed9c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10276b48-f3a7-4851-a97e-db74acab1785",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce8ece-c70a-4e04-a83e-2bf83f6fa2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbacf712-a861-4ad9-8027-79b887e31ea3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "019b885e-ae20-44c0-99c1-ecf122341e1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea48619c-6729-457c-8f91-488f0c82edaa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f90aa8-f4c8-401e-ac81-969e61f19e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f532d04c-3715-43e6-b63b-ee63100119cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c076e5e-f952-4323-a028-119d73fdf1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61e21e9-5f41-445f-97a2-df356676c8f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "13bbbabc-aef0-4877-9549-12e14ee1a6e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf384332-a036-40ad-a60a-c1ff9c6e7300",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3d220d6-2df2-408b-9393-b6e6a62d5465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1192e3ac-5f63-4670-96f4-cca3d6dc8670"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09af9f7b-af41-4149-8a6d-e39be87ff005",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "01f07c2d-688d-4996-8900-6d55bd1cd85f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48066cb2-f3af-44c6-819a-ec6cdb49677b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8102131-27c0-4769-a116-af01c9239215"
            }
          }
        ]
      },
      {
        "id": "0b976a0a-0d04-4fd4-abeb-77a875034269",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2614a058-cad8-47f4-903c-8953da8a791d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "114a0c68-1973-4222-a095-c63d836e4561",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9d6d9ede-9280-4ed7-8bc4-a5ca8ee62c14",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea245ea-1e0e-4548-b6b3-43a6cc6cd764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483db00c-b0d2-4200-94e6-1de6c8d24249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cbce5a-b6ec-43e1-afed-5b2cf508403d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fde33cfd-99d3-4448-8559-5299005b2ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cdf875-d641-4cc9-8f8f-9c59e5468d0f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0e692c-579f-48c5-b3be-534941023798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e35a64-cd4d-4f37-9ac3-246aa731336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e1939d-1a73-4f61-b054-b7a3179798bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a83fbdf-3b00-44cd-a7fd-2581a04bdd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60305486-08d5-486c-93ce-df1cc4846ea6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2910d589-8731-46ed-9364-ed1bdd1cb436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c038138-aa9b-455c-bb2b-87c2020272d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f7e81b-9a76-4265-9cc1-86551f31e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e6990c-4f5c-4d3c-917c-485f3d834b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8742653f-a512-41ff-ad28-289e7cb173df",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16efd8-be56-4fb3-a582-b94dfaab074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6710258-6281-45ce-83da-575193a4c085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a47fa0-81f6-4f05-8753-8b806f686d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "905b1724-b6bd-47f2-978a-775dc9cc91e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316a21c4-eea2-43a0-9464-8d66394aa32a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5027ba-096e-4363-8b87-08e5cd0dbaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07021077-cac7-4b12-86c0-eac7930d09bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc303187-4d2f-477d-ac26-79d31e4e8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a777a0cc-4bbd-462e-b90a-c8a8ff522253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5963de-22eb-42b8-b077-1a9e6df7fb04",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d195a-dc9a-41cb-be2f-97afef2f2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a028fef-1bac-44e4-a196-21986d524d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3ef85f-5086-475e-b81c-36b7b69c933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5e5dbd-4dc9-435e-87aa-fa58d4aade7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f85a942-bc51-4815-a639-3d0f043496b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa67a64-fb08-404b-a15d-f2202cd1d080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e834e66-34fa-4d23-a415-de0d48981c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12873e86-b644-4a55-ae9a-9f350fc20c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9de5822-84a0-4184-88d7-331eaa8e5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53c3d9d-9293-4ade-81f5-66428cc8cfe3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c011d3-baa3-47b4-8770-402550717ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0cd10b-c6c4-4a8d-9a53-538fd994c921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc1dd1f-4fd7-4064-b8ef-5e7b432f969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4832f424-a675-420e-b375-7f2dc7685869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d458b479-c6ea-4601-b560-12e60d376a11",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b706a-f09e-401c-99fb-089c943a2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aff83a2-fabf-43ff-9bd5-cb628382b8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb539d5f-f3f3-4ab2-8dfb-91787eba63ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f3b70ac-c330-4799-980e-97ad62881453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea317fe1-38fc-46d7-9d11-b64b90c4d404",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7af2ec7-7e92-4b69-bd48-28e39b4f543a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a8a18c-d112-447e-8188-462ddbb8350d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25b14b-bcea-4cf5-8a58-33c125c1d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12796165-7a67-4be0-bfe4-cefe5af07089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46da3bac-fe6d-4615-ad4f-a6aa5c0125f2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0abcbd-41f6-4f97-854c-90b4f4edd425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f0fe68-d86e-44d8-96f3-32d3bc2441e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57481546-9611-4313-a51f-9ce9ce8b3151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bebb372-c3f9-4dd8-956c-c1f9ef243a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cf0e17-3bed-47f6-a863-d4bfc63d0813",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d85bdfb-831b-4963-b9de-e091b75bdb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c45913-79cf-42fa-997e-ef48475688f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd31191-9d17-4c9b-b22e-b4d2702cf5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4593c61-ec1e-4ec5-aaa2-3d129a17bde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfadefd8-8e56-49ea-a80a-6b323ffa9bce",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1b3637-2a55-44a4-98cf-95dc9ec6181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2561bc-9e90-4d7d-947c-0c41b240d661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c8ae1-e7c1-455a-8328-a3452319025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e6e88a-4298-492c-97ac-e0c929f7fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3e95f5-af21-4228-a190-82bfaff271b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f63ce4-5e2f-4e40-8be5-325390af5f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7221778b-2a41-461f-ab42-296de5f16c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e9c572-93cd-4df0-9640-487394b54e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16a3cf1a-d2f0-42ff-a00a-2e080f54bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba49aab-8b24-4f32-8334-75e760f728b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3813a809-ac28-48ab-8621-f7558088c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a77c3b3-3846-46e4-96da-c18c05f91840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a8fcef-c143-48be-bae6-cbdebe96584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f13ba24f-381d-4243-a130-311a498b407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f4e7f2-e3cc-41f3-8b6d-f30662aeb0e1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689de10-4c14-4be0-b65c-fd83943a21fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deec1d7-9e0e-450f-a3e2-027b13d6ae82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6bb1d2-c926-40d0-94da-fae61dddc537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae8d4cb-f13c-46b2-adc9-3635ceb49afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e9b6ba-d08e-467e-a787-3ef122bba0d0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d27d70f-46e8-4994-882d-630848e328ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25633c3c-578f-441f-8c74-e054f88d48f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52abc2b2-9081-46af-9bfb-f83be0bcf05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f28d4a2e-2183-42a0-9b33-897c48ed769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9188f165-81e8-4588-a413-4a707b85439b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e66470-a706-4463-93dd-470657918fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec45e885-7df9-428b-b5af-b1cbfe8c10ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5316ae4-1c74-4815-84dc-f3e0d99916ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d925d167-159f-4bfa-b421-64e9e8a2b889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523ecd3-8841-4907-98b5-f84ab3b37e13",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa1ba48-66bb-4c83-ac0d-a9aa1c251bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa16341-c1da-436c-b711-d9ed82aec207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa8da3b-783b-4d94-8889-7332437ecbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1ecbdf-bb15-4541-b35c-5c6bf4d52071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b342497-ce09-4b75-aad5-8f6c56e7063c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c39fccd-a4f1-4b58-bf3e-4b59e63dbd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da604e64-5550-41c2-9cbd-1d6797f4a4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629b286c-f370-456f-a1d6-95f33de8b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc50153-097a-40f2-9d14-1c6011f0f593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a3d364-d310-4f92-9007-5d8143fcd73b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fc3cd5-4cfe-4de5-8909-371ce589b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f8e26c-acee-4851-9782-3c05e7b295a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c874c8c4-dc09-48b5-a48f-e41f53131c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "550b2c82-51bb-478f-911d-f05f963750f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056021bb-720b-4229-8032-2938771cff22",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9a5e1d-f537-4686-8244-1e456abef4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1525bc1e-102e-438c-a215-dce9a8936201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54df4611-f9cd-43eb-b20a-53fa447d171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0df95e45-a7dc-4559-9eb5-19a14e46c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d321bb86-6cbf-47d3-8da2-ec12125e14a5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a26617e-8cd3-462f-974f-ff6844e12d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c5eb75-68fa-4f15-afd9-99435e55c089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893fb037-0eda-47f8-bf7f-bab72f4a2197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd0ea32-19d0-483c-9db7-f38f16c68aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e899d77-fd32-4ca1-bfda-07f469114d7e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41795681-9ff6-4905-8fad-18a1db1bae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd476c-b8a0-4f8c-a009-7634bbcdc519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a02e27-ecf3-4356-b21c-a53fe327676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1087a24-1ce2-404b-9484-32f6c2fcd161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c6ebe4-2ca3-40d8-add4-24f3262cefa3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515fbb79-4d63-4b73-b9d5-d587cbed194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125e29c2-495f-4c98-9359-670fc3792d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e1cf99-79be-4c28-b5f2-9ae143e0e3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62bafb7-8f00-4c77-89d0-d406dd9fbb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175546cf-3e8b-487d-96ca-f8f624d6970c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d44bc4-707d-4405-97d4-7b064e4d539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c6fe38-4c7f-4070-8a73-12506b28356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae8596-2814-4e33-9ad9-b0e4d8576af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0455f22-31b4-4fa6-b6a8-55a947ec8197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80864411-e270-4907-90fc-35b6b17d9c4c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e12e83-2dc0-4da8-b39d-f87f2ad572ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629bcc28-6a49-4ffe-82ba-d8ee59ff176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0cf088-8267-4597-a8de-651ece51dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c3400e-6f5c-4cd6-a9cd-3510e9bdf977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fcc149-e602-4fab-80d6-ef63ef643c80",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb9bbb-cb63-4fac-8951-f55c28fd715e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd08fbf-83e6-45c1-9b14-a90c2409c90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d00565-c573-47ce-8814-f950a59d51b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1376b2-e9b1-4468-a631-f08e7a5a1d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bbb360-e963-4f64-9af9-48f6a400736e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68e2dda-3e29-431c-bea0-0d6c65ee47bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0e181d-44dc-41b5-b63b-53f4dc1a1e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dff5b1c-b840-4c28-a927-d9a5f8301f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5608140b-46cf-4bcf-8b55-4cfe47726674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88953dba-c41a-40e5-b61d-71bb91d9d6a5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff03e02-0f37-468b-bb0f-1693130c49e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f87cd81-d86a-40ee-a506-ccc5628a388a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa02b19-de5f-48ea-89e6-f644002a535c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f30dfc-554e-455a-877b-0f55a3e57959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559c41f-0f06-4aef-926e-c0f61f715a2d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60801424-6689-4f68-9f8a-fadc8ffbc49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1096ac5-97fd-45e9-be5a-12e3f7ebfd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6a40f1-81b0-4066-8bdf-a722aa3995ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27047a20-4a17-4d15-9758-6810d0a0105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b691a25-5d21-4b3e-a5f8-16cdd8b7ccbe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5293d8ed-f0f7-4e9b-ba55-20075e07e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c5a181-1670-4145-bb70-20be81f7e33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0817477a-983b-498b-81cc-ad2053801f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48706d53-e911-4318-8b79-98c0c65d868c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd03f96b-ec5b-4dc5-96bf-2baf473db2cf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1de8c8-667b-453d-a84f-93593ea8939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795098f9-df6d-46e1-9de4-d92fe1c302c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c37f1f-0e5a-4b27-89b9-72f315a457e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "808598ed-dfc7-46c9-8cca-9f6e8dbcaa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2977fc66-bd45-4e7c-abbf-861b9ac0268c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b6ab12-2871-4f85-8028-860b7480264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581eb48a-d4be-4933-84de-18a6f76e74da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213d0ba2-3ba6-483d-bd20-cd1518a4183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2194ee90-c125-4f44-82bb-deae4122c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70094250-5180-49a2-a18c-05040728c794",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90d4f04-d33d-41d0-9760-5b4acd098af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9efa84-cba6-43b2-8ce9-957a27b3c256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0496abb8-f7af-477d-9c97-b1834e2c7706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5956fcca-c50d-45cb-a29c-f08872a53bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3e3089-0356-4e76-9b1c-a6c1c5f3ba05",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbe8f15-e482-4515-b429-c5cda4b7aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d57c1a98-1221-4ba3-ab30-6ff2ea6a21aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691eb85e-9b1e-4db2-a5bb-b1dc3002bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "104d4ed1-1026-45f6-9ff4-d8b8f5e05451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa57505-c50e-4057-989a-71ddb9b16589",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dd68e5-8149-439b-a00e-3f3e8bdd23df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb635316-8bbe-46e4-8343-1e0dab621ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ecc188-3acb-4598-838c-751889f761f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c235c677-96c7-4a5d-b878-033b04cce20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c96ee0-edb6-4c5f-80be-fb8cc7a2a1e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e191d0-da9c-4c9b-aeaf-6c5238dabc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbad2d4e-e0a7-42ac-aa9a-bc2663d2b1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b053ca-dca1-4eef-8f60-bade5c547747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de66eeff-5bd8-4327-9f42-224ec9d24081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de042802-7d92-4ffb-b676-50c89afcb625",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2991ea2-de34-4c39-aaa4-fe68318382f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9629fe-3e8c-4946-af03-cea85b7dadb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818ea5ee-b9cc-45e2-9757-fa8b93e180c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed04e47-3124-4360-8e31-fc3594eee8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ee4a3-ead3-4512-b742-12959c64ee3f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8369b6f-0bae-4001-b822-18fc27f87f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f79164-4892-4a4c-8e8c-003ead145b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b640934c-2812-4896-81eb-318795674281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff516d0c-cb92-43f8-ab16-280259867264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341033ec-6f2a-4d2d-af07-05e26d5412d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee79c122-20ad-43fc-a5d7-777706753c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc19fd84-dec0-42d1-98af-783da31f55d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe0e90-e2db-4721-aab9-112cc9a87f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "315dc0e3-ef20-42ce-8457-a0cdd2f1104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d35302-9488-4ee2-a733-ee3359bc2aa9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ea3cde-fc11-438c-b286-257f794e8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539ae1b6-e256-439f-976f-55f308d6a765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d95d75f-a8a7-47db-86f4-35b99803e381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d4431272-e055-4c8c-a3bd-095b7029af46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02076e8-0986-4791-b5e9-87ee22dc8419",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccf845b-25b6-4603-934b-7cd0fcfbbb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f7ef41-1b18-447e-a2b1-d7968f038769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f67749-72aa-4da0-a2c1-3c3cca7ed547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0adbb5-7e0b-4a6c-b2c2-ffdfbdd162f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbc8006-9eca-4c4b-ade5-f9fd9aff3add",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a56ac-f034-4e2e-8526-1b5a339f05ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847ac515-73eb-4c31-bc59-8f0a017dbd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eda049-ee7c-4586-8c15-7e724b9a8eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e08e18d-9d21-48a2-af7e-2aa6be3cd972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3a4116-6b26-425f-91e3-ce50ef527126",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447cea9f-b51f-4997-9173-0d1219435b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec50911-878d-4a93-bffc-f12cb0f9a6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a898b5-baa6-4c8c-8c74-09841b11ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fd067f-d7f4-4c9c-b9cd-0d83c40d707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3265d8-012c-4c4f-9ce8-47ee7b9e3886",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c0d47e-7daa-4645-a194-316597d0ea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6961c67b-a515-4f98-bf43-ace4d5cfb01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e22a682-bc22-4059-ad0c-4ac21b3f2e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c08ab-8c1f-4c68-870f-a3fcc32f15dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e564f2e-556f-4559-acff-d8029d622900",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0388179c-4537-4736-a6a4-78199f5f2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7de058-db5e-47af-96d8-a438d82f2e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422c7bf-fdbd-4da6-b028-1adef7f1ea79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3b8290-f53d-41ba-9501-421247d12648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff018f78-aa3b-4fc3-bfd3-acc76a286d39",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e14a0e-925a-481b-ab67-5e2b31ea25e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d938a9bf-b2dd-4472-9113-30ad61c8b1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf4041-a4e0-4d7b-aa7b-fa7b12d80e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "396c17ee-3760-4920-9748-b80266bdd4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba73849c-f992-49ec-8381-b5536535ccaf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9975b3-b810-4544-baaf-e25242ddfedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbcc441-789d-482c-b80d-acf7b85c940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef25db4-47dd-455f-b11b-bfae62445834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2acb6b-7366-4c90-b1c8-243c02302f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fd213f-069b-4584-ad89-ca06686598ce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6907eb8-236f-4c7c-b985-9628ffcb4383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d553f5-f7ac-4bae-a945-72f8e69cb102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0091139-997e-49f3-80f8-f3a01494b4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55a3a23f-e6c8-4937-9975-fc5600c80f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb9a80e-2f07-4fe9-a96e-3e15bcd73ed3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ae0a28-3b9a-4eaa-873e-f699ba0289bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07592418-4bb3-426e-a81a-1f2d60ffad12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf2afe9-3fb4-48fd-bbf5-3f5c7924f0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd49fcb-487a-476f-9dbf-d2edc14dcb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba30eebc-92d9-496a-bda4-276cd978fdec",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7ebd77-767f-4d90-841e-38f0c398daf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d2d662-50ef-4f0e-814b-ebda7e7ab873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aead74-b510-48d6-b30b-3895d3026978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d51f7-1ad1-4663-8633-6f2dce1ca6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3a9cc8-64d9-472f-ba67-7cea1a9f9d9c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdce6fab-8226-4954-81c1-9a31056b0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbdf109-b899-4741-9ba8-6c0912b3cfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483f394f-57a3-4500-b1aa-81c65d985257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb3f541-be87-415b-a2d7-2bccedca40f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f8b8b9-6270-43bf-9f5a-f6082149d00a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f190fb-945d-4cfd-820e-8bd88f212e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac015396-fc28-4bea-845d-7840d9cc8ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63523fc0-228b-4729-98e5-1426f9d51075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5efc7767-6fdb-48f2-aaf7-a1ed0278b2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40540427-3f85-4528-9b6d-1f1f05e73edb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f71e55-e0ef-4068-90f1-fed5e850328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266d0143-b484-4cb4-8009-4c8a1f8993b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a5f6b-544b-4b5b-8f4a-5213460a302c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ddacfb-eee4-47fa-b513-d4a8aa4d66cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45702ecd-15c3-49fc-ae45-b19d80846a8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c9bbc-c8ca-451a-865a-7106634a74b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0f6ad2-7011-4f96-8a75-02640e9dbe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6368644a-7ec9-40b2-8ae7-9cedbd175b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b1959d-cfd3-4d8c-829a-a038e26ca346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c05db76-ea80-4dce-a8a1-ccd6f20ba891",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a807daf4-5228-492a-b4e1-6ff05e8fd7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56467ee-f901-43f1-acf6-263b6cbad9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf506d4-a473-4beb-b029-e661b3356f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8fa053-f802-4589-a883-ce17cc147e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e517e-435a-4ba0-8843-516a8ba44c5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f0c12b-8b38-435d-adb1-7cf23417f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35268d20-039f-4d75-9c16-d1524406eb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d6e96f-931a-4062-910c-5bd3a1c91ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b64cbe5-4386-4de0-8081-0c3446d315a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b105a9-8d44-4f53-a03e-537bf9a54dd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca48ad-59e4-4916-b722-c76e47c442b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccc7fc6-6b5a-40cf-a779-d233c69f7321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c36a165-8074-473f-953c-6e573ffdd1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6ef6e2-c160-4336-bf20-867eca848a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756cd6a4-a4c8-427c-97fa-298c89c24340",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711785eb-069d-4fe3-987d-96bf93816f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606c2f8c-7d1b-4b2c-9907-fafc7180e036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014fa2d-bc1c-44f2-b1a7-73bb7dc00782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a3775a-efea-4dd5-8434-567dd4f2606a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6346fe9-c656-4554-b4bd-0b192f073510",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc95941e-bc5f-4985-864d-cc7df57a43cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc353ac-2e62-48c4-bb4c-c802f16255ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f7cd1e-d869-4c61-8f3b-6a15c8ca4771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20799c08-f572-4380-969e-6066567f8700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e101b083-b290-494d-a962-09b80b711a0e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85ddcd-1760-4a6c-9a7a-0828b27e6fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf0ad4d-daf0-4014-9f73-4cd28e71ce43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f14079-7686-4ae0-9ba0-5c4bb638ab1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f3f457-7183-4888-9b28-a731a07192df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f75acb6-3558-4b5e-91ef-47af3424c92f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5834a6-6a90-4c34-a10c-6a2497ff3b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ede96a0-659a-45a8-86de-5422c9ef1533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e549b5d8-1f60-4969-a94d-db71e0542821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28bd8d63-35e8-421a-a5b7-d329bb759be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccf9725-9773-4d79-8640-c2f645461a6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98db54bf-69da-4cd9-8602-6d6a039bf479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84d55d6-d800-4b0b-8b96-de1cd2b09354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056eae36-5d27-4603-8bed-710e2de89a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f6f231-db9b-434a-a74f-445a7571f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20b4f6c-940e-428b-8217-3e7933eb687a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317e775b-73b4-4128-a07e-4d9d58ebf7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73994fef-f4ea-481b-a158-8ee8071a497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ae6259-48de-482a-ac55-29ab4c3a03b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f751af1e-8a26-4d9f-ad67-9bde0105f37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df66392-f474-44c7-aaf3-87c143c43e5e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ba8c54-9d76-4d50-ab24-a56f8e880ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8a1879-9e50-40c1-83da-dfc8ce07cc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb090d-715c-4fd2-86a4-50805e725862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56222039-1bdc-4862-aadf-a1e5a7478913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565f5ea5-21cb-4f2d-b3fd-68d0767a4295",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0acb48-61e2-4ff2-b56d-3dcbbc98cbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff9f6be-f9a6-4b9e-b816-96016d5277dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcf1b6c-594a-42c2-9527-6f8f05c3c120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6931e216-deb9-4dde-9c3b-bed2243f7d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255b901-ff3b-4d8c-af34-15955b06b1c5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631a41c2-2470-4214-a04a-2f95a8d60f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80656078-2cbd-4ba7-abea-0d5c829f0db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf4f959-be9c-4263-8a8e-eba726308e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62a1e4c-88a3-45ec-b4ca-d7d0183decd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a836427-2b9d-4605-b71e-80312ceccb3c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cee978-9666-41c4-8ad5-9dab12586242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39a6c73-9b93-4d72-b695-70b90c15e6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e339273-2ac8-45d3-8b84-c3088a5bcf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8152b7ec-8d2f-487c-9786-8e7914e5cfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750fde3b-3a07-458f-be36-1d54e3375654",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da538b08-e80e-41c3-8b7a-041e8f2a0f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72e0a61-4acd-430f-9e45-ec9da567d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53da713-8683-4f41-b03f-3d4d7b83e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebb67be-f570-48f5-ac6a-58d220680e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bf6729-da52-4e3c-abb4-4390a4ed15eb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde88fc2-f2e6-42d3-a9ad-70277f31c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f9cc51-e77f-41b8-aab9-0244dc9a0c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0cd40d-63a9-4146-a228-4e17bc7387ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc30c54-4347-4786-9158-35149cbcd933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3637501-2818-4250-a20c-063743df46b1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c470b09-9d38-42d2-b206-d3f71ea6d738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495a120e-357d-4a71-ab02-fb29df0fd18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc07f30-c7f1-4452-829c-b293677c6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "009163e4-9599-483d-97e1-10043f461168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c37e21-8ceb-4bb3-9186-0560a783acef",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd567ef2-6b23-4db7-a710-12bdefe515f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8211b9b2-b4fa-4b94-8295-9b35e7696f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf3d28b-d39d-4b9f-8633-9240e223a4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0e5ac9-231e-402d-ae97-a3922882e673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669c6f97-8c41-4610-984f-b53263824dca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6663342c-9564-48e3-8f84-cea1ea845ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102c46e5-0b77-42ea-a62e-4a42acc26e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d78102-20cf-444e-8a66-f50d859684ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "507c7561-f7d1-49ab-918c-a01d7ac04fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cbdb72-2928-458b-9f36-6f763cbdd2a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740cabdf-f1ee-4cf2-9f24-6bb5a05834ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bca440-cae3-41d8-957c-31f491696d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a5057-3e6f-492d-9383-28758e157655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e14fed-0b3e-4807-a288-ee9e2193abf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5484e8d4-6b6a-4eae-9156-96a501192ca6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c96b8a7-eb91-42a3-82a3-9bc5a2ad86ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5c5d5e-4a1c-4ae3-8cdd-b19884de8265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887fddf-aef0-4396-8697-10b833d2e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "710129db-3224-4529-b0a8-c9a3d7a17e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ee73c-cb1d-4458-804b-f9de2343c919",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e81d3b5-01bf-44d4-b926-39fed29c7ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab4558e-026c-4cbf-98f2-253b3ffed1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308e216-87d4-4d15-b1c0-ed102cc670bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62667e4f-42cc-43a6-92f5-fd55a9b48946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533f295a-beb6-4940-9d63-ddf99440d7a6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c392f171-42ec-467a-9c60-f3cc903dc8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc5f8af-98f3-4e98-9289-ae232d25c4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25e8fe-ae15-46e5-af39-e246b07a0b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "029d0782-4bbc-4da9-9a9a-cf86faeaaccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e542c887-2565-4546-9747-ba733aba5163",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44760642-e307-4edc-b074-ae5b36adacd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db66f470-daa7-4f27-8c6f-7b0a93168042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393fc24-50e4-4f3f-bf76-cabe30e2305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "843a4a8c-704e-4f84-9388-bfca96cde51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce04544f-2e83-4517-b75e-e4a927b7574b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575fc99-37cf-4cc4-a481-bb8d1b03b913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679333a9-eced-4053-81b3-56c0ebcce91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c841e60-26cf-49c3-88d9-21c26d0a2eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "562d97a6-29e5-4e30-88ae-0191f1ee6abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f8607-ec00-4625-8b4c-deefe25f6949",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240a436b-3065-4a14-9470-2a42f038fee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51185cc4-840f-4f6c-a509-767b7d61c412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aaf7b2-f3fd-4d54-8862-68b49a73ac67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff7821b-dd19-4105-874f-ce973b30d226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fbac7d-0eda-45b5-8c2f-7a203f3e1f2c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c8a8ff-c54a-44a8-bea6-5de53a4eb570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7efa937-e8cd-4a76-97c6-5f8b9a04fc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ce6525-61a8-461a-b780-9f58dc330e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd9ba46-e0b4-421d-a38f-d20346e8c5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010a5ae9-49e0-4897-b5de-ee19367312ee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87db5943-eca8-4db6-9103-d6c6846ade94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98460ea0-0ba4-4c8d-a755-73483f9367fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0ef6cf-2c78-43f6-be83-8ada819cccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d002bb3-1bb7-4b1a-94f0-f36a8c47ff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbf3cb6-94fd-46d4-a23c-486d29dfc6ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8c66b6-2a99-4492-9815-a18f2197ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff2a07f-c142-45a1-93b6-9bdae67c314f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4659e7-3c93-42ae-860e-f2de2ed523c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "234ea005-dbec-4374-8f9b-089fb15f4c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366b0427-2dd8-46b9-8bc5-56a9e3e5f6d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7eb664-aaf9-4e26-befc-4a752b6c0d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437978fc-6014-4007-8805-fb44bbbd4a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa2d42c-e6a0-41ed-b6d8-6b36a20134f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "056adc0e-1be2-41dd-bb6d-fb4cf83a7597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f09441-5eac-4904-a29c-047529c67f10",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0c4094-7a29-481f-9026-4ee4d4e2927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e3e3a2-599e-4f81-b1ce-ea5ba2f68c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e70875-dbce-4e06-b650-f1ca3c5a166e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fff6798e-fa86-4261-95e4-12c9013e06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2176c9dd-a1ef-4a94-b8f9-b390ce202df4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e6dd12-cf79-4281-a243-bba3ecb97461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1858986f-7763-4bd4-8f93-f9350d94fd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba1d3b1-2dbd-4f3a-bc8f-286591dc97d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11491644-acd5-4fe9-b79a-dbf940ad9794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f43ae2-22e1-46c8-bbaf-47178de1a9ba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d75cf6-ec27-40ba-b727-2042c7355bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3634bfc3-b04b-4e4b-9f64-45850ae53a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4167a0-7416-4261-a05f-cd156d4f8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f907b684-94d5-4501-9eda-83e2215b196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aaac2e-4d7d-4a61-995c-93d6982a6dde",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f346020e-81d0-4c67-bf01-668ba34c1583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feea73b1-a6eb-4f25-9086-e7b16a90388c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd9ae3-c621-4076-b943-c29d62fbdb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea025714-0586-4140-966a-bd4bdf317a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58cde0c-b218-4292-93b0-fcbf274dca0e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b5c612-e83f-4ca3-8a6f-115ac6001447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b753fc2b-19a2-4e1c-9258-2d1968d3bd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1dc9fa-094f-42b9-bd88-ad61e130e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b81233ea-9fa3-4e45-9f69-b85763e149ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37799248-d3ca-4558-9c3d-a165b39eee5b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2c9ae5-f01b-4336-bb56-249dfd2a6273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964fe306-0b7c-429e-ac8f-9076b4e47c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71444afc-45e0-4075-9668-a76ee974de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "191dfb2f-f58e-4f5b-ac60-ef96e5632ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee932c4-8f51-4ef8-bc02-4522baa7e52a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f845b2-a879-4543-9f9c-5496f4619a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b6b15f3-19b3-4a44-8144-0ee4ee6384ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69d8cb3-f4b1-4f73-beeb-19bf4cd0f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec231861-1db9-4b9e-ae5c-dddf30cbd2b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3de136f9-9dca-4d72-b513-0ed4322a8be3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d8ff3af-83f5-4f17-8a61-1793dabd7268",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9071f5b-63f8-4034-8424-9d5953dc7d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10f79238-4aec-4b36-bf62-2916d4f61b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f830dca-9f3d-4027-81a6-f05ee11a6d2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ef4d248-71a2-4136-9469-e2f8d49bcfdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed8d49d8-7df4-4873-af96-838b7f8bc0f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9453fde2-bb7f-4051-80a0-6b774b573fdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81f3f0e0-028c-49b3-94f3-1bac416832c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6a16704-bd05-4a74-b51e-240e84dc33b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "570d72ce-6b62-4105-9aad-ee09fb36f47b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03a72dca-55da-4a4a-8a9d-a7167e43be42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05831114-c8d2-4dad-99b8-312f7df6f978",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a55ce9c5-a703-491e-a410-a3624d482110"
                }
              }
            ]
          },
          {
            "id": "58fbd3e3-eaba-4b44-abc0-d3d71cf74432",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31441021-56fb-446e-a76b-41a7be83f4f6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d042ed10-f099-4833-bf8d-258fff2372b0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf2bb2-ad0a-46d8-abaf-c61d5bfbe385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5255340-546b-4c92-b175-9681cde6947f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e936e0-efbb-4a0c-a143-3c964ceb92ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e78f9d-6c53-496f-8e59-f8d5bf1b9c6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d520c63-e36f-4454-a169-736f79ad8be4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "246bdf4b-32ff-421e-b153-d09d3f1476aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f2caee0-48f1-41af-8381-cc489e0e32ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab86e94-e00f-43b8-ac94-31d800e5d916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bbd6744-8611-4e41-b525-40c9dbbaffe3"
                    }
                  }
                ]
              },
              {
                "id": "e8028bad-122a-4ebf-b222-313750eb3c27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd02555-e265-4648-afe7-a06c0dd458f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "681e634c-6081-43bc-b342-598d419b54c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6624424-a141-45c2-b446-04b40cbad67a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b938a33-45b6-4194-ab0a-8e41a8d38de0"
                    }
                  }
                ]
              },
              {
                "id": "a77b4b2c-68fe-454b-b688-4b53e70c1df6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3691fbda-7902-4282-b23c-89a65bdb301d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d601a8c4-bdb0-4548-892d-7235daf02f52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87fb53c4-c196-4a3c-b1c4-e998e4afcac3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4b956ca-86e8-4bc3-ad71-c496807e71fb"
                    }
                  }
                ]
              },
              {
                "id": "953a1516-94c8-4a1b-bdb6-ecd11442b501",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f6f5b9a-1383-49a4-9394-ff5bff5ef0f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0ab6121-06dd-430a-af3b-53eefba43432"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc9f5b6-8ee8-43a0-8a64-f469cdbd92e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9989abaf-25d4-4b05-b5f2-27e96837825c"
                    }
                  }
                ]
              },
              {
                "id": "482bef67-f20b-4152-b852-4b037d727dcf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "106f020c-741c-4e6c-99d3-2dac88190e2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa1594de-6fae-4feb-a227-df6f0c94c9e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c6cd3a0-f1ac-459f-913f-a2c346c266e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aaff14e5-37f9-41ad-929c-f7edf6fbdf8a"
                    }
                  }
                ]
              },
              {
                "id": "84150e83-fb5c-49d6-9061-5ff52d0324a1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde86aaa-bba2-401e-926a-f0bc7afbb4dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33e033c9-100e-42f2-92f5-34a7eabc3258"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54a1037-c83a-48c3-9525-b7d74c039ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40b6b1c8-e3b8-430b-8cb1-7e5cd26ea736"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c71fbfe7-d6f7-46f9-bbbd-f41c0d89f28d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52769174-c554-4607-8b6a-f22837c56544"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26e2b3bf-e0f5-4d2d-a84b-095ce0962c0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d800dcf3-f546-40ed-acd8-4c55dc2e411d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b61f789f-4b57-438a-9d69-a91d4e58ffe8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a669c37b-6915-4b31-a899-388cfa3b6c6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fa28ece-184a-46c8-90f9-6b9ee64ff076",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb25f0c1-694f-452a-9f6f-a649b5f0c67d"
            }
          }
        ]
      },
      {
        "id": "927aed28-0504-4722-a261-fa3ba242e5f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1904f055-9fe9-4004-a6b7-8e22cf926bd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0f26e04-d33d-4df7-93a3-3acbb576b5d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c53caf17-ab3b-4087-952b-68b78a805c7e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec440c0d-53ba-43b6-8ed5-6893ba5b1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d069bcba-501d-430d-944d-ac0d83e6694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93315cc7-b961-486b-be1a-1dee406d49a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2660d469-9632-4d97-89e0-ff7f93027918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ca05d-7d95-4d51-8d27-2966bc876a49",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed27462-a826-4288-bf26-78db006d2703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfd3eec-e913-4e5a-8e9d-9d8891f510fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829b112b-505c-48cc-af02-33bbd2169637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74532d8d-8ab1-4979-8357-09366ce06ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf5a63a-87ac-4575-8541-bc158b5c12d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df38a81-966b-4473-b323-d627e2f6f5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79a0d44-a83f-4ce1-996b-f8ff7c902d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a5878-c862-440d-a817-19bced708a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf4f522-12c0-4bc6-b545-5d4d3ae34f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d4cfe2-dea2-43a2-b60b-0c2f91750641",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7564265-fd30-4d37-a513-6f584f4aca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a12265-7f4e-4fdc-b19d-32789fd7a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d79f41-e103-46b2-bb64-fcaa63307f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9248816-1620-4c70-8258-ce00b5d54a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f7e47-a063-4bbf-9ae0-f0d817caf66c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf546e0-9135-409b-a45b-51931f90690a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b6c2b8-bfeb-44db-820f-885969e17209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b4be9e-3c88-4e74-b16b-dc83ac7b9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae873cb-6271-4250-8792-0636fb9f6a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b3f889-7c8a-4a2b-ac7e-f930dc4ca55f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60953d99-53b0-4ba6-941a-2632742f1f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287cd8f3-653f-4be0-94d2-838dc35f5c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78652542-d2bf-4564-a8a5-cadf02998102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "667db6f1-e955-48b0-99df-b8e804eb4869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cde114-9a25-41f4-8f4c-8ee6a175ee22",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecc0b9d-c556-4de3-8854-c2751a74da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc92f6f6-d734-46fe-a9c8-409dc96dc12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d620e5-e2d6-401f-a869-43b90ed5fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9accb253-4024-4834-bc45-c483e67869b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e9fcf4-fc73-45b2-99a0-bde778c0cdda",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59d5224-a1d1-47a0-baeb-5e1073d8dfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5b6795-13d0-4bff-b2e8-af617adb80e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e916981-1953-482e-ac1a-d4eabd8cff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5bd529-27a7-4427-a4b5-f59d3e9f226b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d694d666-ece6-43bb-a641-9cf278c272de",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed50900d-44f2-42c3-9e85-ef9bb9d31a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2ef25a-d096-4b9b-892d-c04a4d66db22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2823d94e-b525-4eb2-abe1-8b702dfc5748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d8ccc6-8fac-4715-b648-5fc0d60d7663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df2432e-645c-4986-818e-f682ec475288",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865deac7-bab9-44cc-ae8e-d68d12ead284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191bb46b-5931-4604-9b1a-c1c5dbd643c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f560ff55-21a5-4ac9-89a2-5007afc4a156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "917f5392-1308-494b-8822-20b1f219a6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb8e2df-ddc8-4e06-b4c8-c8ce9eb2a248",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b56c3cb-4d59-4738-81d8-787153dc77a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173f2010-0572-4cd1-9725-341588dd1806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f2fbe1-d0ca-4d7a-84c3-213444f4a7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5375d4-03f3-407e-8390-09c5aa9b9ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3ea97-71a1-4fd8-8fb9-d72b36cc028d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f5214-43e7-4e59-bc7b-8337a3e8d2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef068af-518b-4c04-b25d-d0597eaf5121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60401b0-f691-4e0c-800f-b7b76f1b3076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc1fed9-0a1a-41f4-97cc-a2745630c05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34d338d-6f31-408a-bcff-415a8be7f56d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ebc1da-c7ab-4c92-bf98-0a27182070dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb317a6-ba1c-442d-9a28-c3504967b04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da68e23a-ae64-4e73-954c-ff15567ce1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0324b4e7-8048-412c-a5a1-add843a1f773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189b76f0-4f34-4fd3-8b49-1e377294a305",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c61aca-ce9c-4606-9d09-cdf3651f593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b045e55-dab6-438e-83d6-9ffe6d3b8bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf8f67c-14b2-4dc7-9e05-385bd8bd13a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79d3cfb-ddf6-447e-9c3a-37ac6aa8b4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb95d633-01cc-4902-bbd4-588c46923d2b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074decb9-fff6-4a79-ae5b-04d1878afc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fef2a7-979e-49fe-96a4-ff6baef3cc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c37ebb-6e6a-4c35-87dc-d2aae43e41fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b2b5a6-ce5f-44c4-8c98-134f751dc5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3ebe1c-4619-40c7-bdac-1ea0571382ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1ffce6-a7c0-439e-b867-ef0328d140b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e9ce27-a553-47ef-b8a3-1aaec820218c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947a98ff-e778-42be-8ed6-7bef85fcac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2589e072-8291-47b6-892d-3f8dbca0b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1092dde9-da47-4466-9f8a-afef8d55bf27",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2da353-0cf9-43cc-90b8-754bd98a2f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7feabe-5d2a-4155-80c8-32f26a39a3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9e8b05-519a-414b-a149-c44ba29b9f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5dd243-5617-437b-97ba-e7af12910dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7829911c-f353-4f4a-a1e2-b1bdde0d2529",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9537d261-61f5-4259-81d7-ef8938b19e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ada6765-3a28-4843-b9fe-6f7e151d0ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c358c040-d437-46fa-ae19-c32d465757e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b614e5e4-1083-4f72-bb86-163652fb1e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b79f38-2f77-422e-9eea-a882e8a514a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881a3f31-bc7b-4471-a250-960feec61611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135c7a1e-1b00-4510-9e79-bf125ced955b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a818bc0-f9e8-41d3-aafc-b4d91c36524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f10718-f1df-44a4-b662-fae576c9dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a563dfe-6619-41c6-a6e5-ebfa64675c61",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b530aa-9562-4551-85e8-75594771caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17bf423-a448-4323-abd2-414ddaa735f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d338b-cc01-4f7f-bbe2-8a0aaac69fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f36fb43-2974-4fa5-9318-eb8ad179d498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33399be9-0384-4425-9757-4940b8e14cc7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba891a1e-8f66-4287-be5b-53f264bbf841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0842dedc-f5c2-469f-9da4-3df17f84eae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f5bc77-5b72-4073-873c-393b0539ec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa415a55-dbcd-4481-8767-7ec42d03243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5aa9ff-a5f9-4069-a63b-7683ec8f3c1b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36999e77-429d-42da-9d64-c217c9a15784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cef264-2024-4d00-8b09-4e0d5486c2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3f2fc-7690-457b-86fb-e5c6ae6a80d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004bda94-8010-48c2-a695-c6a87382dbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1dcb03-b83b-4301-8a46-17830c3a024c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859a49f7-b65b-465a-8ad8-bb7eb53d2f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c64a0b-3d0b-45a7-959b-818ea30fdd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db425419-a5c9-4dc7-8869-c7391602eae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c040835f-0325-4da3-9d01-c2e7b42ee628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfb6337-7d53-42b2-9d3a-a5ee2d6161dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d9117c-cc5b-4c48-ad27-b444d9a9d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3832b4d2-7c56-4ed1-a02a-22d0c4219dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb729b18-b448-4c79-a43f-db56d75897be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c183b73-313e-4ea9-997f-866ddf4b7238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b31ff-1bee-4c9f-ab08-05e66106ae17",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69856ff-9951-4a01-9047-d89064a3cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71257eff-c0af-41cc-bdc1-ab3df007849a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901d6ef3-1cba-41b2-999b-93fc6a95b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc1eb96-7418-4f48-a78c-3f547d9995dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c2a7e4-8a27-41d9-b70f-dc460241c58d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe03162-b688-4aa8-b669-eb82be5d5c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756dd27e-0fb0-42f6-b777-67700f138885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a52d205-80f6-4457-b55d-79077c1bb4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f8d02c-91c7-4d6f-8bb8-dbc398bc99b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da990fc-1057-4406-9081-d3a7ea70f202",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b17cf7-42d7-4e3e-a978-9858380bf328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180dbecf-461f-4f3b-8d74-ac2b1b5037e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1fa51c-3863-4422-b2e9-6be6079ee4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3e12f2-68ff-4b73-9753-4f294bc21f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73d1fc-ac53-4ead-87b7-03b0c242ac23",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4617fb8c-0496-4346-a7fb-1ab2994d6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214e7e55-47fc-4a50-abd8-02bc279e3e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1253287a-8543-4ca8-82ee-6f5553e3d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "044eae8e-ff26-4a17-bbee-d3a3aad33eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f724edf2-90c2-4b17-92e9-0e85a1123d84",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea964067-8a0e-40a7-b3d5-162796f74e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb091da2-98f6-43f0-b2a3-f57bbd8bac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842bed08-d02d-4a19-8181-3e010503b237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3241d52-5835-426a-b07d-39ed8b432249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f01e91-c353-43b5-a737-8c742c244bb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e8891c-835c-4e30-89b6-aa92fd8a017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ba1340-d34d-4642-9c17-b61762c30e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1b7a90-e28d-49ae-9990-47539006dc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08429bc2-ae90-45f4-8f26-4f7c9d748483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cc58bb-4fc1-4973-b64c-13b031834480",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c328b6-fc4e-43bf-aa23-10dd0e2f8d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6607d5-d11f-44d1-b41a-24d0b304d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd120c5-5d83-4fb9-a172-cac17f6dbe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32498b8e-88ac-4acc-93b6-3a803650a9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae33a30-03b0-4db0-a107-2c79efe346fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740dc62f-ca10-4d8d-8df3-0950bf72ad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f73250c-565a-4d0e-8c7f-3c2bf8c7cfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232498e0-342c-48f2-b903-4b7e025f7687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dbcdfb-a963-40e2-9383-565d346e3ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375d7b09-7b50-4207-940e-cb69e003f541",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfa810f-dee7-4793-91bb-f5abc51b3f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3837b07-d5e3-41e9-9e5f-66e3ccc4a539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78977f90-5698-4e90-ae1d-a6876d9fe95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3727ce7-bbc0-49de-9008-87116f45bdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160f533b-dfa1-40bf-8e2f-e1b61dca902d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff791c0c-34c4-401b-a77d-f0cbab7ec650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf67fbd-b31e-45be-aefb-58a2c976a9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fd573c-98f2-49c0-8e79-fe757807e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eddc8927-84f3-4b23-916f-12e3f940bbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25486012-7d59-4ccd-b0ea-82d9c131b6b0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e97088-5803-421c-9d7c-07f953df7bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0348c42e-ea97-4f5b-9b26-5657f23573b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a730e0-cfbd-4cb2-bf08-41b201262d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "321487c6-c034-402e-a2a6-dd2efce4886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc5e987-ae72-4d9c-a07f-958e04365cd8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f99b1b8-79cc-452a-b59a-41af8f81c082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75f9e8d-4507-43da-88e8-c9a52340093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f597983-5d35-405f-9b00-e2490e7d897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c37ad87-4250-4258-b706-e3de80ee1653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32419a0-166b-46c6-bbde-e9658f182db0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14301226-90e4-468c-abfd-46d2d62b808f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b500d15-d31b-4577-a2bf-fe1525b65205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c4ff32-c676-4dc9-b375-e5e28d1ca132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c77e42f-7f2f-4b3f-98e0-821c265126ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5572976-247b-4ece-8ffb-3c7752b099c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b27a6f0-3223-4ab1-8be8-3cb7704efeca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e88ab05-ab68-4253-8232-6c51fbe9f370",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce7b3ac-bdee-40f0-a6eb-ac0559ab9b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c1061a-cdd4-4333-ac02-bdd9ec017a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "346ce193-d5f4-4bdd-80b5-3e803a49c282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f38836d-913b-4a24-a2ec-c061a907475b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d073345-577a-4c94-804d-6f134cee41a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce5e8085-5a45-4ef0-9992-b9cfd287ec2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b1813ad-8309-46b6-91fc-681b0898f464"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18b30ef3-d67f-48df-aeb6-af0f305afbb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5811ed9-c464-4cbc-bb0b-a7a0cc79fd0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1f0286b-cf6a-4a65-bd9a-fa9bbb3213f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c872809a-9666-426e-999a-110a0dd9257d"
            }
          }
        ]
      },
      {
        "id": "5317ad75-6278-4c0c-a039-2d6da288a739",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b89a83c8-79ef-4fb4-a4f5-389adc213f23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38333f1e-74a4-47a5-9788-88222ad3e2df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bea24a9-00ae-42fb-a3b6-f7428b035dda",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f268a1-a1c5-4948-8189-b41eaa12a596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01713093-a43d-438d-8f09-0fcec269af76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb9296e-5662-4beb-bec0-462ae9685407",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aac0de0-3243-48a8-bc2f-451f73939fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1174d86e-a17f-44f5-9e15-41df9c8f2072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a02b27-caeb-4780-82fe-092a56a1ed98",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec2ecb5-71a7-47cd-a472-f6c72250ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a51d6c-1765-42ea-a3a6-ba50bb06a602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb96bb16-eabd-4da8-ac3c-c6e1277d7e69",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d764ada9-aaf7-43a3-bb35-a172c63cb511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc021a-7369-4444-9504-ed5771d87bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6d8725-55ce-499e-9d24-913c08d5d982",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0a0c1-2556-4e5c-bd44-4b40331858a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a205d8a-5c30-434d-b6e6-065a8f0b08c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d5c387-95c2-48c3-8890-43373f5f704c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11447b7-ebf3-4d13-bdef-890e8d100f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d870136b-74b5-4663-80fa-9898deb5066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12280857-4de8-4525-9b86-d147f5205a4c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d968c52a-02af-4e1b-85e7-24b60857d29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121ac76f-3481-476d-ad89-aa36de574e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d25f2-4a3b-4c5e-a0b6-23399926de1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff7c875-776b-4e76-9e7b-01f6305f4f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e6b2e-13f5-450e-b6fe-84a724ecfbc9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335abc70-6b5e-4026-879c-2397112a0e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9325d4-b9d4-4ee8-b684-e56c1567246f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d85ad0-0f62-4363-a821-877e3d3fb905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd581bb4-8267-42e2-8635-6ba981e010fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d0b8cb-bf1a-4758-895e-fd7d1bbc253d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900c3f4e-33d4-4fbb-951c-61568a55d390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81dc93db-5c59-48b8-90d9-39a229cf69bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d18c9-f53c-4da1-a3e5-d7bf5d238b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5479250e-504a-430f-a9d2-4825f8f959a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eab3b7c-b96c-4116-9ad7-7a319eae063d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6be3005-65ea-4588-8a92-1c361c2f2f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ac968c-8575-42a4-8393-18d5470a35a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3fc498-0148-4574-bd51-77bea531c1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799db780-def7-41d5-be4b-fdc5e12f942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4493d9-525b-4816-bf27-426e797bb824",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90025a24-4ba1-4c00-8c36-e18e0932c3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb802f13-815e-473c-8c7b-e18f712c36c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd3a12c-b7d4-49fd-8885-e037d8dd036c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31a6df8-8169-4837-a02b-6036f2f6b3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb817ee2-c520-4fe5-8081-ba72124cffed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38bdcd3-ecab-4ea5-b3af-7cfd84569e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e3269f-5043-4dd8-b208-9ffdf2af2c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c75066a-8e7e-46cf-95f9-d38728c581f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fca00af-b179-4ab3-86e1-a757001eeef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f684c1d-191c-40de-84d3-5a5ab8698b69",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa9f15-453d-4eaf-b403-b23a01263c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b48a4e2-5458-4ab2-8ad9-004f4da6b1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49cc4da-57ba-4108-9c44-05e22f7d9a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbbb713-314a-48ab-bc4f-ea5927e5e106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4ace85-a487-4a03-ae15-b9e3bfb0136c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a709afb1-4042-47ee-839d-b271a38d7066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941ad0d0-ba58-4a07-8145-c03ba36cefbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c976d8a7-0512-48c1-8dcf-e544b77d04c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47928ec8-02af-4d6e-91d6-6fb0a7551c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2f1472-5782-4851-8262-2ffcbb0b303b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188fd427-ff99-4733-9676-a7fb126c1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a61daf-7aaa-4997-8374-1b2ef59ac9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd45f21-dc4e-4579-9b3a-6936489eea5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fd28bf-1207-4d95-8d5f-0d699be7d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f175c555-74bd-434a-aeb1-562c5e86bed6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcf8bca-d79c-45d8-a5ab-8155cfd90411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecce85ba-d9e9-4605-a65a-5f0881490edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8ed41b-e7f4-46ba-90ff-65876781e7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9218e544-38af-49c1-a322-145cc798b2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1460274-49ca-4ad8-a2ae-4ac12ac74410",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f976e-76e0-451a-ac3d-0cd75e1140b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf27d22b-b185-43f0-8406-db4e035d6b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da76b8a-4b5a-4789-8fec-0ab05d65a170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba91d586-fbcb-4803-a163-9e0fe8ccbb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9814967e-05c9-4954-965c-7753d2073b82",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f672c-228b-4336-ac8e-8444c20d18a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3bd750-7da4-4212-b3d3-467d4c8555f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9925df02-a941-455e-9bbd-40f3d451f361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6631c265-6ddc-4e95-8dd7-f5700f79a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f7acd3-2ae6-4f4b-b61d-94364c4344b7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2132c1d1-a255-4f9d-bdcc-71ea735bf890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a827aa-4922-4c0c-851e-0337a9ad4afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eae35a-f707-4878-a2d2-25bb3ab13053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90479bc4-ccd6-4fee-8204-96b9020a1fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e0151-78df-4cc0-a418-23139a184f58",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8547ed-9b3e-4caa-ab60-1a3cf3df49d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05110158-0c43-48a3-b58d-3713e52ffc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055fb6b5-c049-459f-9245-b555676a55a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4993e2-8cf3-44e8-96bd-1d6422c8c544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6853aa-870f-4fc3-ac50-ae9bc19a741d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9fb2eb-ae61-4622-9e5a-3e85772c8010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9881219-fe8b-4b7d-9455-114b65362c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138891b5-5ad1-4b75-a998-cf87b7fcd150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f054107b-a7ba-4537-afeb-612764ca0446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db08d922-1de4-4738-a7bb-cc4167ff9b92",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406d9b01-d655-4485-b7e7-b48b243a9567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11d6716-4453-4074-b0e7-94b0c2a68a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220a947b-e584-4505-bf3d-d3d3b20f2464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d69fb3-5370-4262-a5b9-2ccf4a0ad98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b819fd8-dc66-4c9d-97e8-a1b9b30b60de",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f4d2a6-2a00-4ff0-a0bf-889b41a638e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce59e82-a500-43ee-ab6e-0be7ca77dd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47548c92-a4cd-4b2f-b4a8-ee681a1fe70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93663bff-48e0-4021-b0f1-dd680591a2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5191e2-d4fa-44fb-998a-f4b6ecbd779b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c449946-2341-4d0b-96fa-ffff3d7edd75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a120b4f3-41b9-4892-88e0-257ed39144f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f74694-f8d8-46c0-96a6-03d35389c7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a34b41e-d155-4992-84df-d5ed56116f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eba2c6-74cd-4494-b650-6f2ac6ca7941",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78732c9b-a2a9-4747-a288-389cc6488f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c964ee9a-69ac-4952-8381-500930779be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77cdcfa-4951-4f83-8e25-48b1ed5397fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c5f894-099e-42bc-9c5d-c039590767c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c991d-846c-460b-8306-3337ad391d88",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4fb422-c41c-4cd6-a18e-bb80051dfabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d04088-4602-4c9f-936c-991d3691207e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca585d3-22d8-41c1-a88f-a06445b39c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbfb69-06f4-473d-961d-0bf3e2ed30fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d89ee9-3361-4dc3-8a2f-1723a06adbb1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b369e4c2-4ac1-4267-bed8-efd1ccde4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c367a673-52ca-4bda-8d2d-209ad1a16bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2904086c-49ea-4544-87f0-61e94c901514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e5eef7-d6dc-4d99-adae-d0dcd952a28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e861b81-b1a2-44f4-b34b-cce33adde2c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69db766e-4212-4403-a989-4933be191355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0e12c5-0450-4a00-925f-5c12f20ca7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af69e58-9eda-443e-bda3-850f88f92e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa642247-86c7-4eeb-a189-0e2da349de80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc1e3a5-d00a-4a7d-a12f-c5e6aa7d55b5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49975733-0900-4648-a390-f4414de01b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "784a0279-08ae-421e-8ceb-3d3078948a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafef926-58fd-436a-8252-16e3f46b93c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65ab6bc-c4ce-4b78-aa96-21a4ad7a798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2009c080-848e-461e-aac0-b1ca775a6110",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cce490-7e54-419b-9b24-ec7d58dcc3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93bc80ec-f829-45b4-8ad7-c38520410d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd08438-fc0a-4d28-87bf-a0729957ca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9728a9d0-3088-4af3-a5e2-533867d79a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b87ce-c15f-45ec-9d6e-ebd830a0cc87",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61491c7b-4523-44c4-97dc-370093c14a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2c6f60-cb54-4c81-a73d-5683a126093c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48648c36-efb9-417a-ab27-8b5e5b9f5abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4887ce49-f933-44da-9d7f-105188b66fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73ea986-1ffa-4e65-867a-eaacb33914fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94d2c1-e1df-4dff-bf7f-221736d344d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fcf88f3-b614-40f1-a391-cf60dc254ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785eaf0a-8eae-43b8-b7a6-a898a0d4fa81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecd82aa-5e4f-4545-bd4e-9bed39105e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bfe6e9-fa81-405a-9e97-d62e1007a5a9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2ed33a-6f0d-46ee-86c6-24cf7809102f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdff23a-cbbd-4de8-af59-71c17befd239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff04b9-6d91-4e95-9d7c-0674b3c37d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b47772-223e-4d42-a6a5-0d0ebea47f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5510128c-7eef-4d18-b2ae-0531c4cb0562",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30250b93-9d19-4215-871e-76c46c08dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42d45a0-e49c-42e4-81df-502a94f36b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0465d69e-abab-4a60-b75c-b0a735836d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fcbcd0-b7c3-4694-b2c5-eb849de97ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8338116e-dbef-4d47-910a-7dcd51acd187",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b43d9d-ca31-4c8e-b20d-c2024c100f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362553b9-0afe-4755-bbbf-0dface760f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd68f0b4-33c1-4161-aad5-590da5c37fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8684dda7-a0a0-44c6-b796-37bb5785e5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34af2e4-bb7a-4a20-8ebe-7e619344913a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dd2330-62a0-46ca-8174-7541b952e24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6260cf9d-c5af-43c2-964c-56ab071ee33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b36ba0-ab8e-466a-90b8-3ef6492fac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2bb783-20af-4f1a-bb0e-b1e88079df6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b50d5c-a7cf-4fba-ae05-e8b70c4b5ca3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d1e4f9-f2a6-4beb-883b-9e4d18d821c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eb9f65-56e5-4480-a222-8160f91511d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524b8d35-fe41-4c20-b6e8-721ebff44ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b91dfb-1f4c-414e-b000-845663566b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e93afc-829b-4048-823e-2559fb29acaf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3570a0b7-ff95-46b6-90e7-25dc9b6dcccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4305cd95-4dc3-44af-87f7-427d9b0eec53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519d9150-529c-4e96-8d20-cb39d0018d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eadb741-666d-4b03-bb89-d25ec62ccabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c19afa-88a8-4180-b106-f0a4af79ab48",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28041e3a-6d0d-46f4-8106-47e0d6fd48a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17241d3e-3eb1-492e-b70d-a0ddc76a759a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0aefd6-947c-47d9-8421-80d69ef05d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9e435f-ad9e-4a23-8766-a55fedc62523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d677a9b-5890-4bd2-8347-f06e24511cfc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90badd02-e7d3-45f0-a02b-a3d3b1e0809c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445191df-9545-4d7b-a2d3-88e2d3f542bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ff2be3-2313-4deb-8b41-a89422832de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f9cbd3-f023-4884-817a-be0d9e9699f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb61c07-d064-4a08-bd22-9abc142b5309",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd5fe3a-a48f-4246-bdf5-2ca0f41ba46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354f5f54-293a-4383-b5b6-cf8323e7ed1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37adb87-b452-4f6e-8457-7198d8a752d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e531400-eab4-4a2f-a5d8-b5a553c6a3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2487ba0-1fdd-4795-936c-bccc12419755",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ac31f8-10c2-4ad0-8544-aec3d3250391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94472dac-76ee-4915-ac46-510269636f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1e9bd-f6f4-4d64-8a39-f55f13c66817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a5d8e3-e732-4b63-ad55-5e49ac2698c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c7c8ac-8976-4be1-9092-b0cab721f9d6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46e8e5a-00e0-4ea8-95cd-a4194639f832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f11852-50ed-418b-bb40-ef06cd8027b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de12ea75-b23e-4d50-a095-73456ea76b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2215d7f9-de29-4a5b-b098-7657d85a8905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d34f66f-b53f-4379-b0fd-e20c9887f580",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceb7174-a814-42d2-b5b4-381d7022988f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daceccb-0084-4261-8b91-182d031de430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd677cae-8d86-43a8-b22c-111a164396f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640a7ef8-c6a7-4e8d-b976-71c86a500dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35236289-53a3-4e6e-b95d-ace704091aac",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3240e024-1de6-4ea3-b60c-d3e764482c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586bf38d-26f9-4af9-b314-e0b61c0f0bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b5259c-66c9-491c-94cc-8512cfbd7c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ef3e4d-5a58-43aa-bbf9-9ec423fade1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6c4bea-2688-40fe-9559-b6fca40c83d0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb157f9-3503-46fd-96c0-4cacee0ffc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb87310e-3992-4e2e-8dd8-39848622521f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a5e075-65ad-401e-8e71-83f1f8069561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c5c34a-168b-467a-a639-5e514a8c67d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407262be-3b7f-4a3c-8192-ba821d8dc750",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9cbcae-aa4f-4371-8fd7-ab5a19a9f997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c9b313-0ff3-42a3-bb50-733b4a474771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217cd29d-c7ee-457f-8bd7-64df8a9d679b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e642d1-d710-427f-a2e3-93f6931cc324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b242586e-2b16-40bb-89a0-5a5f08b6d66c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce642cc-fbcc-415c-9703-9e5985046ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6574d10-d8b6-4f7d-9a0f-99f956495a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614d4a3-4485-4e2a-9cc5-b186172fad28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8272fc-57a4-4ff0-8c6e-21e342a8062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cbb7ff-2317-49ea-8180-b34be64c7a6c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d28e77-a7ee-4ee4-b874-e3c64a2ce66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cd4460-ae10-4b9a-ade5-02acc8e689a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73fb087-91c0-4693-b229-91d59d5ba4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed08f350-5263-44d4-940b-97586f33df96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101cb492-0b36-41f3-9b0d-348fb52b7c35",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54cab40-a8b4-4b88-8a27-8420bc72c95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11776121-c27e-45fd-baf3-5a60612c3176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aa2f6c-9a52-438f-9a79-f0bf3519dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cdad70-ab2c-4e14-9796-37e251bc6bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753d27bb-09d7-4282-aef4-60482aefeef1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c732b00-85e6-4596-9555-62d176422ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edeb947e-fc89-460d-87d1-26d35fc65de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a49b08-c466-4d9e-8e22-4c8e15709576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119ca054-b711-441a-9be0-bed714efd83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c524d0-52c3-450f-8252-a36734d0c0f0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad085af4-668d-431f-b891-485b9e5548b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8332ac6-6cbf-442a-bc93-8956855f46ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25710556-c9be-43d4-a1ae-18663fdaafe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9093b9ef-7fb6-41cb-a7fc-0c3e12f24d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d0c03-eb97-4503-82d7-b76212d7cbc9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baae5e3f-7eec-448d-81e3-c028cced5244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba98f8d-63ac-40ec-9de6-57d55b4eb238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b1e8d-fe7e-4271-ac3f-ec73478ffffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ba0ae0-3545-47ad-8bfb-ec2460363d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba4152c-7b1f-4e2f-9360-25495cbf0afc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ac904-1d4f-47c0-9b19-446d6f92f2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c0257a-3bce-44a1-ab56-ba14f3bf1cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aed0933-f937-4b50-bca3-8b020b352350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348aa323-fb71-4299-898d-bafc9ef9d11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae25cae-9b64-4118-91d7-02cd2c1da4e8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5d1a4f-51fc-4b97-9590-e4fd63167084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9722688-4f52-4308-af63-b1f7146c3ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd6c13-b307-4e87-af63-7e83fd8b1e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99e92d0-31ea-4387-8913-727ad70f9d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc9508a-7348-4b2d-a7b9-557db61db2b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57fcd5-3af8-4161-b38e-de3f0c1a65bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532dbb0b-baf9-458a-9f9b-b61b5a029c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2caea0d-6df5-4069-b31f-5071e82baa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22f0833-8366-40f4-83cf-6286401920c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e5196c-ac02-40eb-b172-ec852cf04107",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67ae63e-5a87-482a-aedf-e9574a881486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde12e93-6949-443f-a940-6df1c1846333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e489b-0f5f-48b4-bda2-c4e59aba48c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad06b075-7bab-4df0-a250-dc723ec8e9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21d9c31-e571-4812-a78e-672dc4c04340",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fde421a-933e-474a-ad16-e1aa68a2fdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d3e32b-bd57-437c-9928-3f867de7edec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8043d9-01c2-4f7f-ad82-bc7834a4e3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1625a61c-7447-458b-babf-9e2a3adf4e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea30e8-8ff4-4e5a-bdae-9ccadfcc74d1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754247dc-0c9c-487a-9b24-4b917f31cd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2aec5d-9e6c-4113-8eee-bbc97918a5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c933e4c-d117-435c-a95d-b653cefc55d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a95e030-8983-4322-a02f-5bef1f0d7c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ddebf0-2a7c-45c9-9809-17fb693f522a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bca42f-d1a5-42e3-ab69-367c3c944666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee42e13-9b67-456f-bb40-6bd295f0cafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b849c52e-d2d6-4013-91ad-539f325e1a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4a3e8a-f6a8-45a1-b4ed-29608cd0e00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0a0a05-baf2-4237-b19c-394f82e6978f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274f315c-862e-420e-bdcc-63c3dd82ee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5a1726-7395-4f06-9427-58fa71dbca2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a5505-4279-4dfb-9201-0bf6861b9c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5aa50f3-b175-43a9-98d3-982a17cf4454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38992fe8-2f43-418a-8d4b-12780d55f575",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9663d6-0584-4ec8-a35c-e6a74f9b0409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55621d1d-1984-4f40-98ee-93deca43cc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a80d8ce-a56b-45e1-af3b-6c47312923ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dfdc8a-1d8c-445d-9a1b-e0308ef2b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2911e7-5acd-46d3-ae2c-d5bba6e2eda1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a836a-f664-43f0-95be-1386ef97db8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06daf8cd-5b3e-4c2c-9330-0755d892181a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96664c8-0f71-4c39-a1bf-01fa5c22ddda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01342bd-6327-48de-a60b-fc86fa0f15f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fabc8b-1dff-4fa8-9171-90f9c92ad0c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49afa14-bbf9-4269-a26d-21596b894b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5208488-c8b4-4e05-899a-87454ffa77ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1362997-9b67-44f8-8b41-b58dd43a97eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc9b2bd-27f6-4bd8-9f79-b6a554d035b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63964295-da5a-483e-834c-9dc9ad965e25",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185138e8-6171-48c6-9cfb-8c6a9a8eb710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ee4002-6d48-4718-bf2d-32b006a6335b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b211242-8951-4dd6-8303-f1d8d9fc9a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db1159d-b91d-4970-8371-180d06045ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376c03c8-979c-4d96-b792-b3ae524869cf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2084eb78-ff93-4292-bc8d-b32dfa167c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443fa7e4-7df0-4ea8-ad78-cbc2ce2acaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f2469e-fba1-4ee1-aed5-736fe265ca74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaa4a2a-b189-4cd8-b4cb-bf17a60196ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c383f92-6a01-432a-a735-659cf1bb0d31",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed98765-ea36-4370-bdd6-f6fd02dd724a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70694294-5dee-42b3-9246-b6b34907bdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c55e2bb-1488-4518-b0a7-5a1c04c558cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2df5c32-78b9-4fea-aee0-c93e74517f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f8120c-66ea-4c4c-a18a-55e00aef52c1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dd6a1d-ac89-4288-aad3-0acc406ec122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a51628-4cfe-4eb7-bda8-d93e2ce3662f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd186a2-d602-4697-98e1-654f81b7bd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d891367-074c-4209-8ca4-c87f387e8671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef9ccd0-96cf-458b-b70a-210d43e5f71b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c577f-681c-4fbd-809b-dfc46b766827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6591b36e-0f18-4665-b812-fca8b7ba8d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e0eb0c-4a93-45b3-9d74-5f8b7c5c747d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b9f56f-5e5e-4bac-99a9-39246058fb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3822f0-02a2-4a00-bfc2-0480bd9a34f8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d68d49-e1d1-4d2e-b76a-2a01e695ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6297f795-bb94-44b2-9c57-0fa565aaaae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0f59bc-29ff-493f-bd19-f36fc8999342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48fd550-83b6-4fe3-9f89-2e4ddc0b1e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a7074c-c3a6-412d-b671-5ede2395171e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ef71fd-9bb5-43ab-9d6e-0ce22a81763d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388227c4-da7e-421e-a8e8-f0381bcb3d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af944747-25f2-4070-8630-0a4a772e03bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc98ff3-ffdd-45fb-a6d5-de71fd36f79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15136c91-61bd-4f7a-911a-9b4318ea84cc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3b6242-ec18-4afe-ac1f-edc150bb43ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77948870-d2aa-4929-b6b0-084822fb887c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53e235-4618-4de5-b666-c158962db555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e90e60-6717-4c7c-846d-0ccc3e854d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4d144b-b3ca-497d-9150-55ceba32b7fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf986168-b19d-48a5-911a-3386445b8f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ebd5f7-67d2-4fc5-85c6-9a7c44d980bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f1e279-2e0b-429a-a94a-cf25f0910308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06038965-2758-445c-91c7-466c473e9219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6577c797-7e9f-49b3-a7a0-fd9a242c2ade",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58409a3d-b957-4fea-b811-415c76f6219c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334b78b0-aab0-4165-ad91-512c3f39e817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e4816d-0d89-45e5-b79a-98d686cad167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd10218d-e685-45a3-a671-2ba066b7ab27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41540d22-578b-459a-892f-41edefdbfcbf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fe2460-a0ed-439e-8629-05aea94ca4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c436e7-c0b3-49f0-92f5-04797743e493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541939fd-3ef7-40ba-b91c-7b974587f2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811f835d-0e2b-48cf-aeef-2af999b8bb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c797949-5b12-4f9a-8bf9-e83402fa3dbb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a5c994-b105-42a7-aa02-83330e239296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426b740a-850a-45a6-970c-a7a76f27c9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b232ec0-1441-49b6-a903-6607e37e8093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608e5de0-0f30-40b7-becd-cdbe92f51088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6661a2cc-f23a-4dc2-bf1a-9d19e41b99f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94580c05-d2a5-48b2-8a65-ca202ee626ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76af2f2-ee8a-44ec-bda6-0195c358ee4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7044b205-f155-4db7-ab48-567d8a68fca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579b251d-2650-490b-aa7a-c4d2e6eb972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dc75a1-6d2b-40f8-b989-13fd8693b54c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e8e81a-b20c-49eb-a83e-6b89e6ca2bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506aa3b4-500f-4977-bf14-a0fe29f7af04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f3032-402e-48e7-9bf5-b0b3b2582296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d1c53d-f176-49aa-936e-6041badffaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82667411-0dd8-4abc-87a5-e100a86ed6f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89d5c9f-996d-4be8-bd2b-8169d6076f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdedbf0-b14e-4aa3-b929-26e1feaaebc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5296fd92-9643-43c8-ab03-a258cd84cb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb42c00-a220-4896-9e5c-d5bdd56c9590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ca0073-eb3b-47b1-b579-9795ee1ea248",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c133af-d76a-4d13-836e-8b41128a1feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48fc677-76b3-455f-94ca-3b2b42f27eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecbcaf2-713a-4f86-8be9-dfeb837a91b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a802e3d3-e510-44f0-bc48-3d09d2a508c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4150a46a-60c4-40ea-a7b3-4f980a53d1fd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42896a47-2b97-471d-87d2-4459ba92b690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35b222d-114b-47b3-92a8-1ffd6e169e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8d15a-9e46-49b7-97f4-8bef0ec2b83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f9a0aa-e8ac-408b-b113-2d064896aa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee88b0d1-2d86-4a1c-9db9-b495a79843f3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c4c229-5975-405c-a760-80d3d35bb086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed5e75f-c6d8-453d-a7b6-427498558c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56be2e2-e45f-4363-882f-ce65c1a4f0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebd57c3-32f2-4b74-9b10-79ce5d4b8943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18bfee0-4915-4256-81f6-83046bb84485",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8868eaa8-410d-4802-ba66-3ef9e6982662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bc9e30-fab5-489d-ae94-cc8df2bd29f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c5d111-28a9-4e9e-9288-350f796e3c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7a16c1-1613-4f53-b0c8-ad8998848852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f71b4ef-fb64-4981-a3da-01072844df25",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f46a21-ca37-4686-bf0d-c2276a099a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9eb3506-6cf1-4074-8cf7-6f86e2fa6628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44f4ec-3db3-4d4e-a8c3-a48f2c6bf256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11479a7f-4a4c-429d-aaaa-01cb7b5d25f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c32ebdb-8b24-4382-8d17-67d1182a2cef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2ae93f-94a3-4aff-8a21-08d132556523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f612885b-538e-48f9-ad2e-d006ec16042d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdb57ca-5169-47de-a315-d7ad2e9901e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78262ca5-daa9-4cf1-bfe4-7086dc44c64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a502b3-878e-4ece-92a1-8df0ef2021e6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44126a79-bd6d-4dbe-a44c-339fe56d7251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f935e8-6c53-430a-9e88-e8d16c82a26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f340f4-8f9c-4018-b0b3-b4ccd665efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a2e47c-799e-4546-a929-dfed265cd205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddace297-a914-4922-9591-1ca3b377a23a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843f33ff-5a9d-4503-a89c-45992a19fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016a525c-9f6f-4b1f-a8f7-a5d0f99e395f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0263a425-c88c-460e-bd8a-0952038e4165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368d7ad3-8855-4d95-a7fd-78eee681723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c35906a-d3ea-401c-aab2-297b1590335e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1211bf-f2a3-4738-ae17-c119d24e06b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89aa10c-b85f-4808-8506-ad5cfdc58a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77eb084-0986-48dc-8cbf-b4eba031056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9be9ea4-d427-48b8-8414-23ba9040393e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89378862-1707-4fe7-b3cc-0ab6c072f794",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652ca5b1-3cb9-4b93-8a21-856e534b2ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0766ef-c830-4edb-8632-1e20aad63d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd0066-c109-4318-abdf-57a7f811c084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d1705-d9de-4558-9db2-46a47bfa468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40676cb1-151c-4ac7-826c-811b88b4c9e6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0d67b5-691d-4a38-ac3e-758c3dcc0afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd22ebe-4d2c-4690-98d0-f72f66b132ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f829bc-f712-4c7c-95c4-3b7ddb090cc9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f05be6-1170-4972-87e6-7b6be12e9534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec3ed0-a3e9-4aa2-9fa5-514f28c57e04",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4258db-7df6-417a-af1e-b19ce8cdc124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52b8871-e9a2-452e-9097-20f8b292fc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22628e0-7869-448e-9258-270e09f78c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392a9cae-2616-4c33-a997-760f8f59b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7047e1-24b1-4940-90c7-3f637d97ca3e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9821d55a-41eb-4c72-9ad5-4e29c07c7858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215fbc51-1cc8-44ff-9353-34aa3926fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73754d48-982a-40c4-af10-8d47443a497a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11ca5f0-d96b-4d17-9948-77ce0489a23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea59c72-6c54-4cc5-b824-406d6f50635f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb7464-45d7-4d18-8394-ab79dba3e50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c256c65-4b41-4412-89de-dfaf0e4eeb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2335a7-1190-40ef-87df-7fb995f1b4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da02379a-e16a-4c6d-b44a-c48167a02dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8fb924-e0c3-45ca-a88d-21b9a31dce13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f073ce30-0261-4bb6-af8d-6fea70e58212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94eacc0d-f46b-4e80-aaba-3a13316b54f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23fce78-6699-441f-9730-9dd21ca2f4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0371dc0-671f-4896-96db-606baf366b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e89dc1a-c2cb-406e-9a82-14ac10559c6c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d44e135-1e3a-42f7-a15b-ce65a3a62bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77953860-7e54-4aaf-91ed-204bce22b048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96522506-0618-4725-b9f9-c7f0d2309a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b175ba2a-eee5-4ab1-b86c-3a427cb3eeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed061d-676b-41a4-a93e-f6138285f558",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488c784e-48aa-4f18-8d1f-c4123f916388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827e163f-78b2-4878-870d-dc584ab2c848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1e7044-b613-4b16-b303-17851a47b9d8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2547633e-02b2-417a-835d-1c661f1360fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1184571d-a8e9-4030-9ae5-727cc8bcb272",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c270bef3-3ea9-4dd2-ad8f-4317c0d7ba94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26e57a5-7a0c-496b-ba14-f6f03d535f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c4554-6f1e-4474-8caf-b1dec0afd62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce219150-3226-413d-b371-63c751dff1b8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70c7b6af-3f6b-4301-9d08-b1a99cad95ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edd3667c-2571-472d-9dad-df633862c4b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f372eb-caf9-4b9d-8b14-cb959226629b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d612bc0b-5078-4ec0-8837-5e7f34662536"
                    }
                  }
                ]
              },
              {
                "id": "c131908d-f63c-4761-b772-84a8ec7d3dc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e4f94eb-9fd4-4109-a4fe-eafeaed833e3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940949b1-1834-4df8-b661-4e9ad4e81de4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc799966-4c54-4122-844d-92ec9e29a2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8d726d-88da-4ed2-9c31-9197fa1405fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b523c967-9c41-4d76-9914-feb7fdfb1449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5ff5b44-df4a-41ae-a806-fb89cbcfa255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97cd7863-0a6a-4988-b92b-6096d6d00c04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f08c83cf-734e-450e-bfb5-7f988f1b02e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60361e5-444a-44d2-a47f-03754fd1dbce"
                    }
                  }
                ]
              },
              {
                "id": "b158c9d8-a592-4254-8112-603296c6a6e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9418ae63-3bcb-4374-9ff1-1c13c07a6535",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e33674-dcf6-43f5-8e62-6e0385d96ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4ac13012-2955-4d30-a5cd-901d61cc2f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099cb18f-1658-4a27-af29-0e671eb6bfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f265cfd7-19d0-4c0a-bbf7-53fd65676682"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a8020d30-44dc-4027-be30-a75805bf878e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5251e376-40c4-4fc0-a5cf-2bfe9c09fa76",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f90188db-1bbb-45a3-86af-e549dc6a4c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "364304f1-2669-48e4-b535-17e1eea0d0b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4340f419-f0b9-4589-aaff-d4a4e0ac8488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79eea7bb-7f99-4ca5-87c0-da1f219f980c"
                    }
                  }
                ]
              },
              {
                "id": "b8a504bf-af3f-4558-99cc-4194e976def3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7660a240-8ca9-480c-b200-9752043ed60f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49339657-cd07-4b92-b0d2-95b445aa9900"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f8d51f0-58cd-4788-967b-8bb9e5377c82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a061af-1827-4025-81d5-964e38926e71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76c9f34f-d850-40f6-b872-8c77a465621b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d3b88564-0e84-4fd3-8ab0-3da0dbf8fa79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9507139d-16f3-45d8-8c6e-004dd6851251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ec1ef22-8ae2-469b-b3a8-c8e5e7ab9255"
            }
          }
        ]
      },
      {
        "id": "fda2d20d-ef3b-4f3e-93f7-6a167d5e9157",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "30d4c98a-aaca-4af8-a54f-b2b64e53d065",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22f21384-bdbe-480b-a4cc-98995b92cc03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63f2b495-050d-4050-8d21-a0a1403f7c25",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19cdc66-69e6-42b1-89a8-49cc58711024",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ff578e09-d9ab-4504-a1f3-eb91dad64ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc3cbfc-1694-43a7-83d6-c1e578f2ddff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb2ef21-aeb8-4b42-8c0b-c4f0c37c804f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89a2746e-4727-4010-8278-f9be67a9e11b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5290d3f1-7676-4f55-8236-b69d84f22beb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f55babb-1924-4145-bf8f-9f0d3ec79f9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5200ac86-c604-428e-858f-188dd30228e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0b5a6fb-d280-410c-8a79-fc1a9e987dd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5de9c412-d4d7-48d9-bb1a-bc47b565fc22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f5b10ec-af75-48c4-83ec-9ae20a48c283",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dedcdd6d-bd6e-4409-b9b6-c7916b77c533"
            }
          }
        ]
      },
      {
        "id": "65b9fbc3-6a22-4788-94b6-f3acb40c0e0b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "790e4184-0f3a-4937-bee0-440e8703acf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4252bd22-aae0-4762-8f53-c323ad3d51cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f96f061-8058-4761-b481-ad69fbc990f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7338b40b-edbc-4b18-b9fa-80f88a089f7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8232ab3-f1db-40de-a259-2a0618503908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad55792e-e991-4498-82de-106d1130954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbd619b6-9cf0-462b-a654-41ba558cab77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3b682b2-5c07-442a-a43c-dcdb85a94e5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ed00568-9818-47e4-8aed-c0b0a52bfcde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "986127b2-761d-4c3a-85bd-0c5428955d79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83fe9892-603e-4007-a782-37af1e3c2069"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56bb0503-958e-4f13-aedc-54389e5d5970",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cc187aa-7367-4a83-884a-ae2d0c44b66b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dd5ebbd-f1ed-4230-8219-83eed7627e05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c83d77e8-2d93-4a95-884f-750a0749a753"
            }
          }
        ]
      },
      {
        "id": "c609bbf1-feef-4cfc-8d39-aabf4e2b67a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "50e830a0-f02b-4ce5-b7c7-f783a8b6addb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0575574a-7b96-49a7-a74c-cea0bac3f68a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "caad8e36-be0b-4913-ad64-34855b30465b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5320fa6-4176-4032-8a7d-b591498c53a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b2a0647-dd5b-4a08-ab8c-6d0969e5fe49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acc2b2f-7a9a-470d-ace5-73c8622f5cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33411237-af94-4d23-a5bd-5c05e3d39735"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4787b5dd-4a9f-4578-be9b-900e85646ff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e3fd1e6-d564-45b6-a000-8b0b6b43a87a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c0e018-704b-473e-ba43-51f4c15fdb2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5799503-812d-405a-8871-6da14ae7b2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7107160-cf97-433a-ae4c-78669f97dad8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81404980-6a15-4092-ae11-8c58d2ac59db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05753362-0a78-485d-ac09-6494239bc57b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc01d096-cdb2-4d21-8977-32e19974f750"
            }
          }
        ]
      },
      {
        "id": "ddf2cf80-402b-48f8-9ea5-59457a7e2ce4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1377849-0892-464b-b6ec-b9cb6e85f3f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69ef76e2-2170-49eb-853f-d63cec4922c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "456ef7b0-ff6d-4f50-8b1e-449969396bc0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9ffb136-edc9-44a7-aa65-2919ed990a48",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e2dbbe-443d-46af-b42e-aee8af54bfcf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.66666666666667,
      "responseMin": 5,
      "responseMax": 336,
      "responseSd": 30.534263866045148,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721090383988,
      "completed": 1721090395211
    },
    "executions": [
      {
        "id": "b1530cda-e152-4ceb-855b-ec67352551b1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a798549b-b320-4eb6-94da-7efb225d4016",
          "httpRequestId": "46b02c3d-f3f1-4c97-958a-d6a150f43ae7"
        },
        "item": {
          "id": "b1530cda-e152-4ceb-855b-ec67352551b1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0d2f8083-b4aa-4346-986a-921390c95dfe",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "e7630d07-cb94-471a-bbaf-104510aa0b8c",
        "cursor": {
          "ref": "8aa83f3b-0c24-4a8c-8218-56168b4cc245",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "adf61e28-4938-415e-8611-a0f7561c3750"
        },
        "item": {
          "id": "e7630d07-cb94-471a-bbaf-104510aa0b8c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "566c0c05-1ed4-4e30-8852-0fec2860f7e2",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "67fe8c53-402f-45e3-b3d2-68aa0f93a4d5",
        "cursor": {
          "ref": "b1316cc3-2c0c-478c-bbf4-e8ee4d9e110f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d88a0623-3c28-4233-9887-b9bdf600934f"
        },
        "item": {
          "id": "67fe8c53-402f-45e3-b3d2-68aa0f93a4d5",
          "name": "did_json"
        },
        "response": {
          "id": "2ec779e2-f1ae-469d-a33b-a8cb116741c4",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833493e-36f8-44de-8a14-c6c1e2eaf0b2",
        "cursor": {
          "ref": "4e80689f-8a94-468b-8ec4-d7b725e06294",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7a8cf22d-d98a-4058-af1d-95af06d8e99f"
        },
        "item": {
          "id": "f833493e-36f8-44de-8a14-c6c1e2eaf0b2",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb584635-361d-4df0-8437-8af223e9707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833493e-36f8-44de-8a14-c6c1e2eaf0b2",
        "cursor": {
          "ref": "4e80689f-8a94-468b-8ec4-d7b725e06294",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7a8cf22d-d98a-4058-af1d-95af06d8e99f"
        },
        "item": {
          "id": "f833493e-36f8-44de-8a14-c6c1e2eaf0b2",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb584635-361d-4df0-8437-8af223e9707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116bfcfa-05b7-4e1d-9db5-363ba455c6e5",
        "cursor": {
          "ref": "47b0fb0d-6ce3-43d3-831e-1ff4a8a68ef1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7117a167-c0aa-4a2b-a6d6-683bfa014504"
        },
        "item": {
          "id": "116bfcfa-05b7-4e1d-9db5-363ba455c6e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fb80ff57-1a0f-4b57-9d7a-b7900dc79080",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 285,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10276b48-f3a7-4851-a97e-db74acab1785",
        "cursor": {
          "ref": "f18be595-f6eb-478b-befa-c426f605ce37",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5e277273-822e-424a-a4b7-eb42880bad62"
        },
        "item": {
          "id": "10276b48-f3a7-4851-a97e-db74acab1785",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "50b09294-2445-4ac5-bc80-50d598cd42bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea48619c-6729-457c-8f91-488f0c82edaa",
        "cursor": {
          "ref": "3497c935-8046-41cd-8df6-f689b0feabdc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "570c458d-0095-4e31-bdfa-f486f4254fca"
        },
        "item": {
          "id": "ea48619c-6729-457c-8f91-488f0c82edaa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a5cf8eb3-f05c-4364-a6a2-77957a4b71f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf384332-a036-40ad-a60a-c1ff9c6e7300",
        "cursor": {
          "ref": "9d1ef806-f6d5-471f-b599-08d623214c59",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5273320-6bf2-4b77-ad34-e682c18ab456"
        },
        "item": {
          "id": "bf384332-a036-40ad-a60a-c1ff9c6e7300",
          "name": "identifiers"
        },
        "response": {
          "id": "b2a54cb4-8333-4eba-ae7c-0838b8284ecc",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6d9ede-9280-4ed7-8bc4-a5ca8ee62c14",
        "cursor": {
          "ref": "430f9dc0-0d38-4956-8e4c-b5048c4c81f3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f875c77-e429-426f-8268-cb29fb7f9301"
        },
        "item": {
          "id": "9d6d9ede-9280-4ed7-8bc4-a5ca8ee62c14",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e9a4cc4a-7d88-47f7-ba09-ba10a3cf0efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cdf875-d641-4cc9-8f8f-9c59e5468d0f",
        "cursor": {
          "ref": "2597e641-6a97-436a-b1eb-de1a2766e0a7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "754ac1c7-2ad9-49be-a52b-cde91acb6f2a"
        },
        "item": {
          "id": "73cdf875-d641-4cc9-8f8f-9c59e5468d0f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "42fe1ea5-2aeb-46c7-8c80-999cba7268ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60305486-08d5-486c-93ce-df1cc4846ea6",
        "cursor": {
          "ref": "c10f91a5-6527-488d-bdf6-95337a2b4d78",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f462de88-c40e-4b8d-b531-72195f5310ec"
        },
        "item": {
          "id": "60305486-08d5-486c-93ce-df1cc4846ea6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c1bdd946-2839-4b3b-8199-74d4d0fa428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8742653f-a512-41ff-ad28-289e7cb173df",
        "cursor": {
          "ref": "52a711f4-1f28-4f69-a1d1-deb2af47844d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4d87a0ae-b043-4934-a776-20b44c366c94"
        },
        "item": {
          "id": "8742653f-a512-41ff-ad28-289e7cb173df",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6567e48e-f988-48c0-a474-f655b4cfee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316a21c4-eea2-43a0-9464-8d66394aa32a",
        "cursor": {
          "ref": "0dd2be0a-cce4-4feb-8140-fcf1acb9ebe4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "57980b2b-c9c5-4c03-a3d7-ec1b70469d48"
        },
        "item": {
          "id": "316a21c4-eea2-43a0-9464-8d66394aa32a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a5d3d634-3c1d-468e-8779-58ee7c4c2e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5963de-22eb-42b8-b077-1a9e6df7fb04",
        "cursor": {
          "ref": "7809c2ff-8ee0-4884-9966-e0b6b194e5b4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b6167813-08f0-4fdc-b0e9-e21a918060a3"
        },
        "item": {
          "id": "9a5963de-22eb-42b8-b077-1a9e6df7fb04",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ba4f765e-0722-43c9-ac52-0804421abb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f85a942-bc51-4815-a639-3d0f043496b5",
        "cursor": {
          "ref": "cb12e1c7-181f-4d20-aa39-afcb21d6157c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1d88567e-71e7-4837-a18f-b869f15d4339"
        },
        "item": {
          "id": "8f85a942-bc51-4815-a639-3d0f043496b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c00421d3-43b7-4835-b148-07e099c0333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53c3d9d-9293-4ade-81f5-66428cc8cfe3",
        "cursor": {
          "ref": "f881e771-f423-4370-b67d-21e3c612db4f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2f0425b1-06ce-446e-8e27-81583c2d8c55"
        },
        "item": {
          "id": "a53c3d9d-9293-4ade-81f5-66428cc8cfe3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "881cbc05-91f5-437a-9f5d-e6559a7280a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d458b479-c6ea-4601-b560-12e60d376a11",
        "cursor": {
          "ref": "6a729a0b-49f7-488e-bb4a-0c6eda60be88",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a778dd88-9b4c-4b36-9080-5904b4198fe4"
        },
        "item": {
          "id": "d458b479-c6ea-4601-b560-12e60d376a11",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e00f6ae9-cd1f-4716-a3fb-37980436114b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea317fe1-38fc-46d7-9d11-b64b90c4d404",
        "cursor": {
          "ref": "2187a049-19cf-4fd3-8896-70a079236502",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7ecf7bd-5aba-49d9-983b-3730b124c0a5"
        },
        "item": {
          "id": "ea317fe1-38fc-46d7-9d11-b64b90c4d404",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "31267046-3905-4386-b3a0-798cefbfaaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46da3bac-fe6d-4615-ad4f-a6aa5c0125f2",
        "cursor": {
          "ref": "4431ff54-23cd-4afb-b22e-2c4e351a7751",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dd54f371-450d-499b-82bc-975748130aa8"
        },
        "item": {
          "id": "46da3bac-fe6d-4615-ad4f-a6aa5c0125f2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "79fc0190-a4a1-4a37-8bb9-3d2bd341ad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cf0e17-3bed-47f6-a863-d4bfc63d0813",
        "cursor": {
          "ref": "77ec3620-6841-4307-94f9-a756de3f878a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fb92472c-c98e-4680-82c7-29f01f4cf7c1"
        },
        "item": {
          "id": "85cf0e17-3bed-47f6-a863-d4bfc63d0813",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "de93e722-ab59-4650-a024-9bafb03863df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadefd8-8e56-49ea-a80a-6b323ffa9bce",
        "cursor": {
          "ref": "a0b28594-3a3e-413e-9aa8-b51b9f9d8648",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6cfb7a5b-ea75-4544-8606-5ad8354c7633"
        },
        "item": {
          "id": "dfadefd8-8e56-49ea-a80a-6b323ffa9bce",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ad1f5c58-c872-4e81-9b87-48f7020ee3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3e95f5-af21-4228-a190-82bfaff271b8",
        "cursor": {
          "ref": "98c0bd44-942e-4ec3-afb7-1e7bd669c0d4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ac6f0f7-fff9-4555-ab6c-bd640c0e399e"
        },
        "item": {
          "id": "1c3e95f5-af21-4228-a190-82bfaff271b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "25e7263f-29ab-4f12-97d7-656b71c98cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba49aab-8b24-4f32-8334-75e760f728b2",
        "cursor": {
          "ref": "741d1702-f2c9-4f2b-8aca-96bd9bce5a5e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a5cd8843-23c1-4e00-91bf-972b26011280"
        },
        "item": {
          "id": "fba49aab-8b24-4f32-8334-75e760f728b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6629f42-3ac5-4b8f-a464-ee9af5f12b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f4e7f2-e3cc-41f3-8b6d-f30662aeb0e1",
        "cursor": {
          "ref": "9fd7031f-2b0b-45f4-99e0-5dd51155118c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba5932ae-a808-4913-97db-5165283b14a6"
        },
        "item": {
          "id": "53f4e7f2-e3cc-41f3-8b6d-f30662aeb0e1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a661d743-c75d-4fd0-a0ec-9af1b795b9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e9b6ba-d08e-467e-a787-3ef122bba0d0",
        "cursor": {
          "ref": "5ed5fa52-d44b-47c4-b162-f8d5916f4a5c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f0e4037b-d45f-41e9-b30e-6cf74fdf8e8c"
        },
        "item": {
          "id": "43e9b6ba-d08e-467e-a787-3ef122bba0d0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "62282028-30f8-48e3-9285-83af2e9a721a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9188f165-81e8-4588-a413-4a707b85439b",
        "cursor": {
          "ref": "0717fd16-6379-4232-9416-6f93578131ce",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4a171afb-6275-47d9-bdcd-282d4d1dc18f"
        },
        "item": {
          "id": "9188f165-81e8-4588-a413-4a707b85439b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f4a0a5e8-c5ce-4ca3-934e-195192d23807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523ecd3-8841-4907-98b5-f84ab3b37e13",
        "cursor": {
          "ref": "f1306823-0af1-4dec-9d1c-a7fada5a0089",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d476540c-1328-4735-ac5a-f7079e93de20"
        },
        "item": {
          "id": "2523ecd3-8841-4907-98b5-f84ab3b37e13",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6f53c59-58a5-4804-a96c-9296f2c9cd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b342497-ce09-4b75-aad5-8f6c56e7063c",
        "cursor": {
          "ref": "401e30e5-15cd-4ff4-ad6f-15ac0fa3e725",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7be3cac1-d281-47d9-9f7c-4ab094d4eff1"
        },
        "item": {
          "id": "1b342497-ce09-4b75-aad5-8f6c56e7063c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d79a4a52-c19b-4b69-970b-5408ae5361cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a3d364-d310-4f92-9007-5d8143fcd73b",
        "cursor": {
          "ref": "63408321-2df2-41ed-96eb-d50d01780d9a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9e82debc-0ba7-4e1e-b09f-3538f450a977"
        },
        "item": {
          "id": "c4a3d364-d310-4f92-9007-5d8143fcd73b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7459370f-a9dc-4105-9f44-c033180b255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056021bb-720b-4229-8032-2938771cff22",
        "cursor": {
          "ref": "92e5e007-f78c-49a8-a3ec-9b0f37eb5135",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31a91ee8-7bf1-42ea-8b98-4ad8dcba175c"
        },
        "item": {
          "id": "056021bb-720b-4229-8032-2938771cff22",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74a7dd89-d0a1-4872-bdc1-0f1314c65479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d321bb86-6cbf-47d3-8da2-ec12125e14a5",
        "cursor": {
          "ref": "a49bca73-32a3-41ec-8770-eedc4d7f646d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d8fde016-15ee-4dc8-9290-1bdbe883ad54"
        },
        "item": {
          "id": "d321bb86-6cbf-47d3-8da2-ec12125e14a5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4a5e32a8-85f1-4fb7-93f7-71a152a3df68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e899d77-fd32-4ca1-bfda-07f469114d7e",
        "cursor": {
          "ref": "2d45c234-0855-4adb-a0c9-b9e366ef8f89",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9c4ca1b4-7876-477b-9ec5-7c6dab886eff"
        },
        "item": {
          "id": "1e899d77-fd32-4ca1-bfda-07f469114d7e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3a10be63-96e5-48b1-9858-45cad041a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c6ebe4-2ca3-40d8-add4-24f3262cefa3",
        "cursor": {
          "ref": "b17609b8-16b4-46c4-bd5b-911d1d9d02f5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5909c49d-d66b-463e-8e6a-9e5f0ed55c17"
        },
        "item": {
          "id": "12c6ebe4-2ca3-40d8-add4-24f3262cefa3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98be3c3b-757f-4aa4-ba20-0de4cb10c6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175546cf-3e8b-487d-96ca-f8f624d6970c",
        "cursor": {
          "ref": "4e12cd23-6d43-47c8-aa06-f89b371e94cc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3db0a9cc-1afe-48e5-8309-fa5605d12412"
        },
        "item": {
          "id": "175546cf-3e8b-487d-96ca-f8f624d6970c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8b5b3a65-0c0b-4d9a-81bb-2c3bd35aae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80864411-e270-4907-90fc-35b6b17d9c4c",
        "cursor": {
          "ref": "9fec8b89-0f67-4867-89ec-1a76ed554a28",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ca06cafd-8ac1-44bd-9c3c-8769ccfbe8ce"
        },
        "item": {
          "id": "80864411-e270-4907-90fc-35b6b17d9c4c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f17491a2-d1bd-4679-9d0a-ce4bf1c559cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fcc149-e602-4fab-80d6-ef63ef643c80",
        "cursor": {
          "ref": "bfe16ac7-55d6-42f4-bb47-828537787564",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d840ab45-ee69-4393-96be-3c046ab96937"
        },
        "item": {
          "id": "f7fcc149-e602-4fab-80d6-ef63ef643c80",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ade276d3-15af-4e9a-9c3a-de1cac3c25dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bbb360-e963-4f64-9af9-48f6a400736e",
        "cursor": {
          "ref": "63198dca-1570-4c7f-a989-d37f62b5234f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5c2d7b9a-d51b-4e84-baf4-51defcee2938"
        },
        "item": {
          "id": "51bbb360-e963-4f64-9af9-48f6a400736e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34d38f6d-143a-4521-97b3-44f78171b9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88953dba-c41a-40e5-b61d-71bb91d9d6a5",
        "cursor": {
          "ref": "9b295730-e696-4d50-b741-0c7fdf0047ea",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bf38fa63-29ea-4be9-b6b9-a5edd221790c"
        },
        "item": {
          "id": "88953dba-c41a-40e5-b61d-71bb91d9d6a5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d40abb40-d1dd-48b2-914f-cb6b366d7df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559c41f-0f06-4aef-926e-c0f61f715a2d",
        "cursor": {
          "ref": "49ad3c4c-0089-4665-852a-4dfa0aea4f6e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7c9fd7eb-c3fa-4812-a084-7b03989cea59"
        },
        "item": {
          "id": "d559c41f-0f06-4aef-926e-c0f61f715a2d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "03d945c6-d943-457c-9609-c40a5fd3c2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b691a25-5d21-4b3e-a5f8-16cdd8b7ccbe",
        "cursor": {
          "ref": "78441291-5877-4128-b021-75d4a4b166ca",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b0e22e5d-fff2-46f8-be98-48098ca841cc"
        },
        "item": {
          "id": "1b691a25-5d21-4b3e-a5f8-16cdd8b7ccbe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a42a4746-ddda-4f5f-a620-ec4ca2d56dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd03f96b-ec5b-4dc5-96bf-2baf473db2cf",
        "cursor": {
          "ref": "e3ff2c22-6743-4b23-983e-ec18ea8dd3b9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29cf1177-b1a1-457f-b17e-2b2d956e8a25"
        },
        "item": {
          "id": "bd03f96b-ec5b-4dc5-96bf-2baf473db2cf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "66f2910b-0259-4d35-b5e9-c331ddcd30c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2977fc66-bd45-4e7c-abbf-861b9ac0268c",
        "cursor": {
          "ref": "f559eae5-6c27-418f-a097-e34837e69bac",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b100d7dc-c228-430b-b7cd-7ea8f644959a"
        },
        "item": {
          "id": "2977fc66-bd45-4e7c-abbf-861b9ac0268c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a88abeac-5068-4baf-ac67-e363b299f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70094250-5180-49a2-a18c-05040728c794",
        "cursor": {
          "ref": "dcb33b63-5d7c-4944-bd03-ab38e3c7fc07",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5ad38c93-b862-4e7b-8138-cd9cee395ec5"
        },
        "item": {
          "id": "70094250-5180-49a2-a18c-05040728c794",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "12437a84-4a83-4829-a14b-c950d0e154f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3e3089-0356-4e76-9b1c-a6c1c5f3ba05",
        "cursor": {
          "ref": "ade299c8-191d-4b9d-af7e-2808ce69f166",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc520486-502b-4f7d-a2f9-9e1ea4bf622e"
        },
        "item": {
          "id": "6b3e3089-0356-4e76-9b1c-a6c1c5f3ba05",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "74148b93-1c9c-4d5e-b5ba-1ea1aa001539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa57505-c50e-4057-989a-71ddb9b16589",
        "cursor": {
          "ref": "973aac7b-2dea-4398-bd5a-fcf6e0a7367f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "64577620-a54f-45c0-93b7-3cabb059d634"
        },
        "item": {
          "id": "1fa57505-c50e-4057-989a-71ddb9b16589",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7719950c-1b5e-467c-b2f3-9106170a0e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c96ee0-edb6-4c5f-80be-fb8cc7a2a1e2",
        "cursor": {
          "ref": "b595d71c-3a9f-41dd-be75-75cfac428ffa",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "95cefded-5d8a-4b08-8232-1132511fce64"
        },
        "item": {
          "id": "49c96ee0-edb6-4c5f-80be-fb8cc7a2a1e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dd48f151-616e-4f97-a413-40efe1d08c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de042802-7d92-4ffb-b676-50c89afcb625",
        "cursor": {
          "ref": "dcdafb83-6164-492e-b5b1-46f1bdd95564",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5b9f7097-9d76-4ef6-9fae-c6fd28e8481a"
        },
        "item": {
          "id": "de042802-7d92-4ffb-b676-50c89afcb625",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cbe4d3bd-7386-480f-880d-a4553c64ada8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ee4a3-ead3-4512-b742-12959c64ee3f",
        "cursor": {
          "ref": "59c71312-51c1-4164-ad8f-a2999fc9cba9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd24c08f-779b-4bb5-ada2-c06b9837451e"
        },
        "item": {
          "id": "e41ee4a3-ead3-4512-b742-12959c64ee3f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "22b9e9d5-4330-4637-bc50-1183385a3f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341033ec-6f2a-4d2d-af07-05e26d5412d9",
        "cursor": {
          "ref": "620cacba-effb-4b96-ab8e-8cff52155946",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "064b6217-8634-46a0-a100-7c4883a95721"
        },
        "item": {
          "id": "341033ec-6f2a-4d2d-af07-05e26d5412d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "edf19321-9cc3-4ea9-b7dd-35054c043db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d35302-9488-4ee2-a733-ee3359bc2aa9",
        "cursor": {
          "ref": "98eeca8b-62b6-4179-909e-bd82efc5d7ec",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "df403ded-5aa0-411c-9fa7-ca8f54777736"
        },
        "item": {
          "id": "51d35302-9488-4ee2-a733-ee3359bc2aa9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "35197c7f-a016-4b56-819e-74b025f8c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02076e8-0986-4791-b5e9-87ee22dc8419",
        "cursor": {
          "ref": "623f6918-dd54-4bed-ad2e-42c5e0d59f7e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "13daf75c-1987-49d4-bb21-d3fd2d1a6e23"
        },
        "item": {
          "id": "f02076e8-0986-4791-b5e9-87ee22dc8419",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2d54e321-bea4-46b6-8425-f52c5d8e4102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbc8006-9eca-4c4b-ade5-f9fd9aff3add",
        "cursor": {
          "ref": "588638c9-cfd4-4753-9869-a13215c4738e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "836a6732-470e-4007-b804-06869859fc40"
        },
        "item": {
          "id": "bbbc8006-9eca-4c4b-ade5-f9fd9aff3add",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ca48bf9a-bfe4-4ffb-a5ee-e736eba276c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3a4116-6b26-425f-91e3-ce50ef527126",
        "cursor": {
          "ref": "48fdf431-e972-49ab-be7d-48e6c7044e81",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc7be64a-0b82-4fcb-af7d-42e3710de8bc"
        },
        "item": {
          "id": "ae3a4116-6b26-425f-91e3-ce50ef527126",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e3ecc2da-0407-48de-9e87-a4f2cd8f17fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3265d8-012c-4c4f-9ce8-47ee7b9e3886",
        "cursor": {
          "ref": "1fd964e4-5c51-43f8-aae8-71597d9931a1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0eb6debf-5274-4565-8fd0-46cbff526999"
        },
        "item": {
          "id": "dd3265d8-012c-4c4f-9ce8-47ee7b9e3886",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "67a26e7d-663b-4044-8506-165190bc701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e564f2e-556f-4559-acff-d8029d622900",
        "cursor": {
          "ref": "049d65be-bdec-461b-b559-71ef5a367cf3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0c9501d4-a7b5-4a11-b5a6-b32830a97178"
        },
        "item": {
          "id": "7e564f2e-556f-4559-acff-d8029d622900",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3c73e81e-67c8-4a3e-b253-0c29e858146a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff018f78-aa3b-4fc3-bfd3-acc76a286d39",
        "cursor": {
          "ref": "92457a68-ed94-4fec-83cc-9a7bf6408de8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0993f328-daa4-4dab-9bcc-f91c4a062c5e"
        },
        "item": {
          "id": "ff018f78-aa3b-4fc3-bfd3-acc76a286d39",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7454c9de-bad6-4e1f-9ef7-8bd1ab6f6b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba73849c-f992-49ec-8381-b5536535ccaf",
        "cursor": {
          "ref": "571e73ec-eead-48df-b3f4-48bf0c4ecf86",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "940053f1-23cc-4eb7-a8f7-7ccb88fd7fac"
        },
        "item": {
          "id": "ba73849c-f992-49ec-8381-b5536535ccaf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "190a54a7-0cd6-40f2-9206-a4fe782b446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fd213f-069b-4584-ad89-ca06686598ce",
        "cursor": {
          "ref": "7b231910-97e6-4a91-9a46-485bc7297d7e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "22609246-1152-4d7b-9ef5-59bb9f4c1e3a"
        },
        "item": {
          "id": "65fd213f-069b-4584-ad89-ca06686598ce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "98751a5b-0ec8-412b-87f4-58c25ac51237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb9a80e-2f07-4fe9-a96e-3e15bcd73ed3",
        "cursor": {
          "ref": "a65f37f6-daab-48a3-bff9-81d3080cd8e8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3db79110-944a-4a46-90d6-3742bf9aab1f"
        },
        "item": {
          "id": "abb9a80e-2f07-4fe9-a96e-3e15bcd73ed3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "49cf5222-62d5-4689-b094-cd5c23f4677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba30eebc-92d9-496a-bda4-276cd978fdec",
        "cursor": {
          "ref": "98fb23e2-08f6-472a-a962-14de039cd73f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c952e8e8-3975-45da-a761-2472745962b7"
        },
        "item": {
          "id": "ba30eebc-92d9-496a-bda4-276cd978fdec",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ccb6ca6-5944-4efd-9b44-fbe984f537e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3a9cc8-64d9-472f-ba67-7cea1a9f9d9c",
        "cursor": {
          "ref": "bef9abe6-b4f5-4e84-b3a9-5079a16e03db",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9b0937fb-9ac5-446a-9f30-2bbce8795755"
        },
        "item": {
          "id": "ce3a9cc8-64d9-472f-ba67-7cea1a9f9d9c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c7d7874a-a2b9-44f1-b8ed-f21c964f1dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f8b8b9-6270-43bf-9f5a-f6082149d00a",
        "cursor": {
          "ref": "9cb1c2f3-27ee-460d-903d-3a2ff8ac4245",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60e9a64f-acaf-4ebb-b012-d5e2c43e5d00"
        },
        "item": {
          "id": "b8f8b8b9-6270-43bf-9f5a-f6082149d00a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "74c3f52c-773d-467f-bc55-391cb42c5787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40540427-3f85-4528-9b6d-1f1f05e73edb",
        "cursor": {
          "ref": "30223618-8204-4bdb-8695-020b592db2e4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ab9c09e1-d250-4541-b797-4a79c6eb35c5"
        },
        "item": {
          "id": "40540427-3f85-4528-9b6d-1f1f05e73edb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6a23f6da-ede7-494d-ae89-9e380c1f3cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45702ecd-15c3-49fc-ae45-b19d80846a8d",
        "cursor": {
          "ref": "145bd783-321a-4d4f-86d8-8678883e4fdc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e99d7519-325c-4b9c-8256-59ffa6d5e44a"
        },
        "item": {
          "id": "45702ecd-15c3-49fc-ae45-b19d80846a8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ffcd59a0-e3c1-4936-95f1-5548549405af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c05db76-ea80-4dce-a8a1-ccd6f20ba891",
        "cursor": {
          "ref": "d7e4441e-ccf3-4c40-bb8e-cbdaa179e9c9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3508c1db-4652-4ffe-a89f-cebdff0eeea3"
        },
        "item": {
          "id": "3c05db76-ea80-4dce-a8a1-ccd6f20ba891",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bf82124d-386d-4bb0-8a76-d14fe7a2ac18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e517e-435a-4ba0-8843-516a8ba44c5b",
        "cursor": {
          "ref": "5a543822-b7b7-4238-8495-3a2235552032",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "98b71a7d-c004-4451-80be-b8270b04a09c"
        },
        "item": {
          "id": "050e517e-435a-4ba0-8843-516a8ba44c5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "448c4362-36fb-41d1-94bb-08ab5fc0be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b105a9-8d44-4f53-a03e-537bf9a54dd2",
        "cursor": {
          "ref": "0761af71-9edc-41a0-999d-7ee838e98ec1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4c85b8e4-a56c-4f46-bd49-7320737afedc"
        },
        "item": {
          "id": "61b105a9-8d44-4f53-a03e-537bf9a54dd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dab4328f-0c3d-4958-991b-9a7548354821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756cd6a4-a4c8-427c-97fa-298c89c24340",
        "cursor": {
          "ref": "9d588482-1f8a-4a5c-bc8a-8e712e2d79e4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "83632a53-3713-45fb-9388-99e244274900"
        },
        "item": {
          "id": "756cd6a4-a4c8-427c-97fa-298c89c24340",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "58dd3c3a-f22d-44ac-9679-73c59fa6f978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6346fe9-c656-4554-b4bd-0b192f073510",
        "cursor": {
          "ref": "9076d66e-73bc-4490-87d5-51a90a750951",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "92904509-3823-49d2-80f7-162cc3058324"
        },
        "item": {
          "id": "f6346fe9-c656-4554-b4bd-0b192f073510",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7fa94bf-97e5-4fef-8cf0-b10a1c881a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e101b083-b290-494d-a962-09b80b711a0e",
        "cursor": {
          "ref": "0c17d55d-319f-4b10-ba6c-a8060b269636",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2b806a44-72f4-4316-b863-f08eb5380e60"
        },
        "item": {
          "id": "e101b083-b290-494d-a962-09b80b711a0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e673e0d3-3393-452f-8a36-6f084c769c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f75acb6-3558-4b5e-91ef-47af3424c92f",
        "cursor": {
          "ref": "a16eba1f-95bb-4c8e-8844-627cf6151dc1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1be9aa69-1b4d-40dd-aae1-c1a4869e7f0b"
        },
        "item": {
          "id": "9f75acb6-3558-4b5e-91ef-47af3424c92f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c9654016-5ce3-43d3-ae10-150513c524a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccf9725-9773-4d79-8640-c2f645461a6d",
        "cursor": {
          "ref": "264ba53f-b5b5-46d4-9200-4b1189ee0e63",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bf8255c2-43cb-4bc0-9081-60a2fb1398dd"
        },
        "item": {
          "id": "1ccf9725-9773-4d79-8640-c2f645461a6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8aac28da-c066-42cd-af21-1614e1899908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20b4f6c-940e-428b-8217-3e7933eb687a",
        "cursor": {
          "ref": "0a7b394b-2e5a-4b6b-bd99-ef6f595e0d8b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d32ac84-de78-4e77-90e2-51474b7ede9b"
        },
        "item": {
          "id": "e20b4f6c-940e-428b-8217-3e7933eb687a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "af6d6f3c-dcfc-4e5b-bb4e-df1ed283aa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df66392-f474-44c7-aaf3-87c143c43e5e",
        "cursor": {
          "ref": "531b4a01-d608-426f-a971-7e74e4cb89cf",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8a8e7c7-c1c3-43ff-97d9-296a9faf65e2"
        },
        "item": {
          "id": "8df66392-f474-44c7-aaf3-87c143c43e5e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0f5f90d5-d6b2-46c9-a0ef-2a3cf6f30d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565f5ea5-21cb-4f2d-b3fd-68d0767a4295",
        "cursor": {
          "ref": "c32c5262-b79a-4612-851b-fbaa50cf3b6f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca73207c-1f24-424e-ab8b-c90d2c427236"
        },
        "item": {
          "id": "565f5ea5-21cb-4f2d-b3fd-68d0767a4295",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3278cdd2-811b-4958-9435-797f9a06b98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255b901-ff3b-4d8c-af34-15955b06b1c5",
        "cursor": {
          "ref": "f0fbbae1-aca9-4743-b452-46ee61df8109",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8851a57a-9f25-40ba-afcb-30691bd8814c"
        },
        "item": {
          "id": "c255b901-ff3b-4d8c-af34-15955b06b1c5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "63dff7a9-d9b0-42dc-8f53-ead279c8aa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a836427-2b9d-4605-b71e-80312ceccb3c",
        "cursor": {
          "ref": "954a5901-8e76-44e9-b776-af3a998f264c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "76e66d83-1a17-4c10-a598-551eaaea0a52"
        },
        "item": {
          "id": "2a836427-2b9d-4605-b71e-80312ceccb3c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9b5a1508-eaa0-4dc2-88de-e2e8472b1c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750fde3b-3a07-458f-be36-1d54e3375654",
        "cursor": {
          "ref": "ebb746e7-4b09-49ad-85c2-2a1c70f26440",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "090f2d28-dba5-442e-b88c-b6e4378299ca"
        },
        "item": {
          "id": "750fde3b-3a07-458f-be36-1d54e3375654",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "febfb307-49db-4305-8343-08395be83da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bf6729-da52-4e3c-abb4-4390a4ed15eb",
        "cursor": {
          "ref": "a17c0e45-8f63-462a-a587-eb0e86d6a4fb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e40e199a-723a-4708-9fc1-21d6494dea00"
        },
        "item": {
          "id": "51bf6729-da52-4e3c-abb4-4390a4ed15eb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c99a17e-c07a-4ac0-b2be-0e95784acddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3637501-2818-4250-a20c-063743df46b1",
        "cursor": {
          "ref": "f49d3bb1-76c7-4e07-afb8-9704bac85d6d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3dcc714e-ace8-41cc-b5e8-85b86ccca0df"
        },
        "item": {
          "id": "c3637501-2818-4250-a20c-063743df46b1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "22737d4f-0cc6-42ce-b920-e76982e63a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c37e21-8ceb-4bb3-9186-0560a783acef",
        "cursor": {
          "ref": "c662c166-0df4-4276-9502-2d96b75cdab7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d82da562-0ecd-4a3a-81e1-5622a442b399"
        },
        "item": {
          "id": "d9c37e21-8ceb-4bb3-9186-0560a783acef",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d058eef6-3dbe-47d8-8e89-a25042c8d859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669c6f97-8c41-4610-984f-b53263824dca",
        "cursor": {
          "ref": "99ab427d-12e4-4a40-ad10-cadf8607e2d4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "38b6d374-ef48-4394-8f99-e04f17966606"
        },
        "item": {
          "id": "669c6f97-8c41-4610-984f-b53263824dca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fe846f16-8a45-4171-95c8-40be0cb671ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cbdb72-2928-458b-9f36-6f763cbdd2a1",
        "cursor": {
          "ref": "bd8fc237-c6fb-4dee-a19d-b053a4424d97",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "424b0b16-321d-4c35-bab0-b0ac251b6f56"
        },
        "item": {
          "id": "a7cbdb72-2928-458b-9f36-6f763cbdd2a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "95c34063-6a15-45e1-884e-649a8e042be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5484e8d4-6b6a-4eae-9156-96a501192ca6",
        "cursor": {
          "ref": "d795b6da-0340-4b4c-bec3-31214b50cf27",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5172d1c1-bf96-4e58-ad06-71925cb78b90"
        },
        "item": {
          "id": "5484e8d4-6b6a-4eae-9156-96a501192ca6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "28403953-85ca-44e5-9f41-6cc2772c6c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ee73c-cb1d-4458-804b-f9de2343c919",
        "cursor": {
          "ref": "e34bb985-9fe7-4b4d-bf52-1c72104be280",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "181c91e0-f9a9-411f-8913-9427cf0afa4d"
        },
        "item": {
          "id": "000ee73c-cb1d-4458-804b-f9de2343c919",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e948f94a-0cd2-4c8c-b57a-209da1f6d871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533f295a-beb6-4940-9d63-ddf99440d7a6",
        "cursor": {
          "ref": "49536dd4-87a8-497f-b379-f820e227e78c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c7997f58-b42a-4f3d-8215-ebf22914c022"
        },
        "item": {
          "id": "533f295a-beb6-4940-9d63-ddf99440d7a6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6a38de5c-bbfa-43cf-9341-df70b77e738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e542c887-2565-4546-9747-ba733aba5163",
        "cursor": {
          "ref": "6ef7a516-22c8-445e-be3e-2bcd268a00cd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c946f3b3-b2ad-4d26-868d-3b624da66489"
        },
        "item": {
          "id": "e542c887-2565-4546-9747-ba733aba5163",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f06693cd-d617-4cf6-972e-86a5bfdc4b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce04544f-2e83-4517-b75e-e4a927b7574b",
        "cursor": {
          "ref": "321a5379-a4a3-4e3a-ba51-cde66e89df4f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fbfc82db-d391-4e4a-b0a7-ead200e4812a"
        },
        "item": {
          "id": "ce04544f-2e83-4517-b75e-e4a927b7574b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c5017d3f-09cd-4ace-a9b6-96ebd1173811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f8607-ec00-4625-8b4c-deefe25f6949",
        "cursor": {
          "ref": "626d4c58-bcf4-4ae3-9bab-47cb946270a4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c350f78c-78ab-49f4-af7b-0009d11a1992"
        },
        "item": {
          "id": "035f8607-ec00-4625-8b4c-deefe25f6949",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "62bc9deb-c222-4361-8689-79cafb314066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fbac7d-0eda-45b5-8c2f-7a203f3e1f2c",
        "cursor": {
          "ref": "171681dd-e713-40c1-8de3-2c7db51ae421",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cd0bedd7-47f3-48e4-ba2d-8f2778769830"
        },
        "item": {
          "id": "15fbac7d-0eda-45b5-8c2f-7a203f3e1f2c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58be3c92-352a-454f-884a-9c3a0af79327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010a5ae9-49e0-4897-b5de-ee19367312ee",
        "cursor": {
          "ref": "ff702b41-e05a-4ad8-84c9-6e363f99eaf9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12b2db31-4182-4b36-9bac-c53303890dd3"
        },
        "item": {
          "id": "010a5ae9-49e0-4897-b5de-ee19367312ee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eabc496b-73d6-4d28-a4a5-fe58946ca797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbf3cb6-94fd-46d4-a23c-486d29dfc6ec",
        "cursor": {
          "ref": "0af48419-6510-443f-8736-456760bcf04b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0fb74ff7-b87e-4b0c-9ba5-25bf44a9f34c"
        },
        "item": {
          "id": "1bbf3cb6-94fd-46d4-a23c-486d29dfc6ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc291c86-8361-4532-ad4e-e4aee68bf953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366b0427-2dd8-46b9-8bc5-56a9e3e5f6d2",
        "cursor": {
          "ref": "189b5397-f534-496c-b672-6acecd8ac133",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2b71063-3c13-4074-a7f7-fa1d8ab7c38a"
        },
        "item": {
          "id": "366b0427-2dd8-46b9-8bc5-56a9e3e5f6d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8336ebb1-2664-4973-8970-3b7b2310e31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f09441-5eac-4904-a29c-047529c67f10",
        "cursor": {
          "ref": "bc3a263f-3391-4c58-8b9a-6419d00fb5b3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cec18f33-d263-4c6c-bcb6-7616c718c2f5"
        },
        "item": {
          "id": "08f09441-5eac-4904-a29c-047529c67f10",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7159ea9b-fc15-44cb-86ad-8dd2c34a53b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2176c9dd-a1ef-4a94-b8f9-b390ce202df4",
        "cursor": {
          "ref": "5b5e6885-4a92-469c-912e-347954a348c9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "04c75860-c794-46de-af28-1c00450a33c4"
        },
        "item": {
          "id": "2176c9dd-a1ef-4a94-b8f9-b390ce202df4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "161f0a23-6851-4560-a2be-1be6b20049a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f43ae2-22e1-46c8-bbaf-47178de1a9ba",
        "cursor": {
          "ref": "44aa4dc4-adb8-44cd-8a76-c048a72fa234",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "301cc91d-735e-4929-8e33-44c7c709fb81"
        },
        "item": {
          "id": "38f43ae2-22e1-46c8-bbaf-47178de1a9ba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b95efca5-c2fa-4381-8cac-2b990b994e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aaac2e-4d7d-4a61-995c-93d6982a6dde",
        "cursor": {
          "ref": "c834d990-d06a-45df-be5d-adbb3fecfdf9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "005be7ad-962d-43f5-be6b-e4896b61a137"
        },
        "item": {
          "id": "e7aaac2e-4d7d-4a61-995c-93d6982a6dde",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3968c59-ed9c-4557-96cf-52130c07d3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58cde0c-b218-4292-93b0-fcbf274dca0e",
        "cursor": {
          "ref": "4844e248-dc8a-4b38-8ca2-611f8077ee46",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f89d5411-9d74-49f9-bcae-24512ab951fa"
        },
        "item": {
          "id": "b58cde0c-b218-4292-93b0-fcbf274dca0e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb897a94-beda-47a6-be2a-2e33f5446635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37799248-d3ca-4558-9c3d-a165b39eee5b",
        "cursor": {
          "ref": "b73eb4b8-c740-4353-98d2-93ba890cb70d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "72aee236-5bde-44c1-a246-a2aae6901f03"
        },
        "item": {
          "id": "37799248-d3ca-4558-9c3d-a165b39eee5b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f8cc7829-0d01-4770-a3dd-1ac1d3a1728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee932c4-8f51-4ef8-bc02-4522baa7e52a",
        "cursor": {
          "ref": "5891124b-5f4a-4185-a22e-9b6b789d1ce7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e3a340bb-0e96-4228-bce6-b0feaa188d98"
        },
        "item": {
          "id": "bee932c4-8f51-4ef8-bc02-4522baa7e52a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d14e4289-c3a9-43b9-84c7-8bce4681b1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8ff3af-83f5-4f17-8a61-1793dabd7268",
        "cursor": {
          "ref": "7c60d750-c60a-48c6-bfb5-16e7ab2c0b4a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2e017c5f-0300-4bf4-befc-7420f91247c1"
        },
        "item": {
          "id": "5d8ff3af-83f5-4f17-8a61-1793dabd7268",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4c98e12a-7c27-4414-b4ab-40cdd23e3330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d042ed10-f099-4833-bf8d-258fff2372b0",
        "cursor": {
          "ref": "65576167-e42e-4ffc-94af-8eb0f423f15e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d9e48379-37d8-475e-831a-13236b929771"
        },
        "item": {
          "id": "d042ed10-f099-4833-bf8d-258fff2372b0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e8c9bad8-1f28-4779-b554-a091bf88a864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3d520c63-e36f-4454-a169-736f79ad8be4",
        "cursor": {
          "ref": "43357f1e-1f06-43c8-89f6-c888337e7d64",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7e5dd6aa-9537-4c3e-8c4e-d0ed743e6687"
        },
        "item": {
          "id": "3d520c63-e36f-4454-a169-736f79ad8be4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2bd2979b-7741-45b0-9b23-0ffc7394e631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e8028bad-122a-4ebf-b222-313750eb3c27",
        "cursor": {
          "ref": "678b0868-ed53-4055-9c3e-3e53ec856ba3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf8ca744-266a-45d8-b924-f4f6f23d48af"
        },
        "item": {
          "id": "e8028bad-122a-4ebf-b222-313750eb3c27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b026d9ac-0364-4926-b41d-bd34c47550ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a77b4b2c-68fe-454b-b688-4b53e70c1df6",
        "cursor": {
          "ref": "9c3c37bf-ca69-476b-8eb8-6e4cbdec9b85",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d9fea088-7e22-40a0-888e-731aef697f28"
        },
        "item": {
          "id": "a77b4b2c-68fe-454b-b688-4b53e70c1df6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "45cf4cb0-7536-401c-8e1b-88b93f175d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "953a1516-94c8-4a1b-bdb6-ecd11442b501",
        "cursor": {
          "ref": "0378e843-4c1a-4004-899d-bb4272f7d451",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d7737176-bd2d-4aae-8001-bfb22366cf19"
        },
        "item": {
          "id": "953a1516-94c8-4a1b-bdb6-ecd11442b501",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "821b6cf2-dd1c-4035-a9ca-004c01b9f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "482bef67-f20b-4152-b852-4b037d727dcf",
        "cursor": {
          "ref": "054fff1b-fe71-4587-881b-5d1ff6c780d0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1a30340d-b8dc-4993-ad9c-20def4f396bc"
        },
        "item": {
          "id": "482bef67-f20b-4152-b852-4b037d727dcf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a8158509-726c-4900-b894-93a1b48e931b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "84150e83-fb5c-49d6-9061-5ff52d0324a1",
        "cursor": {
          "ref": "4b793e56-5c33-4374-90c5-9ffe7590faac",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "37c05fb4-e3c9-4c1b-acf1-7f7944282127"
        },
        "item": {
          "id": "84150e83-fb5c-49d6-9061-5ff52d0324a1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c698940f-3d28-40e7-ac8c-8aca716c80fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c53caf17-ab3b-4087-952b-68b78a805c7e",
        "cursor": {
          "ref": "ad94297b-9b38-4ff1-b955-65744c9a5d51",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dc6bc76b-8e73-43eb-a6c1-7315f16b83a3"
        },
        "item": {
          "id": "c53caf17-ab3b-4087-952b-68b78a805c7e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a03ce943-906e-414e-b3da-16cdb023bf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ca05d-7d95-4d51-8d27-2966bc876a49",
        "cursor": {
          "ref": "b60e5126-771d-4fd0-b622-a502ba944dce",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "94609625-cb4f-467a-bce5-d4b6a94ab9df"
        },
        "item": {
          "id": "362ca05d-7d95-4d51-8d27-2966bc876a49",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d64bc185-54e5-4b16-a848-ad9630f6e44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf5a63a-87ac-4575-8541-bc158b5c12d3",
        "cursor": {
          "ref": "3d167a17-61b6-4735-9ad0-19adbd45a84b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2e1af1ce-5e0f-43df-a793-b260c93861a5"
        },
        "item": {
          "id": "faf5a63a-87ac-4575-8541-bc158b5c12d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f5b66f7-9bab-4666-a0fd-7697b993e62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d4cfe2-dea2-43a2-b60b-0c2f91750641",
        "cursor": {
          "ref": "b01ae8a2-f719-45ee-86a3-4961c5b00b98",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c0674f3f-d6be-4964-92a5-deb537eb5f33"
        },
        "item": {
          "id": "b8d4cfe2-dea2-43a2-b60b-0c2f91750641",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0749cbd1-fbbb-44a9-bfba-16ae63bd34b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f7e47-a063-4bbf-9ae0-f0d817caf66c",
        "cursor": {
          "ref": "f4b43f17-b777-498a-a11f-f04abd730e1c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c67c80a5-f5eb-4d80-aeea-5fb390ce3fd1"
        },
        "item": {
          "id": "bb7f7e47-a063-4bbf-9ae0-f0d817caf66c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a747333f-ea4a-42ef-a473-d8d49ac9370c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b3f889-7c8a-4a2b-ac7e-f930dc4ca55f",
        "cursor": {
          "ref": "ef848115-650a-43ba-9475-7c2c1c6ae62c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9d436c67-cf50-4246-867c-4525f095f184"
        },
        "item": {
          "id": "64b3f889-7c8a-4a2b-ac7e-f930dc4ca55f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb02166d-6303-4975-a2db-3e8b215dfbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cde114-9a25-41f4-8f4c-8ee6a175ee22",
        "cursor": {
          "ref": "b8e9d1e7-4aa2-4520-8e9a-ce96cbe33ce9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "59fe5fd1-b0fe-42fc-be7f-c7d141c27847"
        },
        "item": {
          "id": "a9cde114-9a25-41f4-8f4c-8ee6a175ee22",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a49cecd-bfc3-43b1-9656-554d71d99769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e9fcf4-fc73-45b2-99a0-bde778c0cdda",
        "cursor": {
          "ref": "c9c7f656-65d8-4128-b88d-6d2ee2852737",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "16a61761-b6d5-4cf7-9737-4f7ea07904ac"
        },
        "item": {
          "id": "74e9fcf4-fc73-45b2-99a0-bde778c0cdda",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b8056fd-4f06-4778-b5e0-b41e9de990dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d694d666-ece6-43bb-a641-9cf278c272de",
        "cursor": {
          "ref": "13f009ee-f1c8-413e-81de-fcbc1876bd9f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2bcc86e0-474a-4606-8a39-77675f939651"
        },
        "item": {
          "id": "d694d666-ece6-43bb-a641-9cf278c272de",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "81db3ede-d266-429d-b791-27ead9dcc43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df2432e-645c-4986-818e-f682ec475288",
        "cursor": {
          "ref": "4c586937-e608-4654-9982-9fb5e299c2a5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f315a812-6f2e-4ceb-9808-1b09254c1e9f"
        },
        "item": {
          "id": "9df2432e-645c-4986-818e-f682ec475288",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd436cc5-55c4-4dce-991c-bebb57ec66ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb8e2df-ddc8-4e06-b4c8-c8ce9eb2a248",
        "cursor": {
          "ref": "21a4ce1f-5b8b-4cb3-8f9a-bffadb1d5644",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "48577d4b-5bd2-4216-939e-a978664957f0"
        },
        "item": {
          "id": "0eb8e2df-ddc8-4e06-b4c8-c8ce9eb2a248",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80b1f7d4-59df-4031-86a7-1c0019927ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3ea97-71a1-4fd8-8fb9-d72b36cc028d",
        "cursor": {
          "ref": "a92248ef-38b7-4c82-a28a-cfecdc92ac7e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "25dcb8e7-90e6-4a78-86ec-b3f74a74c143"
        },
        "item": {
          "id": "82e3ea97-71a1-4fd8-8fb9-d72b36cc028d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "08b17ce3-bf39-40da-97e9-8244a4c98970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34d338d-6f31-408a-bcff-415a8be7f56d",
        "cursor": {
          "ref": "f9727e39-af69-491f-9e52-7b1271ca0f88",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e9ff9076-8b98-43b3-a92d-290c4860c166"
        },
        "item": {
          "id": "b34d338d-6f31-408a-bcff-415a8be7f56d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "18aab964-f0be-411c-9600-6b2487ee7e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189b76f0-4f34-4fd3-8b49-1e377294a305",
        "cursor": {
          "ref": "429bafaa-c5d2-40b6-b761-2659221c1b9d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "857c4736-d720-46f1-b4b1-ab7e387195f6"
        },
        "item": {
          "id": "189b76f0-4f34-4fd3-8b49-1e377294a305",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1fa01afc-e082-4193-ad98-fd46b6110237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb95d633-01cc-4902-bbd4-588c46923d2b",
        "cursor": {
          "ref": "012ecbed-6c76-4592-956f-a8d86e55a7c1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "69c9436a-a22a-4a3a-8a60-6822a807d298"
        },
        "item": {
          "id": "eb95d633-01cc-4902-bbd4-588c46923d2b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a32ba063-c24d-4d5f-a9c2-b9386eb1e5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3ebe1c-4619-40c7-bdac-1ea0571382ff",
        "cursor": {
          "ref": "8d488230-c7d5-481f-9e5a-2df766e33d7d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "74b5747c-4609-4da5-a1e4-65ffcbf9132e"
        },
        "item": {
          "id": "bb3ebe1c-4619-40c7-bdac-1ea0571382ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d62f377d-b224-40fe-91d0-90bb6d816c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1092dde9-da47-4466-9f8a-afef8d55bf27",
        "cursor": {
          "ref": "696de846-6891-4b1a-8073-93f795fa1748",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c1241cb9-9e77-4d3c-aae4-1f21b8abf3fa"
        },
        "item": {
          "id": "1092dde9-da47-4466-9f8a-afef8d55bf27",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53df166b-34b5-483b-ba9c-523210ffbaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7829911c-f353-4f4a-a1e2-b1bdde0d2529",
        "cursor": {
          "ref": "9d955a4b-6e35-4fa6-ad41-5f8b31a5e022",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4cafeb23-d0a8-4790-9382-a21464aec569"
        },
        "item": {
          "id": "7829911c-f353-4f4a-a1e2-b1bdde0d2529",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30165f34-d7b2-4abf-8dcc-dcf578c881e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b79f38-2f77-422e-9eea-a882e8a514a1",
        "cursor": {
          "ref": "b5849239-1a9a-42d5-aa5b-db4dc70430ae",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6669dbaf-a51e-481d-a8a3-c10cf8cfbe15"
        },
        "item": {
          "id": "a9b79f38-2f77-422e-9eea-a882e8a514a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6eb19095-5514-410f-9fbc-73ab12219ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a563dfe-6619-41c6-a6e5-ebfa64675c61",
        "cursor": {
          "ref": "3e7491bf-25dc-4895-a803-b25b5ed7ccc2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "49102228-3fb1-4498-916f-69278a716fcb"
        },
        "item": {
          "id": "1a563dfe-6619-41c6-a6e5-ebfa64675c61",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b1b826b5-40e3-447b-9d36-e4e14cb4fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33399be9-0384-4425-9757-4940b8e14cc7",
        "cursor": {
          "ref": "fa1b3056-3e7b-4c92-ab65-7b1975ecafff",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6b447f56-3ada-4984-b400-86a9bf00a1e2"
        },
        "item": {
          "id": "33399be9-0384-4425-9757-4940b8e14cc7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "01046f77-9672-422d-ab00-b8571703f835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5aa9ff-a5f9-4069-a63b-7683ec8f3c1b",
        "cursor": {
          "ref": "e14dc687-58ef-4c03-a706-b4f93617c4af",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2b2c219-18f8-42d2-9b52-62d0eb39c6fb"
        },
        "item": {
          "id": "ad5aa9ff-a5f9-4069-a63b-7683ec8f3c1b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7867a68f-97fc-44fe-aff1-37b8198d8bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1dcb03-b83b-4301-8a46-17830c3a024c",
        "cursor": {
          "ref": "21d558b7-648d-45ea-b6e2-4c599722ff3e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ea870211-5aa0-4063-b789-a8164af8d304"
        },
        "item": {
          "id": "ec1dcb03-b83b-4301-8a46-17830c3a024c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f16116d-0bb9-40c6-a460-9c27d66560e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfb6337-7d53-42b2-9d3a-a5ee2d6161dd",
        "cursor": {
          "ref": "23a4c0a3-1509-4dfc-a1fa-baf7f47778f0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "56bf0638-50ca-4d3d-8293-22e2cc25053c"
        },
        "item": {
          "id": "4cfb6337-7d53-42b2-9d3a-a5ee2d6161dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f1d2bbc7-2abb-49c4-a357-837f077a61e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b31ff-1bee-4c9f-ab08-05e66106ae17",
        "cursor": {
          "ref": "003a438c-aaf5-4401-8b52-e95d493232ef",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d8a07db-d385-4892-a407-17b28ced7672"
        },
        "item": {
          "id": "742b31ff-1bee-4c9f-ab08-05e66106ae17",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "86979555-10a3-4291-8f73-76f1ee88def7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c2a7e4-8a27-41d9-b70f-dc460241c58d",
        "cursor": {
          "ref": "9a4a33d7-7fd4-4ad0-8953-78185f2b9b5f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2be720c8-f8eb-4108-95d0-7270714cfc29"
        },
        "item": {
          "id": "14c2a7e4-8a27-41d9-b70f-dc460241c58d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "359a4788-05f3-4ce6-812d-9c669503c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da990fc-1057-4406-9081-d3a7ea70f202",
        "cursor": {
          "ref": "94e6fc07-9378-4f77-9bde-9f458a3464c6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5e68bbb5-1019-4e68-a87c-3c8161316fe1"
        },
        "item": {
          "id": "2da990fc-1057-4406-9081-d3a7ea70f202",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db0bc1c9-3647-4b6c-bc8e-bfffc332dec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73d1fc-ac53-4ead-87b7-03b0c242ac23",
        "cursor": {
          "ref": "6e9975f9-079c-455a-9ec4-3036bf05b451",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c68e3369-97d5-4b6a-ac2d-b78930a65d4d"
        },
        "item": {
          "id": "7b73d1fc-ac53-4ead-87b7-03b0c242ac23",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "364bfbb7-9722-4293-b59b-b446bcf80e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f724edf2-90c2-4b17-92e9-0e85a1123d84",
        "cursor": {
          "ref": "3a3f515a-9667-4ce7-a00b-54c240741ac2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e91cbb88-2496-472d-bc52-96cea91a7bff"
        },
        "item": {
          "id": "f724edf2-90c2-4b17-92e9-0e85a1123d84",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "350f83ff-39e2-4672-a403-5fa0dd6b7800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f01e91-c353-43b5-a737-8c742c244bb8",
        "cursor": {
          "ref": "5352cd20-2719-4a78-8d62-08701aafd264",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "16e3ea45-4ce0-450c-8a1c-1cf47598c22e"
        },
        "item": {
          "id": "d6f01e91-c353-43b5-a737-8c742c244bb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db2fb059-53ee-4b3f-a664-22e472d0b4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cc58bb-4fc1-4973-b64c-13b031834480",
        "cursor": {
          "ref": "7dc858f7-949a-4c89-9bca-095c98d76c93",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c85f1838-8cac-4333-bb47-9a63c55f0861"
        },
        "item": {
          "id": "b5cc58bb-4fc1-4973-b64c-13b031834480",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "856986ca-7468-46b0-aac3-454743b88e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae33a30-03b0-4db0-a107-2c79efe346fd",
        "cursor": {
          "ref": "cfacdc05-df75-4fb6-8cfb-24ab53e8daeb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fc0de763-39aa-4099-84d7-b87fa11946d6"
        },
        "item": {
          "id": "6ae33a30-03b0-4db0-a107-2c79efe346fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4d344f0a-726f-4947-b4dd-1c4d05a1e515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375d7b09-7b50-4207-940e-cb69e003f541",
        "cursor": {
          "ref": "5e846432-8457-40e9-8a98-dd74b59b429b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7b7b53eb-12a2-4207-87dd-f1952b1f8bf8"
        },
        "item": {
          "id": "375d7b09-7b50-4207-940e-cb69e003f541",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eb4fd68d-9839-4077-976a-da36b67fde48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f533b-dfa1-40bf-8e2f-e1b61dca902d",
        "cursor": {
          "ref": "25cf1180-4827-4c6b-b284-b3ce0e6c8146",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a8c1ccc-1924-4c60-b925-e0cb56fcee01"
        },
        "item": {
          "id": "160f533b-dfa1-40bf-8e2f-e1b61dca902d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "926976aa-a740-44bc-ab95-034648cb5386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25486012-7d59-4ccd-b0ea-82d9c131b6b0",
        "cursor": {
          "ref": "9a17820d-b5fa-4356-9b1f-4e7d486f3129",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ece674d5-46b9-4ff7-b4c0-d2fbc1da437b"
        },
        "item": {
          "id": "25486012-7d59-4ccd-b0ea-82d9c131b6b0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc6467c2-8526-4b2a-8ba7-8e4f0c411ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc5e987-ae72-4d9c-a07f-958e04365cd8",
        "cursor": {
          "ref": "519fedfd-0b7f-4a60-9e9b-682e3cb8189b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2e1f7f9b-d7a0-45e9-afc4-40fbd6316bac"
        },
        "item": {
          "id": "abc5e987-ae72-4d9c-a07f-958e04365cd8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b650a9ab-faa0-4bb4-b72a-42134e14ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32419a0-166b-46c6-bbde-e9658f182db0",
        "cursor": {
          "ref": "d43ded6d-1f1f-4a8e-a098-bd08e8c12ac6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "179bee14-8586-4841-b194-759ae8e90c83"
        },
        "item": {
          "id": "c32419a0-166b-46c6-bbde-e9658f182db0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "169b275d-04a7-4420-8b14-58dd5ee521fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b27a6f0-3223-4ab1-8be8-3cb7704efeca",
        "cursor": {
          "ref": "99be007c-b6d7-48f5-b3eb-bc9fc334e676",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dab2acb4-4bca-47a2-8c30-46f4be7b61ab"
        },
        "item": {
          "id": "2b27a6f0-3223-4ab1-8be8-3cb7704efeca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4ea6a667-4df5-446e-b589-88be6e115068",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bea24a9-00ae-42fb-a3b6-f7428b035dda",
        "cursor": {
          "ref": "c7fc3a87-1368-45c7-95ab-d8a05ce3bee6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21c1ce0b-6195-467a-ba23-a309dadf0e0d"
        },
        "item": {
          "id": "9bea24a9-00ae-42fb-a3b6-f7428b035dda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fb07bc99-2da1-422a-81b9-0b596ca9ba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb9296e-5662-4beb-bec0-462ae9685407",
        "cursor": {
          "ref": "0adfae69-2ab3-4fb5-86be-21af59080cf9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6e41cef3-ea39-4623-8d33-ca9b8774a799"
        },
        "item": {
          "id": "6bb9296e-5662-4beb-bec0-462ae9685407",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "65df40e7-67ff-4321-8efe-064773a53b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a02b27-caeb-4780-82fe-092a56a1ed98",
        "cursor": {
          "ref": "48888b11-1650-426c-b0d5-f85d96811b07",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7f761167-01f9-475a-bd74-4e03ce3ecf1d"
        },
        "item": {
          "id": "33a02b27-caeb-4780-82fe-092a56a1ed98",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7cd77fff-f496-4ca2-9e50-0840104d5b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb96bb16-eabd-4da8-ac3c-c6e1277d7e69",
        "cursor": {
          "ref": "2e32323c-427c-49dd-8cd5-e7b316ea4415",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e991d6cb-c88a-4c5a-9a5c-1e32faa0bec1"
        },
        "item": {
          "id": "eb96bb16-eabd-4da8-ac3c-c6e1277d7e69",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a8b2b46-020d-40b7-bd94-e8aa5a6ff604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6d8725-55ce-499e-9d24-913c08d5d982",
        "cursor": {
          "ref": "391c63ba-87f1-4474-b729-e8513cde5f81",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d6d7f78-48fe-4cc7-b0d2-5f3f5137757b"
        },
        "item": {
          "id": "ed6d8725-55ce-499e-9d24-913c08d5d982",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1edfec16-d0b8-4870-a6b1-085037d1db96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d5c387-95c2-48c3-8890-43373f5f704c",
        "cursor": {
          "ref": "68ddccd4-aab8-48b1-85ce-321d90a5fb9d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eca5b7ce-eb90-4682-8ad4-8ea2f4cc5f3e"
        },
        "item": {
          "id": "05d5c387-95c2-48c3-8890-43373f5f704c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7db4b24a-5702-42f5-ae90-231cc871edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12280857-4de8-4525-9b86-d147f5205a4c",
        "cursor": {
          "ref": "ae67977f-40bd-4189-9ea8-f29e8d8468a6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e0a6043-5646-4ba5-9912-c5d7f4379413"
        },
        "item": {
          "id": "12280857-4de8-4525-9b86-d147f5205a4c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47e7b55a-e1eb-431d-88e5-8029b858e38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e6b2e-13f5-450e-b6fe-84a724ecfbc9",
        "cursor": {
          "ref": "5ca77b79-fb90-4eb6-929d-7a7659073620",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f0a0782e-8503-4e3a-9d1f-33c5a22559c3"
        },
        "item": {
          "id": "977e6b2e-13f5-450e-b6fe-84a724ecfbc9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "912c208d-0ffd-4763-b866-857a913614be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d0b8cb-bf1a-4758-895e-fd7d1bbc253d",
        "cursor": {
          "ref": "689a68e7-44c8-4d97-aa1c-90daf6f347c8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ec5bc288-dc98-4ab6-ba2d-62881a660681"
        },
        "item": {
          "id": "38d0b8cb-bf1a-4758-895e-fd7d1bbc253d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "179a7a3d-0ab5-4284-8fac-e5cd85d3aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eab3b7c-b96c-4116-9ad7-7a319eae063d",
        "cursor": {
          "ref": "857a1bfb-26f6-49d6-bf30-7be62d1a749d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7962d6ef-ee58-4fa2-bb48-21bfa387a7c1"
        },
        "item": {
          "id": "8eab3b7c-b96c-4116-9ad7-7a319eae063d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de6ec58f-0169-487a-b941-48a533af7ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4493d9-525b-4816-bf27-426e797bb824",
        "cursor": {
          "ref": "6a721e5d-88c4-48db-b624-07c6c62109fb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1f8f2d28-9a9b-4f5c-a3a4-da705efdc3e2"
        },
        "item": {
          "id": "1c4493d9-525b-4816-bf27-426e797bb824",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e8f88441-daf1-437d-8374-bf622aa6eade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb817ee2-c520-4fe5-8081-ba72124cffed",
        "cursor": {
          "ref": "afaef290-a55c-4e62-ba5a-15347fd1d1df",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d715e53b-58a8-4c03-8e98-b3d68304df90"
        },
        "item": {
          "id": "eb817ee2-c520-4fe5-8081-ba72124cffed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d4fc74fc-38d1-458f-a621-77a3c305d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f684c1d-191c-40de-84d3-5a5ab8698b69",
        "cursor": {
          "ref": "76c40ef3-7ffd-470e-b62d-d2ac79dfb95b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c8c73530-1edc-4c67-ac7c-aedf2889f5e9"
        },
        "item": {
          "id": "6f684c1d-191c-40de-84d3-5a5ab8698b69",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eaf56b0a-0b52-443f-b992-7175b164e62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4ace85-a487-4a03-ae15-b9e3bfb0136c",
        "cursor": {
          "ref": "ae99ca27-6e95-48cd-9ea0-a9f528081296",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8e8347c7-6395-4911-9b06-12905ae0f70e"
        },
        "item": {
          "id": "7e4ace85-a487-4a03-ae15-b9e3bfb0136c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c8147aad-07cc-4f4f-838a-934fc33d834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2f1472-5782-4851-8262-2ffcbb0b303b",
        "cursor": {
          "ref": "0f88a12a-8e4b-4c8c-aa0c-33caa7352f9b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "002699a6-d224-48a5-a832-ebdd29654459"
        },
        "item": {
          "id": "bc2f1472-5782-4851-8262-2ffcbb0b303b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c6a91fad-b6d7-4cb1-b9b5-6101733bbbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f175c555-74bd-434a-aeb1-562c5e86bed6",
        "cursor": {
          "ref": "34a0963d-33a6-40b6-bb69-c7b4208807f2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ceea8ce6-71a0-4bdf-9086-540431eb4fd1"
        },
        "item": {
          "id": "f175c555-74bd-434a-aeb1-562c5e86bed6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "983c0d8b-6c47-4dba-95ed-367a2aeae35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1460274-49ca-4ad8-a2ae-4ac12ac74410",
        "cursor": {
          "ref": "2f1871e4-22e5-4131-b3bc-dd93e2b691e7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a14daa0-5e03-4c20-a52a-ddc24806a4a0"
        },
        "item": {
          "id": "e1460274-49ca-4ad8-a2ae-4ac12ac74410",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e1101911-deb1-420f-a60b-904b05ccdf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9814967e-05c9-4954-965c-7753d2073b82",
        "cursor": {
          "ref": "69186923-a65a-4aaf-88fb-975d8f5e0103",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bb525ac-8162-4e6e-9fa6-a12911033755"
        },
        "item": {
          "id": "9814967e-05c9-4954-965c-7753d2073b82",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9328f63f-72d2-472e-8637-8d4f3ad7b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f7acd3-2ae6-4f4b-b61d-94364c4344b7",
        "cursor": {
          "ref": "fd9f7eaa-ba71-412c-b6e7-77b28de70341",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9f6a429-25b0-4ef4-9950-7548d86eb1b3"
        },
        "item": {
          "id": "93f7acd3-2ae6-4f4b-b61d-94364c4344b7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f38b9b2-a98e-46b2-acf8-29fd48f0b4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e0151-78df-4cc0-a418-23139a184f58",
        "cursor": {
          "ref": "2836ab43-e596-447e-94c2-efc6b464d328",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7592f2fd-dee8-42d1-bea4-60fb8592cf8b"
        },
        "item": {
          "id": "977e0151-78df-4cc0-a418-23139a184f58",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "06e5b3a5-5b71-476b-916e-b3dc5f215bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6853aa-870f-4fc3-ac50-ae9bc19a741d",
        "cursor": {
          "ref": "13a0fd69-5818-4ed5-baa0-c9db6194e369",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5e688eee-56ba-4974-823f-4ad0324f34ac"
        },
        "item": {
          "id": "5f6853aa-870f-4fc3-ac50-ae9bc19a741d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9657ec77-2b15-459d-b91c-1a49acb4c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db08d922-1de4-4738-a7bb-cc4167ff9b92",
        "cursor": {
          "ref": "38ba6e40-c968-4d3d-ac9b-dc3739a64208",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d284c74-eabf-4eb8-bd47-836e035b4093"
        },
        "item": {
          "id": "db08d922-1de4-4738-a7bb-cc4167ff9b92",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "71daf9ba-f260-46be-8368-7b78f72e4168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b819fd8-dc66-4c9d-97e8-a1b9b30b60de",
        "cursor": {
          "ref": "7b98e345-5e6c-4eca-a44d-b0d859e29fd8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "602c9786-4063-4ef2-9f1b-c8b9dadbd703"
        },
        "item": {
          "id": "5b819fd8-dc66-4c9d-97e8-a1b9b30b60de",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7f114b06-11c3-45d0-91d1-0a7f2bc5377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5191e2-d4fa-44fb-998a-f4b6ecbd779b",
        "cursor": {
          "ref": "11894276-454e-42dc-a16d-d4a1a6190008",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b982f71e-6632-48c0-8699-56a112c01723"
        },
        "item": {
          "id": "2d5191e2-d4fa-44fb-998a-f4b6ecbd779b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da03d3bc-11af-47da-9491-f486680d051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eba2c6-74cd-4494-b650-6f2ac6ca7941",
        "cursor": {
          "ref": "255f2ef3-eb86-4635-b15d-37070b2b00b9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1055274c-1c9d-4811-891d-405dfeb810f1"
        },
        "item": {
          "id": "57eba2c6-74cd-4494-b650-6f2ac6ca7941",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "634d81af-1b8a-4735-a423-154bdc68acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c991d-846c-460b-8306-3337ad391d88",
        "cursor": {
          "ref": "53e76e6a-299d-4ddc-bcf8-ce1d7433f320",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e0a44cc2-a099-4fff-9637-bf2f1c602790"
        },
        "item": {
          "id": "7f1c991d-846c-460b-8306-3337ad391d88",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cf2bee8b-a24d-4ad1-b234-47fde07a8bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d89ee9-3361-4dc3-8a2f-1723a06adbb1",
        "cursor": {
          "ref": "03a263b7-16b4-49a1-96e4-4fbcdfcfaa02",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c79881f2-a768-4828-87e4-2717750973ff"
        },
        "item": {
          "id": "66d89ee9-3361-4dc3-8a2f-1723a06adbb1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "11cda321-69d7-4e4f-8e59-43cd93360f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e861b81-b1a2-44f4-b34b-cce33adde2c3",
        "cursor": {
          "ref": "4b3f89d2-b12b-487b-a206-5da9240cd473",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3dcb3bea-a6df-4557-b0a3-d6e92951f151"
        },
        "item": {
          "id": "4e861b81-b1a2-44f4-b34b-cce33adde2c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17406d95-9900-4a6b-83d1-29d85e4c7bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc1e3a5-d00a-4a7d-a12f-c5e6aa7d55b5",
        "cursor": {
          "ref": "b758df47-d990-4e8c-b4f1-5e3947d23879",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8dfd11cf-43a7-4bc1-afdc-359444fbb66c"
        },
        "item": {
          "id": "ecc1e3a5-d00a-4a7d-a12f-c5e6aa7d55b5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dc9b29d4-6158-4110-adaa-99c1bb0e234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2009c080-848e-461e-aac0-b1ca775a6110",
        "cursor": {
          "ref": "5a3cff49-36dc-4d1a-b11d-b906164e7279",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "95c36d95-eeb1-4801-9ead-15584f40d4aa"
        },
        "item": {
          "id": "2009c080-848e-461e-aac0-b1ca775a6110",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e2d98dc0-fbbe-4adf-987c-c23aeb5988a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b87ce-c15f-45ec-9d6e-ebd830a0cc87",
        "cursor": {
          "ref": "e777bb63-52b6-4417-a6a1-a67d51a3f59b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1d488561-83a1-4dac-9850-0e3edd93828c"
        },
        "item": {
          "id": "ee7b87ce-c15f-45ec-9d6e-ebd830a0cc87",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8bb06566-8fde-424d-a99a-68db672f7c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73ea986-1ffa-4e65-867a-eaacb33914fd",
        "cursor": {
          "ref": "47a0a1a4-3784-4199-bb87-b51b77dacd81",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fd237cd6-a419-4405-b616-e61b12dd18de"
        },
        "item": {
          "id": "c73ea986-1ffa-4e65-867a-eaacb33914fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39efc22a-6f09-4642-8aab-da16ab9f76e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bfe6e9-fa81-405a-9e97-d62e1007a5a9",
        "cursor": {
          "ref": "ed2802c0-8c42-4ae9-b1e7-b1c6712c5265",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "480a6dc2-adcd-4a3f-bb5c-f4e08589d274"
        },
        "item": {
          "id": "c2bfe6e9-fa81-405a-9e97-d62e1007a5a9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4297fdeb-9e70-4f91-8575-ba03e5f55e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5510128c-7eef-4d18-b2ae-0531c4cb0562",
        "cursor": {
          "ref": "49716bea-290a-4d3e-a15d-9c750898ba5a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1431445-06d9-4424-be3e-d2b90693be1a"
        },
        "item": {
          "id": "5510128c-7eef-4d18-b2ae-0531c4cb0562",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1bcb7cf1-c9a2-46a5-95c5-4339d71d7ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338116e-dbef-4d47-910a-7dcd51acd187",
        "cursor": {
          "ref": "a25f6d2f-8efe-4bc4-8488-d0d191854ab6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e4e23e1a-2b54-467c-b7e9-1e1892d27dce"
        },
        "item": {
          "id": "8338116e-dbef-4d47-910a-7dcd51acd187",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83a149b5-8904-4de2-8e63-82e2c134f1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34af2e4-bb7a-4a20-8ebe-7e619344913a",
        "cursor": {
          "ref": "737c4223-b7c7-40a8-9223-51ec7c59305e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bbc6d1d9-b1ab-4d45-b188-5ca63bbda66a"
        },
        "item": {
          "id": "b34af2e4-bb7a-4a20-8ebe-7e619344913a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ad039bb-63fd-4ff7-a347-928c9b581b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b50d5c-a7cf-4fba-ae05-e8b70c4b5ca3",
        "cursor": {
          "ref": "488cdf1b-1f5b-4ecb-b7ae-184d21db1f5c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b885bbd3-43fc-414b-8edb-232893818889"
        },
        "item": {
          "id": "f5b50d5c-a7cf-4fba-ae05-e8b70c4b5ca3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ec016a4-ba05-4895-a0d3-828e4c59802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e93afc-829b-4048-823e-2559fb29acaf",
        "cursor": {
          "ref": "08020b9b-23e4-4944-adbe-f41d8cbd2582",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "faf54005-80d4-4ba3-9acf-6cc90de6cc82"
        },
        "item": {
          "id": "99e93afc-829b-4048-823e-2559fb29acaf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "661c91d2-f716-4d49-81bf-2d3ed957658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c19afa-88a8-4180-b106-f0a4af79ab48",
        "cursor": {
          "ref": "36dbcd36-53e2-4fff-8651-72c38de47ea4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6beaa231-bdd5-4354-96eb-ef5491f892af"
        },
        "item": {
          "id": "10c19afa-88a8-4180-b106-f0a4af79ab48",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "571fb2dd-e873-417f-8397-3c80444c4c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d677a9b-5890-4bd2-8347-f06e24511cfc",
        "cursor": {
          "ref": "eb6f82d6-e1d6-4906-9e08-d34b0d1cbd3c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29bd8cf5-e783-443b-8575-2e99f49eef0e"
        },
        "item": {
          "id": "6d677a9b-5890-4bd2-8347-f06e24511cfc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "28317151-df30-46eb-9c1a-afde8a3a8c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb61c07-d064-4a08-bd22-9abc142b5309",
        "cursor": {
          "ref": "d12cf812-e744-48b9-9c7a-2202d4bbf9ca",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "be57bd47-b4bf-4109-b9db-378158c8ab7a"
        },
        "item": {
          "id": "bbb61c07-d064-4a08-bd22-9abc142b5309",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d30e07e3-3aca-4563-bb9f-098d00b407d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2487ba0-1fdd-4795-936c-bccc12419755",
        "cursor": {
          "ref": "67a0b9c4-9ac4-4a0a-b8ba-32413a3108a6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b7c0365-893a-4765-9bb9-04811fd35ad4"
        },
        "item": {
          "id": "f2487ba0-1fdd-4795-936c-bccc12419755",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "88680d72-0270-46d8-9d63-15b5c8b5f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c7c8ac-8976-4be1-9092-b0cab721f9d6",
        "cursor": {
          "ref": "95703cb2-bd8e-4e9b-8f8c-e7ec958b37eb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d3468fcf-71ef-4883-b941-bb8be5e4ba1c"
        },
        "item": {
          "id": "a3c7c8ac-8976-4be1-9092-b0cab721f9d6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ecb63bd7-7e97-43b4-88f3-cd3e6bb38f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34f66f-b53f-4379-b0fd-e20c9887f580",
        "cursor": {
          "ref": "e50ceea4-fb99-40f2-ad08-a4f39b0de714",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cdf58670-d01a-41e4-893c-23f121429bcb"
        },
        "item": {
          "id": "7d34f66f-b53f-4379-b0fd-e20c9887f580",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aa0e19a0-a228-4353-a8d9-336fc7f12f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35236289-53a3-4e6e-b95d-ace704091aac",
        "cursor": {
          "ref": "b3565f7a-8672-4701-bd35-fdf3eeef6566",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "669b1121-8664-49b1-a812-3dfecd8152df"
        },
        "item": {
          "id": "35236289-53a3-4e6e-b95d-ace704091aac",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1ed715a0-e7ec-442e-8fb6-50b1f83fa5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6c4bea-2688-40fe-9559-b6fca40c83d0",
        "cursor": {
          "ref": "271e2f78-bdc3-4a18-bc9b-ece402d1b3e2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "666d0597-1ee7-4099-a6f8-b48f6751470c"
        },
        "item": {
          "id": "7c6c4bea-2688-40fe-9559-b6fca40c83d0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1ce3b8c8-bce1-40d6-b43c-e67218356de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407262be-3b7f-4a3c-8192-ba821d8dc750",
        "cursor": {
          "ref": "cd27e1d6-2b5a-4a9a-9d2d-6d22bc3a1fe6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b496252-8d6a-4b78-b631-f8a5d73e004d"
        },
        "item": {
          "id": "407262be-3b7f-4a3c-8192-ba821d8dc750",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f69dac71-c5e3-4488-97d7-d41697c500e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b242586e-2b16-40bb-89a0-5a5f08b6d66c",
        "cursor": {
          "ref": "2252c8b8-8aa9-41a2-9e8c-1be42e1177f1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "488b9564-8a7d-439c-9732-11b10f961e3a"
        },
        "item": {
          "id": "b242586e-2b16-40bb-89a0-5a5f08b6d66c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7a1a630e-c581-4f6a-9dd5-8f754d31c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cbb7ff-2317-49ea-8180-b34be64c7a6c",
        "cursor": {
          "ref": "6e8d786c-97ba-4c9c-831f-b35b889d053c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "199e8fa0-d0b5-42cc-a260-18a5298dfe6e"
        },
        "item": {
          "id": "73cbb7ff-2317-49ea-8180-b34be64c7a6c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fa7a3dd1-825d-4da9-af96-c8f27be15625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101cb492-0b36-41f3-9b0d-348fb52b7c35",
        "cursor": {
          "ref": "3041ec45-6910-46c4-bce3-973edfa723f7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6b3c4edb-dbfd-4bb0-9ed0-dd7bfc72a339"
        },
        "item": {
          "id": "101cb492-0b36-41f3-9b0d-348fb52b7c35",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "430736ef-9533-41d1-bbf3-9fb1eb1ec91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d27bb-09d7-4282-aef4-60482aefeef1",
        "cursor": {
          "ref": "6cfe3625-09e6-4dad-95c5-d2c15b814b2b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c27940d7-dad7-4334-9dbd-add5817f260f"
        },
        "item": {
          "id": "753d27bb-09d7-4282-aef4-60482aefeef1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "de6f9d37-3577-40d8-9f10-5c68387e269f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c524d0-52c3-450f-8252-a36734d0c0f0",
        "cursor": {
          "ref": "9e040c58-a1ce-4432-ac93-801224bd8c50",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "292197ed-f8df-47b5-8705-95f3daf4f7df"
        },
        "item": {
          "id": "18c524d0-52c3-450f-8252-a36734d0c0f0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8d9b563f-986b-4897-8575-4acf531bb73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d0c03-eb97-4503-82d7-b76212d7cbc9",
        "cursor": {
          "ref": "fc01d9f7-b2c1-4cf0-91d3-e9865f9774fe",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06cde2f4-1279-47ef-8901-d766fc5fa5bb"
        },
        "item": {
          "id": "9b0d0c03-eb97-4503-82d7-b76212d7cbc9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c9de4471-dbb9-4bdb-9013-13ef4024d8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba4152c-7b1f-4e2f-9360-25495cbf0afc",
        "cursor": {
          "ref": "855c2a78-5db2-4ef7-8e13-7c3a9c972ab1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6899b4cd-1df5-4221-9d42-d86c77690ea4"
        },
        "item": {
          "id": "5ba4152c-7b1f-4e2f-9360-25495cbf0afc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3bb66704-bb5b-4e16-9a8e-1f325401417d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae25cae-9b64-4118-91d7-02cd2c1da4e8",
        "cursor": {
          "ref": "a05406cf-5dcd-4074-8146-41c9014b7769",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d92a399e-4f60-40e3-9e70-a6434cfc1990"
        },
        "item": {
          "id": "6ae25cae-9b64-4118-91d7-02cd2c1da4e8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "80ce812f-b625-4df2-a3f1-744307028a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc9508a-7348-4b2d-a7b9-557db61db2b8",
        "cursor": {
          "ref": "7d13c7d8-71bf-4252-b28f-ef61bd334504",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "31579ae4-39ba-43f8-bcd9-8946a894d1f5"
        },
        "item": {
          "id": "0dc9508a-7348-4b2d-a7b9-557db61db2b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8ff17eb8-cabd-4aba-bc65-4cfbcc050e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e5196c-ac02-40eb-b172-ec852cf04107",
        "cursor": {
          "ref": "ab2d3031-01bd-4efa-a5f3-c055924c8301",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "235a8fce-4019-47d5-8c0f-d5c2197b5f8d"
        },
        "item": {
          "id": "c3e5196c-ac02-40eb-b172-ec852cf04107",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "57453494-0a81-4857-860d-c9a7c9993323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21d9c31-e571-4812-a78e-672dc4c04340",
        "cursor": {
          "ref": "61921c0f-2b8a-4844-9bc9-c7a5748b1eff",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1f7a48c8-2f3a-4123-ac89-909b69ca96e5"
        },
        "item": {
          "id": "a21d9c31-e571-4812-a78e-672dc4c04340",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d6778bb8-e65f-4601-8114-ec19e4b5bbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea30e8-8ff4-4e5a-bdae-9ccadfcc74d1",
        "cursor": {
          "ref": "177ae115-5e7f-4459-88be-5f50e3d6787f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c32740b5-7fdd-468f-a93e-cd2eff749446"
        },
        "item": {
          "id": "a6ea30e8-8ff4-4e5a-bdae-9ccadfcc74d1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b7c6733-5d96-455c-bf9f-005b416c9ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ddebf0-2a7c-45c9-9809-17fb693f522a",
        "cursor": {
          "ref": "469940de-e233-4b3e-86d4-d965e89f47d9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db2e4d95-4b48-42cf-9e98-867a4dcf5192"
        },
        "item": {
          "id": "12ddebf0-2a7c-45c9-9809-17fb693f522a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c15b585c-019e-4e72-ae8a-3b691c038475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0a0a05-baf2-4237-b19c-394f82e6978f",
        "cursor": {
          "ref": "28569b62-8af7-45d8-a8ef-4f680ffa4bb5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "20874274-043d-454c-876e-e18e70a08001"
        },
        "item": {
          "id": "bf0a0a05-baf2-4237-b19c-394f82e6978f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6ab07f56-35b2-4f5d-bcde-2892750842ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38992fe8-2f43-418a-8d4b-12780d55f575",
        "cursor": {
          "ref": "bab7ce7a-ece2-4aba-a199-0f95981384a3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fe161664-4bb1-4d4f-801f-671a2bbf6c8b"
        },
        "item": {
          "id": "38992fe8-2f43-418a-8d4b-12780d55f575",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b19ef27-5f3b-45cc-8625-575e47a5adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2911e7-5acd-46d3-ae2c-d5bba6e2eda1",
        "cursor": {
          "ref": "195f2c4a-36ee-479f-9f4a-bb94d963fd31",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "76b8a807-bc4a-4583-9d83-877d19bc1cdf"
        },
        "item": {
          "id": "dc2911e7-5acd-46d3-ae2c-d5bba6e2eda1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2c7b0b97-2766-423c-bf53-f9bf5b400eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fabc8b-1dff-4fa8-9171-90f9c92ad0c1",
        "cursor": {
          "ref": "aff67217-de59-4466-9003-419046c79261",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "04c3cd2b-ad2c-4e03-9476-97de0ad35121"
        },
        "item": {
          "id": "f2fabc8b-1dff-4fa8-9171-90f9c92ad0c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0b45ad20-5319-405f-9b4b-df25c0004ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63964295-da5a-483e-834c-9dc9ad965e25",
        "cursor": {
          "ref": "0023f47b-c719-4c74-9352-e285d4c464bb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f9adfa48-fe63-4f3b-b98a-9d2663e53d93"
        },
        "item": {
          "id": "63964295-da5a-483e-834c-9dc9ad965e25",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3ab4b59f-a629-48e2-a97e-63572757319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376c03c8-979c-4d96-b792-b3ae524869cf",
        "cursor": {
          "ref": "96eb3fd1-641f-456e-a41c-779f65341a8d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e1adda8d-d91c-4358-9b06-03db16184525"
        },
        "item": {
          "id": "376c03c8-979c-4d96-b792-b3ae524869cf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "520c760b-3cee-47bc-9c9c-373b73052a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c383f92-6a01-432a-a735-659cf1bb0d31",
        "cursor": {
          "ref": "22868d1e-412b-490e-a5c2-ca6ddcd992e2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8f82b9d-136a-4083-a211-319f85f9365e"
        },
        "item": {
          "id": "6c383f92-6a01-432a-a735-659cf1bb0d31",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9c20971a-e47d-4ae0-9e45-6f44ec6115bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f8120c-66ea-4c4c-a18a-55e00aef52c1",
        "cursor": {
          "ref": "4e13c5d1-6f05-4707-a51a-36165f218918",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84644cca-20d9-45d0-8971-6ec08b2d5658"
        },
        "item": {
          "id": "d1f8120c-66ea-4c4c-a18a-55e00aef52c1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4493bfb4-7596-407b-bb13-c071e271aa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9ccd0-96cf-458b-b70a-210d43e5f71b",
        "cursor": {
          "ref": "b31fb656-d925-4f00-a360-c2cc215f567d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5b2b173d-eee1-48eb-9a2c-537f7047bffc"
        },
        "item": {
          "id": "5ef9ccd0-96cf-458b-b70a-210d43e5f71b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb426979-e06a-4a1d-b3ec-7c0375264477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3822f0-02a2-4a00-bfc2-0480bd9a34f8",
        "cursor": {
          "ref": "c5d61c28-cac4-4f9e-8ae2-83d0cb4a270d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b50e0afa-46ba-441e-8e55-2b5da18ffb53"
        },
        "item": {
          "id": "3f3822f0-02a2-4a00-bfc2-0480bd9a34f8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e649cd9d-6de3-4d0e-877f-a46523bc8de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a7074c-c3a6-412d-b671-5ede2395171e",
        "cursor": {
          "ref": "edb3dbd9-60d6-4a68-bad9-0aba0d4eaf1a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8956a2b8-1885-49ba-876a-bbaadedee598"
        },
        "item": {
          "id": "66a7074c-c3a6-412d-b671-5ede2395171e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "acbb652c-916f-4b36-afd0-d1f7431fdd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15136c91-61bd-4f7a-911a-9b4318ea84cc",
        "cursor": {
          "ref": "2d43aae6-b245-438e-8f0e-056f0543d9d9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e07be19d-b169-49d6-a903-1bfc4990cbbd"
        },
        "item": {
          "id": "15136c91-61bd-4f7a-911a-9b4318ea84cc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0f5cef3d-64dc-44de-a5d1-5496e3c45589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4d144b-b3ca-497d-9150-55ceba32b7fa",
        "cursor": {
          "ref": "01413ae4-d0c6-4efc-a7eb-ca1c911a1e12",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "71ae8eb7-da4c-472d-a84f-2c22d44a2983"
        },
        "item": {
          "id": "8f4d144b-b3ca-497d-9150-55ceba32b7fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21b130e6-8bbb-4847-af8a-f7c358ed556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6577c797-7e9f-49b3-a7a0-fd9a242c2ade",
        "cursor": {
          "ref": "cf04855a-4d24-4620-ba51-aea11356fe13",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "45e66298-6479-4968-bcd9-0ab95e783540"
        },
        "item": {
          "id": "6577c797-7e9f-49b3-a7a0-fd9a242c2ade",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f18152ab-f86d-418b-9316-0993d3474ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41540d22-578b-459a-892f-41edefdbfcbf",
        "cursor": {
          "ref": "6db9cbdd-cfa7-4d87-96ec-9f6fc4ccc35a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "851d7619-f58f-43e8-b5e4-63052ba261e6"
        },
        "item": {
          "id": "41540d22-578b-459a-892f-41edefdbfcbf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2acd21fb-9fad-4c20-ab95-a49d9eca21b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c797949-5b12-4f9a-8bf9-e83402fa3dbb",
        "cursor": {
          "ref": "ad7bba96-8cb5-49db-bd57-74d6edd5dda7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "56127711-7043-490b-bda5-7d93e310e221"
        },
        "item": {
          "id": "6c797949-5b12-4f9a-8bf9-e83402fa3dbb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b32e3dd2-1044-4b5d-8788-c7bd798717ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6661a2cc-f23a-4dc2-bf1a-9d19e41b99f2",
        "cursor": {
          "ref": "31a5b96e-dad6-42b2-8a16-175f46fc183f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "209528f4-84c1-44f2-97d7-cf97563def68"
        },
        "item": {
          "id": "6661a2cc-f23a-4dc2-bf1a-9d19e41b99f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "536cd4a3-2569-44a6-8946-f566a687bf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dc75a1-6d2b-40f8-b989-13fd8693b54c",
        "cursor": {
          "ref": "1e96ab31-4377-45b7-8f17-d302d5b5bfb6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ecb5f0cf-7654-4367-a8c6-b61b768ff0ae"
        },
        "item": {
          "id": "b1dc75a1-6d2b-40f8-b989-13fd8693b54c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4ab85022-bb36-4d3c-b80e-8b1efe0cfc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82667411-0dd8-4abc-87a5-e100a86ed6f1",
        "cursor": {
          "ref": "8ed49b71-2b00-42fc-9477-c26e663a6494",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0e62d273-1e81-4ef4-921f-1fa8e52e2c89"
        },
        "item": {
          "id": "82667411-0dd8-4abc-87a5-e100a86ed6f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8a2acf79-f439-4afb-9060-d623323d6002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ca0073-eb3b-47b1-b579-9795ee1ea248",
        "cursor": {
          "ref": "6d051ad3-1f67-4734-8510-bb4bcbbd1dc7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7528e425-8bae-4a95-aa32-367ae40a2e21"
        },
        "item": {
          "id": "e3ca0073-eb3b-47b1-b579-9795ee1ea248",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b9cf4c5-f804-42b7-9a35-ace1af3f128f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4150a46a-60c4-40ea-a7b3-4f980a53d1fd",
        "cursor": {
          "ref": "3b4e7865-ee28-4516-a842-12f7badd6b0a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c8e55b4-7587-421c-91f1-0cb6ba8f298a"
        },
        "item": {
          "id": "4150a46a-60c4-40ea-a7b3-4f980a53d1fd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fa600a87-97bd-47e7-81f8-32f0ed2ba493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee88b0d1-2d86-4a1c-9db9-b495a79843f3",
        "cursor": {
          "ref": "e62d7425-7216-44ca-a244-519ea4009504",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7ebd05df-ff7f-4f8c-886e-3d510585ea97"
        },
        "item": {
          "id": "ee88b0d1-2d86-4a1c-9db9-b495a79843f3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e4ed2d5d-cb3b-41d3-853b-2a00334eb694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18bfee0-4915-4256-81f6-83046bb84485",
        "cursor": {
          "ref": "f20061bc-d241-4d0c-b84a-6c62b7339e3f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "af4e162a-58ac-455c-874d-b2584aef2aa3"
        },
        "item": {
          "id": "b18bfee0-4915-4256-81f6-83046bb84485",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b42bd5c0-8bf2-424c-8e6f-cc206f758c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f71b4ef-fb64-4981-a3da-01072844df25",
        "cursor": {
          "ref": "d8bca14a-c708-45dd-8b83-68a8219f16a4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8aef9cc1-1b40-4c48-b8d1-fa969c01ba0e"
        },
        "item": {
          "id": "0f71b4ef-fb64-4981-a3da-01072844df25",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fa93c6f4-3f33-407e-b510-d15ccb03b879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c32ebdb-8b24-4382-8d17-67d1182a2cef",
        "cursor": {
          "ref": "87cf4c1c-ac21-41f9-9788-6d16f6abc100",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "46a53d1a-23cd-4f0f-bd70-37ca46d48ac9"
        },
        "item": {
          "id": "6c32ebdb-8b24-4382-8d17-67d1182a2cef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "165ebfc2-813e-40dd-9a6f-d36f4a93c066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a502b3-878e-4ece-92a1-8df0ef2021e6",
        "cursor": {
          "ref": "b30e4c4f-6307-44c2-af02-dc297462e678",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "79ab5ab7-a712-4a6b-8721-0d5c4b908f07"
        },
        "item": {
          "id": "d1a502b3-878e-4ece-92a1-8df0ef2021e6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b4960845-dec5-47f2-ab66-9b64fa1bcd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddace297-a914-4922-9591-1ca3b377a23a",
        "cursor": {
          "ref": "99466d24-13e5-4a07-83d2-4b8fdf70633c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "62850400-12d9-4bbe-9d1b-c475df580bc0"
        },
        "item": {
          "id": "ddace297-a914-4922-9591-1ca3b377a23a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7dbbdd84-9024-497a-9126-b066d780aa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c35906a-d3ea-401c-aab2-297b1590335e",
        "cursor": {
          "ref": "70576742-de53-4825-ad49-30b3ee3b1213",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "14a3a6df-7785-431a-a7ae-65677146a517"
        },
        "item": {
          "id": "7c35906a-d3ea-401c-aab2-297b1590335e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "36c7000c-1d89-48c9-8acf-49c007426bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89378862-1707-4fe7-b3cc-0ab6c072f794",
        "cursor": {
          "ref": "c7ef8442-e423-4b74-b5af-b0d37a991764",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "276cb8dc-fcf3-420e-bdb3-9ac0531d4da6"
        },
        "item": {
          "id": "89378862-1707-4fe7-b3cc-0ab6c072f794",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "03a256df-9504-444c-bdb6-a7e0ab613d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40676cb1-151c-4ac7-826c-811b88b4c9e6",
        "cursor": {
          "ref": "2f284bbc-80b7-41ec-a700-49b2a5a76c1e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cabf428-c721-40f7-8cae-428058757954"
        },
        "item": {
          "id": "40676cb1-151c-4ac7-826c-811b88b4c9e6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c33373c7-b8dc-4c7d-b4e0-aae040d85fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec3ed0-a3e9-4aa2-9fa5-514f28c57e04",
        "cursor": {
          "ref": "889e4bbb-5ebf-4b0f-b49c-9aea009b4774",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8125d7aa-c1a0-4941-b921-b5b087133a9f"
        },
        "item": {
          "id": "58ec3ed0-a3e9-4aa2-9fa5-514f28c57e04",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0a9ed71e-c61e-4ec5-a7b4-9c71e16f4c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7047e1-24b1-4940-90c7-3f637d97ca3e",
        "cursor": {
          "ref": "da1fdea9-0bac-4a3b-94be-8ffe7446790a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "118ccad7-0747-45fb-b26e-9ff2556ff3a0"
        },
        "item": {
          "id": "1e7047e1-24b1-4940-90c7-3f637d97ca3e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0f71afb-ce64-401f-b099-8940a0ac6740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea59c72-6c54-4cc5-b824-406d6f50635f",
        "cursor": {
          "ref": "89f08073-add1-468e-83de-3005219d01bf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c00d5bca-eb49-4cb4-b6e1-0e5a7a6a0ffa"
        },
        "item": {
          "id": "4ea59c72-6c54-4cc5-b824-406d6f50635f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f1a6761-31c7-464f-a5e8-96f425b83eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8fb924-e0c3-45ca-a88d-21b9a31dce13",
        "cursor": {
          "ref": "cfea8549-1a5f-4656-89d0-81b63ab8a810",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "86dd66cb-dc54-4414-8a56-7109cc9d92ba"
        },
        "item": {
          "id": "bd8fb924-e0c3-45ca-a88d-21b9a31dce13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b8504303-7f05-411d-9919-370b9b5a250f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e89dc1a-c2cb-406e-9a82-14ac10559c6c",
        "cursor": {
          "ref": "d98ae306-8855-46a1-99d8-5ef02e45ad8c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1b323d34-0b69-4549-ac60-740bb25f04cf"
        },
        "item": {
          "id": "3e89dc1a-c2cb-406e-9a82-14ac10559c6c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "40064a80-f527-4207-a5d6-f8a8a5ef158d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed061d-676b-41a4-a93e-f6138285f558",
        "cursor": {
          "ref": "3bf8dee6-46bf-4c42-bbef-2f11abeb9ed3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fa772feb-32e4-4516-91ed-10236c96ddbd"
        },
        "item": {
          "id": "08ed061d-676b-41a4-a93e-f6138285f558",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0fe06c28-8d75-4d6b-beff-0d74e73f13b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1184571d-a8e9-4030-9ae5-727cc8bcb272",
        "cursor": {
          "ref": "a5d62e7a-0ec3-4064-a6b5-14c2f30466f7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2e266f06-0ee8-4d5b-a17d-eba30a85b826"
        },
        "item": {
          "id": "1184571d-a8e9-4030-9ae5-727cc8bcb272",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a921968a-5197-4877-98db-fb7a440b031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4f94eb-9fd4-4109-a4fe-eafeaed833e3",
        "cursor": {
          "ref": "f88ea09a-5d26-45a3-8a8a-91cc2e003aa1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "50eabd6e-437b-46fe-9936-88c4d19b7328"
        },
        "item": {
          "id": "5e4f94eb-9fd4-4109-a4fe-eafeaed833e3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bcfc110c-f7ba-4dfa-a2fd-4bdd53765ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9418ae63-3bcb-4374-9ff1-1c13c07a6535",
        "cursor": {
          "ref": "5fde9bd8-af58-4b4c-8682-5928d38ad63f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "252cf187-7345-4ae3-bbe0-c0d96aefcb17"
        },
        "item": {
          "id": "9418ae63-3bcb-4374-9ff1-1c13c07a6535",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df9f4ccf-cc10-46d1-93fd-bd0cc3367b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "5251e376-40c4-4fc0-a5cf-2bfe9c09fa76",
        "cursor": {
          "ref": "8bee73ce-d8d2-47da-908e-6acfee9fd950",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8f1752d1-03b7-4527-80d1-a0f55f8c4b46"
        },
        "item": {
          "id": "5251e376-40c4-4fc0-a5cf-2bfe9c09fa76",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2cce2034-ef14-48d2-8e81-ad1034fbdf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "b8a504bf-af3f-4558-99cc-4194e976def3",
        "cursor": {
          "ref": "9a3317e2-4326-4f93-9cb3-e2e94033ccb2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "feacfa3a-1404-42dd-89f4-31fc81d96fc1"
        },
        "item": {
          "id": "b8a504bf-af3f-4558-99cc-4194e976def3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a8eeba8d-0eee-48b9-9710-0c90f512f575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "63f2b495-050d-4050-8d21-a0a1403f7c25",
        "cursor": {
          "ref": "ca9c5faa-4a7c-42d0-be0b-1f44eb7f7b77",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a9b74b5-b994-44e6-b005-7951d18d063a"
        },
        "item": {
          "id": "63f2b495-050d-4050-8d21-a0a1403f7c25",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e366bd5-685c-4421-a829-1429ef697fe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f2b495-050d-4050-8d21-a0a1403f7c25",
        "cursor": {
          "ref": "ca9c5faa-4a7c-42d0-be0b-1f44eb7f7b77",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a9b74b5-b994-44e6-b005-7951d18d063a"
        },
        "item": {
          "id": "63f2b495-050d-4050-8d21-a0a1403f7c25",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e366bd5-685c-4421-a829-1429ef697fe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96f061-8058-4761-b481-ad69fbc990f1",
        "cursor": {
          "ref": "be76ebb3-ce11-4151-ab5d-c6d2c51b9d7b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c3daa61c-feb0-405a-bc97-f2b44e777031"
        },
        "item": {
          "id": "6f96f061-8058-4761-b481-ad69fbc990f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd64e562-bafb-4ced-b739-b75e8a954ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad8e36-be0b-4913-ad64-34855b30465b",
        "cursor": {
          "ref": "cce92484-127c-4549-9e86-f84e63f8f3ac",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d566160-627f-4c63-8193-4f404ef18ab5"
        },
        "item": {
          "id": "caad8e36-be0b-4913-ad64-34855b30465b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f650024-3d74-4de7-8148-925d12f329c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}