{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c2df0df8-170f-4bbf-9408-d0829ac094c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1968a176-5e69-411d-aaeb-a0a35efbbb35",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "249aa389-bd85-45b7-a977-f6f4ff87605b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b1a7913-801b-45e6-849e-cf2365333f7d"
                }
              }
            ]
          },
          {
            "id": "d5f30dcf-9350-4804-bb69-2a99a536a5f4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3aa3531b-166c-49d2-a8b6-e51ab2dfb4dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "86337e2f-6a49-45cd-9b6e-f142c53261ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6103c32c-2a14-46e7-a2e1-b74d0e6b3567",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3f207d02-a7a7-4f51-b830-382f5ee8e773",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c39ced18-013e-41ec-99fc-cf6ef520197c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f777145a-7be0-4ec5-a4d0-d44fb99cf08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cefe6be9-76d6-469d-8a07-1d7a885f2e47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e1b3d26-77e5-443e-a22d-33e3362df901",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "731243ee-6a01-4ba6-987b-86d121664524"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36593a28-d5d0-4c56-91ad-65458d408b51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c06b870b-8138-4854-8f11-23d5698ceecd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ffbf9a9-91b3-49fa-a6fd-35e24aee6b24",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df230156-372e-4f17-834e-3a650335ae53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a7f57d4-9700-4654-bbec-ef5da2e7a32b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d33057b-f0d7-47c8-b59c-7d001bfb8191"
            }
          }
        ]
      },
      {
        "id": "c8e0f6d7-89b0-4bf7-9865-ddfc78026a70",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a5429b8d-9d01-4ebe-831f-d9600977ef70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4814556-ecaf-4d5d-9277-94d449e68dba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d356f7e-28b8-47d4-a9bc-028f5558dde7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6221ca3-fe96-46aa-9c7b-405832598272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae5b14d-1227-4ff4-a64e-9dee9a4a1eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520556d3-981b-411d-beca-6a8ddbc38a95",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459f85a6-c37d-405b-9fbc-9dc75dc7f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee218616-2d58-445e-9a28-ff4498e2d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16116bc2-ef99-4dc3-a8e3-7a3f8a520cda",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa356f47-a2ae-46d0-9dcb-81e4f78009ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41300f7e-7da7-41f9-8da4-fd907a4b9f94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e1d2dbf-c32d-43cb-b9b6-0a8ce913d40c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0916b52f-3a2d-4c14-9e2f-4d97038a99e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fafc05c-497b-45f2-8d1e-f639b0a2c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "788e80ea-543d-4ce0-ba7e-e5b1281adfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fbb3a2-3275-437e-9942-b57ce320e245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05af4bfa-5942-4ea8-a9d1-546af77e4f02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "357c2b53-130e-4206-981c-c6910d39a87e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12e34896-32de-4a73-a581-8cd8a574460f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5d2e68e-b078-4529-9958-ed97e8a3a3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e383380b-15d9-4c7a-a0b5-308f6f207bf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4a0538d-c02c-4b94-bd74-34f378e44d49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4baba402-5168-4809-8680-50e5abe62c38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6df74604-5fda-4001-9a0e-28be3a43c3b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a96d326-1eb4-4827-bbde-90ffe832b91b"
            }
          }
        ]
      },
      {
        "id": "d1e8b19a-2d95-42ed-84c9-9546d4a528d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65faf247-347e-45aa-8882-18989de64f19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6153d36-6ca1-4d0d-8de8-bc05dad594ac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c6af8cf5-9ef6-4133-849d-5e2f3010f11f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92470243-b5c3-4333-a34f-a296e96ccdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c119dc-c967-406f-9ef6-e6dc2f10b157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d284baa3-5412-4c38-a82c-7654fafc3bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4656acce-ab0d-40b2-8d75-989045a51861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3f0335-5797-49e3-8051-590dd5b5b479",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b7be5-6180-4275-9c98-52b9046f416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fab3ec2-2071-4761-9532-07428261bfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d82d65-1969-471d-a14e-995e58c316a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a76228f1-0108-470f-8607-55416ef25253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a555b83-5159-4110-9e53-393119c91bb0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a9c63b-701c-43a4-93d5-96b12554d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff299e19-5abd-4350-9049-3c489f4c723d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58efbc55-b957-4b5b-8204-c2fc1fbd7ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c09a266f-e3a9-406d-88ab-8e4a71283b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bdbed1-29c7-43cd-8069-30c38baecb22",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb46ced-cf26-45d1-aec6-0f1f624a1148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7c1063-0096-45d7-ad79-22c1ccf3f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a145ef9-76a5-491d-864a-356e52d910f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25befc1-341c-4d95-b20f-2be47d2ef892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63d87be-ccc1-4cb2-b17f-27c6904a0fd0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebf8f22-0d5f-4c83-9144-54f529a8910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c3bd6-1b3f-41b7-bf84-c1174fb132aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d86e33a-735b-4a59-883c-1217647ca441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a878eb33-df09-474c-b165-f4fe716540ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f42c428-202a-42af-9238-6241e2f1443e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab098cc-67f5-43c1-af57-6bc75500b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e655a47e-7c8a-4924-b812-3a65e1972ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b9f30f-193a-432c-a8bf-6fcfd01471cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ad7eb23-5583-4ab9-b398-a11460cdf74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a862907-adec-4d82-a014-4954aac199a9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63495855-bd74-4f6a-8b0a-981a876fcfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9d23b2-4d5a-4880-9220-aed39e80805e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb362a72-a76a-44f1-960e-1af3c679bde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a9cc8d-af13-4b71-ab88-763fcad497ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31f8120-a7f4-4503-bf13-c5e7adc11370",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7fde7-056e-4ed0-bbcd-582e5065e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8e634b-0b8f-4e98-becf-ed11273ba5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218bb7a0-9382-4821-825c-1969adcd943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "757a7a21-3f39-4af9-b423-b71bce7acae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac260631-6394-489b-8103-4b427d789234",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6bc67e-67f0-4dc0-964b-cd73f0ac5261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b77743c-e748-4823-82e0-261f0ded6cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3b49cf-07da-48c5-866d-28f73538581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb31c8ef-0bea-40ad-8811-1490114e4bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7e1e8-14b3-4b20-91b4-2a6d38cbac1a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb5fcc8-5377-49b7-a151-6de2c09a7551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0007f6b-0312-4113-8e24-229444d531b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2690c1dc-3279-4602-bacf-e490e7bee1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd1fdc45-3761-4b87-baf5-e75e5ba866cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05eb586-4953-437b-b24d-3dc847e53217",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29172a6d-7981-4985-9861-c6711e193397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c8adfb-596c-4d46-a6cd-72ee2fc79371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f937e8-d810-42d5-ae37-655b373707bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e4e77e-15e6-43e3-87ac-e267553fcec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0195022a-7db5-4d96-b7b2-75fa2aecceb9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65defcb-524d-4611-adf9-34a1a1c4e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1c1bf0-8030-4740-bb09-01a2791675a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8ca961-5596-4b9d-8f42-036359fa6fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96ec45a3-f565-424f-b7b0-f820c677f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50048fa7-3c16-4423-a1a0-8390f59af29b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c7c5b8-43d2-426e-8ccc-655b70e0add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37aa443-e061-4e6c-83b6-3dfe4b948cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77b2c2-187f-42b5-a906-fe4cad966451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529fd110-26b2-4374-8acb-741c0dd90e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11320a8-2995-408d-9d4e-e017584850b9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046fcfb4-3b70-4908-a4d5-af76f7158fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539b89c8-8b90-4b2d-ab20-7200c5a7554a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a48cb69-2876-4294-804e-7af80a17758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc07fbed-d969-4160-b168-e1a33f9b1a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f22377-f048-413f-bdca-a6268c57e47c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b11fe05-7c52-4e8c-aeff-aa1531780421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6980ed7-fece-4c73-a361-9e17e272ddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1e82f5-c894-4bec-a185-878034f1e754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8287ad86-8991-42ee-b6b9-3076f7186e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7171fdd7-e795-426a-9132-88ff5822d678",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5512e8f-1bab-4dbb-a643-621aa97ed28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c10c0e2-9d11-4728-9a7d-e0ad9a9e8426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b502ae-79bb-4811-8a01-7a0e9ef60eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee32d5e2-3c3a-48a2-977f-e12d5433ad25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1333376d-33e8-45c3-b094-7591037b6160",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1ec98f-4ffa-46cf-a56b-c3888697dc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8827e327-5010-4891-b4b8-6651edadf215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dbe711-c8ac-4e54-80ad-58f119c1bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfa7644e-72d4-46d6-9543-e6afaeb0a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c369a55-65f5-49c4-83ca-e629c0f95c40",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6c74a3-2041-4491-bee1-97a98a0368a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6008ad-6dc0-4fc2-b482-52482bd7badd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa8006-b815-414e-88b4-d83151a76935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c755ca75-7b35-4079-8413-9e3686bcfd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19543036-b571-4416-87e8-0cfdf5f2d3e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91276367-652f-42fa-a3a1-c258a962be74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7449e3-5947-48cd-9653-32d9c167e62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af766dde-b8c1-4cf9-977b-ae1e4dd8de52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f727e7-ccc7-4801-9b2f-84c083e6a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819f1ba0-9724-49ae-9e29-934aa9ff05e7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff71423f-1782-4ba4-b690-647725986cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a3d68a-bdb4-49d0-ba0f-7d6ae8ed4a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbdc5dd-42dc-4478-8314-ff8dba35d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da952e7f-c96a-4947-8724-1168b62ce0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c3ea2c-6d89-4348-b194-ea247d93c86e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f55398-9b35-4c85-959f-8c8f4cff9a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b949df7-cff0-477d-80a2-4657b25450d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32793ab1-8ba0-44ed-99b6-b7db77ba8cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa85bee9-f8df-4ea7-b7a9-32cc7d7074af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a33205a-f74c-4cf1-88a5-a3b2c1a5e6e8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698216b0-258d-4492-b0aa-9b5f5208d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12884041-1fdb-4ac5-9580-c922ff74574d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da5aaf7-1086-4c48-aa0d-eb4243ef2f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "409e248f-4dcd-4a28-b983-fa6c6f106f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc986e32-10ee-4ebf-a915-ff013c2924f7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0de8f02-23f5-4d34-b4e0-ec1b503936cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7a3096-0d0d-4b38-85a4-e4202f66b6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41a6d88-d51b-4570-b195-e8c0f52014ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "382de411-6887-4319-a9e5-eb1232c034df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d9e7c1-d0e3-4707-9b7b-a5d38be1b9bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb52f271-7db3-450a-9679-5f9e5fda436c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd09c1fd-55da-462c-8e40-c4e00e3b60ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a5711f-7f2b-434a-8f0d-ef3d2848226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1577601d-058d-4195-a885-1f521ce21330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf9b3b-fa2a-40e3-bf3c-b44e3f480ac4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94a730-1e48-449b-a81d-c186fd94e99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b7e065-de7b-4502-99ce-7acdfd046305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238ed0f1-6f39-4417-8e48-78e08710f696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc595c1-36a2-4122-bb8c-78bfb133a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372455d7-9ad9-42e9-bb75-4a6bc4005903",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eab02db-f11e-422f-9fbc-b53ea2868177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7254e6c9-74c8-4273-8da1-afda1dd14da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6681921d-c1d7-45f0-9d9f-746554ce539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7efa0242-ddf4-4b95-b58b-3b6b3402fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1943d4a7-a119-4914-ac77-723c00af8e19",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cf901d-f08a-4b94-a463-708bcae75187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc54cc2-cea5-4afb-ad5a-87ca62b6bf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83de8a98-29b1-4950-acee-d75db6a2b8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56512340-a969-4372-bfd3-aeff7ae26262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b29c10-c505-4905-b828-c0406309b4c2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd20ed61-9ece-4990-8839-457af9071375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d528fb-29ad-455e-99aa-71e47dffd130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d50294-40b3-4eb9-8ac4-9e65f789ed7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4de810f-674b-47d9-8ba1-b1fcc0a95353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9efb9cc-87a9-4a83-822a-094f36b0b713",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de88f7e-4df8-492d-b05c-bdf3250b8b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d8285c-5b03-49d9-b0db-fd6c19911632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b706f23-9f4b-424a-86d0-5d6812c8b739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f774aa-815b-4bc4-8e60-77c3bfaad0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37a9a9c-0dfd-4065-bfe4-e87ffe0aa12e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53f7f40-f06b-48b7-b8de-1f18586d1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cf1cef-6da7-4b94-8b6f-26676904338f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72808a07-bf34-4217-a9af-25921f8f3a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e357f0b2-9262-4234-a22f-0f1cef8e189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5d4ca0-1c5c-4b4f-8a13-867d53c8b7f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b767ce4-156f-4e4d-bbd4-c96bbff20856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423d6565-ee25-483a-8922-6b37f5bdb56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5375c961-b247-45b4-8844-bf33d0e6e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d82bb5-173c-42a4-be15-1ae823f4166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866fbb26-feca-41de-8eaf-b71bbd19505f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7beef9-ec5d-4456-8e4d-8eea7b13418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0b4a0a-f431-49d3-8989-5ff84bbd4cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c948dca7-0cc5-4da4-9feb-7ccc2ac6631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7209daba-3f47-4652-857c-a972f6c271bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a206e55-b7e2-45f4-af9d-3efd9730e789",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178e0157-7945-450a-abaa-84af05ef194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1be6d57-d8a4-4e8a-be52-3a37d8f83d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf1e291-6abe-4a46-a3d7-c5850ffbfbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f8eba2-720a-42a4-a439-664bf6a25cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6e3e92-3848-4cb9-932d-f763de6127ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3f4283-21a4-47f2-a5e7-8f6f3731533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d015100-be3e-4eed-8692-b415f5858e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6b514b-a6de-4cad-ab32-7519328212ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7bdb83-c05b-4616-b489-14d9b2e4accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bb33e7-4bb8-43c9-b383-f00ba3c8d624",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27393287-7ad5-48d3-ab7b-dbb8b29073d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8040a1-5e74-4c41-90a8-53eee0e09286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30184e9f-a45a-4715-94d2-e9e1a23a9d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "030feccc-47f0-45b2-8d00-ed30e538bfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f74164-8cbf-42a4-ad3e-d5d2666c8255",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82ddcc6-106c-4fa1-937b-a9c2ad86b706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c45aa1e-d9b5-4f9d-8c0f-784414d91cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37557727-bc76-4298-b763-d8978d62de83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c47c67d8-3a6c-4293-a679-d4881beee806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f89e4a-5091-4f3d-bd1c-50d01d967e24",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813abe11-1d90-4bc6-98fc-051cd10b15cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88651c6b-78b9-4703-b047-bf5032c33aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ba6b91-b926-4f61-8d80-2e74ac52aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a0c875-dcfd-4901-95c2-6a35c60ac061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46551b0-a9b3-4e16-a50a-79c70552cd46",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c16f3eb-3134-48eb-a573-e9e7ad9be569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288cad07-6c65-40e5-95c5-79fa011db724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00464b7a-89ec-4223-b4d6-aafb5c9de7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a64e305-356a-4ba2-8b3d-9221ab9ac7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45338e83-a889-4436-89ab-fa86c85971bf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca7af1-4a2b-4f8e-ade2-1f580dfccf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8712b6-1dbf-4ff9-84b5-b6c599d4d98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afec2948-62a1-47a9-af99-cae10d8559d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da23408-7b6b-46a0-8ead-239a08ef71dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d81453-d374-470c-8999-07aa3af4e947",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cc5676-76d6-4d78-b787-26a2fde1e489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e089c325-2180-4dba-9e2e-09a5b8c10b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1f8bce-ea42-402d-8bf8-dbfe40a46568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ac70fb-d057-4802-b28c-4b03e8457673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2058d1-ff48-4742-a21b-b6b63524bf30",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4675c-b9bf-4ec4-bb82-25cd57c32aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650c8e4d-ffbf-42b4-96be-adf7c4473bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0348174e-1eeb-4c76-94ed-6a3dc3baa5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c813e56-0067-44f9-b9eb-7336d9e203e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da885c-c959-46d0-8802-6c75e6380768",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d15c9d-eee3-49ec-8a4d-02def1764959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3e1e99-7278-47cf-b80a-46bf709919ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7156d760-6807-4598-8a1d-7feda03c646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4a31ec-b20e-40a7-b5d0-f6c5872a2892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90d1aa1-c08e-4b6f-b843-7a9a50745d76",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda55ac6-fa58-4c1d-9d11-56bdac86e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c1bfb0-4bfb-4393-8065-0a011d409be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846236af-2660-4a1a-9fc4-dc42967b7bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90bfba09-83f1-4500-b35f-c93ae2df30aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7529a8f-b118-43cc-9a40-18bfab585200",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a050a23-81a6-4fb4-a72e-7ae280e64b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db7d801-1931-4b7e-b4fc-0c2e278332ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fd3665-4946-4e8c-90fe-d82ba2042067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "335a0960-09a8-45d3-8217-c42f579af365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f16c0-d34e-465f-bbaa-ea4ebb530e12",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f12a30-d14c-43d1-b2c6-714fee72ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1bbcdf-6d59-4b71-b1f4-beb3d288c395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605441e9-3263-4e5e-8218-1ef51ea1e6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72c6b01-4386-45fe-b0c6-07c90a74ae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe53e9c8-1c35-4a31-8c96-37ebea227754",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21015e93-0678-4d91-a6ec-78d1914acd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e97bb60-960f-4a7a-918b-1707907b2615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b39c9e6-8835-4182-933c-98f315634525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b8af87-8474-4bc7-b317-dc70272bf271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399e606-2350-4409-954f-0a63157889cf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48deaa12-dfcd-498d-9579-60868105d599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4d38e-8a42-4683-8c6b-16f57c0fd8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1668cf8a-2147-4794-9c7f-2b202d079f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5006602e-f1df-4209-bfc9-20a4ff3bfc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dc11b2-8128-4ee9-b7c3-14ab24525dc9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874d6480-32ed-4187-821d-c27dfc1fb8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065ad9f0-aadb-4bb1-9291-84a86f92a601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b0f00-db37-4dcf-bd06-8595e200d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e514f1-6eb2-490d-96a1-19e44efe9ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773625b9-1a8b-4af6-a238-71a0e9bebe76",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5497eba1-9eb7-4d1a-8d24-817e78f23710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d82b6e9-27cd-4134-b6d0-426919ed4c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb270dfa-957a-482f-b1ed-d20111deedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45fa84c2-a9db-40f9-b24d-06e73b220202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b8a5a-ef14-4fcd-b184-5a0ddd12b520",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1d23e4-cae6-4418-a46e-7afbdb301aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e5b9d4-4ad4-40d9-82c6-93252421a5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d630328-ab8d-41a2-ae93-445efdc2fb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe4bec5-3cf2-4b45-9ddc-9be955c27d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d8ebf5-ab8f-49ce-b3d3-f60f82fdd742",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c902331f-e2eb-4697-baae-6774559fd602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111dd6db-db01-442d-b468-977974f7f0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d7dc1c-7195-4cb5-bce7-20173a024fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d935d5-a356-4e3d-ad6c-fa770ef783f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9112ab7-590c-4fc0-b3cc-25cc2722fdee",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd4eb39-a54f-4d35-bc74-5c6f44571df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0e0d09-b964-4d48-b64a-fe007964fa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5757adb-061e-44c1-a95c-dd2223ef51a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d79033-5d79-4746-a34a-36028f02c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae86714-28a0-4b2f-8c26-20c4fd6aeb6b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbfc65b-8565-40d2-9601-533f996f259f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa668d4c-e7d1-4ed2-a2be-ba33ca44d33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4f9d75-396d-4636-929f-de8359987931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb62c44-1e47-48d4-b8ba-9774f19d6796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f116cd-0f6c-4b43-a01a-fafa3e13c52e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f41a77-a41a-4a75-9b7b-7502a838287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b7e126-f002-4712-81a3-78204989d507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dea9245-6780-4c18-a0bf-f7b5cafa19f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7439648-335f-4aba-b178-ab337e1afc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f67694-c723-41b0-8426-372d119310e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee00d81-3b68-4223-a7e2-9691f1370d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fee9f60-0bb0-4230-8bbe-139fd272f5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56829ebd-b76f-4eb7-a757-ab222f410b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94f7fd5-be96-469c-a09c-5d936f55efdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a934a537-fd12-4ea9-988e-02138cb2674e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a29c7e-1b46-4d9b-8e15-c50681104fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f3ed66-8404-4c71-a8b3-7c354e9b4f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c41a70-b16a-4506-89f8-8b4c332156e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d1849503-731c-449d-8b3e-4a5fee0179a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362fa160-08cb-4fbd-9b77-b5fde25dd066",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f86a78-7404-4037-a31a-7d20cdc5586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fe2691-1911-4f8a-b8b7-c43a428c54d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f997af8-830b-455c-992a-98120e0ad378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bac319-da86-4380-8fbf-98e0f9a08e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8838d3-a944-4c99-9798-0ba3e8676c7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cabc79-6185-41e7-bddc-745149932c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c62e304-c5fe-406e-a49f-dc0cda2162f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05aaa15-5da4-43de-b113-18f541fbbebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e872d88-23d5-4ade-b749-4cfbdc1f6cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32664af9-7f0e-4fed-b82a-4e90fd99aea9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332c17d6-72c2-4090-bcf5-511d43e60e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e886e4f-6a24-4fb1-9609-20825ba53f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eaf4a5-9f67-470e-91dc-ebb19b884b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "718095c3-49dc-42f9-8d8e-827bee2b8ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fa7098-be02-43f9-823e-3fe52000dd33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825be93d-ae83-43a0-96c2-926573bf2ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a4a834-d31b-444a-ac0a-d32c4f7260a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b76f3d-d6ab-457b-b1d7-56735bfd6b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e252435-22cf-4c13-b935-ae8ca8aa5a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab9954-0f0d-42f1-bf02-3d75159ee048",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95247bf-986e-4b57-84d3-1e05c8ed3b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ce9556-72bf-4b08-91cd-bf89a24bf74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82417f14-5679-47d9-b41a-7693df7d504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4b1342-a1e0-4dd4-a912-6a848c6e70ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63408d68-bd24-4dda-a8e9-e2d19699d607",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df5d5b7-2f25-4273-b8d0-b5aa30aa6b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8a6188-cbdb-4d1c-a4b1-7cd69909ca90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e11a7-9def-4289-a638-ba6f635320bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4ae28a-0a3e-4d69-ac46-36560533ad17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc55bd07-1ab5-49ff-a0f4-e013648562c1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7a696-6cf5-40cb-a4bc-85d01a9893a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b12749d-a67a-4846-bd16-49aecbb595a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae45f1a-e090-44ca-a39e-edeb9dffe682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "807115d0-8f35-4f9c-a260-6359990a5429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdd5fa3-dd93-4acc-a04f-e7d5ba22c5bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22a9b6d-e2bc-47d0-a71f-256be4479ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb45f14-ee08-4f8b-aa73-db6b8863ece4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d4bcd8-d055-4616-923a-7f84f513ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32009122-7027-4cd7-90d4-bee73b385971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c852ccc-b016-4e72-bec7-2a6a03e57c5e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2655b51-bd84-43f0-8df6-1bc4ee9346e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1236821-8632-4eab-840f-53247a03f394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98f42fa-6e05-44cf-a514-0a79ad00be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dc9397-c480-4309-adb3-c1698d8e3103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0589b5-7e28-47c5-81f9-d4881a43f646",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832a6f2e-a32a-4e5a-b40c-17fa2a6885d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34151bb-171c-4adf-86e8-e330e4df06ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80990035-2bf4-4ea1-b6ec-3d1e7cb21487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8911af-8b0d-472b-94b0-8a767e0a0596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48d9513-b78f-4ac2-9ce2-c4f5b43d56f8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab48f4-a6da-4752-a0c3-6e2f5903fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5632d48b-05de-4315-a6fa-b9a565f6f1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3976af18-299d-4dd3-a609-d50cfcb68d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd8870-584b-4456-b823-6a5ae1eacea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bdeb7d-7368-467e-b46b-53bfd8559e15",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a798e00-cd1d-4617-a50f-37698eda93c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d3fac4-3375-403f-b8d4-fedf551c924e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4164798c-9b8b-4ed6-abfd-246de877abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade0ed95-a760-416d-a7cd-050aa7842de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f00f038-d24c-4957-8d9e-02c84e327610",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2978d2-561f-439c-b51a-6e6a82e545cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c835ae8-d510-4905-b4cc-37db100f8fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280cb1c8-2abb-4b5a-88b1-6a8a82d42166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16dadcf-e979-46d5-8415-f5d4eb9c612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3134b-4f47-4d9f-bcae-2a5abe2c10cd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbbbb52-f47c-442b-a161-26c3c3b5954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3513b0e-a834-48e6-8995-0323e8a966d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e64112-3d87-4a01-a772-fa91c76b2c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04417ffd-58e9-4643-9cb8-cc501d847ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bd43d3-473f-4b4d-9149-0589d25043f6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2b4fad-6ebb-498f-8bf7-ebec0c8f258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e82726-c349-443d-8547-053bf41189a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a464d0-dad2-4bb5-821c-0bc3fd6c2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20fae7ad-3106-4295-8565-3fca21bdef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42138cd0-8ba2-492a-9c76-5eb4aa63284d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7364142-9085-4f0d-b46f-dd2ccc268b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27e9d8c-cefa-4f7b-abe1-7d2db39a76fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d4e4a-4db5-4e58-9e85-df9cad6ba862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22264447-ded1-4597-a932-a443c8de875a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e626c4-740b-4144-9374-fefb450c3064",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba669bf6-5aed-4b93-a8a7-087394426298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc347fa-3621-4eb1-89d4-63c7336699b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002cb8f5-1304-4dfa-8465-737c6b83e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b037ef-f9db-4e1b-adf0-9d5079caae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6509d4-4e73-4a01-b69b-535d2a823e0d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d289922-6ac7-4c7f-be72-21d7e19ca195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c032b9-0206-4f08-804d-496b26993943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225e864c-b314-4ada-9339-f5680c7d1aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb133d-6bb0-4c1e-97d7-2b7a5bf86726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796cb3d7-f6ce-4cab-8910-1d6badb00f3a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9189d641-281f-40b0-85f3-a59d69d1a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0c0ff5-3294-4e03-8c3b-e6bf69784523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22e280e-be15-444a-80c2-c7389ec01fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "993dbeec-ec9e-4098-be39-e18e407ac889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faac3f82-9c72-461e-a0d3-6db67e4ec737",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3d33ad-4779-49e7-b9fc-4e63b4037432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beedb107-cfc8-457b-85be-7b0dff3377f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81487be9-2af6-4f90-8bcb-4da22759cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb55d13f-4c74-4d9d-ab17-d7a428a5a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf05e39-0e47-4963-9791-3693f9c279d8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fc9c4e-d1bb-4b02-8be3-11fc6cbaf5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72a9660-8721-49dc-b8c6-10d58b0a317b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bd37e4-a412-4504-b9aa-a46fe33f3f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a1793c-f914-42a5-b77c-f81c640bf7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506815e-d3ae-4d0b-ab1f-d23d56ca111a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08af4f4-74c3-4710-8eb9-c49a0f215048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9d8420-9586-41e0-9b8b-4d689d7f1084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb0a26b-3b12-4cbf-904a-1af7081bf878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87343466-8518-4307-b60d-33df248102a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e919d4e-601f-40b3-8431-deed6ab1748e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bccd730-f871-45ff-bb74-8e4275bd8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df92b111-102c-4022-b470-f74ec8f4daf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc5a9e3-15d5-4551-9ff9-7cfcfd332a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a90ca7-1dfd-4409-a870-ab4af58cd2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2634ca0d-2727-4f66-8fd1-a391d5bfa93e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb77ab4-c5c8-4a87-ae4e-11a509e52f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746bc991-7f48-4702-8b3d-b938c3f8d9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115c32b-21a1-4ec8-b440-b96c1d3ee336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64fc53da-97f5-422f-8046-9f8e117b29e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9005be-57bf-44a6-8164-938b0c4d3393",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d701b01f-b442-4344-831a-aa31e24e37b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e396368e-4684-484d-9777-693939f622c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a18ba9-3d56-44f5-ab16-5ec5acbc52e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eddb4d48-f8d7-4b4c-99fa-7aaa9494ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689d0ad5-25a8-477e-a639-573370a90268",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164e719d-a493-485d-8cd8-09b115c91218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2905c5ab-efc9-4c6d-935a-41083764158c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84875462-57ac-41e3-a984-3a61090cf18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfddfd4-34f8-4265-a817-4d7828afda24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc869cd-e602-4039-8d2f-970997270106",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d6b5d-a420-4a42-ac2d-a2422d504334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a12ef-1b6b-4862-940c-f3ad842d463a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6b74e-c9c8-44ab-af4d-f25ea6b70aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ffcd8d-a2ad-4f81-b340-42fe9e6b483c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc939722-6df0-4add-84f7-3dc7c7a6c1f1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b0f610-20ab-4a7e-8591-b58134f4387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1a4abb-e50c-48d1-a4fb-c344855d4a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d720a-4582-49b9-b02c-27b5e144147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9a5ac5-5dd9-424d-849b-9a1e7e715bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91169baa-b1c8-4a46-9348-8caeb058d096",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c6a1c8-1b3b-48d7-9011-b401b806507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54cf648-fef2-4fac-b9fc-625e23c8ce60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3fbee5-78ed-4776-9cf5-83ad9d6f6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33faa277-e4aa-42bc-85dd-c63adbe3782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d0f936-6556-4157-a3b6-5aadb9cbb02b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def18b1f-4c6e-4c4d-94e4-d2425ca7a426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0304bbe-5224-410c-9380-e6408ac3e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc822fb-d95e-4961-924e-2403245d91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8ef218-f122-45f9-814f-2d61620ad796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192ae581-dbc4-4d85-b3a1-bd39527d234e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df95434-e571-4500-81b5-f48e37e9319e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a77333d-a044-4b90-bc8f-db9c21e7b75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa5059-c62e-4fd1-b848-26044d1cbcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "769727c4-ce2e-4061-b683-5b415f05c4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8152f1-f7d0-4f65-b0ae-e4db4acf0e09",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a354b1c8-61d3-4aa4-903e-df3b94b52181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63957f6-976b-463a-91a4-0b18ea801c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df088fd6-fb01-41dc-9b19-2f8f4277646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89086fa4-05f3-4d48-af7d-0c6cdf2bb5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ab3565-443f-4982-9f28-07f66aef5ad5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a02d99-71b7-4aa8-b502-54fef69b096c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf307ab-ddb0-4c11-ab16-6faa93d3cc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16001349-a46d-4946-83e7-44e63e52a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29c2953-3cfa-49f5-a001-6e7faf5c7ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113fd33-b271-4f3f-8c2c-0d372b8f91f1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b9095-d5d8-45a3-a144-c7cc815fb643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9722f4-0181-4eb9-9060-c7d72e53b70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb7abf5-0304-4efb-ae82-60b1e6b3bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8acfda3-5fbe-4855-9356-afd4b488df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1a1ce1-c40e-4562-a833-37e0d8672bcd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a63ef8b-c8bf-4726-aba1-625b00db7788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed8b563-4bc2-4a6b-8a04-90aaac06be7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee901a67-7a26-422c-b6ea-d154afd488d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d0e3c2-f7f8-4054-858a-0c0af6509993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59295dc0-d0ea-454f-97b1-b8177c230af6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8507fe18-1e3c-4d8e-a172-c8cd657285d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "403400ea-a4ed-43e6-b64f-9cdf547995b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c6fccf-2df9-4f13-bbd2-1570e7ab50df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e7fb7b-b83c-40e1-ac74-bb5006b099b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e6337a3-301a-4d42-b490-0c1de01213b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6df6ca78-69d8-4247-9824-46f429050c57",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7ba933-6c53-4595-9c9e-221c555b5ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf80964c-72e6-4dd7-a393-5c5ebfec17b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e451107-000f-468a-9802-52577bed9cef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f4ded5-de34-4209-bf43-dfbfe1e778ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e065abb-aac6-4a66-9c5a-5674d95d27c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aa71a24-3b4f-43b2-929f-a825a2fad5ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e446ea5b-8ef4-4b00-bab2-7e48a277421b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fae4604d-54d9-4fa9-ac70-c7f481044722"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e569dc8c-5864-44b5-9b64-58fb8383a14e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc6ea71b-84bd-42b4-9c35-02a1d8c42c8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ada18ad-3bc1-48b4-a6ea-6cd86b99602f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43651884-4bff-4de1-95db-7aef910972db"
                }
              }
            ]
          },
          {
            "id": "f678b144-ecd6-465b-a876-372b73c262b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a166d68b-9cae-4525-859d-3bdca653e83c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ea6b716c-31bf-4342-b277-44c1a7552a00",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e461f15-58da-45d4-b298-0c6a076f0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5da7c26a-32cd-414b-b4f3-43ed0924df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cfad30-7229-4e39-bf39-f1faa5edef4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344be013-1a72-47ed-a490-c391c2ffac56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0788a88f-5bde-4f0f-ace3-76ca09c2e225",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "753084f6-df9d-4560-bc11-7617042825d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b20a9e5e-2773-4c6b-be74-e394d3f2d847"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3648bd9f-c182-488c-bfc6-a39b5badd31c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cae6d47d-9c59-40d7-ac51-e94642e9fa65"
                    }
                  }
                ]
              },
              {
                "id": "8013143a-f0e8-4150-bcd9-61dee1bad9af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e075767b-69b4-4e08-b490-521914677440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4948f80-e88f-4f38-aef5-fdff61dca1f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a302709-e8f1-4257-a7a5-69e5859a1ea9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e03fd16d-a000-4393-b1de-f5e851c3a9aa"
                    }
                  }
                ]
              },
              {
                "id": "95962daa-fe9c-4d50-8460-219141b724b9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "193c4580-7221-45f5-9026-7022fae60dbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18cf4bae-c820-4283-98e3-139992d80a05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d2029d3-c19b-49ce-8928-64cfa3412459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51837bee-ab07-4616-9cd7-ba57bbed6249"
                    }
                  }
                ]
              },
              {
                "id": "2dec4d82-c9d3-4cca-af66-90cd4eb2730f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9f19c41-8dbd-4826-9b1c-67a7da1f6b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1918129b-9b26-43c7-8c55-d38249203456"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "115472d3-ac71-4571-819f-0e1d2022f408",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8dfc98bd-9987-42f0-a984-34fd653f0fd4"
                    }
                  }
                ]
              },
              {
                "id": "84c03391-964a-4499-bc70-195846851eff",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de228665-cde3-4878-b64a-f7f491858418",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6026148-ab56-4491-8336-d690535679ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f2bf474-1ef3-4f57-b72f-d7f20b42dc03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5789d110-b7f7-407b-9be9-4945df1cea85"
                    }
                  }
                ]
              },
              {
                "id": "7484fa17-3174-4673-ae2e-2ba84889d2aa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd3be86-5148-43c0-9b68-4f18737420da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2febf06d-5f37-477e-8663-f5bf06750599"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb89a838-8bb1-44ba-a1d6-be50da9689e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea508ccf-5a07-449c-9f5b-c37347a8b6d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97dd2006-ce76-4b21-8b93-fead6c9d56c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8664a4bd-b9c5-4c20-aeb2-e03d8d5fc91e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d3160b5-3e11-49ef-889c-c696be5e0bc8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61e99162-1b00-41d2-b86a-010cd17fc8a5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87e161ba-3e3a-46f8-a1fc-e3b6a689b53f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "74fdb808-63c0-414d-8442-934555b53525"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e1e3ee3-97cf-4333-bc6e-b77798128bc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f09b364e-9942-474c-89c3-9c7765d3f642"
            }
          }
        ]
      },
      {
        "id": "6afe2612-5be8-48d0-aeb1-29a374f55a90",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b9df3cf2-ae43-42fa-9836-c65d89c3bcb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b2bcbe9-33ca-42a3-9293-f850deb1c5ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dad3ef91-4bd1-465f-9715-9ab833dc5e9b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94788f-17d5-4d63-a3b4-1c501839850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486692ce-3a9b-4c5f-9000-d33102a255ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2174e1dc-c143-4235-9d59-d62b3cf87537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0660df-79af-4dd8-adbc-021e639ae207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bead329a-40da-4334-8cdd-7c307be3504b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18619ee6-731b-48b6-a8ba-3b34a33e3a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c5f6ce-f71b-4393-8d3e-c7b5d94ca625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34effcc-020c-48ea-8c07-5493057d3b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c550d4c6-8575-4b19-ac3f-b7dc1754dad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339082ec-6bc5-47e6-bfed-98c7d81b833d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf903448-5848-44a6-903f-994782e58e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71715a8-8691-47e9-b590-f9dc87662a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3196452-eae3-4726-9d1a-a12ac991a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "864dc343-214c-4d97-b96e-8729bc218c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5640a8cd-904f-44d2-bf26-6953b727c382",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858389a3-021e-403b-a7ef-b800149767f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4b0d79-5776-40ed-8f1f-74ea4adc1662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231fb71c-0b25-4156-bfeb-c10f39296845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbe7f09-0537-4189-acde-94ab1786e0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ebb40e-036c-4039-8d2a-4cb98c38e8a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc4bd06-5e29-40d7-85ec-6cde39dfc7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee881be-1e3f-4175-8d17-fd0cd7d93219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08bffba-8ba8-44b1-9761-a8a7f05c2e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdceb30d-8c28-428a-98a8-09a28c95582c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214a2605-ccae-4000-82b5-b14751938172",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187ed50e-90cb-41b1-8140-264072b08321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48763273-24bb-4620-8e0c-7993459f2456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5d3532-ea8a-4dc9-9f84-313095df5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7c9a53-4892-4669-ae75-9a32eaee1d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b84d5d-3e73-4273-b39f-82cd6fea0fd8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1b9d0a-2c10-4f93-a584-1edce960487d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162b9836-7721-46b4-a983-7e799b7919c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79d26c-d0ce-4c6e-96e2-191b483c37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a660133c-423a-4459-86fd-9938e4879232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854e0f7a-012f-4afb-9d3f-87130ed4622e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec9f66d-331e-4653-8351-e4fc0f9ce371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da1e93a-d72a-4fa7-9b54-a32316182d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b515260-747a-4701-82bc-f8b6759416d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "192a5c66-f348-4615-96c3-7c7652923b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f8e007-bd1d-4dc2-913b-337ebcb4dd30",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474903f3-671a-4190-a49f-edd1c2785c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaf891c-393a-4ea1-b82a-32223dc1047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c257c9-9552-4015-8a5b-154000a5ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1b526f-b8f3-4b3b-b189-51571634edfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3114b09-22ea-4e5a-91cc-32265bbb86bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6961ffc0-beab-463c-9f17-072b526225d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3691af8-5d31-4ce4-98cf-7e48711860f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b197dfc-3cf6-4b2c-95df-da68d9461850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea64c947-dd64-47e6-9df6-7fb98615d1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c4cc3d-0c3a-4e85-82e6-33b01c78a187",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd39f5-9fff-4658-89d1-ad08ef47da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba97ad1b-a8a6-4820-bc9d-b9bc761d080f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58f24e6-02bb-4e3e-a9ae-9ad6e7a91d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2a5179-70b4-4fd9-8762-4c6dfa50bb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187b222-b29b-4ba4-9e95-d25ba899ea30",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1988602b-e95b-4bd5-97da-0dab3cb598d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706d3946-b8c9-487f-8af6-4a5e8d81f51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb29cd6-1404-486b-ae30-3a6f8a4cdb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7662b2dd-5b9f-488c-a639-ceb60733b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5e8796-0ca8-4c59-99dd-5efefb2ac297",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e0d67-d899-449f-aa82-d21dc61a673b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6a8335-fa0b-4234-b793-07d6b3a9dfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a132844-bc0f-47bc-bd4e-0c4f76268643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ac7c93-5cd8-41ea-ad28-a39e84c18df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17672ffb-69ba-46df-bfcc-c73471bc88d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a759f2f-41f1-4934-9c6d-31b8db90240c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44be420e-dff7-4dc1-a09c-a3ee246a18a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca565a8-3244-4beb-9661-25b9115e3ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce41aa40-b4b6-4024-96f9-0fd36f033479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bb5ab8-2340-43d5-b08f-7d9cc729243e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0febf7a-38c3-48b3-be82-eeda35bb8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb47f16-5c8b-489a-afbd-4c7f4ee9e251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cefea0-102e-4e87-9253-f964166bef49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e95e39-fdfb-4f32-bd21-b6cc6f6b35f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d19216-4a3d-4e68-a254-9c9e7b4b6ee5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffe8c90-565e-4b24-beed-f51a5925ddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de87eb69-7e67-4ffd-afec-be4dea104414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5026a4-a9e9-4cc1-ae81-dda4ca23be89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1c2e5f-b625-4a8c-bdbf-4b7313decd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f9884-4077-472b-bfb8-cfb1f7b42699",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688f12ad-42e0-4287-a99a-c4fcd12f3288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcca1e33-789c-4c82-a397-d3d0a540ea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b5742-55f2-42a5-b061-f6191afa0243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7d42c1-053a-4fe9-8606-81c404ddc5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005a32bc-7d93-44c0-b3d5-f443ea798e32",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeadc137-5c6b-4291-b5e0-e5109b9ce2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3d3b39-fd74-433d-9fdc-75621f0ad96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc14a67-2db0-4d7f-8594-675c125f5868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bd0dbe-f0a3-4806-ae83-e80c9bf54d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2a88c1-1531-4fc4-8de1-b9b84fecd6d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f80222-2aca-4dfa-a06a-30475fb69742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4635dd8e-d72c-414d-a5ac-777c1a1ab13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcc9361-64ef-4dc1-93a7-654175a298d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc0b55c-623f-4500-86b2-5126279ed9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed29826-8468-4760-816f-99b2607456af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806296a-4664-4498-b43f-22dd9f608c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905d8830-a79c-4618-949f-e8ecc331cd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690d96a1-f6f3-4533-9a3e-0552c7396c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b722b228-da9f-4056-8253-8b530e14ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4038c6-05e0-40c5-b0c3-eba716fbb78f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8309de-4d61-4835-b76f-6bbbd4931d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0439b327-419c-4893-ae94-89a4995bd496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f748f55a-87e2-4864-8e48-ed7920169e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8ae24a-d094-44d9-9db1-588e873b649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed541d4-ab44-449e-b41e-ba6c5c859162",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4274dc-0ad0-4257-bf8c-695e7984cb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcd76fc-77bf-49a7-8298-925802dc296e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6a6e6f-c3f4-42e6-a7ed-405469be5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50dccbce-e8fa-4524-8aa5-2bcbe7196631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40515b56-b462-4c9b-abcc-aaef1b39c993",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8354a0-dc87-44a9-aaba-81eabc653970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f3839b-0812-4297-b561-20655d7694b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab7c5a7-44b4-4084-bb64-6587e8ceeff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5bbc2a-db5c-49e3-94bf-40d09de8d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ebb8ec-ce22-44af-88f8-a5bb996f7ab5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d9f08c-78c9-43cf-85ac-2b22514925ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036298e8-85db-437d-80a7-29598c7c17c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31086d32-d7a7-4a59-b34a-f39dc2f24de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1d45d1-5010-4714-b728-5ce098acc47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44b31ca-7dd1-4fd5-baaf-cc35869ded0c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff026a87-f13a-4a52-8d7f-a6e30d21fd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5366eb83-bd51-4a25-b998-7a07dafaa24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4438679-e9d7-40a4-8c05-a382347e8214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116f1a66-d22d-43e3-a2a7-98104915348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f68d96-e2ab-4596-92e5-e7cdf568a1ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a45aa8-7e3e-449d-9741-4915cbe9e629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e17b392-7e3e-459e-bfaa-cef76e685064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9b2d2f-eece-4b66-b634-694933a1060d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc9bdbd-54fe-4c0c-a288-4b2c192c68f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a60423-1f31-4fe1-8724-06115cd4fa47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c8f8b6-db1c-4840-99fd-e602341f25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6af71ac-967d-48ea-8343-d8ef176830f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3cbed8-84b8-4620-a158-353a07814a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85b3c8b-05a3-44aa-9343-e6fbc5cf486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aea909-5922-42d0-8ede-baac08678f08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5349e9c6-0828-4367-9ff1-6b1510125eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89058048-405c-4e87-8611-048874465beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c64f30-b243-40ee-a796-99fa9d9b2443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bd922b-5ef5-4c51-acc9-0100eb7b49fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2625baee-3c9f-4701-9ea8-97dc8f386b3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f092b3-e4db-4e55-a1ba-c7272b3d1fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8584eeb-6d67-4bd3-95f0-d11e96f41aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe9e7ac-ae03-4d72-b5fd-26f11b412e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "108599e5-85fd-4582-a226-89e7367f1b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9618a7-57c2-4dad-bc8c-27f7b42ba83f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c320a-c927-4d42-a8ff-d63540c11c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819fa0ae-2017-49cf-91f3-e6bab52cde6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b485794d-599f-4b59-9f3e-344825b8e4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee2e20c-ef69-4539-8113-5319e97cb38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3e98d2-8695-4cea-bb83-8703c2f3a455",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8784ce5-2275-4aff-941f-f00abb430726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ce97d2-1d9b-4374-b8ad-17d856db64dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bb4b60-b67e-45ed-91f6-7b9d5ca1b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5cf9c8-832b-4e22-b359-43ca2f5f56a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e870fe-b1bd-4d0f-b0df-b6f78a17505e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34edcfea-1955-4b8f-8ccc-321852e0b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8619c2a-7585-476b-96a9-9173cac383e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34ba985-1a10-4322-b744-35938877c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ff1d02-da44-478b-af5f-43e31cde8cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21441cd2-a4d0-471d-a29f-a556a1422418",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edbb81e-ecef-4a6c-8e24-2d79fd167c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc4437d-974e-4314-a0c5-56e0d87ce0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798bfa9-2965-4c63-9d37-86294a7b8236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ea1261-f644-43e3-8b10-5a92ec2c6045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc9be73-6159-4b59-abbe-6096de9e1c13",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1e5e1b-93e0-4877-9de3-2ec00a4c433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8849cc-2647-405e-babf-5e54cff8fab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bd4e83-8c7e-40e9-9f1e-fd7fd2419e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02eedf9-dadc-4d55-83d7-6a2e7e53e1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaef1cc-6286-4a5b-b1d7-640d81be8184",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2ece46-1829-4ef9-98c9-d130fc04cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af17f7b9-edc1-4d14-a351-f2dc3dbc7db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a85f324-0a73-4046-80e0-75ac214a15f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e765216-157a-413a-bf7a-5074bcc725e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b9f295-1fcc-4ad0-b25f-e6b5a92bc622",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb521d-9b2b-48fc-8c96-499360899f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e71e39-e1a6-4cec-952c-a764a96d98b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40806ccc-ea87-4c5a-9c79-c962f0602ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef9f03d-9371-470b-885a-1b1003376995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff5bcba-7ce4-4075-a418-b7038ddaa688",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cdbc7d-396f-40ff-a4ca-59e08cb070dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f967e541-0580-4eaf-8156-d66211ae7fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151751b-1da8-45bc-b230-f18c96d22117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e4df8f-acf7-40e0-b9ee-c089c8085281"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee69e087-a31e-4c93-a064-18170df4ac6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "555551ad-3430-4066-9371-d77972c0ffc9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce90c17-e110-456b-8c17-2bec930fd61d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb9762b-b90f-4cf9-910b-6534347dfdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeecaf3-292d-4ec8-a7a0-59f613214f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a04982c5-d62e-49bd-b68b-1cd1381a63f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee08558-0316-458e-a49a-1347aaafa462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798a2359-ebc3-486c-9e60-68a472e82d5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c95d33-f90d-4250-84e9-07139f0c16f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6371b0d6-db10-46c0-b9d2-1d22d1d12ba4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "802262d3-fb18-4ade-af1c-5b6c3bd89e17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b44ebc62-4562-4b2b-baa5-1905d99ba331"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d13fc14-97ff-4010-9c43-12fe64ab4741",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3ffed5e-5640-4c99-bfa3-c264f41cd85b"
            }
          }
        ]
      },
      {
        "id": "62abac89-106d-4e94-8313-bdbd9a7a56f9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5659cfae-3235-41b0-96c9-e28091f28a0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23177ed0-d0b1-468e-8cef-ffb5f7ea2313",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eaf92912-d0d2-4268-b127-363a822f6c58",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae02118-a547-4bf6-b8f6-5eea3b53b777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edb8e6f-26ca-44ce-85fb-69f34cbd3747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43370258-93ae-4638-b80b-5574a432ad5c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095d95c-e349-4afd-98eb-e99da1bdf0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3977e2d7-1e3d-449e-81e6-819fb188a1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acd5180-1142-470c-b614-270ff3f91fdf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a46ad4-812d-4777-86ab-93936d6ad8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b3fe93-48d5-467e-8c58-a7e9218fb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d012494e-8f72-4729-9a7f-5f9517da1c90",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71367e15-4daf-4e23-ade8-4d21a1d6e77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec1dc7d-e672-4aac-babd-82db7ec0fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6286b1-454a-4a02-a197-33842c129c64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebee7897-cec8-4008-baf6-15dff929a611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365e428a-7b83-4fc1-b58c-59149f557f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f447a94-6ec2-4a08-a4f6-137c99cc1300",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c272dfd-12d5-4d69-9f04-fdb930289aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99166a97-c8cb-433e-a7e2-bfb1acf6aad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8fad49-5bd8-47c1-b58b-5d81572a6314",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb7e8ef-3b23-4d08-84f3-c85dd456d194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ad4d0b-0e84-4530-b87c-62d14d57d804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62994f35-9aa3-48f7-8fa4-84edb8893b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e14ba86-5587-414b-bfb3-3a1a4ec022f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e7ac7-1ec8-4252-8c97-eb62bad3a566",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36314467-d56a-4c92-bff6-2eaa1a1487ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337f64c3-18bc-4970-aab7-0731ebd21d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54013645-e8a0-40cf-b754-d6cfea3b8b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fc5b00-161a-4fa5-a396-0b77f4d6f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e24c978-0f16-4abe-8c8f-37b535ed2109",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdd75b4-b1f6-4115-8838-0d107f383e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0580d2-5e3e-4bca-a185-c66206dcdca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887d8bd2-4a7d-4221-8554-aafac0438b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f07bb60-ab3d-444f-b685-c9f3c0354f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025ba2c9-22c7-4038-a6d5-3bcc51facce0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912dedb9-7082-4c0c-b45b-3b26b2781f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55c0418-f28f-43c0-a610-34c430f62dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d02152-a128-466d-acbe-c92ec4fb8ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a1c052-04d6-4428-8db8-774a456026ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d1627c-0c96-4b03-9e58-be67d43e394e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f431f6-4bd8-48e7-91d5-b8b40ff73d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89eb55d3-f5a5-439c-8be0-ef72695e48eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dde5e3f-b7dd-4a7f-b2e4-a09f75da5db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23472c90-4f4e-464d-a208-738e052b903b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ddd18d-a3fc-422b-b2f8-9aeadd5df7ae",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df37455d-79ec-4893-86d9-433c8ae5769d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1b090a-c350-4541-9160-3f2fc97bbb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36dbf3e-64a2-4d7d-97c9-aa2e02d19aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc387d8-dd14-4976-8bb1-3a14e4bccbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d60abc-37ae-44ae-a609-4a44ea6fd081",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac5cae8-0f6e-4825-873c-1a1bf4d806ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732f1be0-47a0-4291-99dd-d5d1128d4f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2f650d-db9b-45b5-85f9-6f9f0e14f6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5a2510-4056-46c1-af5a-e1afb8d1fdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd3f88-ce83-426a-bf4b-e0422daf3ff0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10162273-7598-4079-a20e-d7ca5dce4ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeafe6eb-d4e1-451a-8b2e-1537d23276f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8bada4-302e-404b-819f-def1f66384e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66c8ea6-cb2f-4b82-808f-dd1ffc404970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c061ec55-2e93-4a02-bad7-65b055cfcd3b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aea9ba8-8535-436a-b85c-5bd3973474a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d18bc8-4ade-4a17-8c7f-c2ec90485c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d422f2e-88a5-4393-a005-96a102d6b015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62334a17-c14c-4519-a7a5-369b18db11ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4f934e-b35d-4ec9-9f21-87e727088b2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea0f458-bfa1-4c4e-b157-1c6211d27c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3f8db4-0e14-42f7-8bb5-e9cd5da9d534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8bb4bb-ca89-4381-aecd-2df769690e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8006770-0a88-43fc-b97d-c0feb9edabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a0011a-d6a9-41d8-a865-f04034de6a26",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e27de31-168f-49c0-b188-4a626e6eea29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c49e36-6d38-480d-915e-78208d591ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ff67ba-96d7-448b-a4f0-d160bca0cc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3078c4d7-d0a3-4e2d-9b1c-8c9a088bd12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ac6f5f-31d9-44cc-9fc0-407993e57829",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2796e3e6-3571-46d7-9427-5ac2b0ae5774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89b494-aea9-4b1b-9e0f-d150fbb92002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05b9aad-eded-4ae2-ba34-1487fb12a7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6906955-c66c-426a-adcf-4d8193a6c57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710f5256-f72e-4a78-bd85-d9b51bfe9268",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c13af6-3afe-4c5f-909b-5b2df63e5d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6adff81-bf36-4c0b-8186-fd90f4b14de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ebb3a-b2a9-45e5-97e7-9b9f036408eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd6aac4-6482-4d85-8107-0f04f2abb38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9ed54-5c04-4a60-87a5-2e5b3e9a403d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea53a46-3022-4ce6-a919-46367803e00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34daec7-3772-4751-969b-2083e26bf1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3f40e4-975b-4809-ae52-1fd524695098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33cebed-55e5-44a8-b57d-9ea15e88ef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cde2a4-a350-4b31-8be9-af8e8a2de041",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c148cd-0929-44b8-b3d2-17ae08e7e024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd303f07-19cf-4158-a9a5-910be8353c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5248d9-2335-4624-8434-187c04e50020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c95cdd0-311d-4f3e-8518-8f5fbe7b1758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc0cd68-4af0-4590-978e-7bc1bfec31b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd0941-b774-4def-b02d-d194e8d0067f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84be4ed6-2af8-475d-8b0e-d940d44edb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8393ce6-a215-4f6f-8f9c-5630c0e22b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b04f417-9548-4df3-8aa4-5c3812c08ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae740dfc-3a25-4b52-95ea-749f1d352c57",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d275a389-d0e3-4f2b-8e59-b2d454cce9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52dec08-d693-4306-b540-2578b62bfb33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a97e61-0920-4c8c-ad37-4d2997e14b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6936cb15-6a5c-4332-8015-7561312c09f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d8ba3b-1046-48a4-a536-1a9ddccb0484",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8c74d4-8c45-413b-842c-05eb379009ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b181928-b73e-41e5-abc1-2d600a164429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efebb7-0dc6-4e9f-b8ef-dc2ed0a84fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70dcabe-d563-456d-b241-18bfd4433251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cfb289-1ee3-4289-a228-596ec654b26c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4730f23a-0fb8-4a8b-820d-e8b5e88607f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28a81a4-bdcd-45e7-85b5-a30e5509f7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b576f2-ce8e-41b7-8de4-c2656feb271b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4483df43-bc1a-40fe-90e8-b069dd7954b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86ea2b5-9223-49f1-bd99-53c19e7b4ce2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a1bf5-8f06-401d-8422-41d9c121ec51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436bbf78-ca85-45e3-b068-97bc41dca572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07950211-9b70-4173-a3ae-e6811d1c03f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30d63d6-d766-4ee4-9767-ff4fb6c78b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413f49a8-da13-4502-8227-c009537c7f9c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aafa515-7749-4018-8661-106cf4e96f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8fa9ee-67ed-43ed-95c3-facbe4fa36dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4470e5-a96a-4aa3-b52f-1270cf052dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b82ba5-4c68-4d1b-bf92-a63169801a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c27e8d-a086-4a5e-998b-692bb455d4d5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62756503-b414-41ea-ae3f-ccfe39c85f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85151f7-267e-45ca-a25e-132a26d0c1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c3253-fe30-4a61-8910-b52dd5ed16f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4679a376-4363-454f-8287-cd7cdad2b5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78206d40-b5e0-429e-820c-3adb1a3d3ce0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cd084c-91f0-4f2e-97f5-70a9360768bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e263cbd7-f306-4434-8f27-86cbc7314838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b515a-5df4-4d1c-8b46-211c6c8bfa73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba42732-f869-4356-8969-a3926dcbeecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1f368e-a7f8-4d8e-91f2-25882d10c458",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057bca2b-8cf7-490b-9278-f21bd332f659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3fafd0-2318-46ae-b5c4-c1d640a4bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf5697-44aa-405c-86ba-3e7367a02afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f3069d-e075-45c7-9ddf-896f01899484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e162c6ee-f79e-4ccf-9230-448b17103e90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaa41a1-bf0c-41eb-b875-d28dec7c721a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db43ce82-c822-4b32-a10d-1768f5791756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6a1a48-1616-48d2-b6d1-781159550d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cb8af1-54c0-4e73-b815-44f3ad74eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed57dc9-5c74-483d-acc6-4a94c2646415",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c84c76-e8a9-436d-aa90-e399ec335e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7ca64e-5b8c-4a3d-ad60-a38f5521a2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a2c3dd-cdf4-407a-a071-faba9869176f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2017ce0-d2c2-4029-ba67-1275d13cf7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74ee93-aa01-44c6-8c21-11e3b56f4df2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69b6d2f-de34-4c65-862a-3589360daad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008faa69-841b-4229-8491-0284af6913ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cd5499-c92d-4217-b124-f8600a1adc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30884e12-cf51-4dcf-a6da-ae920cfab69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0482a4-4b4a-420d-a3c9-0944986dc96a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed9dbdb-5e95-4438-a76f-8d7c419d4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18fe9a22-3629-429c-aa25-5f3d1bad1255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50ee47c-1a58-4096-97a1-4453dbf9d5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee6a4ba-3fee-4a50-93fe-f9482670c122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45383b2-39b3-446b-9d3b-f1541dda6fd2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0487f4c-84e5-4480-af47-b548bd3b452f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fb2412-84e8-45c1-b3c2-50dba1d1a641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014d85e6-646e-43f4-892e-1d4fe32f6386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2170747-e1ed-4362-bf47-a68710a39d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52789af-164d-4f68-8a3c-eefbbcdb98bc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6d7b06-7aa2-4ff0-b09c-2b05a6e89e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70945328-7ecc-4e76-8ee2-ac4b276e2288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b97db13-16ae-44d4-9fa9-0e21ac38427a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad62fbb-c89b-477d-8130-7a0f95fb4a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eea2eb-ad90-4c74-b744-cadee2e66e2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4d7a5a-3c17-448a-8550-0d3d218dc842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bf925b-3f5f-4549-8ad7-edd3df644066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52128bee-91b5-4cf6-ab49-626713d178ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b611c6b-341e-41b6-9a87-3ec825f1a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dda20e2-6936-4289-90a9-5705a5be53e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a0f8f5-d8d4-4dcc-9dc6-cf2c3dfc8dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67694318-c25b-4e0c-a9b1-9e0d6480cbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e024a63-f82a-4613-b247-8097ba64b56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660d94de-0bbd-435e-a635-4fecfeaf9723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db94a611-63aa-422a-9f3b-64d5defc7649",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3028ae77-b4c4-4636-84b1-b5d1d7caa0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c814c048-200a-42be-b01b-674810d048b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dad9061-2278-4de1-99c4-45d47f689537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e04dd8-4d2b-433b-82e3-40d9ac1e9251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599eee84-7ffe-487e-a6f1-2e7974cdfb90",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efae82e2-27ab-4642-98d7-dca7abd4a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374a28ba-cf9b-46ce-b2ab-43b414a6b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17c8a33-add0-4020-aeb3-02c5558b6750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100cb3ed-b0c9-46c2-997a-c147fbcb309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c7919b-e2a3-4319-bbd0-67877b6ee9e0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c22b8-e477-463d-933b-e2398aae8ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef072ac9-f9bd-4921-8570-bd43d9e7bf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7697f-fbe8-4b24-875b-7711061d0bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa04c893-738d-4c31-861c-1556f23257ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a81bb37-2115-4311-85ed-4baf2e18d1de",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9cc4b-1dd4-4717-a091-3adbae7f6d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb89e69e-37af-405e-ad51-478d2b682c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec35c6e-8a3e-46f0-bf32-a175c288cbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe2d031-ccba-4ca2-9eee-d484a5655419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaf644b-02e2-4e88-818b-9552bd45687f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613c611e-0c59-4523-8220-a3e754876d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8aba45-9431-4995-9a32-80ccd607f5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bd33c0-d720-4041-a8d1-2d4a34c226ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f805ebc-52fe-4eca-852b-7b3227e192b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb08e3f-5480-4039-847b-7f7025b68923",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd08ce5-bb6e-4133-bf85-5b61f8e9e921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf34a3-757c-420a-92c7-d0b603dd61b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eb7d23-08bd-40de-83c6-951090dac93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6930d8-17e4-4b29-92d0-14f7f698cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5d5cb1-3893-4b6b-b9a5-d8e365f137ba",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ed8fc-49af-4609-86f8-280aafff6d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157599f0-5389-4cee-85b0-356e630ec982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e8f36c-1db1-4a20-b35b-b059e49f648f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bcfa78-c755-45d1-b592-458f916f5360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f09b2-5d9c-4497-aa28-729981c7b931",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d13aee-2349-4f31-a54d-fb484afe16ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49388291-154a-496a-96d7-bd2b89cc015e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b959ba6-9c22-498d-92dd-77f8b17b6a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864ecf0f-cdb4-48d7-a86e-298d2d155408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4184f1-9f97-44b1-af76-82fb9bd90239",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ab79a3-7eda-4871-a21e-e192d254a6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7d7edd-3d48-4bfd-900a-3eba841dd432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a8c992-f160-40b9-9803-4ffd49941023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04dd23b-3d3f-41d1-ad66-1416bf5c3d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c5ae85-6cb8-4506-bfbd-cb0efa4c0042",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a215df9-1f43-4bc1-ab03-7368ca2b4b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f49064-81e6-484c-9da0-c6501a9dfc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c5f5e5-49e1-4143-b0bb-011d699e379e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855e0841-4d41-4eb4-a95c-d104ab776f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adc0a21-9017-4853-9369-f400667462a5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f691ee03-6396-43fc-8dcc-2c2c5ad2b07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa193bd-ae2d-4326-acd9-c12801aa61f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e3b05-0d96-4667-9591-3b4a8a1ea029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580e591f-4673-41d5-853a-37febdf896ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3598887d-82ec-449b-a4a8-2d27e125c6bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87757327-1bbd-4327-86e7-ab41db4064fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfb8890-e398-4f9a-9660-138efeb179b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbef777-e4a5-43a0-8229-0ff94881c3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db10051a-bce5-4647-a420-96e5fc7fcc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919cf063-4f56-467a-bf30-07c9a8b74770",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85248d0e-2552-4e45-a153-6f0ea4e1f2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4f1332-08e3-4af6-a7f8-0b3ad8f393bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb1351f-c78a-453c-a867-7ea338d905b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921582c1-6db3-4e3e-aec4-47984c280df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154d5f19-1d88-4618-8de1-b1f155dbc0a2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594ec6e4-12ea-4fe9-8e59-d525ccce2591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0aecde-218b-4bfa-85af-675e83de697b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b26447-db47-4fa5-8ff8-6b1c9e8da062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cbafd6-f1f0-4079-8d45-ae390cfd1d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4855d476-eadb-4c05-8fda-6421775d49ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc676676-5752-4f58-8bed-03fd3d1100fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59bcfd9-df28-45d3-ace2-ab79be0103f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61514cb7-2c98-4f9b-93cd-b521f2aceac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc95031e-4bc1-49a1-b6ef-43219fe15f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af895ad7-9e44-431f-aedc-43e2d0a148f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cfae3b-d9fa-4143-ab85-69567bee30f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5057ca2-d5fe-4b22-a10e-0ceced319912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6fece5-f94f-49ee-b9ef-40e9e958167d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0052a036-c9c6-4437-b2d6-e69a83d5fff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b87e2-fcbd-4619-a73c-cd3c9e16fc06",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873e79f7-92ff-4a3a-9e38-0a0c9d45a107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ba4ae8-5012-431e-ae00-0893f44df5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe606a6-2461-42ad-b5cb-cef004d8fcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a60b212-f779-404d-aa62-84f70c072efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec43f43-2a8f-4f76-9a84-d0febfedf7ae",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e187b3-df48-4cd7-8a3f-f30464c38369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f41b40-ff27-4c49-adcc-e3f697c26cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56547c54-c53c-43b1-a39f-7ef9b6a813e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f53d42a-dbec-4edb-8e79-821156f1ca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e89edf-9dfa-4d10-98c3-4fdc9d73c1ba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5202f09e-02fc-42e6-b094-1731dc9b22c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a807ce6-738e-4052-b69d-612d0d2cea3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d4583d-dd64-4c11-8046-741f4afd7327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd7d2ec-7bad-414e-9964-7b331a6927d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01817237-f9c8-479d-8b93-ba21f854f0db",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0b797c-992b-4471-9208-d124bb410701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece3c831-6134-4e6f-9e48-24a74dfa23f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db0d07-df1c-4a8e-b8de-09f7cfc434df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21c28ea-8365-47ce-9757-39fd81f570ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29825bd4-15e1-46e9-98d6-a58e786d447e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b92a48-2a0e-4ac4-9b1d-962368bd7814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6583a684-a362-4f9d-9fb8-56eeb6466160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7530246-a5a7-43e8-899f-2ea8f9d9a514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2247ae2d-2852-4bc1-9f3d-ca6a7ce97683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b98107-66a4-4e22-8b23-6bf1437a0f9a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafb8002-d418-4bb3-b115-ad69a8461c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa691391-d763-42e8-b70c-462a01cf68be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ff282-f90c-4515-9512-72dfea08ee05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a33b5c1-6dbc-4600-a140-9dd7ac3fa686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e72a9b-64e2-400f-b2e3-e588801c73e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8ec5c-649d-4917-874c-3ad64c6efe05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5544c820-35fc-48c4-a065-6136e2de408e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3627a1e-7665-476c-839b-a25a73c857e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507a782e-af52-4d1d-87e7-fcb1970a3f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c4f6be-3d28-4db6-ad6c-bff5adf3b438",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db489ead-0326-4a80-ae4f-5c5a4ce6bdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cefa4c-6018-46fc-bbdb-3c56f0130a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b56ca5-4340-4454-8419-7c0199334d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c90f485-7c05-4582-9dde-305dbe0eefeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad28db6-9d92-4eb2-861c-dd712bb8cddf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3dc1ef-1797-4e01-937c-b40067fb31bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b0df81-133f-4b62-b7b8-11442f6d1bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f73140-e600-444d-84b1-d2e83ce02b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4f1d0b-c2f6-4d14-a6e1-c2af07327632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7793733b-c5f5-4f0f-a21a-45be091416eb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c03f6a-a496-4cec-bafe-8541389e8a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f780193d-c2a6-46a2-9828-ae693fba92c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52e53f1-9c87-4837-8ee2-454ffba3e958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8562b13b-7f77-421f-ac48-460bb31e27df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51d1da1-5d5c-41b4-9ff5-e9eeff9276f1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c4d68e-c907-4476-994e-f6f6508d60bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b2bd93d-47f2-476c-98a8-f97d80a632b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceae55e-c641-4927-9c8b-42c3ebf43f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b76694-311e-4fa1-b1f6-291fc52d1a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c508c942-fbd3-4340-b606-5e66d58b9be8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d275d5f0-9188-47d3-94cb-2b7f32743dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0bf9060-e514-4580-b15b-7c40340d89ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb06c42e-2edc-46f3-8b5a-3767506126b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40234508-01a6-47d4-84e7-ae210032eb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b5bb31-c9a0-4c33-94af-b3bdfc39add8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f9afb1-5d41-42b9-b16a-2866ff6b2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a7afb8-a77e-486a-b553-1d301fb40116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bc32ba-310a-413f-ad09-f3623a6e08a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57387d95-3076-471b-9bcf-81b79a2a7194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea4a0e-e8f4-450a-95c2-ae313129aa99",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553e592-26c5-4edd-a889-a5d39d51f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5f7387-e29a-4d53-a696-d55244f4850a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f922d8c6-491e-408b-b784-daae81ed5429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53ab6e8-8c1e-43f5-b047-a2e9d7fae422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf6f896-4e13-4725-a8ab-6126d0a83d39",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29ec8d7-1a3f-4313-8240-a4e9477406e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559b7338-e93d-483d-b614-b779570532e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa26d76-6c7b-47d8-a720-8edc73d8de5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eb2552-a760-44ee-b2e9-8a22bc6a98b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353ebe22-da00-4c73-a305-08583b4f4379",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c6c509-2a49-48fe-a62f-e02bd6690cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ceb14c0-9259-4250-be37-1a7ce15f4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20049f22-a1ba-4588-b47e-da9ac0498210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed93708-b816-48ea-9f9a-fabf9b952e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f23acea-fa95-4be6-a2e6-ecd19e7a0bd3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496df827-4d0d-483a-a257-9b7a7b12498d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ff8bca-3eaf-4f22-81b1-db2af7c0f387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3af030-e54f-4dc8-9fd1-dbb0aaaf8af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ad68ac-8da4-4081-b06b-42a6eb32ecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671e482d-ecb4-48f7-9462-b26c166f3fdc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4593ce2-6582-4e53-9363-815df8f7f99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2791f6-d111-42c0-a054-d13b9bb06c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b8b204-1ef1-457b-a7ee-9c14ffbee809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83869d58-b2cf-49e9-950c-e4ac6aaac0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0415e5-0d67-4bf5-930e-03e3ec6213bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4824ab-8199-4c33-be69-5afdd206ca25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7606bf6-b1a8-41a2-a25f-96d04e695e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2052bec-9748-4e65-95c9-cbbdb4bceaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd949e3-e877-47b8-9c10-f7064a18d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe9e6a5-6eb6-42c3-bf8b-3011d39abb25",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f82ed2c-56ea-4466-adfb-6e178838c655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e25b58b-42c4-4c22-ab99-9ed88ea87295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f445d02-4058-48e9-8750-81302cd388a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b31ee5-b927-4d89-95a9-90690f49794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b103e41a-7937-4894-9bcc-ad1661749a12",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eea0960-65c1-4c18-86c4-17ecbb8539f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7801387-cb63-442b-9d09-30dfa64cdaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619adbe5-66cc-400c-9230-3caea291e95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827f6c33-55a6-462f-83e1-58f826bfde13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485ccdf6-1489-43a9-a108-87baafb1620a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94772240-db02-493d-9403-ce05ab4cbd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615a10a3-02c3-4a64-9144-c0f30f6aa848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c48f97e-e0d3-41eb-8386-9670a3dfcafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202c5312-c056-4271-9ab0-25221632e014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d1c144-b6f1-4e4d-b7f2-efb2ba753894",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5996aa0-15a0-4ad3-bf7f-cc75b5cda9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa83ecd-51a6-49dc-afaf-a9c3b47588af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87a8ece-6e5b-4d84-9e2c-6b1d2bf4208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44025de-95f9-4c9c-9b26-11757dbbafe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04200169-820a-44c1-b8c7-f3c2ec5749aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095d1a2-3a90-47b2-ab56-9404c65389cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4f85d6-d960-4960-a5ef-855eaf238667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b54e63c-7abe-42b4-8fbd-b8f3b5214e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04b2744-aebe-4ded-a0f8-cb3f022dfd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff9bdf-9164-40cc-8e10-8fe63b2dafb1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e80247-079a-4dc2-8024-b9a7774f9183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058235e8-978c-4fe6-9079-af584b1505cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94339fbf-5499-4a65-9f0e-5ef3514bfe81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94eb8ec-b649-40e0-80cc-4f34ffb4cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924ad6bd-cd7c-48a9-8d55-67ad41b43b7a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f220c1-1290-4a90-abeb-0d9de34850da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fdab14-4eca-4bfa-9fa8-ecc4882e5af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9815b53d-b2e0-4c48-a2e3-bcf8fd0886ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359a3e94-9653-4e9d-b762-7f8272b76068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8172bd2d-ffe5-409d-aeb1-3ece6cb5528b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7365b8-0b81-4f34-9c16-9be436b0decf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411df6ce-9373-4006-8022-ff2988e50b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a502feba-949e-4c09-84b1-008c6028b0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfa545c-fa23-4710-974f-19a861f0e0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977995ef-0c56-4652-b45f-a9a203e47502",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473ca260-18d5-452f-a4cd-d50fe3110230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beaa12c1-3201-4ca5-b207-c2f39e13f7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bde40b0-1fe4-414e-a6b4-7b19855f06f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb797c4f-6f92-4dee-8637-7113dae6d68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a423ebc6-c902-4675-8941-196b5190c2e9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba25c8a-f344-4a14-99af-933501180a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65fab0b2-5c8c-4f13-bdff-bece7485a4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e9322-b70c-4b43-9f56-cfdd555534ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a47d81-f388-4837-b78b-fca82f26077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a5a5a7-8c7d-4986-91a5-4c451767f910",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708b814e-e6bf-41bc-8e53-93639003d13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c84ac8-56a8-4089-970d-e5bd70ef0d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d923930-853f-48a2-b23e-029343816a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550a1900-02d1-4f9b-b57f-f571d12176ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864c98d2-ea80-469d-8297-d74198347344",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080dd1e1-c8dd-4463-85c3-4bde86ea5640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ddede1-8d44-4057-80af-1de742835146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f99139-2cb4-48aa-82f2-647c23e4e406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672a7092-a019-4d0e-9ab6-1cd6b66022d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63752f33-13e3-4fae-82ed-7928dfa2113b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920dca12-38c6-4ee3-9bac-63d56fb57493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddb6796-84ab-48f2-b477-81e59695179b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20dc17c-add8-4d1f-b58d-3be257d940e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f571fb7-4e33-4f16-b0b4-3448e576e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57790d5d-cde8-42eb-bc99-a0abcbbe1e0a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0073ea40-6c1e-45be-be1b-ff4a3f6e4bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9324c7-9f79-4ea1-93b1-797a355dcaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9b9961-3dd9-44fe-961f-cc1dd9504671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e0495c-0342-4842-90b5-6bdc8f9e6f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18675bc-d567-403d-8ef8-d463998f11d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827e30ed-42e2-43c5-9bf2-9ede565c84c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1ceaea-3273-4ab1-8a9f-2bf1502325d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9622f41c-3057-4905-8918-c9735e6326d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae87649-02cc-41f1-a3de-9b1568e3aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517ddd0-8481-41d7-ab28-a2ce90709eaf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9069025-4ade-44c6-a475-77448c00ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49575f7-66e9-4693-a601-33a5c55b06c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfc5f81-f271-4c4b-b4c8-dd087be0a964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3784e5d-3ebf-4466-b78e-40ee0fdcdf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9c4bc-98dc-470b-aac3-cd7fdf052bde",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd22adc-f05b-4b32-8516-492de355de39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d65f73-b8f7-4aea-b57b-b276618d6779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1590dc07-4c03-455e-aa26-bfd65aec8f23",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ad33b3-9c65-4c69-baae-8171bea58f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5e726a-3b9e-4935-8794-3c4036ccb9ae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd717cb-155d-4a0d-b9ed-066fe7c43137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5adc3d9b-74f5-4004-801e-193b45b90a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65968762-a47a-46a1-9207-9f2875799867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddbba5f-6ab0-4de2-837f-25e9bc109530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870a58b5-14e8-4d78-a45d-cf48b3a30e7e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e15512b-4705-4bc3-b983-df727a9f7611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3471cf-224e-49ac-8c42-b813aa921bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f59cbd6-40c5-4cdd-a6fc-70fddc085b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c635f3-14b6-46ee-aa4a-998021b853d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6c3df6-c216-4569-99c3-35868d1fdc08",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46027835-2088-4251-af88-bdfc383fdff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a664cd45-0cbb-4544-bac9-dcc211a147c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a099dc-93bb-4519-ba2b-c7ce6acbb509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af4c2e1-fe31-41f7-abc0-b544c4ca7cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f586e73b-8a1c-4d82-959d-a4a90834ff7b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbaa2d9-a223-43c1-aaed-ce0dd6cd835c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff94076c-cb35-49b1-ae52-cfa2149ef6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a174caf-0d8b-49bf-9f6b-92e45498c74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15751e3d-cefc-4890-a679-ed6bfd9c11e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102a6754-a5c8-4347-af9a-709cf47518e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299aea3f-8ece-43a6-a2eb-dd332c07a210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a65df6-d480-4245-8492-97a0b5416064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7c1070-b9d2-4a78-878b-3f13cea29eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dea074-d150-45b6-8fbd-0828f9701c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04098cdf-fbe0-4c54-aa54-c394bec47e44",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58de2cf8-d74f-4f20-8dd5-8a3c1938991d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a57c10c-c92c-4aeb-a5ba-ef166405e711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9d873-be25-4f62-affe-34d7d2e9ce36",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99158dc-fdfd-40f9-82d9-41751f5ff83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30a514d-af0c-4e30-880d-a260d8db9eff",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82219dfc-271c-4505-8bfe-676d84dc13c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80555fa1-bc42-41e5-9a31-536b6b8e6b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d3d2be-fdff-4d46-bff5-96e978c2225e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429ace79-9a48-450e-913b-0606520b4877"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57204d00-ef3c-475a-a01b-e08340394190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "137f135b-5ff9-45fa-a8f1-f0c504505663"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce0b7b2c-bf52-4b54-abd8-da851c5b38b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9bef505-b165-4ba5-84e9-3a4148af536c"
                    }
                  }
                ]
              },
              {
                "id": "e23471f0-47d2-4870-bcfa-cceb1e5c4884",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "945c3d14-dcef-42f1-b7d8-d5fba9ca33ea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513f6cdf-4937-4b76-9f7b-3bb4c33a54c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "76ad83a7-2d39-47b0-aa01-8c96e8a1e0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef9de62-9fd7-466a-86b2-5599b42b4c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3a05a8c-b33c-4043-bad8-53cbc7cd3012"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9edbef68-3564-4351-bef5-95904cf75fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367aa01a-5be6-4681-8391-c70df279ea59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4e81830-ee58-4bb7-90a8-b263f77998aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acb7b8e9-bceb-4e0c-9ec7-696b5da4ff8d"
                    }
                  }
                ]
              },
              {
                "id": "6f5187e0-6881-43c1-ab40-77bed5ad8d43",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "572775d0-2c69-4d43-9c69-3c3232ce6eb0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712bc9e-0296-494a-91d6-b9552a8104fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d387ca15-90a2-4d80-b467-aa7c50ad6000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b823ed4e-80ee-406b-85d3-680e80a1ec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33003f86-f207-4c3f-aeb1-59cc885a53d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1942877-8542-4ac2-a84d-7467a0e0082b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "832983d2-452a-4cc7-bb6f-c3aa5a3e6037",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6406ec-673b-4815-859d-959e19e15422",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a435044-2719-4ce5-952f-bda62ed088cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1957e352-7674-46f5-ab4d-6ed73ee3c2c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2086a8b4-4321-4bc1-964a-f95e00280e65"
                    }
                  }
                ]
              },
              {
                "id": "3b327ea6-28a6-4c6d-bc8f-c4195cdc39fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f780c3b4-93f1-402a-b2b2-bc0623cd40c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68375f7f-698d-460f-8a87-eeb746e1b55d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a997a53b-59f7-45d8-833c-51a24bcc1eae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6d0b6f5-20e3-4462-b6ce-4c8657123ebb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f1ae9c1-c511-4f43-8435-0e9fb4640d2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "958f3832-1226-407c-adb2-8365308afcf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a110d3e-58e4-475a-b80d-d0933cfcb165",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6789fd45-010f-495e-8845-f11a7bed4d04"
            }
          }
        ]
      },
      {
        "id": "abfc3db7-c082-4265-8430-384da5c22707",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f9ff31d-f166-4f61-8260-96a9abf97180",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111e3bb7-fec1-4354-a448-3d1590479fa2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df552d34-86eb-4aa4-9487-679c9c5cee32",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1289eba6-c43f-47d1-aa65-7e86f4c768cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "87e8acb2-aab7-4f66-a93a-d755524acf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366cada5-5b9a-4922-8c4e-9f7085854062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f922ef0-8b85-4d3e-b6d7-d4badb164a69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b74d88d6-857b-47f2-a0fc-3775f1788552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcfc37b8-f48f-49d3-b348-ac7948e8667d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8fbc88c-25a4-4478-94a9-075720e67d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a71b4127-e276-4404-9c79-90578a7bcdb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d81d495b-c580-436f-bb25-804c206a0e21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b15c3eef-e815-4ad2-be5b-b378acbacc6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "088151a2-fa61-4491-bc36-3a01da348a79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a43f61c-d7c0-41dc-94cc-ffc287246f68"
            }
          }
        ]
      },
      {
        "id": "44c2ef33-0a43-4ab9-87c4-9394156db6f2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7b0adeef-91a8-4e2f-9fb8-d313ea1e2234",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75194b84-e742-495e-aa1d-a9796ffea4a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04cf9772-7045-4b44-8319-01c7be6fbeba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a17f17f-34b3-448b-bcbc-e00c5878f586",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7012416-3ed4-4fae-856c-228e87e90019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d48653-4cfc-4526-b085-6390ba8f80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc4a6ce-382e-416d-bc95-3e3e0eb0742f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bc95d19-5a02-419b-9902-c1193f26205b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e09cf87e-fffe-4c24-b706-6a74d6415285"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1de01e1-031b-4fee-947d-71cd4a86a908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60b03ca6-0722-4f70-8ce9-056582ceae61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b96efa5-0258-4827-93f1-4e94808c9b0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0455fe0e-c191-40ef-90e1-9fa615ec3975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63824e2b-8b39-4c93-872e-7e2787c34b75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "231dc726-34bc-474e-9704-90d5e5525941"
            }
          }
        ]
      },
      {
        "id": "d833d104-0edd-44fa-9781-12a0c334ace6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b84ae496-2fce-4c53-a239-5208fb01cbbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb9adb6e-014f-4613-b4d5-449fe629097e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32dc4248-a8d7-438a-be84-afe396ebbb31",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a5f66e-217a-45f5-a97e-840f288b7d86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f688cf-05d0-4b01-91b7-38f49c0f794d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e30f3f-7bbe-4853-b191-7fb9f0af1589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ae99ed-2e2a-4eee-b227-8c3b1d025ed2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "513c5c91-377c-423f-9da9-34bf7f9a0294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a69b0c77-a673-4023-b7a2-d96465b40dbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8151cffd-49af-477a-893d-93d67d3475a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1aab7c74-220d-4730-b2f4-0fca3486565f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b97206c7-bf71-4e5c-a56c-1cbeaeed1e21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3de66db6-e8dc-4bff-8230-6ec720dac4cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8799f76e-2a83-403c-be1d-0e1dd5bc3964",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32fda057-cbc3-4754-b858-65297803a6d3"
            }
          }
        ]
      },
      {
        "id": "90fab95d-2990-4f05-a827-ce1468993071",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25c8789d-f64a-4392-8c69-28a6b6d415d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf604160-1289-4c91-b7d1-f65f622522dc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1076828b-a501-4877-ba47-d67c0e2b57d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96f467b6-35d3-4036-9994-88d3b5f1f6f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6832f84f-7174-4d01-8dfd-9df44e14fcc3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 88.24999999999997,
      "responseMin": 8,
      "responseMax": 6901,
      "responseSd": 484.5448414471216,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713573293050,
      "completed": 1713573323699
    },
    "executions": [
      {
        "id": "1968a176-5e69-411d-aaeb-a0a35efbbb35",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01235130-bcfb-4689-afd0-ad151ae15052",
          "httpRequestId": "be593ad8-6f81-4c16-b053-a7a0bd91bd61"
        },
        "item": {
          "id": "1968a176-5e69-411d-aaeb-a0a35efbbb35",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3cb4909-726c-4982-aacb-8054fb48beee",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "d5f30dcf-9350-4804-bb69-2a99a536a5f4",
        "cursor": {
          "ref": "44746520-38e4-49c0-9c62-9bcbd50c1cf3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c90f3dd-6225-44f2-9942-032f8ae2a3f2"
        },
        "item": {
          "id": "d5f30dcf-9350-4804-bb69-2a99a536a5f4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d5f8b067-bdb1-4692-8c8b-110d0d608fef",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c39ced18-013e-41ec-99fc-cf6ef520197c",
        "cursor": {
          "ref": "83b78f74-b78a-46ae-a08f-bb5fa6c238e0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b4ece4b2-906f-438c-a304-ef13c0255466"
        },
        "item": {
          "id": "c39ced18-013e-41ec-99fc-cf6ef520197c",
          "name": "did_json"
        },
        "response": {
          "id": "74a522e6-f00c-48d4-8072-7be2226a7f12",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d356f7e-28b8-47d4-a9bc-028f5558dde7",
        "cursor": {
          "ref": "4b05e15f-6517-4198-960d-7cc29b65144d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59cc8c42-01f1-4f58-bb8a-35b166ba5663"
        },
        "item": {
          "id": "3d356f7e-28b8-47d4-a9bc-028f5558dde7",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c2ffb42-fa5a-4aba-b1d8-b641bb3c9574",
          "status": "Not Found",
          "code": 404,
          "responseTime": 450,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d356f7e-28b8-47d4-a9bc-028f5558dde7",
        "cursor": {
          "ref": "4b05e15f-6517-4198-960d-7cc29b65144d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59cc8c42-01f1-4f58-bb8a-35b166ba5663"
        },
        "item": {
          "id": "3d356f7e-28b8-47d4-a9bc-028f5558dde7",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c2ffb42-fa5a-4aba-b1d8-b641bb3c9574",
          "status": "Not Found",
          "code": 404,
          "responseTime": 450,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520556d3-981b-411d-beca-6a8ddbc38a95",
        "cursor": {
          "ref": "32185248-a816-431a-a640-f01ace218f02",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc3ff850-a3db-458f-a54d-212b34cca70a"
        },
        "item": {
          "id": "520556d3-981b-411d-beca-6a8ddbc38a95",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f97bcb84-d752-445b-9c3a-42880b8e3ca3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16116bc2-ef99-4dc3-a8e3-7a3f8a520cda",
        "cursor": {
          "ref": "5c3bd8a8-74a1-41eb-9342-475e161d6f69",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f4ecf87-b4a9-4c2a-8f72-4968529163e1"
        },
        "item": {
          "id": "16116bc2-ef99-4dc3-a8e3-7a3f8a520cda",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "81f46014-52bc-4192-9702-e2d329c742da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0916b52f-3a2d-4c14-9e2f-4d97038a99e2",
        "cursor": {
          "ref": "6936b2bd-9621-4b19-8e91-ddd663d053e1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c2fe4eff-c0e4-4ea2-9202-843fb0b71808"
        },
        "item": {
          "id": "0916b52f-3a2d-4c14-9e2f-4d97038a99e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c8c0a072-d428-493a-ad9b-2d54ab40bd1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e34896-32de-4a73-a581-8cd8a574460f",
        "cursor": {
          "ref": "cf419075-b2a2-4460-b44c-4682c485bd4a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0b8a7b5-07ba-4df0-aada-50ecfaaf757b"
        },
        "item": {
          "id": "12e34896-32de-4a73-a581-8cd8a574460f",
          "name": "identifiers"
        },
        "response": {
          "id": "8ea0c767-02b8-47ab-a415-a0914742c2ed",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6af8cf5-9ef6-4133-849d-5e2f3010f11f",
        "cursor": {
          "ref": "87c5b156-0a0f-4835-9c27-518eb2c5481b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ba276508-7cef-46ae-8dbe-efa2730ba8b5"
        },
        "item": {
          "id": "c6af8cf5-9ef6-4133-849d-5e2f3010f11f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "60729369-0bad-419a-8b09-0f4f41ac17f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3f0335-5797-49e3-8051-590dd5b5b479",
        "cursor": {
          "ref": "99032711-cd91-45cb-9cc5-fb2a0f2a5be2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c042e04c-28b4-44fa-b7f1-0f493343177b"
        },
        "item": {
          "id": "4c3f0335-5797-49e3-8051-590dd5b5b479",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "721ca120-66a3-4242-bf0a-dbb5a5c46bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a555b83-5159-4110-9e53-393119c91bb0",
        "cursor": {
          "ref": "d1b3f173-db4c-45d4-b1bf-dd0f2799f553",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0e8ec54e-8fdf-4c68-8ef1-adfa3e21aae8"
        },
        "item": {
          "id": "8a555b83-5159-4110-9e53-393119c91bb0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0e61e3f4-716d-48ba-9538-ef9a094db7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bdbed1-29c7-43cd-8069-30c38baecb22",
        "cursor": {
          "ref": "e12ce3d1-97aa-44d2-82f3-e57efeb26e68",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "406d4555-c01f-46c9-9bef-174ef613adce"
        },
        "item": {
          "id": "83bdbed1-29c7-43cd-8069-30c38baecb22",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "013cde1e-f720-4689-b1f0-e0278cf429bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63d87be-ccc1-4cb2-b17f-27c6904a0fd0",
        "cursor": {
          "ref": "8f6a4927-881e-454f-aebc-eb5811258feb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "354f633a-82fa-43a4-9c82-50e0378bb462"
        },
        "item": {
          "id": "d63d87be-ccc1-4cb2-b17f-27c6904a0fd0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1a824bb4-bcbb-49c4-a99c-2d685ce1e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f42c428-202a-42af-9238-6241e2f1443e",
        "cursor": {
          "ref": "fbc98b8c-b66f-4282-96a8-9167fb3c3fad",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "66e36c10-3fb3-4e86-8ab1-cecb034933ce"
        },
        "item": {
          "id": "0f42c428-202a-42af-9238-6241e2f1443e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "58b1a107-4b71-41fc-bc15-6476e32423be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a862907-adec-4d82-a014-4954aac199a9",
        "cursor": {
          "ref": "3f5c8f17-297d-4b60-8652-4b9659614d11",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c6dbca0-98c8-4c39-aa85-6b5af700a09f"
        },
        "item": {
          "id": "6a862907-adec-4d82-a014-4954aac199a9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db9095e3-7a6d-48c6-8bdf-89ab66fccc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31f8120-a7f4-4503-bf13-c5e7adc11370",
        "cursor": {
          "ref": "15688ff8-5216-47c6-bde2-52a9f51366ca",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d969dfb4-2705-495d-9fc5-5efbd4157a22"
        },
        "item": {
          "id": "e31f8120-a7f4-4503-bf13-c5e7adc11370",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "44ebfcfc-f4e9-41a2-a414-29b1127aedce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac260631-6394-489b-8103-4b427d789234",
        "cursor": {
          "ref": "90a7a576-66d8-4fcf-ae89-2306ff45dccb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f872b5da-75a9-47cd-8e4a-837135dadfa5"
        },
        "item": {
          "id": "ac260631-6394-489b-8103-4b427d789234",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5ca3d4c6-54d7-4ef0-9882-91f0e8b5f79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7e1e8-14b3-4b20-91b4-2a6d38cbac1a",
        "cursor": {
          "ref": "6cd239ee-4e45-4331-8ce8-078018e75b12",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8a765ace-831d-4da7-a026-d3a2924ef7a1"
        },
        "item": {
          "id": "d5e7e1e8-14b3-4b20-91b4-2a6d38cbac1a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1db26363-2cf7-4c82-b84b-b5cc1ac488e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05eb586-4953-437b-b24d-3dc847e53217",
        "cursor": {
          "ref": "c53c24c1-5c32-4f3e-ba2f-439f32cbe9be",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8b1e3e82-a115-4f71-870d-9281d7d41d62"
        },
        "item": {
          "id": "e05eb586-4953-437b-b24d-3dc847e53217",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75da3274-e8ed-4792-bc3e-402c9e7ee486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0195022a-7db5-4d96-b7b2-75fa2aecceb9",
        "cursor": {
          "ref": "ee8f24e2-c290-4e65-9466-5826f534fd69",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "835152b1-bda8-42e4-91e3-4e26f8bd08b4"
        },
        "item": {
          "id": "0195022a-7db5-4d96-b7b2-75fa2aecceb9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "03244578-32f3-4d25-8b6f-597b295c85e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50048fa7-3c16-4423-a1a0-8390f59af29b",
        "cursor": {
          "ref": "2fa1c8b1-8843-4d60-a417-3a9a7ae4c552",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ba8bb990-006a-400d-a616-b9208f2b344b"
        },
        "item": {
          "id": "50048fa7-3c16-4423-a1a0-8390f59af29b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ca1c5939-662d-4f03-89db-55b6c8417698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11320a8-2995-408d-9d4e-e017584850b9",
        "cursor": {
          "ref": "11650a4b-72fe-4586-a3a5-f249a262b63f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2594d4b6-f48d-4b38-b61b-a9035c7b2f2f"
        },
        "item": {
          "id": "a11320a8-2995-408d-9d4e-e017584850b9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "41ebaa2b-5cc1-472a-b627-2def346cfa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f22377-f048-413f-bdca-a6268c57e47c",
        "cursor": {
          "ref": "b49df21f-b301-4012-8903-b93cf2d6b49e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "700ac285-1168-4058-8b1c-ad643b139fe8"
        },
        "item": {
          "id": "39f22377-f048-413f-bdca-a6268c57e47c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "94e5a2ad-a580-465f-9a42-dcb11eae4794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7171fdd7-e795-426a-9132-88ff5822d678",
        "cursor": {
          "ref": "08c44250-9163-4ace-a6fb-a01f54a39d7b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b391fb73-9c53-4673-b17a-207b67929c8b"
        },
        "item": {
          "id": "7171fdd7-e795-426a-9132-88ff5822d678",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1bdf535-3d3f-4704-b1ba-dec232f6f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1333376d-33e8-45c3-b094-7591037b6160",
        "cursor": {
          "ref": "061c1d82-a40d-484f-a20b-5d711477280e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40a0e8e7-1687-404f-9e7f-7ef5398bd29f"
        },
        "item": {
          "id": "1333376d-33e8-45c3-b094-7591037b6160",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3a2e4a86-40e5-4a53-8a7c-f3f3c6d5436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c369a55-65f5-49c4-83ca-e629c0f95c40",
        "cursor": {
          "ref": "42393952-41dc-427a-84c5-1c3cccf0748b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c3e21eb5-ab3f-4657-9d03-7040d0891fc8"
        },
        "item": {
          "id": "9c369a55-65f5-49c4-83ca-e629c0f95c40",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "78b9d993-bb36-4800-b3dd-86ced3866022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19543036-b571-4416-87e8-0cfdf5f2d3e0",
        "cursor": {
          "ref": "badf9906-6b5a-4334-80a5-1cd09c0ae843",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ae96816-1075-4d2f-88c9-3243889ac046"
        },
        "item": {
          "id": "19543036-b571-4416-87e8-0cfdf5f2d3e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ae150b00-81a2-4b30-b158-f9e611357365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819f1ba0-9724-49ae-9e29-934aa9ff05e7",
        "cursor": {
          "ref": "3807b1e0-7b87-45e7-8500-42e871af6f75",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "99273035-fe80-4662-97ec-f8ab20bdc893"
        },
        "item": {
          "id": "819f1ba0-9724-49ae-9e29-934aa9ff05e7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "af086214-d8b1-40cd-a2bb-d436315e561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c3ea2c-6d89-4348-b194-ea247d93c86e",
        "cursor": {
          "ref": "e534ffaa-0120-4e22-a666-9f63962de7d6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a2527f6-546b-41a1-b909-c9acb6ca34e4"
        },
        "item": {
          "id": "f0c3ea2c-6d89-4348-b194-ea247d93c86e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c2b1e998-6724-43d9-9ef8-7b5f2e1e3325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a33205a-f74c-4cf1-88a5-a3b2c1a5e6e8",
        "cursor": {
          "ref": "bc90c8e9-b2fb-45db-be1a-124a12926bfc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "23fcb439-733c-4aef-aaa6-058daa64fd70"
        },
        "item": {
          "id": "0a33205a-f74c-4cf1-88a5-a3b2c1a5e6e8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e78ea525-4aee-4aa1-8302-b17aa46cd5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc986e32-10ee-4ebf-a915-ff013c2924f7",
        "cursor": {
          "ref": "4a5c6efd-3a11-47d3-9dd8-8dd79b1eb8e7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82c68954-01f9-4db2-9f3c-0a0eb2770297"
        },
        "item": {
          "id": "bc986e32-10ee-4ebf-a915-ff013c2924f7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2efef937-0b79-4388-a7da-6c3bcf72e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d9e7c1-d0e3-4707-9b7b-a5d38be1b9bd",
        "cursor": {
          "ref": "a3320dca-8e4f-4f7d-b482-d5f433272bd5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5237a807-b076-44a5-96c5-19487101cd9a"
        },
        "item": {
          "id": "85d9e7c1-d0e3-4707-9b7b-a5d38be1b9bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fe15a497-9743-423e-8af1-e3eef9ce90a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf9b3b-fa2a-40e3-bf3c-b44e3f480ac4",
        "cursor": {
          "ref": "867f7eb5-ef86-4e9f-b76d-87f5b69bb966",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c08ea33c-a34d-420e-b036-300d46b5c44c"
        },
        "item": {
          "id": "e3bf9b3b-fa2a-40e3-bf3c-b44e3f480ac4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0ab91062-c19c-4784-9971-8a0ff0247737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372455d7-9ad9-42e9-bb75-4a6bc4005903",
        "cursor": {
          "ref": "036dca21-9132-4156-9923-886704e0cc14",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "78be1118-b7ff-44fd-803b-8870643bfee7"
        },
        "item": {
          "id": "372455d7-9ad9-42e9-bb75-4a6bc4005903",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8153152e-5d54-4827-87f6-5f5548296914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1943d4a7-a119-4914-ac77-723c00af8e19",
        "cursor": {
          "ref": "227ccdc6-83a8-47eb-ac63-bcc868aad228",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ef14efd9-f4c3-4129-831c-c3078dde5b01"
        },
        "item": {
          "id": "1943d4a7-a119-4914-ac77-723c00af8e19",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2c651328-443e-4ccd-a8d5-62fb070e7014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b29c10-c505-4905-b828-c0406309b4c2",
        "cursor": {
          "ref": "0d8d143a-4f2f-4531-a4aa-15bcada90ef3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e7c3d752-873e-469c-8047-60cece7dcd09"
        },
        "item": {
          "id": "a7b29c10-c505-4905-b828-c0406309b4c2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "47ae9e23-a28f-445e-b1f6-ad65c8f90630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9efb9cc-87a9-4a83-822a-094f36b0b713",
        "cursor": {
          "ref": "5a55d2a4-5242-4ed9-b13d-8d32fdf46e7d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "231eb9ab-0916-482e-aa74-92113016cef5"
        },
        "item": {
          "id": "e9efb9cc-87a9-4a83-822a-094f36b0b713",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ad02d510-50d6-48bc-8283-6a4846a65ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37a9a9c-0dfd-4065-bfe4-e87ffe0aa12e",
        "cursor": {
          "ref": "0ff951de-94c2-4730-8152-73a6c4bc0ade",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e863b94a-29a8-4b56-a228-9bbee15ce153"
        },
        "item": {
          "id": "b37a9a9c-0dfd-4065-bfe4-e87ffe0aa12e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b95ab39c-0c18-4eab-8a21-6815a18bee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5d4ca0-1c5c-4b4f-8a13-867d53c8b7f8",
        "cursor": {
          "ref": "47b568cf-5d65-4d67-883e-c16248d381e0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4da1d137-f6ef-45cb-9da1-aa95c728fcf3"
        },
        "item": {
          "id": "da5d4ca0-1c5c-4b4f-8a13-867d53c8b7f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cca236ac-3753-4f11-8e86-ac53294170f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866fbb26-feca-41de-8eaf-b71bbd19505f",
        "cursor": {
          "ref": "a186dd60-3e21-44d6-b586-d195a3f9c8db",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a3d73dad-5682-4b72-90d5-a34c4cedf22e"
        },
        "item": {
          "id": "866fbb26-feca-41de-8eaf-b71bbd19505f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e0219b64-9996-4408-b91e-414f5102f7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a206e55-b7e2-45f4-af9d-3efd9730e789",
        "cursor": {
          "ref": "ce4601e0-b2e4-4bb3-a232-7f276c887540",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "85366e5d-686b-4b15-a18f-44e655fb7683"
        },
        "item": {
          "id": "4a206e55-b7e2-45f4-af9d-3efd9730e789",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d139ebaf-d4bf-40ec-8e94-52b2fb27a536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6e3e92-3848-4cb9-932d-f763de6127ee",
        "cursor": {
          "ref": "acf1009f-19f5-4b92-88a6-6cb326c1d4ac",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6322bdca-99a3-48fd-9633-72b9e892074f"
        },
        "item": {
          "id": "5a6e3e92-3848-4cb9-932d-f763de6127ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7df0c479-05cc-4039-a9ba-605e164bc0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb33e7-4bb8-43c9-b383-f00ba3c8d624",
        "cursor": {
          "ref": "db9144cf-f26b-4ac3-a911-76d18300e6ae",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54323369-e7f3-430d-bf88-711ac573db03"
        },
        "item": {
          "id": "91bb33e7-4bb8-43c9-b383-f00ba3c8d624",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "837a55ec-f407-4e25-8daf-2fff6dc1319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f74164-8cbf-42a4-ad3e-d5d2666c8255",
        "cursor": {
          "ref": "fbf0afbc-7ff1-4d2a-9c30-2aec07db58a6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "511e01d1-28c2-48e0-a8ce-aafa7e86c6d9"
        },
        "item": {
          "id": "01f74164-8cbf-42a4-ad3e-d5d2666c8255",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "003c7260-22fb-4375-a4a6-600e955e8f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f89e4a-5091-4f3d-bd1c-50d01d967e24",
        "cursor": {
          "ref": "67d80b5c-cd86-428a-8955-5fc7d7da0238",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f39024a8-ff9f-460a-af6f-d1b32e908b8f"
        },
        "item": {
          "id": "85f89e4a-5091-4f3d-bd1c-50d01d967e24",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "841cb037-b5b1-4db1-8182-e920cbf0fdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46551b0-a9b3-4e16-a50a-79c70552cd46",
        "cursor": {
          "ref": "cc1303d6-099f-4d31-8e5c-02d9fe07480d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "24b26fcc-2942-4533-9907-e5ff750d4040"
        },
        "item": {
          "id": "d46551b0-a9b3-4e16-a50a-79c70552cd46",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f9acdef-e9cb-4cf5-9ec6-f24817cd1b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45338e83-a889-4436-89ab-fa86c85971bf",
        "cursor": {
          "ref": "d5608e93-f450-46c3-9fbe-2b9440966b1b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7ab62741-3ad7-49b7-993a-a011d24016bb"
        },
        "item": {
          "id": "45338e83-a889-4436-89ab-fa86c85971bf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ca5a86e0-ef79-401c-b3fe-0e91d8cbd31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d81453-d374-470c-8999-07aa3af4e947",
        "cursor": {
          "ref": "b8e33150-db18-4da1-8746-66904f5737fe",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8d818cce-a783-40cf-bc96-e9f8c4d0f953"
        },
        "item": {
          "id": "a1d81453-d374-470c-8999-07aa3af4e947",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d3ae46a-785a-4a07-bf5e-59b193b10e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2058d1-ff48-4742-a21b-b6b63524bf30",
        "cursor": {
          "ref": "492e252a-d9b6-4081-b92c-19e397ce27fa",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "199bbdb4-8ff3-4a9b-ba2c-98d24bc7fabc"
        },
        "item": {
          "id": "7b2058d1-ff48-4742-a21b-b6b63524bf30",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2359012f-8ce7-4184-8034-fc5a764466f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da885c-c959-46d0-8802-6c75e6380768",
        "cursor": {
          "ref": "bd991dff-4186-49eb-bc43-df0bf61de75b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "53ae9372-95a8-4878-a3b5-1f5f12f8fd41"
        },
        "item": {
          "id": "60da885c-c959-46d0-8802-6c75e6380768",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d55d5974-28e9-4750-8c8e-776fef984424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90d1aa1-c08e-4b6f-b843-7a9a50745d76",
        "cursor": {
          "ref": "e9387eda-56d1-435b-b982-cdfa83087984",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b9dc76de-5ae1-4a15-b9db-e025375ef37c"
        },
        "item": {
          "id": "f90d1aa1-c08e-4b6f-b843-7a9a50745d76",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "095eea14-c245-4d1b-9211-63d02d03c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7529a8f-b118-43cc-9a40-18bfab585200",
        "cursor": {
          "ref": "8f2b237f-9fff-4514-9815-22dfd4949624",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b89f5643-2b8e-4f73-9adb-1bd98d3a0af4"
        },
        "item": {
          "id": "b7529a8f-b118-43cc-9a40-18bfab585200",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "93c51bad-2e49-49a4-8162-f27c46dd5ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f16c0-d34e-465f-bbaa-ea4ebb530e12",
        "cursor": {
          "ref": "f31bb314-2334-40b6-9de9-0b539556b456",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "33788b1a-de65-4ec0-b1a6-5cb1842236dd"
        },
        "item": {
          "id": "257f16c0-d34e-465f-bbaa-ea4ebb530e12",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "36b1aabb-d854-4ebc-9d29-03354ab247b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe53e9c8-1c35-4a31-8c96-37ebea227754",
        "cursor": {
          "ref": "ad2743c0-feee-4f2d-8fe7-0beb4e498676",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ce314b82-6cdf-46c5-96ad-04169ef67251"
        },
        "item": {
          "id": "fe53e9c8-1c35-4a31-8c96-37ebea227754",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "18ec23c4-5f43-41eb-b568-de03650dc747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399e606-2350-4409-954f-0a63157889cf",
        "cursor": {
          "ref": "e89696c9-66e1-4745-9382-63963c58d515",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "85aa2db1-a52f-4be7-9453-9a8612c94ab6"
        },
        "item": {
          "id": "e399e606-2350-4409-954f-0a63157889cf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0846036a-0c18-4657-83ac-663fb7a078c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dc11b2-8128-4ee9-b7c3-14ab24525dc9",
        "cursor": {
          "ref": "4b67cb30-d5b8-4a64-bac0-10e38f8b11c1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "25a3a296-30dd-489b-a44c-e8b51793839a"
        },
        "item": {
          "id": "c2dc11b2-8128-4ee9-b7c3-14ab24525dc9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c513d46-43f4-433f-8220-757a34304123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773625b9-1a8b-4af6-a238-71a0e9bebe76",
        "cursor": {
          "ref": "5695ad11-2ef0-416f-b5b9-4a1316e1ef9c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "11118441-db01-4246-abbf-daac1d081c13"
        },
        "item": {
          "id": "773625b9-1a8b-4af6-a238-71a0e9bebe76",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f8a70b2-5072-4041-a3f7-30b5b08b06d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b8a5a-ef14-4fcd-b184-5a0ddd12b520",
        "cursor": {
          "ref": "3350c908-4ef8-4e09-b2b2-bc8afbcb0573",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7ab82ae1-95f2-463d-9c79-4f11c2896760"
        },
        "item": {
          "id": "f23b8a5a-ef14-4fcd-b184-5a0ddd12b520",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b600e99c-451d-4c5a-b911-56c2e50b989e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d8ebf5-ab8f-49ce-b3d3-f60f82fdd742",
        "cursor": {
          "ref": "ae52c347-18f4-4aeb-b068-8a3d324c6ff0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3c927c7-bb0a-416f-baef-9855f19b5065"
        },
        "item": {
          "id": "e3d8ebf5-ab8f-49ce-b3d3-f60f82fdd742",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0bd6bf6-3b36-4d30-a31f-1757786a1d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9112ab7-590c-4fc0-b3cc-25cc2722fdee",
        "cursor": {
          "ref": "66734724-7a57-4b82-975f-fa5a510201ed",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d3df45ee-e3b3-4d36-b46c-0bd4dcd5d728"
        },
        "item": {
          "id": "c9112ab7-590c-4fc0-b3cc-25cc2722fdee",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d0d27f10-a811-4e84-8277-4a9b6a175253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae86714-28a0-4b2f-8c26-20c4fd6aeb6b",
        "cursor": {
          "ref": "fba3a267-34a5-425a-bee2-c591d4f28ea3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "31e051d4-7ec7-42e1-9460-8590351b283d"
        },
        "item": {
          "id": "0ae86714-28a0-4b2f-8c26-20c4fd6aeb6b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "34ff9c34-6436-4898-8436-1d7d4dfca309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f116cd-0f6c-4b43-a01a-fafa3e13c52e",
        "cursor": {
          "ref": "4ba4379b-5908-4c6f-880e-263a9de46702",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11572c7e-46be-4d96-9bcf-315956d6cd2b"
        },
        "item": {
          "id": "44f116cd-0f6c-4b43-a01a-fafa3e13c52e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "001c5096-33fb-41ed-ab43-7cb123ef1b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f67694-c723-41b0-8426-372d119310e0",
        "cursor": {
          "ref": "31e012fc-7024-4d36-968a-df305c422089",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "338ba767-b51b-4cf5-8fac-454859c0cfe1"
        },
        "item": {
          "id": "24f67694-c723-41b0-8426-372d119310e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4d15708-5232-44b2-9116-d3c48f80ea14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a934a537-fd12-4ea9-988e-02138cb2674e",
        "cursor": {
          "ref": "9aac0ce1-d197-417a-9645-bef11f0b872b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d95328a5-251b-434d-98bf-8e385bf84213"
        },
        "item": {
          "id": "a934a537-fd12-4ea9-988e-02138cb2674e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "336d2881-8a84-4e72-8f8d-22569cb34b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362fa160-08cb-4fbd-9b77-b5fde25dd066",
        "cursor": {
          "ref": "d7873af2-dce9-47e6-964f-4ee28af6abf8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8c441be4-f2c3-474b-b326-b5af0e6a2142"
        },
        "item": {
          "id": "362fa160-08cb-4fbd-9b77-b5fde25dd066",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5f8f8182-6a87-4570-a060-10fa66ab0359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8838d3-a944-4c99-9798-0ba3e8676c7d",
        "cursor": {
          "ref": "d07d29ab-b39a-487a-a205-6eb0fc739622",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3e3eadb-b0cd-4e27-b088-ef5a5915b2d8"
        },
        "item": {
          "id": "8c8838d3-a944-4c99-9798-0ba3e8676c7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2fe8ccf7-d0df-47f9-828f-72c5aaa24b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32664af9-7f0e-4fed-b82a-4e90fd99aea9",
        "cursor": {
          "ref": "e0601e43-0d92-4759-81cb-930cffe14f06",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "95ef0806-7be0-4819-b24d-5db2e35b482a"
        },
        "item": {
          "id": "32664af9-7f0e-4fed-b82a-4e90fd99aea9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b4298e0-3700-4b2e-b3f4-e8c92154bea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fa7098-be02-43f9-823e-3fe52000dd33",
        "cursor": {
          "ref": "c7123757-d03c-47cf-a12f-2a61331c7d62",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "de1d2224-b7ea-4210-ae0c-baa8950720bd"
        },
        "item": {
          "id": "44fa7098-be02-43f9-823e-3fe52000dd33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bf16c544-6c12-4e4c-a8f4-d31472f42931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab9954-0f0d-42f1-bf02-3d75159ee048",
        "cursor": {
          "ref": "d703c3c7-f4ed-41de-9705-e3341b757c4d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cf87cfb1-04db-40d7-97e7-345a94b2d16e"
        },
        "item": {
          "id": "c9ab9954-0f0d-42f1-bf02-3d75159ee048",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "168ba93e-3af3-4d13-92f7-bcb11114d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63408d68-bd24-4dda-a8e9-e2d19699d607",
        "cursor": {
          "ref": "46c86e54-f48d-4ec9-9cb2-5d8292b40e94",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0300013f-d42e-4b51-be71-05a8351d292b"
        },
        "item": {
          "id": "63408d68-bd24-4dda-a8e9-e2d19699d607",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "917bc851-d5d5-42d8-a037-d6c33381153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc55bd07-1ab5-49ff-a0f4-e013648562c1",
        "cursor": {
          "ref": "e3b398e9-4f1b-416c-b06d-57c430f1c25b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "85605b30-f4b9-4c72-8413-757ad4ea25a4"
        },
        "item": {
          "id": "cc55bd07-1ab5-49ff-a0f4-e013648562c1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f94014b2-d6a5-441c-b9a1-c4ceaf3bd128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdd5fa3-dd93-4acc-a04f-e7d5ba22c5bf",
        "cursor": {
          "ref": "78eae991-72ce-4481-8cda-e1f08041c3ec",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a74dc213-3c48-46ab-8233-205aa4632897"
        },
        "item": {
          "id": "ecdd5fa3-dd93-4acc-a04f-e7d5ba22c5bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dd7b59e8-d591-4a1c-ba71-d613e739c5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c852ccc-b016-4e72-bec7-2a6a03e57c5e",
        "cursor": {
          "ref": "fbae8dea-04e9-4035-a2d2-585902a25640",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fe260dec-01b4-46a2-9464-cf0e519582de"
        },
        "item": {
          "id": "8c852ccc-b016-4e72-bec7-2a6a03e57c5e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5d08d7d4-5757-43a8-ac37-648cf51d9595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0589b5-7e28-47c5-81f9-d4881a43f646",
        "cursor": {
          "ref": "084c09af-ef2c-4170-a1d8-28675c5b6896",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "809597da-6ec9-488b-801d-7b02114d3491"
        },
        "item": {
          "id": "ff0589b5-7e28-47c5-81f9-d4881a43f646",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5fcd6456-594e-47e4-bd74-49ff2fcb5288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48d9513-b78f-4ac2-9ce2-c4f5b43d56f8",
        "cursor": {
          "ref": "037c88ac-04b6-4df3-b25e-b826f80fe39f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "caaddc3d-a073-4969-914f-4d4206ce1112"
        },
        "item": {
          "id": "c48d9513-b78f-4ac2-9ce2-c4f5b43d56f8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e7e207a1-eba1-438c-be87-5df780415e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bdeb7d-7368-467e-b46b-53bfd8559e15",
        "cursor": {
          "ref": "2caf67c7-c5cb-41e8-a831-b0f3494779d4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2a908a05-985b-4a53-a801-44df9319c600"
        },
        "item": {
          "id": "52bdeb7d-7368-467e-b46b-53bfd8559e15",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5fa869ae-3dc3-4460-8bef-8b987fe7d2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f00f038-d24c-4957-8d9e-02c84e327610",
        "cursor": {
          "ref": "848a68e8-9fc2-4fab-a414-7bf45114a45c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3b396d0d-99c2-43da-9f19-84588095e333"
        },
        "item": {
          "id": "6f00f038-d24c-4957-8d9e-02c84e327610",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ad7f3278-eee4-4997-9173-d75736fa45a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3134b-4f47-4d9f-bcae-2a5abe2c10cd",
        "cursor": {
          "ref": "c15c899d-3cdd-4a0a-af3c-2d1c97b44dc8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4b4be49b-be28-43b9-b157-a4f94c7a88d9"
        },
        "item": {
          "id": "28b3134b-4f47-4d9f-bcae-2a5abe2c10cd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eac29664-bff7-4dc6-852d-f53d8243a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bd43d3-473f-4b4d-9149-0589d25043f6",
        "cursor": {
          "ref": "75da2370-65b2-4c96-9101-2da28e6b5e85",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dcc4a752-1a43-4924-95cd-a9b1cabc43ff"
        },
        "item": {
          "id": "32bd43d3-473f-4b4d-9149-0589d25043f6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3da80069-d932-48de-b9a6-8a2f5337cca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42138cd0-8ba2-492a-9c76-5eb4aa63284d",
        "cursor": {
          "ref": "b542d698-b269-4866-96a9-8d45755ef0e2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5cfe7be3-6f6b-4425-bd0a-e25e0fd72970"
        },
        "item": {
          "id": "42138cd0-8ba2-492a-9c76-5eb4aa63284d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3f53fa7-bd90-43ab-9314-6a78a3e67e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e626c4-740b-4144-9374-fefb450c3064",
        "cursor": {
          "ref": "7759b6dc-ca9d-454e-a66b-c0813b91ada7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7e643edb-90f7-4b35-886a-b1ff2092da42"
        },
        "item": {
          "id": "d1e626c4-740b-4144-9374-fefb450c3064",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "17a985d1-0a2d-4c51-b343-d73f009cad37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6509d4-4e73-4a01-b69b-535d2a823e0d",
        "cursor": {
          "ref": "8d3de046-f245-45d6-aeac-669da9507a6a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a74facd8-2e56-43cf-905a-c0feb9def114"
        },
        "item": {
          "id": "4f6509d4-4e73-4a01-b69b-535d2a823e0d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f0f46626-4c3e-497c-a21c-5956f924dbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796cb3d7-f6ce-4cab-8910-1d6badb00f3a",
        "cursor": {
          "ref": "c3a43d5d-9078-4c4d-9e7c-4e681e16fa6a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "48181299-483f-4c1c-bf7f-fa8847fe7258"
        },
        "item": {
          "id": "796cb3d7-f6ce-4cab-8910-1d6badb00f3a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aad26fea-080d-4a30-8553-b8c582519bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faac3f82-9c72-461e-a0d3-6db67e4ec737",
        "cursor": {
          "ref": "66764230-20ce-4b42-9be8-f72884665c09",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2121db75-a5a8-46df-95e9-03d93c63551c"
        },
        "item": {
          "id": "faac3f82-9c72-461e-a0d3-6db67e4ec737",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d226e460-d37d-4dd4-a4b4-61c395bff112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf05e39-0e47-4963-9791-3693f9c279d8",
        "cursor": {
          "ref": "1e39e4b0-8124-47c3-98ea-56be396e0c88",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8ae50103-bacd-4bdc-80cd-d1a03c0a452f"
        },
        "item": {
          "id": "daf05e39-0e47-4963-9791-3693f9c279d8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68aeb90d-246e-4889-8d3a-1baacfd6d12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506815e-d3ae-4d0b-ab1f-d23d56ca111a",
        "cursor": {
          "ref": "4ec80f46-aeac-4c67-a2b8-8d6510bb6de7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "667a5a01-84b8-4880-8f85-e4c7b54dbe36"
        },
        "item": {
          "id": "b506815e-d3ae-4d0b-ab1f-d23d56ca111a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed39d0d8-5e31-43cf-9c8f-cce9494e872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e919d4e-601f-40b3-8431-deed6ab1748e",
        "cursor": {
          "ref": "256fb90d-864f-4a48-be43-a7c0fe72f5fd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "72fb67af-0ad3-482e-bfa9-0036086f098e"
        },
        "item": {
          "id": "1e919d4e-601f-40b3-8431-deed6ab1748e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f255e2b-235b-4306-b6dd-9fbad15fafc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2634ca0d-2727-4f66-8fd1-a391d5bfa93e",
        "cursor": {
          "ref": "5f50037e-486d-490f-b463-55601f2e4129",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e4e78d5-0a35-4b8c-94ec-8562249bb3a7"
        },
        "item": {
          "id": "2634ca0d-2727-4f66-8fd1-a391d5bfa93e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7743831e-d642-41bd-9912-d4263b12fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9005be-57bf-44a6-8164-938b0c4d3393",
        "cursor": {
          "ref": "5413121d-17b0-4871-aa60-457efe36ab91",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c74eeb20-6d58-440f-81c6-6549698dce2c"
        },
        "item": {
          "id": "9f9005be-57bf-44a6-8164-938b0c4d3393",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "138fbfc0-f69a-4be7-97f7-1b1abdfdce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689d0ad5-25a8-477e-a639-573370a90268",
        "cursor": {
          "ref": "f9fd6236-28d7-4d4f-9b43-ee1a32f6339c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c1d7bf62-e730-4f0b-bfe9-f9fa99276d36"
        },
        "item": {
          "id": "689d0ad5-25a8-477e-a639-573370a90268",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "486999e1-a85d-4d22-99b7-d8bd5323ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc869cd-e602-4039-8d2f-970997270106",
        "cursor": {
          "ref": "b43a773e-fe26-4210-807c-fe8414b6048c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe0c7c09-9891-4aa8-941f-b6b6743a0c39"
        },
        "item": {
          "id": "3cc869cd-e602-4039-8d2f-970997270106",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f5394720-c4c0-42ff-910a-54f7b7c4ee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc939722-6df0-4add-84f7-3dc7c7a6c1f1",
        "cursor": {
          "ref": "f8509346-1c93-44cb-8b9f-846acff4edb9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd0cc3a7-83e4-4119-8d0a-432f139dc1b0"
        },
        "item": {
          "id": "bc939722-6df0-4add-84f7-3dc7c7a6c1f1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3bd208a8-e375-4d3a-9f6c-97312229ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91169baa-b1c8-4a46-9348-8caeb058d096",
        "cursor": {
          "ref": "9a42d9f2-55be-4bc8-9ef2-396b13e7c745",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6526e22c-cab2-4b2d-a22a-906b86cdf726"
        },
        "item": {
          "id": "91169baa-b1c8-4a46-9348-8caeb058d096",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "01758f0f-01e6-4c44-80a7-c5617b08745d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d0f936-6556-4157-a3b6-5aadb9cbb02b",
        "cursor": {
          "ref": "9410a705-f774-4286-8e76-072f6050a599",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fe57eb87-c754-4fb2-bb6b-9a0592689fd7"
        },
        "item": {
          "id": "01d0f936-6556-4157-a3b6-5aadb9cbb02b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fe591646-7407-4c71-8b3f-48a05af2f44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192ae581-dbc4-4d85-b3a1-bd39527d234e",
        "cursor": {
          "ref": "f0f8e798-b858-4af7-be9e-eeff81cf8ad7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e5124737-f90d-49b8-bcf3-82dca8ca8033"
        },
        "item": {
          "id": "192ae581-dbc4-4d85-b3a1-bd39527d234e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d5ee078d-bb32-4d9a-b3f4-44ae172fff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8152f1-f7d0-4f65-b0ae-e4db4acf0e09",
        "cursor": {
          "ref": "8d7bc826-3048-4037-9df9-2affb54a4345",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9320dc76-5148-44ac-9d20-08d06ce441f4"
        },
        "item": {
          "id": "6e8152f1-f7d0-4f65-b0ae-e4db4acf0e09",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "74ddd33c-282f-40d0-8a05-4e4c63dd4324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ab3565-443f-4982-9f28-07f66aef5ad5",
        "cursor": {
          "ref": "453d8da4-0195-4894-b6a1-35ca74feb248",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3851f2c0-c8bb-4cee-9f4a-757b9148c6df"
        },
        "item": {
          "id": "22ab3565-443f-4982-9f28-07f66aef5ad5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "169b72be-c6b4-402d-8808-0ebf480f3111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113fd33-b271-4f3f-8c2c-0d372b8f91f1",
        "cursor": {
          "ref": "2c55650e-c44f-4742-a5b7-9e3c649017b5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cf5adf11-f8ea-4385-bffb-b614c727c5f0"
        },
        "item": {
          "id": "b113fd33-b271-4f3f-8c2c-0d372b8f91f1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e67f7d60-aaa3-4e8e-845e-295fc08a9d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a1ce1-c40e-4562-a833-37e0d8672bcd",
        "cursor": {
          "ref": "99906d25-8eff-43ee-b2eb-afa4524353dd",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5d52c430-3484-4adb-bc58-6373a6c04ece"
        },
        "item": {
          "id": "3e1a1ce1-c40e-4562-a833-37e0d8672bcd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ea4cbbcd-5ab9-484f-9f27-00bce9cc592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59295dc0-d0ea-454f-97b1-b8177c230af6",
        "cursor": {
          "ref": "32927f5d-ad36-47b7-90e9-545a378a4261",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fff417a2-e600-4074-8988-19b76c53b00e"
        },
        "item": {
          "id": "59295dc0-d0ea-454f-97b1-b8177c230af6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b46f716c-900e-43ae-934b-69cca1989074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6ca78-69d8-4247-9824-46f429050c57",
        "cursor": {
          "ref": "9bc27b6f-e83d-4cc9-9075-b1392e0afcbb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d1fb844c-0eb5-4a2a-8e46-e9ecca20d7e8"
        },
        "item": {
          "id": "6df6ca78-69d8-4247-9824-46f429050c57",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "691a8843-1e43-4472-b7d7-419eeb1d65b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b716c-31bf-4342-b277-44c1a7552a00",
        "cursor": {
          "ref": "b07b76f6-abaf-40c2-864b-889e391d8ae8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96816a13-7d54-4572-b64b-54a1b05352f0"
        },
        "item": {
          "id": "ea6b716c-31bf-4342-b277-44c1a7552a00",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5b15e9d0-8ef2-4f4e-a031-1adb1ae96089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0788a88f-5bde-4f0f-ace3-76ca09c2e225",
        "cursor": {
          "ref": "8a538fdd-1eaa-4b9c-b67e-f38df0761c6a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4cf1ca36-4e98-443a-a8a0-830be3bec189"
        },
        "item": {
          "id": "0788a88f-5bde-4f0f-ace3-76ca09c2e225",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e146003e-1007-40c8-afc9-980793a356f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8013143a-f0e8-4150-bcd9-61dee1bad9af",
        "cursor": {
          "ref": "6a88bf9e-df07-46d7-8651-2eac657d06df",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c619d66-1610-496b-b898-392b49232fb6"
        },
        "item": {
          "id": "8013143a-f0e8-4150-bcd9-61dee1bad9af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4daae661-a008-4f58-ab6c-381fd0d5d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "95962daa-fe9c-4d50-8460-219141b724b9",
        "cursor": {
          "ref": "b092b040-a1e1-4f68-8f6d-6d9cb9616c87",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d9a74cea-e48a-467b-a5e8-6f5f088eb270"
        },
        "item": {
          "id": "95962daa-fe9c-4d50-8460-219141b724b9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "417d4ab4-493f-4bf6-a923-6ad30ef2245f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2dec4d82-c9d3-4cca-af66-90cd4eb2730f",
        "cursor": {
          "ref": "1ac4576f-0687-4a20-a896-fc25d6a34171",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8589a756-b636-4a32-b2e1-8ee207986f14"
        },
        "item": {
          "id": "2dec4d82-c9d3-4cca-af66-90cd4eb2730f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f4da5a1-3c8b-4da7-810e-92e9412261d4",
          "status": "Created",
          "code": 201,
          "responseTime": 6901,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c03391-964a-4499-bc70-195846851eff",
        "cursor": {
          "ref": "72d15405-557a-4d6d-9514-440f786c43a1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1935db56-f30e-4d1c-8936-0917fd06922d"
        },
        "item": {
          "id": "84c03391-964a-4499-bc70-195846851eff",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2fc2e5a0-2d60-4b17-92f7-b82372e92a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7484fa17-3174-4673-ae2e-2ba84889d2aa",
        "cursor": {
          "ref": "75fd6101-23aa-45fe-8b43-08f94e642f07",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ede2904c-1333-4c6a-9ba3-264379b15b1f"
        },
        "item": {
          "id": "7484fa17-3174-4673-ae2e-2ba84889d2aa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "89c49cfc-3f81-4cc2-9431-58255eee8d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dad3ef91-4bd1-465f-9715-9ab833dc5e9b",
        "cursor": {
          "ref": "f9cd8461-9fab-4ac6-85de-5143c2dfc001",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "541eabe0-ab84-42f3-8843-9c96cd525dc0"
        },
        "item": {
          "id": "dad3ef91-4bd1-465f-9715-9ab833dc5e9b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "02409494-4e0f-436e-8e68-7e0ae45ee743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bead329a-40da-4334-8cdd-7c307be3504b",
        "cursor": {
          "ref": "f0cf3aec-77a5-4347-9803-0bc8d29787c4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "95639722-494e-4758-8205-bac67f5dd296"
        },
        "item": {
          "id": "bead329a-40da-4334-8cdd-7c307be3504b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1bd2a9c-825a-454f-a985-345bc96ac6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339082ec-6bc5-47e6-bfed-98c7d81b833d",
        "cursor": {
          "ref": "d560c3ac-b1bc-45cf-aae4-d08233567f98",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e49e4413-20f6-49b2-b43a-c767e089fdf4"
        },
        "item": {
          "id": "339082ec-6bc5-47e6-bfed-98c7d81b833d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40c1acff-211e-42b3-98e4-81a2198970fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5640a8cd-904f-44d2-bf26-6953b727c382",
        "cursor": {
          "ref": "89a29ad5-71bb-4aa8-974e-28940d8ffcf4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8c7d0f76-65ed-447b-af7f-c8767f7f94ac"
        },
        "item": {
          "id": "5640a8cd-904f-44d2-bf26-6953b727c382",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e85dd5b7-e364-4c0a-95be-9cbc8547d18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ebb40e-036c-4039-8d2a-4cb98c38e8a5",
        "cursor": {
          "ref": "57238774-32bb-4834-978b-92752d37f451",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c4e93a8c-5616-4287-a4f8-9bd632885614"
        },
        "item": {
          "id": "d0ebb40e-036c-4039-8d2a-4cb98c38e8a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72624984-5888-4221-ac47-84056a4d05d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214a2605-ccae-4000-82b5-b14751938172",
        "cursor": {
          "ref": "4b056470-ee11-4967-96cd-0eae39b5a9fe",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bfba8425-7b69-432a-8dde-34be1d125cbf"
        },
        "item": {
          "id": "214a2605-ccae-4000-82b5-b14751938172",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5a5f577e-20e5-4907-b349-53deeb65ee27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b84d5d-3e73-4273-b39f-82cd6fea0fd8",
        "cursor": {
          "ref": "ee8377f9-0a41-4154-a08b-a9669cc2e11b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da027a5e-c729-4f62-843f-cb12fdfe6780"
        },
        "item": {
          "id": "d5b84d5d-3e73-4273-b39f-82cd6fea0fd8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4eb5dc64-052e-494e-9446-5e47f2d4a755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854e0f7a-012f-4afb-9d3f-87130ed4622e",
        "cursor": {
          "ref": "e230ba08-00fa-4abd-990d-c089befc1bdd",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "17a09d77-2965-4afd-b8b1-3a5f6d0270ff"
        },
        "item": {
          "id": "854e0f7a-012f-4afb-9d3f-87130ed4622e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b20cc291-8b10-4dd3-97b7-57c57f8e271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f8e007-bd1d-4dc2-913b-337ebcb4dd30",
        "cursor": {
          "ref": "27d568f2-1a48-4c84-9b73-40403af3e1c7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "41016879-38ee-42cd-83e8-260e231af4b5"
        },
        "item": {
          "id": "f4f8e007-bd1d-4dc2-913b-337ebcb4dd30",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdb50400-fd75-4904-b879-ab4f010e4682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3114b09-22ea-4e5a-91cc-32265bbb86bb",
        "cursor": {
          "ref": "7b0e91dc-fa1d-49bf-9c95-59341cfe2046",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "804ab80c-0c70-4488-96cb-9e60ff385aca"
        },
        "item": {
          "id": "e3114b09-22ea-4e5a-91cc-32265bbb86bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2a80380-bab4-4bc5-9d93-42691cacf006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c4cc3d-0c3a-4e85-82e6-33b01c78a187",
        "cursor": {
          "ref": "05272f8f-cdec-465d-a5fd-9c68fb11c4c1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9b28d1a5-a4bf-4974-9fd8-89f187cdd505"
        },
        "item": {
          "id": "27c4cc3d-0c3a-4e85-82e6-33b01c78a187",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9e8c1fe-7bd2-41fc-b033-d3aef335e977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187b222-b29b-4ba4-9e95-d25ba899ea30",
        "cursor": {
          "ref": "4bbd09b1-16f8-46d8-894f-882b407fa8b5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4d009b21-cd1f-4d74-9327-675d1ec42b2f"
        },
        "item": {
          "id": "4187b222-b29b-4ba4-9e95-d25ba899ea30",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "71199825-3b5c-4bc9-841f-979f46cf6c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5e8796-0ca8-4c59-99dd-5efefb2ac297",
        "cursor": {
          "ref": "780fd22f-a6cc-4b7b-9a7d-a9297b790079",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b53e4856-766c-4738-8b9c-b9a981991264"
        },
        "item": {
          "id": "db5e8796-0ca8-4c59-99dd-5efefb2ac297",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e4e03044-43c5-4fc1-b3b3-284136741564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17672ffb-69ba-46df-bfcc-c73471bc88d6",
        "cursor": {
          "ref": "2f813781-948c-41b4-94de-fb573fe05b7d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b360693d-bb3a-4ae5-9262-48b374dd32a0"
        },
        "item": {
          "id": "17672ffb-69ba-46df-bfcc-c73471bc88d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "083fc3bd-deab-454f-ac52-0d64ac1729b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bb5ab8-2340-43d5-b08f-7d9cc729243e",
        "cursor": {
          "ref": "306b6492-0184-4e9c-a28a-dd8ee1b11d79",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "66128027-310b-4835-98fe-23f98a5de892"
        },
        "item": {
          "id": "45bb5ab8-2340-43d5-b08f-7d9cc729243e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d65e9775-77c9-4b1a-b199-0f9f4a48f012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d19216-4a3d-4e68-a254-9c9e7b4b6ee5",
        "cursor": {
          "ref": "14f75af1-7a95-441d-937c-34917fc41f58",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c3a067dd-e42b-4880-af50-41321580e6ef"
        },
        "item": {
          "id": "46d19216-4a3d-4e68-a254-9c9e7b4b6ee5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ccbdb62-fb59-428f-b087-7bc9050ded94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f9884-4077-472b-bfb8-cfb1f7b42699",
        "cursor": {
          "ref": "e964f6ce-36c2-4992-aac1-155bf4546056",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5665a9d4-7c2e-40d1-9ed5-1268af5200ea"
        },
        "item": {
          "id": "8e7f9884-4077-472b-bfb8-cfb1f7b42699",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8059bfd6-fd06-4e42-a5ce-12379a7d0018",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "005a32bc-7d93-44c0-b3d5-f443ea798e32",
        "cursor": {
          "ref": "130ca232-d1d2-4078-b063-1abbdb85a325",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0acd259-4538-407d-9a29-426d5ec7fb9d"
        },
        "item": {
          "id": "005a32bc-7d93-44c0-b3d5-f443ea798e32",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03eb118b-0b5f-4f89-a9a5-08e2824ad477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2a88c1-1531-4fc4-8de1-b9b84fecd6d3",
        "cursor": {
          "ref": "e54013b4-5b60-461a-b949-af80a4022c4a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c32c4053-57b1-4c9a-8903-3daf165a5cff"
        },
        "item": {
          "id": "2f2a88c1-1531-4fc4-8de1-b9b84fecd6d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e5a6e50-affe-4c9b-b6dd-16386f79a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed29826-8468-4760-816f-99b2607456af",
        "cursor": {
          "ref": "5466d1e3-ca88-40c3-b11f-fafdba8b3057",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d0a16130-8d1f-4056-97d5-52f473e381a0"
        },
        "item": {
          "id": "7ed29826-8468-4760-816f-99b2607456af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e30edcd7-7306-4195-b18d-c8dd8aa4794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4038c6-05e0-40c5-b0c3-eba716fbb78f",
        "cursor": {
          "ref": "ae422164-372b-4b2d-be49-8e356e5d2fee",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "72ff7968-1319-473a-8daf-f5dd191e1b22"
        },
        "item": {
          "id": "fc4038c6-05e0-40c5-b0c3-eba716fbb78f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4aa5c023-3494-4076-a3a8-7cc081705809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed541d4-ab44-449e-b41e-ba6c5c859162",
        "cursor": {
          "ref": "bd59c366-b8de-4cc0-adf7-4ec6b80ed855",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "54be43b3-9414-4d75-ad1d-675e1bcd3027"
        },
        "item": {
          "id": "aed541d4-ab44-449e-b41e-ba6c5c859162",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2513b159-0cc5-46e7-8526-8576c8b6ef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40515b56-b462-4c9b-abcc-aaef1b39c993",
        "cursor": {
          "ref": "7233fe91-ba65-41cb-9327-575fab1e4e14",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ab3f30da-44c2-4670-91a6-a68196b63aed"
        },
        "item": {
          "id": "40515b56-b462-4c9b-abcc-aaef1b39c993",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04e9f9ef-f7ed-4dd9-837b-c2d6f2ec739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ebb8ec-ce22-44af-88f8-a5bb996f7ab5",
        "cursor": {
          "ref": "ce2c990d-9011-475d-8016-8fb6e3e8b48d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "688aea73-8c26-46dc-8664-40d9abffc05d"
        },
        "item": {
          "id": "f1ebb8ec-ce22-44af-88f8-a5bb996f7ab5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b341c61-3dc8-4501-9670-dcae439320f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44b31ca-7dd1-4fd5-baaf-cc35869ded0c",
        "cursor": {
          "ref": "67b62dc8-a626-48f3-b907-1b95a4edbe5b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "226290fb-1376-4712-b9e4-b36ed64be7d5"
        },
        "item": {
          "id": "c44b31ca-7dd1-4fd5-baaf-cc35869ded0c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55255f49-3ba7-43c6-876f-5c64764560b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "45f68d96-e2ab-4596-92e5-e7cdf568a1ec",
        "cursor": {
          "ref": "ce2f53a3-a11a-4ccd-a010-1e4c77245d41",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "813addf8-9b19-4273-b1f3-b15a74a3c606"
        },
        "item": {
          "id": "45f68d96-e2ab-4596-92e5-e7cdf568a1ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5192b4d0-c459-41d7-b601-5c6cc382d5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a60423-1f31-4fe1-8724-06115cd4fa47",
        "cursor": {
          "ref": "01457f1d-3ac2-4107-96d1-dea30dc9ef35",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba483a2b-499d-44e1-a3da-a3763726f278"
        },
        "item": {
          "id": "f6a60423-1f31-4fe1-8724-06115cd4fa47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cad8f039-ee34-4be6-97f1-dbf4ec047267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aea909-5922-42d0-8ede-baac08678f08",
        "cursor": {
          "ref": "e36ba183-9a99-4769-b94e-dc0899b8dd12",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a8d0aee5-2a4d-4f7a-8039-5158359f69b5"
        },
        "item": {
          "id": "89aea909-5922-42d0-8ede-baac08678f08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ed215745-cf8a-4cf0-9a3c-29a8ff7916ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2625baee-3c9f-4701-9ea8-97dc8f386b3c",
        "cursor": {
          "ref": "ca69faba-e5ec-4732-8f18-d9b78fef4622",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cb9d6547-2767-488c-ae4a-64366bc8d4cf"
        },
        "item": {
          "id": "2625baee-3c9f-4701-9ea8-97dc8f386b3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b9142ae-e30a-4c33-8e0c-e01c8937c448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9618a7-57c2-4dad-bc8c-27f7b42ba83f",
        "cursor": {
          "ref": "a0c2e226-b0e9-416b-a7c5-2b80c06ba3e4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cdd45efb-e6b7-4b62-8e5a-4523fa0da9c2"
        },
        "item": {
          "id": "4c9618a7-57c2-4dad-bc8c-27f7b42ba83f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9587dde1-4412-4e78-bbbd-eeac809d0fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3e98d2-8695-4cea-bb83-8703c2f3a455",
        "cursor": {
          "ref": "85841a89-f369-428f-bebd-b116facdf42c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05282bc1-5604-4351-92cc-e14f189a1acc"
        },
        "item": {
          "id": "bf3e98d2-8695-4cea-bb83-8703c2f3a455",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c358634-1bde-4ae1-aa35-36056730c1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e870fe-b1bd-4d0f-b0df-b6f78a17505e",
        "cursor": {
          "ref": "6d934cf4-01d2-4998-a28f-0c9aeb4f0431",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "142a4eea-3002-4911-a57f-fb93cbc3141a"
        },
        "item": {
          "id": "d2e870fe-b1bd-4d0f-b0df-b6f78a17505e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "81e8cb0a-8e5e-4d80-a544-3214eeda92c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "21441cd2-a4d0-471d-a29f-a556a1422418",
        "cursor": {
          "ref": "9b879da0-c5fc-4c2f-a854-8db4bd7387fb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "498d2276-684c-482d-8ef9-f406f61c2a2a"
        },
        "item": {
          "id": "21441cd2-a4d0-471d-a29f-a556a1422418",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2f3539f3-4671-4ae1-a05c-35ab7a9bc6df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cfc9be73-6159-4b59-abbe-6096de9e1c13",
        "cursor": {
          "ref": "aecda979-f1c1-47aa-9356-88c8c57a264d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "112203f3-2a9a-472d-99f0-1d3d453e5b98"
        },
        "item": {
          "id": "cfc9be73-6159-4b59-abbe-6096de9e1c13",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6ba87def-a015-4291-84b9-4025db5c8e0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7eaef1cc-6286-4a5b-b1d7-640d81be8184",
        "cursor": {
          "ref": "b979567b-339c-4547-81fb-a4dc3de5cfcb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "21736b30-9565-4df9-9517-87bfdd5f1276"
        },
        "item": {
          "id": "7eaef1cc-6286-4a5b-b1d7-640d81be8184",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ec8fb2c9-5e5d-40a9-9336-a11bed71b978",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "27b9f295-1fcc-4ad0-b25f-e6b5a92bc622",
        "cursor": {
          "ref": "f23d02a1-9e06-4906-871a-add4235f0b19",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9600faae-d069-4b94-b528-c5fc9c531e28"
        },
        "item": {
          "id": "27b9f295-1fcc-4ad0-b25f-e6b5a92bc622",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cd0fe2c2-6d5c-47ef-90a5-3498811259ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5ff5bcba-7ce4-4075-a418-b7038ddaa688",
        "cursor": {
          "ref": "9a3de19d-c102-40d7-9a6b-7d1d1ccb4874",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "19fc3049-c85d-4936-8c70-22c914547a10"
        },
        "item": {
          "id": "5ff5bcba-7ce4-4075-a418-b7038ddaa688",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "96559632-d05c-494f-be2b-c70e442839f2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "555551ad-3430-4066-9371-d77972c0ffc9",
        "cursor": {
          "ref": "54e1c8ef-5e2e-4c7e-ab10-6b9cf67c5d34",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "73c7a281-fadf-47fa-a1da-2befd7a68521"
        },
        "item": {
          "id": "555551ad-3430-4066-9371-d77972c0ffc9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7f7829dd-d701-4477-8e08-6548e815ce93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf92912-d0d2-4268-b127-363a822f6c58",
        "cursor": {
          "ref": "db751b5f-140d-46f1-a344-192df6d8ff09",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2f1bf857-7c3e-482b-a094-e7bd4c8fd21c"
        },
        "item": {
          "id": "eaf92912-d0d2-4268-b127-363a822f6c58",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0cf312d7-a1fe-44bf-bf29-8ceaf9ee1d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43370258-93ae-4638-b80b-5574a432ad5c",
        "cursor": {
          "ref": "9b563398-0212-497c-a4d2-dd6b237c5cd8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4da013f8-78f2-4850-a7ef-b9a1cc1efd8c"
        },
        "item": {
          "id": "43370258-93ae-4638-b80b-5574a432ad5c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e91a7296-8150-4d83-bc7f-f8e91ddf292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acd5180-1142-470c-b614-270ff3f91fdf",
        "cursor": {
          "ref": "84aae4b2-fd04-4301-8d80-3f9b81541c5e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "00de9e9d-0ab4-417d-bf4d-ca96e537603b"
        },
        "item": {
          "id": "2acd5180-1142-470c-b614-270ff3f91fdf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c23abe4f-ce97-41c2-9627-b98ff37014f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d012494e-8f72-4729-9a7f-5f9517da1c90",
        "cursor": {
          "ref": "00275710-0bc7-4fff-ad3b-fc91aada00fc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8ce57ed1-a9cf-4738-8370-28ebddc820c1"
        },
        "item": {
          "id": "d012494e-8f72-4729-9a7f-5f9517da1c90",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "35de9f45-53bf-4359-b7f6-cc3fca39dfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6286b1-454a-4a02-a197-33842c129c64",
        "cursor": {
          "ref": "f1f7e4c2-03bb-47e1-8242-5ef3def273b8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ca794f7d-d151-4328-851e-a18523365396"
        },
        "item": {
          "id": "1b6286b1-454a-4a02-a197-33842c129c64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9852ac48-ea0a-4787-ac45-ec547849555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f447a94-6ec2-4a08-a4f6-137c99cc1300",
        "cursor": {
          "ref": "47b4b96b-b625-4566-8163-a538d14e6faf",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6bb2f97c-5a15-42e0-b1bb-74f25df3b25f"
        },
        "item": {
          "id": "7f447a94-6ec2-4a08-a4f6-137c99cc1300",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "04559115-6fe4-4d55-b2cb-5e1c96e10454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8fad49-5bd8-47c1-b58b-5d81572a6314",
        "cursor": {
          "ref": "1e8cba62-bb00-4af0-af77-ddbde8c9c27f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0738c7f0-c89a-4f9c-a36c-10798170e3a0"
        },
        "item": {
          "id": "5c8fad49-5bd8-47c1-b58b-5d81572a6314",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f174f175-e8c7-40bd-b21a-6be140285124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e7ac7-1ec8-4252-8c97-eb62bad3a566",
        "cursor": {
          "ref": "34bad16c-c958-4582-b9fd-bfa995d89ed6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7866391d-1e01-4557-9e8a-7df4c7bdeeff"
        },
        "item": {
          "id": "347e7ac7-1ec8-4252-8c97-eb62bad3a566",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7e4f45f-aefc-4c01-8004-09575cccc3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e24c978-0f16-4abe-8c8f-37b535ed2109",
        "cursor": {
          "ref": "7dae13c5-0623-4088-99e9-cf0cbb51e705",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d22cfa6f-e8f2-4eab-8760-2a704b3590ea"
        },
        "item": {
          "id": "8e24c978-0f16-4abe-8c8f-37b535ed2109",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd31e3ae-b703-4c9a-b222-2f4226bbb37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025ba2c9-22c7-4038-a6d5-3bcc51facce0",
        "cursor": {
          "ref": "af5b50e6-bfbc-4879-afa5-4ccbd8a64b70",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "387b4340-c329-4e12-bf41-d53d49fbd265"
        },
        "item": {
          "id": "025ba2c9-22c7-4038-a6d5-3bcc51facce0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "00b429df-5300-46f0-9ae4-77885755a29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d1627c-0c96-4b03-9e58-be67d43e394e",
        "cursor": {
          "ref": "c9a5e5dd-ae60-46e3-ae44-48e6fe6ab417",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7923c72-0c21-4c00-8a8b-073ad2f15369"
        },
        "item": {
          "id": "29d1627c-0c96-4b03-9e58-be67d43e394e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee75691a-7810-4722-9674-aca3b82c1995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ddd18d-a3fc-422b-b2f8-9aeadd5df7ae",
        "cursor": {
          "ref": "4120fae9-d4d4-4ea4-af80-9d3d885d572f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "228a745b-76a1-4e4e-9391-ac04b5e8d6df"
        },
        "item": {
          "id": "29ddd18d-a3fc-422b-b2f8-9aeadd5df7ae",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "51c166a7-3b39-4894-9b81-e6170d28cc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d60abc-37ae-44ae-a609-4a44ea6fd081",
        "cursor": {
          "ref": "1c9da508-d5bc-46ea-a06b-789f6e6fa4c3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ba962de8-d115-42f5-b4ce-a74ecd442978"
        },
        "item": {
          "id": "a1d60abc-37ae-44ae-a609-4a44ea6fd081",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "22b8b1bd-1062-4e23-8b57-7d9fa6b84141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd3f88-ce83-426a-bf4b-e0422daf3ff0",
        "cursor": {
          "ref": "82ef8e15-9113-46cc-b20c-7714c668e80b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "452ff022-64df-46ae-ba4e-74c0bd1406d7"
        },
        "item": {
          "id": "d5bd3f88-ce83-426a-bf4b-e0422daf3ff0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9b88606d-ae28-44b5-bef0-e6cdc15f9ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c061ec55-2e93-4a02-bad7-65b055cfcd3b",
        "cursor": {
          "ref": "01c1f621-8f98-4356-b631-bf49d8ef1429",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4ef3f84e-b187-4bea-a338-5b8803db0a7e"
        },
        "item": {
          "id": "c061ec55-2e93-4a02-bad7-65b055cfcd3b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a8835cae-991a-46b1-a56e-504168f3c69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f934e-b35d-4ec9-9f21-87e727088b2b",
        "cursor": {
          "ref": "bad0799f-399d-4325-a1ea-2a261070719c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "02a7d31c-aa27-4858-887b-c8b1db00fa79"
        },
        "item": {
          "id": "3a4f934e-b35d-4ec9-9f21-87e727088b2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d25de031-9432-43ed-8569-80ffa34260b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a0011a-d6a9-41d8-a865-f04034de6a26",
        "cursor": {
          "ref": "8f8af763-11b2-409f-b571-e263b84d82bf",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef16ed81-5871-4513-9887-4a23c5b02f64"
        },
        "item": {
          "id": "72a0011a-d6a9-41d8-a865-f04034de6a26",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7faec7b9-9458-48d2-9b3e-b6c0f20af3b4",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "07ac6f5f-31d9-44cc-9fc0-407993e57829",
        "cursor": {
          "ref": "921f793b-9f63-4aca-854e-db529ec77167",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a7c13557-6757-4dcf-9732-be54c0783084"
        },
        "item": {
          "id": "07ac6f5f-31d9-44cc-9fc0-407993e57829",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a64a5c32-3788-455c-9f47-4e25c89632f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710f5256-f72e-4a78-bd85-d9b51bfe9268",
        "cursor": {
          "ref": "8663009a-4746-4fec-9358-c8e70732932c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a1e09563-ff94-4323-bf54-5e900b2daf79"
        },
        "item": {
          "id": "710f5256-f72e-4a78-bd85-d9b51bfe9268",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e0ddd49b-d81f-4d81-9d88-0eea21744458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9ed54-5c04-4a60-87a5-2e5b3e9a403d",
        "cursor": {
          "ref": "dd508a53-006c-4537-8e70-d53ca44ba93b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a6952e7-5326-4c7b-aa11-38eb6e312f15"
        },
        "item": {
          "id": "0fa9ed54-5c04-4a60-87a5-2e5b3e9a403d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "48150a80-62b9-44d3-8449-35785cf557d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cde2a4-a350-4b31-8be9-af8e8a2de041",
        "cursor": {
          "ref": "7aa63905-9e9a-4db0-aaa8-58ebe425cc9a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cefcb2f7-5483-47b2-86bf-6caac0c9a7bb"
        },
        "item": {
          "id": "a3cde2a4-a350-4b31-8be9-af8e8a2de041",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "def9e279-8676-47d9-a6cb-56a8818bd8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc0cd68-4af0-4590-978e-7bc1bfec31b4",
        "cursor": {
          "ref": "d1af3840-f06e-4721-b3da-a41bee69ab00",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "854b24ea-a5dc-4144-8c1d-5c4f8bd1d838"
        },
        "item": {
          "id": "6dc0cd68-4af0-4590-978e-7bc1bfec31b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7434d5a-08c7-45f2-b434-5910626434d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae740dfc-3a25-4b52-95ea-749f1d352c57",
        "cursor": {
          "ref": "539ddc28-3320-421b-b0d6-fd5416c30ca1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "76b503b8-7cc0-43a9-9837-2a240849860e"
        },
        "item": {
          "id": "ae740dfc-3a25-4b52-95ea-749f1d352c57",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f98fcfe-3b74-412e-8019-358f9a271464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d8ba3b-1046-48a4-a536-1a9ddccb0484",
        "cursor": {
          "ref": "a8333d29-dabe-4431-8587-6d29d9e9fb71",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ed3fa4c5-f9e1-4b94-a745-d0c3ebf67d25"
        },
        "item": {
          "id": "b4d8ba3b-1046-48a4-a536-1a9ddccb0484",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a3e20959-79a0-4815-bd2b-853347fc6557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cfb289-1ee3-4289-a228-596ec654b26c",
        "cursor": {
          "ref": "5559695c-cb90-46de-a50f-7e24c1ef1662",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "59a42f87-cbff-46c0-bbb9-c0175e22a756"
        },
        "item": {
          "id": "55cfb289-1ee3-4289-a228-596ec654b26c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2181bfc9-2113-4d56-bc5c-efa2a9ea020d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86ea2b5-9223-49f1-bd99-53c19e7b4ce2",
        "cursor": {
          "ref": "fc4768f9-7be9-45ce-8ff5-e51c220fb5db",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3897cfea-e563-4fa2-812c-72078a1e57ec"
        },
        "item": {
          "id": "c86ea2b5-9223-49f1-bd99-53c19e7b4ce2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f29f00b-7b34-4c91-8c12-9198d51268b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413f49a8-da13-4502-8227-c009537c7f9c",
        "cursor": {
          "ref": "a69e9442-d292-40b9-91e1-e7fbc9b2542d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "248dcf64-51d0-445e-a7e3-aa08668dc7d3"
        },
        "item": {
          "id": "413f49a8-da13-4502-8227-c009537c7f9c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3da64bee-727e-4d08-b38a-d4703648d6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c27e8d-a086-4a5e-998b-692bb455d4d5",
        "cursor": {
          "ref": "c28ecebc-2545-4e1a-83de-dc6ca967f705",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0483b797-f18d-4c87-b38c-a2fc87dc3104"
        },
        "item": {
          "id": "b9c27e8d-a086-4a5e-998b-692bb455d4d5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d2574aa6-d599-4685-b8cc-183a473260c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78206d40-b5e0-429e-820c-3adb1a3d3ce0",
        "cursor": {
          "ref": "4185a48c-ff0f-44a9-b8e4-0334443fd77d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8d59bf60-86ec-497a-9db3-7330a6b6f1a7"
        },
        "item": {
          "id": "78206d40-b5e0-429e-820c-3adb1a3d3ce0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b446de05-3778-407e-a291-95a843abc74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1f368e-a7f8-4d8e-91f2-25882d10c458",
        "cursor": {
          "ref": "3b578f3a-e3fe-4d9c-88a1-5d3492d247ab",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ae7e8c3e-2b55-46ae-8b34-9a1374e4ad59"
        },
        "item": {
          "id": "ac1f368e-a7f8-4d8e-91f2-25882d10c458",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6d4c796f-41ab-464f-863a-65e73d1923af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e162c6ee-f79e-4ccf-9230-448b17103e90",
        "cursor": {
          "ref": "3820d5bd-c60f-4c56-bf3b-2308279472c2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7028aac3-bf17-45ec-8090-6e0998c1a3f1"
        },
        "item": {
          "id": "e162c6ee-f79e-4ccf-9230-448b17103e90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "27025205-99e2-4ad2-86fa-57f06164f70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed57dc9-5c74-483d-acc6-4a94c2646415",
        "cursor": {
          "ref": "520c66bc-1a30-4847-8121-91e39d079b9f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "33cd8f77-cb61-45ee-8c1c-6ba1da1344fa"
        },
        "item": {
          "id": "5ed57dc9-5c74-483d-acc6-4a94c2646415",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "80c9f5ff-ce9b-4e34-a99a-cf5cc3b165c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74ee93-aa01-44c6-8c21-11e3b56f4df2",
        "cursor": {
          "ref": "9979a598-801a-4f70-a85b-299b122ac61c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5382ca8b-b3cd-4bcc-aae2-7d6ff61eac03"
        },
        "item": {
          "id": "bd74ee93-aa01-44c6-8c21-11e3b56f4df2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "56a7d142-bb59-46e2-a2e9-006d55b3d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0482a4-4b4a-420d-a3c9-0944986dc96a",
        "cursor": {
          "ref": "0bdc6431-4f4d-4843-b993-33361624e5f9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "846b0ffd-ee81-4139-a6a0-9401a329061b"
        },
        "item": {
          "id": "5b0482a4-4b4a-420d-a3c9-0944986dc96a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e9b53565-b275-4d13-bddf-dd0fd42d8ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45383b2-39b3-446b-9d3b-f1541dda6fd2",
        "cursor": {
          "ref": "e13e7e43-128a-47f9-9488-16d46ae70e02",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1fca561b-4197-4be6-b645-4d73d29aca57"
        },
        "item": {
          "id": "f45383b2-39b3-446b-9d3b-f1541dda6fd2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dee6ab0d-70d1-4b31-a8a7-d6faae9d2280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52789af-164d-4f68-8a3c-eefbbcdb98bc",
        "cursor": {
          "ref": "a89a67ed-54aa-444d-93a5-05a64f387b1e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "741105aa-e4e4-4269-8d77-2b8647a7c11a"
        },
        "item": {
          "id": "d52789af-164d-4f68-8a3c-eefbbcdb98bc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "45ece690-d0a0-4f57-9501-94e38ee4ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eea2eb-ad90-4c74-b744-cadee2e66e2a",
        "cursor": {
          "ref": "f98f84eb-bf57-4972-85b1-761881e1bc33",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "142daa8d-228d-4420-8bc2-50d0416e6ffe"
        },
        "item": {
          "id": "79eea2eb-ad90-4c74-b744-cadee2e66e2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "275f6ef3-6e49-4787-af1a-494648d97970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dda20e2-6936-4289-90a9-5705a5be53e3",
        "cursor": {
          "ref": "ec322aca-44c1-4177-9b99-4804a95a9ea9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c8eff7c6-0591-4897-8c5d-7dda3626fc05"
        },
        "item": {
          "id": "0dda20e2-6936-4289-90a9-5705a5be53e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8922fa02-fcae-4588-8fe8-b989e6141a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db94a611-63aa-422a-9f3b-64d5defc7649",
        "cursor": {
          "ref": "0d0c3cbd-8fa8-4e4e-8859-b4f4a9513ab6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1b508961-c96e-4a40-bc8d-140180a8fac7"
        },
        "item": {
          "id": "db94a611-63aa-422a-9f3b-64d5defc7649",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8538c214-f1ee-413f-9057-3002331ac815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599eee84-7ffe-487e-a6f1-2e7974cdfb90",
        "cursor": {
          "ref": "a6786f56-28cf-41f2-b4e5-edf384a0a345",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fdc20e4e-bde1-45a8-a692-fc23778c91f4"
        },
        "item": {
          "id": "599eee84-7ffe-487e-a6f1-2e7974cdfb90",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b7be678-5b88-4fe9-9d2e-426e30fb5d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7919b-e2a3-4319-bbd0-67877b6ee9e0",
        "cursor": {
          "ref": "6820580d-ac50-41fe-86fa-d44d08430912",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "350607ce-04f9-402d-9b2b-e72f83714009"
        },
        "item": {
          "id": "51c7919b-e2a3-4319-bbd0-67877b6ee9e0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e894da6a-7d54-4c62-be6d-b72572e2316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a81bb37-2115-4311-85ed-4baf2e18d1de",
        "cursor": {
          "ref": "50d3e21c-4e88-43a1-ab69-b333c17569bc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "970db7ea-f68d-473a-9111-3ce0e95076b9"
        },
        "item": {
          "id": "9a81bb37-2115-4311-85ed-4baf2e18d1de",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a40a0b54-8197-4528-bab6-2e3268bb5476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaf644b-02e2-4e88-818b-9552bd45687f",
        "cursor": {
          "ref": "6b508cfe-3e1a-4924-ad30-5cb0e62fcb06",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c9013c51-0534-4463-8a68-e781115274ea"
        },
        "item": {
          "id": "caaf644b-02e2-4e88-818b-9552bd45687f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "00dcd767-bcaf-42a6-88bd-da1d7c690a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb08e3f-5480-4039-847b-7f7025b68923",
        "cursor": {
          "ref": "cb1ae274-7680-4db3-a9ab-9b7b0e8ae49a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d6911d91-96a7-4489-b1d9-0fd972c3b9c5"
        },
        "item": {
          "id": "5cb08e3f-5480-4039-847b-7f7025b68923",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "913fdb28-b146-4833-9d44-5458bd37b5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d5cb1-3893-4b6b-b9a5-d8e365f137ba",
        "cursor": {
          "ref": "4bd59d75-38bd-44f8-9a8f-986622fe0bf8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2fb9851a-ae31-4502-b64c-06f7358c287d"
        },
        "item": {
          "id": "ba5d5cb1-3893-4b6b-b9a5-d8e365f137ba",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0b643c97-6d7e-4dce-8fbb-042bd6fcad31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f09b2-5d9c-4497-aa28-729981c7b931",
        "cursor": {
          "ref": "2039d1a0-e63d-465b-bae8-db556dcbedbb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a2aae803-bb85-4437-bf37-8bd4086d10e7"
        },
        "item": {
          "id": "796f09b2-5d9c-4497-aa28-729981c7b931",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "787adc19-2398-4333-a527-e969287f2855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4184f1-9f97-44b1-af76-82fb9bd90239",
        "cursor": {
          "ref": "d615800f-3a86-42fd-aa41-f788de9726f9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5ebdf9d-ac5b-4b8c-a082-e03cfdc88710"
        },
        "item": {
          "id": "dd4184f1-9f97-44b1-af76-82fb9bd90239",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "097e32a0-0204-4b77-8ae9-20c269fe1133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c5ae85-6cb8-4506-bfbd-cb0efa4c0042",
        "cursor": {
          "ref": "4f688bc8-42f2-4f7c-9bc4-9e628d38a759",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d7b330f-b11f-4e1b-9cf2-fcbb30aff72b"
        },
        "item": {
          "id": "a9c5ae85-6cb8-4506-bfbd-cb0efa4c0042",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c203109-0e5f-4168-934a-7fdd0b32c37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adc0a21-9017-4853-9369-f400667462a5",
        "cursor": {
          "ref": "15a35906-b244-4412-8d76-65c57677befd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a67564be-c6a5-4bbf-950c-6975f68d608a"
        },
        "item": {
          "id": "2adc0a21-9017-4853-9369-f400667462a5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bdba4e91-a4ae-465c-95d6-06ae653e682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3598887d-82ec-449b-a4a8-2d27e125c6bd",
        "cursor": {
          "ref": "26db8503-884d-49b2-9b6e-7e0e5c97815a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "28f4db91-dfe6-47ec-b25d-c1a43ccfba0d"
        },
        "item": {
          "id": "3598887d-82ec-449b-a4a8-2d27e125c6bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11a87574-560e-4f02-9891-1f96769cd854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919cf063-4f56-467a-bf30-07c9a8b74770",
        "cursor": {
          "ref": "1e075f4b-094b-40da-8275-8717b7021d37",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8623d15c-b3ef-4eb9-b884-bbc1e8bdfb67"
        },
        "item": {
          "id": "919cf063-4f56-467a-bf30-07c9a8b74770",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4ab683e-faf5-4b4f-9c08-362d781dd15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154d5f19-1d88-4618-8de1-b1f155dbc0a2",
        "cursor": {
          "ref": "c35560f3-25ea-48f1-9466-8bfe7dc8a93e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "91570ff6-d528-485e-9e96-2867c8f69466"
        },
        "item": {
          "id": "154d5f19-1d88-4618-8de1-b1f155dbc0a2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c3c902b9-c435-42ef-be07-fcdf07202fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4855d476-eadb-4c05-8fda-6421775d49ca",
        "cursor": {
          "ref": "eb493463-0953-4640-95b1-23b254b3a2be",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9e9f5bd-05d3-4b1d-ba3f-4b5ed8c268db"
        },
        "item": {
          "id": "4855d476-eadb-4c05-8fda-6421775d49ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d7e286a6-f1b3-4963-9aa7-cfc284e6232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af895ad7-9e44-431f-aedc-43e2d0a148f2",
        "cursor": {
          "ref": "e54928e8-25f6-4022-97f3-0d8727150bcb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "755cfead-2495-4cf7-88b4-22925ca43416"
        },
        "item": {
          "id": "af895ad7-9e44-431f-aedc-43e2d0a148f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9ee1874-9ccf-45b3-b9aa-c04fd583d6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b87e2-fcbd-4619-a73c-cd3c9e16fc06",
        "cursor": {
          "ref": "cae6da2e-9a84-47d2-9a44-4d4c66db41e6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f2dff238-4189-4818-bc75-b98477058914"
        },
        "item": {
          "id": "f71b87e2-fcbd-4619-a73c-cd3c9e16fc06",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f2c5942c-481d-485c-a8f1-39a8fdfd8ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec43f43-2a8f-4f76-9a84-d0febfedf7ae",
        "cursor": {
          "ref": "f8c5d325-29ef-41ca-bc0e-d012a66ab817",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b9843487-4835-40d1-8017-7bf831c0b016"
        },
        "item": {
          "id": "5ec43f43-2a8f-4f76-9a84-d0febfedf7ae",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c446aaa9-0c3e-4d92-8ba4-5f28464e89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e89edf-9dfa-4d10-98c3-4fdc9d73c1ba",
        "cursor": {
          "ref": "8a4d9859-9ce5-48d8-a497-df9d5d812518",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "285d6889-4d5a-4b59-b49a-e7163da326f4"
        },
        "item": {
          "id": "96e89edf-9dfa-4d10-98c3-4fdc9d73c1ba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "46a27176-603f-48a1-94cd-0966af1a7468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01817237-f9c8-479d-8b93-ba21f854f0db",
        "cursor": {
          "ref": "9ee115ba-d81b-409d-91e3-e9efdf0c1302",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8f90ca23-23a7-480b-9e06-96caf4b06f82"
        },
        "item": {
          "id": "01817237-f9c8-479d-8b93-ba21f854f0db",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "73ed1d47-a41a-458a-9de1-0a56777d33cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29825bd4-15e1-46e9-98d6-a58e786d447e",
        "cursor": {
          "ref": "27ad4928-cea6-4386-92e7-e51c477af273",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85d9c292-1810-4ac6-9aa2-33ed9f5298a6"
        },
        "item": {
          "id": "29825bd4-15e1-46e9-98d6-a58e786d447e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "efc82c66-508b-4180-ab35-4f151802472b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b98107-66a4-4e22-8b23-6bf1437a0f9a",
        "cursor": {
          "ref": "73a95c86-c760-441a-86dc-73404284d6d8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1dd8efe3-b8d9-4833-b37e-d701f7628461"
        },
        "item": {
          "id": "b7b98107-66a4-4e22-8b23-6bf1437a0f9a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1df5a37e-ca1a-4705-bc22-1fe8bd8e1034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e72a9b-64e2-400f-b2e3-e588801c73e6",
        "cursor": {
          "ref": "bbc1b39f-bec8-4447-8fc1-cb9a8f01d9b8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "987b6878-4d1c-47f0-accd-30711080cb2d"
        },
        "item": {
          "id": "b5e72a9b-64e2-400f-b2e3-e588801c73e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8348168e-94ac-48fe-9ccf-32ffa6909816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c4f6be-3d28-4db6-ad6c-bff5adf3b438",
        "cursor": {
          "ref": "5d0d0f4f-d354-458b-beb1-f223a21db864",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3021a27a-e3ae-469c-8fca-2026c65f440b"
        },
        "item": {
          "id": "51c4f6be-3d28-4db6-ad6c-bff5adf3b438",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d8f8b5bd-bff6-4281-973f-edefc2cdad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad28db6-9d92-4eb2-861c-dd712bb8cddf",
        "cursor": {
          "ref": "fada15c1-c18c-4e59-a937-4805e3494246",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c377b939-9608-459e-b7ef-8a7fa743282b"
        },
        "item": {
          "id": "6ad28db6-9d92-4eb2-861c-dd712bb8cddf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "859d5f59-9c2f-4f61-a329-79e08ea56bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7793733b-c5f5-4f0f-a21a-45be091416eb",
        "cursor": {
          "ref": "f0fb76cb-9709-478d-bab9-50e7fb783e68",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "daa9df54-4480-4fe1-a011-baa4ba35b316"
        },
        "item": {
          "id": "7793733b-c5f5-4f0f-a21a-45be091416eb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "14e4dd1f-e3fd-4423-aee0-3ec3f27081bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51d1da1-5d5c-41b4-9ff5-e9eeff9276f1",
        "cursor": {
          "ref": "c11e6f54-f38a-4791-aceb-bc29a26ff027",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fcedd5e9-ebb9-447c-b680-95b8724789ee"
        },
        "item": {
          "id": "a51d1da1-5d5c-41b4-9ff5-e9eeff9276f1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "49d640f0-b3dd-4b4a-82eb-894a8fd5d294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c508c942-fbd3-4340-b606-5e66d58b9be8",
        "cursor": {
          "ref": "e89e24ec-c60e-4bc7-832f-2a5d25722975",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "072f473a-c968-4955-af11-61113a519392"
        },
        "item": {
          "id": "c508c942-fbd3-4340-b606-5e66d58b9be8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "247fd3fb-66aa-4855-9823-f6ba44ec0428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b5bb31-c9a0-4c33-94af-b3bdfc39add8",
        "cursor": {
          "ref": "9881d0a5-90df-49ff-b30c-5b0e2099e79f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3379514-05bb-4b04-a2db-a1403c89c8ee"
        },
        "item": {
          "id": "a5b5bb31-c9a0-4c33-94af-b3bdfc39add8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4bb1c994-0d31-4dca-b5d5-bdd65cef4e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea4a0e-e8f4-450a-95c2-ae313129aa99",
        "cursor": {
          "ref": "c38011ed-6adf-453a-ac96-d50b72e8ac3c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2edf8eb3-07a3-4ad7-9516-5d2703a68a98"
        },
        "item": {
          "id": "4eea4a0e-e8f4-450a-95c2-ae313129aa99",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "82aac7b3-ca97-4491-adf8-1f82342fd9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf6f896-4e13-4725-a8ab-6126d0a83d39",
        "cursor": {
          "ref": "aa9fa112-b1b0-471f-9562-c62e68534184",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9f811718-c858-4cd2-a830-41ef4effdf0b"
        },
        "item": {
          "id": "8cf6f896-4e13-4725-a8ab-6126d0a83d39",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f73c557-2343-42d9-8dcb-2d6ea0b97787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353ebe22-da00-4c73-a305-08583b4f4379",
        "cursor": {
          "ref": "eb3822b0-247b-4f53-8b3e-6d4512071d44",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4ae3c8a-0831-4391-b34f-fded752dd85d"
        },
        "item": {
          "id": "353ebe22-da00-4c73-a305-08583b4f4379",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6d164db0-0a7d-4a5b-8edb-67c90ed47879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f23acea-fa95-4be6-a2e6-ecd19e7a0bd3",
        "cursor": {
          "ref": "d4a4732b-8024-4df2-96d5-bb84a9090c8f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf9bf821-e301-426e-8895-6e5822d974bb"
        },
        "item": {
          "id": "5f23acea-fa95-4be6-a2e6-ecd19e7a0bd3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cd2b68a1-1c3d-4a7d-b804-ef1695c57eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e482d-ecb4-48f7-9462-b26c166f3fdc",
        "cursor": {
          "ref": "03b1c8be-da35-4d42-986a-642819310f12",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7737a634-f4a6-4d05-8814-e1749090e147"
        },
        "item": {
          "id": "671e482d-ecb4-48f7-9462-b26c166f3fdc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "109e08f8-456d-4985-8ae5-b1ad8fdbae58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0415e5-0d67-4bf5-930e-03e3ec6213bd",
        "cursor": {
          "ref": "10e42cb7-5f2f-4cf1-af94-35a3c4c58b48",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d7f61f73-21b4-4e2e-a408-f87c9b09f948"
        },
        "item": {
          "id": "fd0415e5-0d67-4bf5-930e-03e3ec6213bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a5843a79-a044-48cf-9b47-104476460912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe9e6a5-6eb6-42c3-bf8b-3011d39abb25",
        "cursor": {
          "ref": "231e5990-bdab-4931-b40b-b0ea6229905b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e1071b5b-4645-4575-bf5a-5b863a4d37c4"
        },
        "item": {
          "id": "efe9e6a5-6eb6-42c3-bf8b-3011d39abb25",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "67903a08-ac7a-47a3-a299-7d2f851996ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b103e41a-7937-4894-9bcc-ad1661749a12",
        "cursor": {
          "ref": "87d5d940-78b5-4f4e-a73b-049b96f83d13",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8b28eb8a-3e99-4f96-8ef2-1e7a26cfd5d5"
        },
        "item": {
          "id": "b103e41a-7937-4894-9bcc-ad1661749a12",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a3de2bfa-1209-4299-89cd-4a464339a547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485ccdf6-1489-43a9-a108-87baafb1620a",
        "cursor": {
          "ref": "e62a132b-d0a4-4265-bbc3-937b4806ac59",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4f9cdbae-e76d-4742-8841-50c9fc1aab52"
        },
        "item": {
          "id": "485ccdf6-1489-43a9-a108-87baafb1620a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "49d0f7c4-fb06-48cf-8747-06570688f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d1c144-b6f1-4e4d-b7f2-efb2ba753894",
        "cursor": {
          "ref": "05aecd6d-37be-4225-af7c-f5189764c711",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2772a0c3-dc36-45b6-999d-2e5b77f7b471"
        },
        "item": {
          "id": "e1d1c144-b6f1-4e4d-b7f2-efb2ba753894",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9150a67f-0937-4950-ab3a-94667a7da5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04200169-820a-44c1-b8c7-f3c2ec5749aa",
        "cursor": {
          "ref": "f13bca0c-bf6d-4d3c-82db-29124b5c0e97",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ae03678-9b87-4698-bfd3-aa9306de9d5d"
        },
        "item": {
          "id": "04200169-820a-44c1-b8c7-f3c2ec5749aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "667a5c49-1562-4fc3-964d-7e843e4636ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff9bdf-9164-40cc-8e10-8fe63b2dafb1",
        "cursor": {
          "ref": "a5db9110-e179-48b8-b193-267bfda30ba6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72f4d7cf-a967-43e8-9c60-c651eae29c80"
        },
        "item": {
          "id": "d0ff9bdf-9164-40cc-8e10-8fe63b2dafb1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bac23c7f-be05-4f18-8ffd-f84b661974e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924ad6bd-cd7c-48a9-8d55-67ad41b43b7a",
        "cursor": {
          "ref": "36daad86-15b6-47a8-a4a6-76105cafb92d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f5ccd122-e760-4f11-9563-f58e834f3bb7"
        },
        "item": {
          "id": "924ad6bd-cd7c-48a9-8d55-67ad41b43b7a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "960c0e84-a52d-4c73-b8a7-f2f0b98917ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8172bd2d-ffe5-409d-aeb1-3ece6cb5528b",
        "cursor": {
          "ref": "6e5cf3ab-9298-48f6-8bee-7bd9fcd8ffab",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b56bdd0e-4a78-46ca-9c79-5905db2cfd36"
        },
        "item": {
          "id": "8172bd2d-ffe5-409d-aeb1-3ece6cb5528b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c0cc45ae-242a-4a40-9f80-7204c4070c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977995ef-0c56-4652-b45f-a9a203e47502",
        "cursor": {
          "ref": "311122d9-ad23-4432-9f3f-08f8757e6294",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de6d8a31-546e-4dab-8b1a-78f4fb4e2e16"
        },
        "item": {
          "id": "977995ef-0c56-4652-b45f-a9a203e47502",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5df42d0e-8f37-4c16-94a2-d4909885f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a423ebc6-c902-4675-8941-196b5190c2e9",
        "cursor": {
          "ref": "159fc431-0d93-45d2-8288-e34df4a068c2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8536b788-0138-4052-b8eb-daf8932c2a16"
        },
        "item": {
          "id": "a423ebc6-c902-4675-8941-196b5190c2e9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "13d9641f-6c75-4ac1-ab3f-b47e05e4aeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a5a5a7-8c7d-4986-91a5-4c451767f910",
        "cursor": {
          "ref": "b61c9db4-ac7d-40fa-bdcc-54d3474f9716",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea8e8843-0cfd-471e-83dd-43c138c6c60d"
        },
        "item": {
          "id": "81a5a5a7-8c7d-4986-91a5-4c451767f910",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de4fa5e3-604c-47b8-9e6d-68784aca5d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864c98d2-ea80-469d-8297-d74198347344",
        "cursor": {
          "ref": "e9055cb9-934a-4292-9ca1-f2051b2b5ded",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b945948-cd17-465f-9539-cd2bee10df61"
        },
        "item": {
          "id": "864c98d2-ea80-469d-8297-d74198347344",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "47443a06-cff9-4a4c-9f4d-a0a75bbe225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63752f33-13e3-4fae-82ed-7928dfa2113b",
        "cursor": {
          "ref": "7088d236-3df4-43bc-9532-73587d708fd7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9261e62-d947-42dd-947b-436a1e744aec"
        },
        "item": {
          "id": "63752f33-13e3-4fae-82ed-7928dfa2113b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e48f8ddd-28db-4736-a829-f5dda376cd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57790d5d-cde8-42eb-bc99-a0abcbbe1e0a",
        "cursor": {
          "ref": "52822cdc-977d-4267-b11a-8d138e33eb06",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ecfc6f39-58ce-49cd-b136-b1c582cd8ff9"
        },
        "item": {
          "id": "57790d5d-cde8-42eb-bc99-a0abcbbe1e0a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "28ef369e-86d8-4628-af1b-a36537ec484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18675bc-d567-403d-8ef8-d463998f11d7",
        "cursor": {
          "ref": "fc45ef23-9c35-4650-8ddb-33f44acc4dd9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bd14a78e-72d5-4e70-8731-93810c8e4454"
        },
        "item": {
          "id": "a18675bc-d567-403d-8ef8-d463998f11d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "843495b7-67fa-4af2-a60c-86a90ee35661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517ddd0-8481-41d7-ab28-a2ce90709eaf",
        "cursor": {
          "ref": "3c8dcfc5-c23b-4c90-b170-d35dbf8efdd6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a481124e-d5fc-4a53-9f50-61d19ffc0ea1"
        },
        "item": {
          "id": "5517ddd0-8481-41d7-ab28-a2ce90709eaf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "653f0bc4-4c95-4b60-bdf0-af35dd99bd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e9c4bc-98dc-470b-aac3-cd7fdf052bde",
        "cursor": {
          "ref": "325c32b8-b1bc-471b-98ce-5fca54820087",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "056220fb-ba17-48ab-b23f-5472c7a34805"
        },
        "item": {
          "id": "82e9c4bc-98dc-470b-aac3-cd7fdf052bde",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4ccb0e13-7013-4536-8b40-56e6ffaff44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5e726a-3b9e-4935-8794-3c4036ccb9ae",
        "cursor": {
          "ref": "8a967525-a026-42ea-90c3-ee99e3a23f80",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3d094493-aff7-46d6-8af8-5acd9097ed3e"
        },
        "item": {
          "id": "5f5e726a-3b9e-4935-8794-3c4036ccb9ae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de60e10b-deb4-4f81-8e52-a50bded85934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870a58b5-14e8-4d78-a45d-cf48b3a30e7e",
        "cursor": {
          "ref": "5f2dc4a4-2e4d-48a1-9cc7-44a229ca668c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "240eaa3e-3edd-4e91-8762-a8fe84d57b43"
        },
        "item": {
          "id": "870a58b5-14e8-4d78-a45d-cf48b3a30e7e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4e510ea3-ede0-4c19-a54b-5d9e83a43fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6c3df6-c216-4569-99c3-35868d1fdc08",
        "cursor": {
          "ref": "89bcb5e3-bd22-406e-8d14-88dcfb542ead",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4c82981a-2b7d-4fec-ab6c-5a0323b655db"
        },
        "item": {
          "id": "2f6c3df6-c216-4569-99c3-35868d1fdc08",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b9bc9742-0c02-48b2-8029-f30c614757c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f586e73b-8a1c-4d82-959d-a4a90834ff7b",
        "cursor": {
          "ref": "65cc88da-8730-4db9-af2f-127f2945eb0a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3eecfff6-ee2e-40ca-b10c-4cc2293a10b0"
        },
        "item": {
          "id": "f586e73b-8a1c-4d82-959d-a4a90834ff7b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a26c0be4-2fab-4170-aabf-1d1474ee2a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a6754-a5c8-4347-af9a-709cf47518e1",
        "cursor": {
          "ref": "361435bd-4787-47e2-a73d-2b4f6dde7e56",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "696c44cb-88af-4ef9-b3b2-9354a252f404"
        },
        "item": {
          "id": "102a6754-a5c8-4347-af9a-709cf47518e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5a306471-47a4-4ce7-af33-b09bf430782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04098cdf-fbe0-4c54-aa54-c394bec47e44",
        "cursor": {
          "ref": "465d3ca6-0e7b-4450-a3f6-e76f017b2cf0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "309e1ec4-878b-445d-a4fd-3ed5d1051265"
        },
        "item": {
          "id": "04098cdf-fbe0-4c54-aa54-c394bec47e44",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e0c4de5d-91a6-445c-9984-80eb62aad0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30a514d-af0c-4e30-880d-a260d8db9eff",
        "cursor": {
          "ref": "0b7ccc35-4fbc-4dd0-89fb-c01a8f6e8ef1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e36f2584-9843-4716-906a-f3e34053171b"
        },
        "item": {
          "id": "c30a514d-af0c-4e30-880d-a260d8db9eff",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be1b37e3-8ca3-4b55-80eb-9ee213959547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c3d14-dcef-42f1-b7d8-d5fba9ca33ea",
        "cursor": {
          "ref": "13f28f9e-fed3-44e7-a18c-7c549d1cdcae",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "18b123ff-5494-4739-93fc-9273951f379f"
        },
        "item": {
          "id": "945c3d14-dcef-42f1-b7d8-d5fba9ca33ea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8e4a9cea-468e-44f5-9f79-cba2ed536725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572775d0-2c69-4d43-9c69-3c3232ce6eb0",
        "cursor": {
          "ref": "70f57049-e8d9-4c81-bbf3-4f53f513882b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "229232b4-38a7-4142-a52e-259edc9f3bd2"
        },
        "item": {
          "id": "572775d0-2c69-4d43-9c69-3c3232ce6eb0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1ded60af-443f-4279-a312-80d56d875f69",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "832983d2-452a-4cc7-bb6f-c3aa5a3e6037",
        "cursor": {
          "ref": "544ff8de-9888-42c1-96fc-4f2acc7fec9d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "44d17d63-2509-4d7e-81d5-32fbfc324e12"
        },
        "item": {
          "id": "832983d2-452a-4cc7-bb6f-c3aa5a3e6037",
          "name": "credentials_verify"
        },
        "response": {
          "id": "52584db9-39c9-447f-b87a-cec0c5617aa5",
          "status": "OK",
          "code": 200,
          "responseTime": 2352,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b327ea6-28a6-4c6d-bc8f-c4195cdc39fc",
        "cursor": {
          "ref": "0eab93a4-462d-4ef1-8f4a-a9bb02673f72",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c40430aa-e0c1-40cc-9ce9-3f8b2a3fc00b"
        },
        "item": {
          "id": "3b327ea6-28a6-4c6d-bc8f-c4195cdc39fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "deac36f4-fba2-4848-b92f-1b55737e97ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2451,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df552d34-86eb-4aa4-9487-679c9c5cee32",
        "cursor": {
          "ref": "886a0563-44c0-4383-b1cd-e0306997886a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "54dbea2f-c7db-4b6e-aad4-62dd8b4cbdaa"
        },
        "item": {
          "id": "df552d34-86eb-4aa4-9487-679c9c5cee32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ef047b3-c88e-42f6-9cef-39f5d70874a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df552d34-86eb-4aa4-9487-679c9c5cee32",
        "cursor": {
          "ref": "886a0563-44c0-4383-b1cd-e0306997886a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "54dbea2f-c7db-4b6e-aad4-62dd8b4cbdaa"
        },
        "item": {
          "id": "df552d34-86eb-4aa4-9487-679c9c5cee32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ef047b3-c88e-42f6-9cef-39f5d70874a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf9772-7045-4b44-8319-01c7be6fbeba",
        "cursor": {
          "ref": "6aefe8db-0579-438a-b050-b6f53885b196",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "37484bcf-19ef-4e02-a54a-ccdf451bcc38"
        },
        "item": {
          "id": "04cf9772-7045-4b44-8319-01c7be6fbeba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "610bbd7a-9aa3-4912-af9b-deccf77a2015",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dc4248-a8d7-438a-be84-afe396ebbb31",
        "cursor": {
          "ref": "b9d723c0-2091-41a5-8c3f-d0c56e90ba72",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6d05b763-8f4c-4055-9976-8d6b74739743"
        },
        "item": {
          "id": "32dc4248-a8d7-438a-be84-afe396ebbb31",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab940612-88f0-4ddc-81ed-d3dfdef3870b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}