{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "96ef48c3-6637-4d55-9db0-16029542dec3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cea7dfcd-634e-48e1-bf37-aff34aa34ead",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65d360cb-47f8-40bd-a0ea-9102dfc968d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16800a96-dfa9-4f2c-a41c-b12599176416"
                }
              }
            ]
          },
          {
            "id": "30352d9a-8113-418f-a3c3-1ac9dc32a47d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f92e4b62-002b-4d2c-bcda-3382f86ec942",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28854ba9-d6cc-467a-94c2-fff1a4a9d4ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6fdf0bd-89f4-4d09-8617-fd6e38a26eb6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c4dbd7f-ee22-4e6a-92b6-8f0ecef208fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "999f1d8f-5bcf-4c6e-9af7-ac1bd56d1161",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc076a75-fbd0-4f5b-8761-247da96d20ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9534f642-3639-47ff-b0fb-203ab4f42f33"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7da75076-9ea4-4e6f-871b-6553a0e44ffc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c93aa54-48ff-41b2-9182-2069d857e499"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e82f9bc1-531b-4233-bc85-6e3c0dfa3b25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2381aab-80c7-4c0d-ba2e-fe0b34e5244c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "113342d0-46bd-46e9-b97b-fbd9ece5a533",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6c645d6a-fd46-475a-98a3-6cac7b1b18f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db983a7a-743d-4429-bb67-88ec88653464",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e8e2e4a-f697-4ae7-94e3-1623af20ab6a"
            }
          }
        ]
      },
      {
        "id": "ffbd4aa6-58b2-477c-b14a-99977602bccd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eea04cb0-4964-4bda-94bc-fb65493a541a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e6a0128-6eb5-466f-a3d5-e59bf4ed11be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5ba42fa-cefb-4301-a95d-40d5a9e8836c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb00a5a-798b-401b-87c8-5e5db39f0efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45cb233f-9416-4260-a2e2-7c5b6344af6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af00ac0-57f0-4fd2-9b3a-7e0a69174196",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e019045-6fd8-4f23-acd9-7a4fa1e0bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc67d314-bc3a-4e49-8d10-5e572c5fb228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dd69ff-22c0-45fb-b9ac-b8acd28a9046",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b469b2-3f10-4dc3-b67a-2364e195d445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dae1997e-21e9-4440-a853-d0b7e49c3532"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb1cc3a0-1064-461c-99a8-0143c7408b62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa8623aa-392c-4207-8bdd-7d87358d9ec6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb4b0e-3971-4d66-b9a1-1147dadccae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a862fba-73e2-4cef-8dfe-f991b3b34dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e44d53c-801f-422b-839f-0ecfb831326a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ede496-6b0c-4815-aca8-83db17498a6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63aacf72-1111-4f21-8086-50056692f497",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1a1a5c4-e3bf-46cf-8322-eb4de05b8988",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66001fd-1d8d-4795-b51b-8df0974d82dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "01ef2b46-840e-4eb5-a23f-4040dc1fa47a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2ceaad4-46b1-4fa4-90a3-5309328c3f59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "973f0135-757f-45a9-8c14-b1185fe2d498"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f127bce-1b5b-437a-8460-63cd965d5194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed45006e-90b8-4694-8e8b-f225be7e907d"
            }
          }
        ]
      },
      {
        "id": "70631016-a532-47f8-b0d2-5946e98bab87",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ec4c9853-fb5f-4c48-8935-59f459ba496e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36c331f3-843c-40d2-b71b-6e850dfae527",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3501ff2b-5ff0-4ebc-8570-2e468ae721bc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d9257b-7a7d-4a99-9d50-b98877e15c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370d2321-31fb-4a9b-9bcf-116fab6588b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33afd0f9-c5a0-436b-b07e-cb22e4b5fc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b7cd5f-9e32-42c4-a9aa-3f04be0c3bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34847b45-276d-4ee0-be30-e726910e9123",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea05ad09-5c29-4864-839a-9678c32861c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9feee5-4ca2-4dca-a856-b2a0cefe2b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d6612c-7709-4ab2-81c1-1164f4c979ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3a8e454-b2e3-4702-b19e-b61df7c91599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d0ed3c-4ec5-4cca-a9e6-5a522803d258",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681017cc-c1ec-4330-a770-cc15ad8da812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997bc033-0fc6-417e-9fbf-92359f0392b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54656a2b-cdfe-44bc-aedb-fd000c418595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10db6cba-88eb-4ffc-9663-3ad0f6aa3713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829b62d7-f742-4fcf-ac1f-b14cc489f2b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93e6d8d-a0c5-451e-84cc-e2c5c11c8f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cf52b3-55d0-4206-8d72-4e217987c2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b24821-ed2c-4acd-9394-3315a0a27d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c66be8f6-1d3d-45f4-9993-d47546f6c785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9429d379-106f-4e78-ae2b-e8fcca195de2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8933ae-7419-401f-9bb0-9f4fde640481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70bf935-6fea-42c7-9e8f-ec0c958ed580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8529bd9-9682-4493-87ec-820d05739842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de464ebf-a024-4c9c-96d4-e8bc80a8fc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f6e17b-3bd9-4ac0-b341-c377e6324186",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65abf7bb-4de9-4743-929f-89335d8ed19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fb2e3d-ca73-4ff9-b336-51fb3e48dc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a08f6f-3aef-460c-834c-a9124797efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19c60f98-d7cd-40d7-93e3-e45ff93d1df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf9d50f-5cbd-4e82-a0a8-992ffc004550",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f169ebbf-ca8f-439c-95fb-0e09ed96a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224da4b4-88c0-43fe-941b-8640bc106344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2294ce73-2e86-48dc-96c3-012408d7f304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cea9885-19fa-43bd-9347-c7e73074b031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6466e0-5ac8-4265-8798-4fc287ec3d76",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee67ad08-b226-4e4a-a474-505e8a644095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06a568f-55ec-43cb-a49b-b26f30aae519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4e36b8-d073-47f2-b190-61e91f32884e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26cc7297-1772-4f22-bf2b-6a38066ab39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a8127e-f235-4fce-a3e4-9172586b142a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b621d-5088-4b85-8be1-6523d2a74543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6bc8fa-2355-438e-a47c-810418fcf409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8310695a-dea3-4981-acae-a83671809bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d077974d-5f75-4959-ad78-9c4427531884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f438d1ea-3562-474b-9a86-c1ea999543ad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e4bee2-d1da-4da0-8f89-69b3e7604474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7745ac9e-ccdc-4482-8d59-27e7d84e0699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6999a470-e892-4396-ab87-7394eae896af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "951ca494-a8cf-4869-bbad-3f1691147968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2edebb-6531-4d14-a98f-48803375c4d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c01fa11-2442-4c20-b008-ddfceb2aeab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13373b10-72c8-4aad-bad3-f70392b71228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43c52c9-1b90-40c5-8344-f81389286e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33327bf3-c9e1-4e01-9632-71e47ca21ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cefcb1-99c0-4515-bed4-e16f1d849513",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604d053-0c02-4e0d-b9bc-f5d4e43b6e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf7c1e3-6e7b-4892-9bd7-646828aadc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df2f3db-3904-468e-a4d0-7d883ba7d968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfe4ac0e-21d3-45f2-a523-2f1857a0dc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1242c032-2425-4499-95e5-4e8ba40ce91f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb92a1ab-8389-441b-aff7-e659bf942761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3164f494-4245-45b1-8e05-88b09e418454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128f5863-5e87-44e4-b606-10987c7c4492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4346cc0-5a5a-432e-ae98-ad348b6d204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d066e4a2-b708-42a4-b480-d23c9f882368",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b8b960-ec4f-483e-bdf0-0ca1849432ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebe0f25-b400-4a5e-9057-6cdcc872c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740cd617-014c-44b1-8fac-196c41f74c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4daea87-5619-4c44-871e-44cf30d557dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e668426e-b814-41d8-8104-646bda682ff0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c598341-7d01-4ae5-b986-be1075ed33e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2480a48b-6098-420f-927f-d8e20c8028f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e8170-f537-4f6a-9c7a-0a87cddd1f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3427ef3-0ba5-4207-86bc-f3a451de9e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3828bf64-8e31-4e5f-8f31-7a25c1b2ed3c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c42041-bd3b-41ff-958e-a20671a7bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669b2891-3835-40bc-979a-65bd0e598712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c757e6e8-b6a2-450c-b3c3-a5e351ef65da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504c7938-d09d-4416-9bee-51e9c76cbe66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcdcd00-d692-45c0-85f5-86a136173afa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f2162d-f52c-416f-a691-7541a6dfba7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bd9e7e-af97-4497-87d8-b0b5605e2a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd9225-ced8-4650-a718-97ab980817a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0892774c-3c0d-4382-abed-e9408e9008a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b92516d-dade-41eb-9781-96cf6c85dead",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d18361f-f062-4ff1-90c1-b9cc6958bf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1a41c2-aef4-4c34-a928-da34dfaefe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb5ba60-253a-4e71-869e-823d703ca247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23134c0b-f416-4821-b8b7-fac45d7e956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e8595-0d28-4666-8f57-55d139797452",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd0704f-8807-4982-be92-a96a34784d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4addbad-3b0d-41c5-9619-ce56c5175f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399841d4-5ad3-4836-adb5-f5406084b977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "576aa2bc-bb50-4ed0-b490-64d1dadbfdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7d6f3d-9916-433c-8295-af9894b75f39",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a989cdf0-3a02-4129-b312-1fcd8d4e6ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa1fc9a-0949-441c-b0ee-5aef152c2b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30410ca-9efd-47b0-bf1e-1842d5aa8e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc64e463-4b9a-4a8a-9a34-fe3491816718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f42fbd-da38-44d7-827d-ebc741aaf8b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a3152-7550-436f-92b0-5529de06775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e365c89-68d3-4547-ba49-89c1ceb8ad0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aa074b-cc52-4846-ba16-96a0544164c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "945f11ad-b455-460c-a55d-7e752d31df29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30de78f-982c-4c74-8927-25c344d4a871",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2663b7-b478-4c0c-ada2-d1a7f5e417c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74fccfc-a791-4609-aac4-96bfb02b1d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40a66a-4f22-4e35-aab8-609dad8ee06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "373e6d84-8205-4262-bcd1-f2b210718772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c56a84-2702-43f8-b710-16be7ad408fa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ed6ce2-b049-45e4-b917-fc1c2379510c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183c350c-4bbe-400b-97e2-a5525b0efb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67f004d-813f-4ee8-be48-eee47bee9094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67e5fc2b-0900-4511-a16e-185fd517242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd649b0-f0d6-4ace-a363-ea8be92940d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c3c684-96b2-4748-89ba-1aee765b961e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cd5c90-a380-496e-9c9a-95fc91e2591a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51add802-55f3-438b-9909-ad13c505012c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d5f81f-c490-48e1-9fe7-4b4f91b843dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fc6266-e4ca-4ed5-a771-ea28559bcb4a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b21ef7-9868-4244-bf1d-300a1dc12fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0738fec-d4eb-4a16-a7c4-4875edb5343d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9599b5fd-f267-45f5-b836-737721a47ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "439bc3d5-fcf4-4e57-a6f1-278d9d64b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837da917-eb43-4c83-9f32-048a2feeaffb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b0bf2f-37f7-4638-9d58-595f2ba20a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2888918-ed5d-4f16-a583-e227239ba704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30e1841-4ff4-41b5-8de0-16007a6bff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84189648-106d-4f09-b225-086c70dd8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171fc1df-f91e-468f-99cc-930a91f33132",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d78e37-9c45-4843-8b27-57da52661148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa6f0f6-f3c2-4096-886b-86011c788730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c606a1-3b46-4428-b517-f028804a57e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7353a23c-1fa1-405c-808c-1c94f8352d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef9d5d0-420e-4593-af1b-8088fc0fa3f9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67e6a78-e1e2-4ec6-8640-b5981270e0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90919e96-83f1-4caf-b9b2-7a5e54a1f959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6501236-f91b-4be2-9b0f-ea6224f58e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2caa1d-48d1-465c-b474-7c16e5af57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c7b7fc-9105-4b76-9d9e-e63945bec3d0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf72d07-b89a-4210-879d-09b71fc2af4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b52c06-f414-4c00-8457-15bbc96ae0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f27c3f-c205-4cb1-858a-8640d9678b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11b6ffd-e67e-4c6b-a381-284ea8a2cbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec534f-7b1a-4540-ab9f-8ffb526312e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e03be9-85a4-4976-9003-ad8d257219ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfe3f6a-401f-4741-90cf-ce2ca6c934a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5b6def-5f14-4412-8447-bb799aab8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "952fc21c-b05c-4fb0-9e0c-fdfbb4c15037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ac5941-8058-457a-aacf-c12695789c46",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0994704f-32cb-4451-aa18-259bb483d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94527bd-c9f8-4c8c-99ca-9446af46b3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d1a616-ef8f-43c4-974a-99b9fadd070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b3b1cf-a5dc-489f-a5df-99ed8090d1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0903f-6550-481a-9844-e5d2f914b43a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb3364b-b609-4c4c-bda1-8bb54f5222d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02c5e22-9ddd-473a-821e-c5f5675d7d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680efa9e-608e-476f-9263-082bf636ebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc04faad-49bd-4e92-97ea-108ef5c03d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01de2a6e-a75f-4032-a6d5-817f52f23869",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc415dbd-8a71-4cc3-9f7b-5cc29bf54579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af84bf89-e08e-47ca-9e92-fdff381c81bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6499bd54-3e0d-4984-b168-72ab76344cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf1568d-12eb-45ba-b77c-9f0952ec6ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d1dbe-f4e9-4c82-91df-5c0051a50273",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f74b358-4172-4e9c-a938-6c9741141fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5b5214-a316-4cf7-9641-bc454942c2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f5b44c-422b-4d2c-89e5-fdd890dd8b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b794a161-fa5d-43c1-8a56-dee4b6064725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472e4fb-9093-4f6c-893e-b4b670023ae4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0725b67d-780d-4cd6-a9d1-15d0068e6709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72049387-18b7-43b3-b72f-67d7a513295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c345c546-583e-4c7a-97ca-45495712ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "60c47821-deb9-4c43-bc35-f376bbb7d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24aad282-5ed2-457c-87b0-8463a47982e5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b0151-0e1c-4119-bf9b-640277e7ad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b14e841-1e26-43fe-b6c4-474f881fffe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b23974-0b5c-4e8c-88e0-d59d9b06fb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "551cde9b-f1e9-4bd7-bd69-05a7e4a9aee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93920810-6aee-4b05-ac53-3242b89116f3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d254c3-12cf-4809-b819-d3bf29ccbdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e00131-15ae-4d5f-9540-1cd384e26d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3ba26e-a06f-4ecd-b8bc-a5a29ac16dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28457ed5-f271-4ca3-8f22-3326e90022a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d5c8ee-93df-4596-a7e6-f4a92c5019d2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c954a53d-016c-43d9-9cf1-8273dcc3f0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7c6a8f-b176-431c-8200-2f662d72a71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b898c683-cb78-44a4-a2fc-e8593fb7b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c9594e-8a95-4e51-a67d-222c51539b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfa2bcb-3541-4906-8748-1366254cd4f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632febb6-c8bf-45c1-bfa5-2806641cc9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43be7878-8767-4f5a-9bcb-fdf0d8117777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82d747-65b2-4446-9008-ee7dfb0cb29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb7b3c4-d59f-4e26-904b-317c7b37f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88b8bf8-e37a-4897-8dc2-0fd3743d9216",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae5b5b2-60ba-4dd9-a4f1-8d696a3dc1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2329a848-8a6c-455f-8679-4367266d5a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb49d838-bba5-45e3-a9a9-b2fc9ae76d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da5ea27-1403-480a-9c89-4ff5fde6139c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc30f3a5-d0b8-4f45-bcf2-ccc3a7cbb8b5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2b59c3-3542-4a74-88e4-1c3419414815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb3344e-d778-43a3-a599-802e3b006804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb59c98-4ee9-4848-8585-24a817e7313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "222f5f5f-2444-4694-8b38-bf8311257205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b09056-6a33-47c9-ad6d-4ed4525e04e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905524a3-d048-473f-b98d-5b5532074de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586251a9-a9ef-472b-ade6-d46558e8fb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c58333-1947-48d1-96e5-f6a48ad77362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df59aede-af99-445d-b0a0-68feee9f4e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e1b160-7552-4805-b510-b1151e565f95",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd37f64a-6de9-4d44-a5ed-0084f241ae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ad8eba-a4ce-4f86-ac0d-adf23c7a53a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15109a98-77a2-4a24-8e7f-825dcccac94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd2e7d5-f64f-4207-8d40-c38a5108349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58d004-2141-44cc-b3cb-1f12b339919b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c845649-cf59-47e1-9927-d18a1efb4a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae806842-d92b-4d7d-b40c-c1cadff4d2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be4540b-f4d4-4b4d-bb18-b4e58d9b3b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "be773bb9-ba06-459f-88c2-33634c391147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67753dfe-9ad6-44a8-b63d-0aa8ad61ae7d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc89c47c-2695-45f7-8155-8b8b416a7e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bea704-2959-4485-94f5-0e0f0b8e2952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c6508c-760f-418e-9800-ee4e610153a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f5ef6b-be6d-4d4e-9ec7-a3d9f181085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f1dc3-5926-4dcb-8dea-605c4dedb181",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd2ade-a98c-4979-9084-0c6e00de0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c49475c-a908-4bbf-bb35-21840bc9ac60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7292f9e-c309-4096-a6ff-42cc89077be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff73f5b-424f-4f30-8d91-4881a45b2750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256ac195-48b3-4ddf-8016-6ebe0179567b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cc2007-7350-409b-ad48-9402fe7af90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f411ce-41c2-4819-a5be-5926877752a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272d4feb-f7f2-421c-b046-a809ff124d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4021be6-372c-40d6-9dc4-1c2296f9b43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd843d8-9120-44fa-9298-4453c91a7b75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2538dd4-e94a-419e-b522-e84fb0819606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a8be07-2687-41c6-bdc0-010639e73d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b7f9e1-0a1a-4a56-8958-b75c302d949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c3b22a-7a31-4214-8256-171e8919c8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398b2bf3-1f78-4aaf-a411-4eb0d407c9f3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b66b524-b180-4278-bfe9-70a33900e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b11dfb2-bdde-4066-9444-2b2860cefc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c2125f-e204-449f-8604-4640c94065b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08ae46d2-419f-4dca-9e8b-df1ddeae91a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46546d8f-5b31-4463-aa86-c0e79abbc590",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138a3e5c-6e1e-49e3-955d-26ca835bc338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c751b62c-48e4-4984-9e51-4bebf3526b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9e5015-bd44-41c4-92fa-b3788ef7d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83c93c7e-bce2-4373-b6b3-c91fd190c34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aca91d-f59d-4364-914d-6cf432f91944",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc25fc-6ebf-49e0-980c-38676e5de0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7933ae17-aaa0-4739-9d27-a2ead0933e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19068bd6-e5c0-4f79-b21a-9fb4c70de063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a6188a-5ad2-4a92-a356-1aa1e962baff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9006fc-5cdc-42f6-bff8-9c9a33a21d4f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b1fc65-d282-4e73-a190-dfae08e501ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdb90ce-a2d6-4d6d-ba93-f3599b80f440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c114f113-e423-46df-a3d4-20f23908982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d39aa0-8d6f-448e-8db6-89d4605f4158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5050b1-33a9-4ea0-be78-f2732c934105",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ec91cb-0f51-4bc1-b8d3-c8ddb4f25054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e00f769-defe-4786-a5b3-31992812b109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6728bb1e-99ba-400c-aad0-cfbc7a4a26e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1f2549-de31-46c0-8edd-f865deac74af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da70212-895b-4ea9-b519-d2b12ac63695",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76219051-a21a-44e9-b2a2-a61537fe0a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4988512f-139c-4d34-98cb-888a3624a2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da29e7-8609-4b13-bc6b-bc728ab51ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab258a8f-fe2d-40c7-9eaa-fc1ea45bfe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e169137-4534-40d4-88a3-fcf769781f3a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daebc39-c5e9-4357-807b-75cf3cbd2d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23664c66-2c96-4dc5-bc67-d6eb10365c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387fb31-6b07-4078-baa5-ce6202f836a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e49e07a3-cb15-4263-862f-ea6beb0faba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04271d3-cd9d-4671-9c4b-ba86048a7f6c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dc3009-0761-473c-9a9c-a129d9167112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cafe87-864f-4e56-9421-112955fe70f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7317a28-b4ad-4b83-a888-229510c2ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2a63773b-f9e6-4cc6-943c-04d37629d299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf62153-ead8-4c9d-b108-948265e73695",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed4590b-aa27-4252-a643-d74661b48308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5772dc1-de34-4301-8a66-c5913e27cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c68ac9b-10a2-44b3-88d1-3e0f79d606aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4691369-7a82-476f-8609-cf4ec099cf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a9488c-f8d2-4ee4-8ef9-c008bae0f307",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170dc8f8-aa92-4699-b42e-099abbeb1025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a82858-0557-4829-b4f2-5f4ec99f7476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d4afe5-3264-4bdf-99cf-e1405883ab5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a08e5aa6-0987-4a19-8807-b589a68302c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a99b03e-236f-4789-b538-925ab348648e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd53b1f-4aa1-46b2-9d35-ccc45fd91daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780b5e41-553d-4c68-94c4-fafa39a8c086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de6b632-9a2b-41d0-a9bf-73cef03aa7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c41437-1740-47c0-8160-3cf767498fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc00d2-0775-4fe0-bf8c-f37b5e30e4a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a0977b-6cd0-4ac4-b745-905b6a14cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eca4cf5-0f1f-48a3-91e5-298b2173b5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7831aae-c328-4391-aba9-515a76c8591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "607dd39a-af9b-43dd-b8b4-13cdfbe9c018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18c064b-f9f9-4a5a-bd84-f61ad18ecbf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115223b1-2448-41ef-995a-276b3c398337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbfc3c3-5d32-43f0-8994-32be2585f560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed0217e-8191-4e67-b003-594c7e228740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa0be4b-8f99-4a9d-90b2-296a66067e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c434ab-5b27-4698-b5ce-d377366dbf32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769afc3-4064-41b6-9a35-f304979dde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8681b89-ad43-4d9c-b691-71016f290e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd4872-c627-4a11-8844-8f6f69dd7c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "60568bda-22c1-4308-b850-47ff5aac1668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b382da-8f03-4fda-a633-58120fe9d869",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72279b0e-8dee-4773-a812-e4c52e158f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5734283f-829f-4aae-acc7-39ab5ee88af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1734429f-9fb3-436a-a790-110a08aa4367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e105e22-da7e-4254-9325-c82ff7465e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95751fb8-6e3d-4dbe-ba71-73d11ff066d1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847497f7-dcd4-4447-94af-2adfbc84f354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8978ce91-a58b-48fc-96aa-9736f0b5a89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8adc984-7236-42bb-ba2c-1760cab435fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "191db96c-df7c-4c48-b4f6-e12d784255f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e0f1d8-ced7-4857-971a-073e4879cfae",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aa388f-4698-4088-9d65-aacf9acb12d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9181eaed-0dcd-41a9-9027-83655f3b2e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ab9fe9-dead-42b3-af9f-cc6cf3d1d321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e1e895-ffef-40df-b629-2b99f7847152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae86024-79a2-47e4-8647-a691b28a8fa8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdda36c6-ee0f-4f88-8f4c-6581fd37ca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c52709b-2c06-466a-8616-fe6acd3599e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdadc36-f1e5-4d78-8f19-7c3b78fa1e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edd2d3e3-c98b-4eda-82ee-ae342db880b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168dff0d-7604-458d-8433-484c90425b6a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6947f99b-2008-4936-82b9-ba8011118b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e702117-7ee8-4aae-b062-e272f4ca036f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef26ae0-c320-4b88-8ab7-997a94426f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e951d78-2c41-4bec-be35-8e2d84fdc76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddd4ba9-470b-4461-b694-bd4df49c45f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984de6a-4f13-44c6-9e5e-83f1e45f673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5162dd4c-adbf-4121-82f1-e03df1158219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0090472d-7f9c-4511-a5aa-5ed4c8334aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff09b37c-252d-450c-af28-e0eb422baa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226f3ebc-15aa-49b6-baf1-0a359c8df81d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1253bf55-9cbc-4ce3-818b-e2881be31d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3ca1ca-4dbd-4b26-805f-5f2d2dc24643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfed1026-b360-4f2d-af76-22f54b366e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44493cee-ddeb-460e-b819-32a7a18c294d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a141b590-0547-4837-8451-532d5c70be68",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ad24c-17d6-4c30-95a5-984abbf0dcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e0427b-5406-4701-9597-50575482a59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f8cc3-d964-4c9a-bbc6-ccdddafe96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ae579d-e8a3-492b-87f5-03b758395a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63cc25a-dee8-41bb-8111-848ad433e768",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6461865e-8172-4d4c-ae30-24abad1c859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519bc104-b376-42ad-8717-11135287f5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb1b6f6-0b08-4513-886d-5073d7dee604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82242b86-a8d8-4808-a49b-64a8bb2e414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82be3ad5-3a3d-4c25-b56c-818ee0739c00",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e6765c-0eb2-43d5-9edb-a18b8a467974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a250f2f2-655e-448d-81ed-f2d426469a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae5345d-285a-4a37-b4c0-55caec463215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d312c8-eeda-4d17-b5b8-a7eb9b052301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4817d1d0-62c3-4141-bb33-dc740e52f31b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09fbaac-1007-4f93-8403-62425d9f28d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7ff5ab-e8e6-40ad-9e28-842c3f1d7691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc27d7a-ce33-41a5-a67b-61043e3ee650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "879a1cfd-4ec6-41b0-8d04-3a023d47ae2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53135b8b-ad33-498b-bf94-626a07066588",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23616ed7-204f-4fee-b492-4f2574f8a06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15042b30-0d81-4c6a-a8f6-345a68bfeecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aacd98d-5676-4ccb-8d7a-cde3800a8b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23a50cc3-3a79-41f3-ad51-9acbbd58fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecacf7a-1031-45d6-9a62-c71faeb2a4ae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1771d0-2b7f-440e-8a25-3e50fec73346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1da9dea-09b9-4f91-81b7-6c60146ddad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a827aff3-7797-4964-8d90-4f1ab48704d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45da0569-1812-4cc4-877d-e5f49d3a164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae799c6f-a289-4adf-a909-a8e797f2607e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a712f50-27bb-4809-9bd5-3250adfb06e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513ff91c-7323-4a0f-9265-ac30e5e1daf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177d81c8-9400-4d76-9563-0c00fd008201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "874ce276-68ee-4e54-bd1d-bf479d03180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5fd5af-f3a8-44f3-9477-cf8818370c0d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77886c7a-2471-4e94-a185-77aa54a383aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffc1186-0f5c-44cf-beda-5de44a6167e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c35a2c-fa63-4cc1-bdcf-df5a90930e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a39b5021-8e79-4dcb-acdd-90738af63e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda6560-e8b5-42dc-b99e-83eb4649fb75",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b4aa68-646e-4110-a37b-0d274227c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb455cd-1426-4f87-90e1-c50bd1d675c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57fa187-cee1-4bb6-a475-ea0984239922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b176b54-1dfc-4ac5-80e1-9695857d1f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e4d734-310a-444c-9423-c07569c393a2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916d2dd7-f48f-424b-8e75-a1570a3a52b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14563d2d-5c8d-4683-b805-013149527242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71b5ba9-057c-4220-8477-ca971909ed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be320b5-bf83-4508-9a3b-32ac1197c938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de3826b-2a23-4043-9b9d-c95399f3b89a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4896a49-2458-42b2-9f54-af0eed98b780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6b94e8-e50c-4ec3-8073-7f89ac39c4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206f48fd-5a67-4b9e-93cd-2e582af733a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc13b786-d816-4c6b-a5aa-750f5a2f8a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d35b827-e6cc-4cda-805f-333f293c8b31",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b21649-c463-474b-a484-d0f5c2c8ac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6862cefd-c1af-45a8-ae33-1114a1137a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a37de4-62e6-4458-b32b-70b515348cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de0017d-dc23-4e60-acca-5db2c625648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafbe804-ee3a-4266-a46d-6d9d1e6e698a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1b7cc4-6be8-4026-9dee-c0c59ef673e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c823b6b-39d1-4272-aa57-8a4a3f60620d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db01a8b4-1efe-4c78-8ffb-06dfe785f505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1fe0ec-4115-4c2c-921e-29a6986b0039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6672ac-db90-4bb9-bb44-97834f1f1f08",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b623ac-f378-4395-9ff8-cbb167ca390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b9e0b4-94a7-42dc-887b-5e4e5aff7f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19225b-47b6-4231-bf10-1ceaf3c9a559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f405ed-d7cb-434a-a8fe-0bab144ac6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340d2390-27c1-40cd-ae07-07172b79590c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60d2c64-ba97-4b83-8c25-a80b950732bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e02de5-4d51-48db-b239-36c3ac151ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5188fd2-2f05-4ec8-9957-0a0df545c594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aeb9520-9f87-4b46-8831-ecd8e426fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0009fcea-6e8b-417b-a332-c43e23131323",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc8aab-d883-497b-9a69-98c299ec3c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e11d74-be0d-4cfd-b8cb-fb95b8f6e449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a24b59-d9ec-47c3-af58-c32f54884e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "331fcbf4-545d-43c7-a8f0-96d605fd9eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d06b1-c5f0-4462-80d4-d27e074c21eb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6597cfcb-a2c5-487e-801a-668fd8272a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fb0f96-44b8-49b0-9c22-afde9800ac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a344b741-5386-4972-9124-c90c370db70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e43c89e-4663-4ace-9330-28cd02566a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe5880f-e03e-4b85-9cf6-d6185bd081bc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d69e15-c5a1-4c91-badd-c2860cd42ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e544dc9-ddbd-45d4-80fe-072686fd30c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e61b1cd-88ab-45e2-abed-4703c3d5b0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39affd0e-62d7-43e3-bfc2-5e3b82ab2e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c262815d-cb21-4b01-a139-941b1d48d4c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f6464-4222-46c3-9e61-3471c48fbc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c0187f-f687-41ac-8449-11fed4165c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c3315-dd02-4ed2-a70e-61255b0d633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbac5691-8da3-471c-98d3-49f04c442c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfe82fa-d745-4a0e-a63e-fcbc34d13ef3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e862787e-d10d-4018-a0a4-3961bda3e3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545c908d-9a8f-402f-aadc-13d3274295e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043fd8fe-9063-4540-b68c-d267e04f01d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2836bca-6210-4ca7-9fc7-f64e449ff8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760c733a-8c79-4a58-aab8-3d3be2974e0e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ad2506-7811-4489-8ee4-f87a510855b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2cf55c-9190-42ab-8c6a-1889c1c13786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca10adaa-fc03-4a3a-a9ea-6d652e606b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aacc7e-2d56-42a2-9239-6baa3d72c726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d47fcd5-f02b-434b-8ae9-7980a4d686e7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf5e50-749d-4f4f-8a3d-a459d9026343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2042298d-afd0-4e62-97b8-5fa376861d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3831785e-3a6d-4ecd-8be3-37faa14df731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb6b18c-8e6e-4b4b-863c-6f528114e120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10d9201-bb97-4234-9792-d6ef3b054d46",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59dc27-1691-4316-85c2-721ebd20fb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03d4ea95-307f-4730-b805-fa911d0910db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80032d65-3600-4aad-bf78-2e0c4665d9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec3472c-9be4-4cac-bf0d-9308cf3184bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14ccd7b6-8de3-4ffb-ab32-adac500e1419",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "522fc18d-e7a7-4cb6-a6c0-54f7cac31456",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69de3f5-e843-4d2e-aa57-1bd485dd6dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1be6190-c5f5-4af3-8105-dac050b70a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cb71cf-c86a-454e-8a8f-d898bc8e087d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a87876-0ec2-4c21-ac9b-0fca3293d832"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a1b772-415c-44ff-ae2f-ea6e8db7a6f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "811fdbfe-84d4-45a7-b48c-8d398cf7d962"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05b753d-1377-4ca9-b9c5-84f2e713b795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61cddba4-c69b-45ef-8980-a5143c148fa6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbe43370-dde4-4c3e-8cc5-390838c516d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ea33f56-5b3d-4fba-819a-eee1dbbbce00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da68a589-aa08-4ca6-8af3-ec30de14c59e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a9d5de4-9386-486f-b8d8-85620beed078"
                }
              }
            ]
          },
          {
            "id": "97fd1af1-7e57-4742-995e-a89669ca1a54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9592ec58-3a0d-4176-a9e0-77247424d17e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7969413e-363c-4d23-b465-73d5181da4ce",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f74e7d-2259-4c2d-a1ff-e228582e51bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "943a5975-6ad2-448a-88c5-e6a613176e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f5b0a8-99e3-4916-a646-7f9778a0d964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184be1a1-6209-4bcd-905d-2fd5d5c312af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90581bc2-2da4-41a8-bc45-e6f3a66f07cd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "341d18e1-7eb6-4e27-9fde-9b0ba7915c0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b5a76e8-85f7-4661-aafc-2eab98a598f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a85bee39-fb01-499a-ab3f-8346c1dff522",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85e5df5e-6096-4f70-91b7-139e8917825e"
                    }
                  }
                ]
              },
              {
                "id": "c6f158e7-94d4-49af-aa17-6d8bc4279532",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "debb0c23-f0a3-4cc6-9cbf-920315d5904c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a26d320c-74e6-4edb-bcaf-25619d1496ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69eeeaec-277b-42a6-8437-d58c250be613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba5a21f7-0deb-4184-be3f-b84f4d8741e4"
                    }
                  }
                ]
              },
              {
                "id": "62527d7d-10ae-4968-b0a6-a3a88b006697",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73efb160-303c-4325-b99b-9710d6b41135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8212fc7-f3b3-466e-bc36-9b716792d7a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68fb9a19-7cd6-4cf0-9c3a-b39d646d98b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76506603-17ab-4ead-9d55-b431f799e102"
                    }
                  }
                ]
              },
              {
                "id": "634cddbd-a417-451e-96c8-3a0725c53458",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28102321-a703-475c-8191-1b8714cfd3e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "117b484b-c338-49ef-811d-047f0660d92a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93aa4757-02f1-4c23-9a1f-f83322e64f55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "77715e24-0ba4-47f2-9bb8-b1afedf62314"
                    }
                  }
                ]
              },
              {
                "id": "7a348b6c-40fa-43d4-bbbd-a69376a0831e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "533e0917-b80c-4eed-a58e-a2f75387d046",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fa67305-9d76-449f-82be-1a357d2bb0b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "579936a3-3951-4f87-b06c-fa816775c76c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fee0f828-4c22-4ab7-97f7-64a2164f4867"
                    }
                  }
                ]
              },
              {
                "id": "e8e4ae43-98e1-4207-b22d-eac88174006a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a5d8db-6736-4431-ae6e-4cff70dce97c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6c331af-8929-4606-a554-3bbd0202922b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6ec6e54-88f6-4e53-bfcc-fbd11d905131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "373ba71c-cfe4-4369-945f-af4128911151"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9667cc65-ce3f-431f-8168-714e016288c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16447072-f7a0-4e65-82c5-910227440a17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad102786-1666-40fc-b89c-3d721ee17c2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dacfdef3-c6bc-4362-aa39-19a25fe67776"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d282b6af-a0b4-45f5-be47-86979dca4804",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "61c389fc-084a-4149-a67c-0b145113fcf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da0ef287-aba8-42e7-9152-9e7a4391b5f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12af7f63-ff8d-4b1b-b470-2e60b84012f3"
            }
          }
        ]
      },
      {
        "id": "504191cf-aa43-4a10-b85a-d04937c76b9a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e29ed13a-afb4-4644-a770-a603d890c686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c47fad0-c80f-44c2-a597-a913b2ad1b28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80612e48-40ef-4092-a77d-30faf036be89",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e617a216-0120-4dbc-b0cb-cf158ca74074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f26b40b-6eb2-434e-acf9-caf6f35508b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4b639a-7558-46d9-8f02-1a4b7feff692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c70a584-59ed-42d9-a037-fc83da46a2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd498386-6837-4d40-928b-af439de1c16b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4555c-9199-4f4a-a225-dc33a392f3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e250c8a-e3ea-43a5-94d1-3884eb116e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7411f33-bf6e-4348-bca2-2037e6c440b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04678eda-cfe3-4334-8ba8-219e02338e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af35c70-e32f-4bc8-8a5a-34d7f28999f8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5fe29c-168c-4115-afc6-e9db06dfbe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7bf27f-5dd5-40ef-92a3-33e162c95711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5b06ae-1db9-4c20-9f8a-3760349ab014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1c73a1-74b8-4b12-861b-321a804d041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1459a8-a381-4485-851b-b92cc8b91b31",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd8a2f-7c4d-4673-9dcb-b0b8abb23b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45a9cc1-5d9b-469f-ab71-8773f232fdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807774d8-542d-4502-8b81-d84202de425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3632e6b-580e-479c-b9e5-dfd556198b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d57d1e-08ce-4611-b88f-964575120027",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b493886-f00b-4ed3-8a51-254624e22bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d665de-67b5-455e-b5e0-1eb1bc34cbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e3e80c-666b-4023-ab63-eae2715e4128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad413c8-415a-41ef-94df-f4c934967a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e234fc2-8454-4d53-9a74-d1f3a5478087",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7497ff7b-09ac-4a68-9c94-9e20fe8e8a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ba7301-68f5-489d-b64e-cdf740aa778e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eee8f2-625c-4e00-a496-dc092004b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47eae6b2-5d28-4aef-96fe-f6ade41bc294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06175b25-e4eb-4ef6-be9d-3b18612c9023",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6889d9ca-c7a0-4017-8a79-ef864ec0261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da11f476-91c1-4381-9cb1-f5ce701f7a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41a078a-378f-4093-acab-17b643d0dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e3e814-099b-4304-ae0c-a2ca841ddacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e126b08-b5a3-4b98-bf1f-8b16fc6eb0a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03da405-ed65-4527-b628-626b3c249beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bc13d0-c437-48b3-b879-2c4383f61b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b0cbc6-ec88-433d-9e40-c1e859ad1ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd481757-e14c-414b-8f8f-771a67a88572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eedbb0-6dce-4924-916c-05587d745bf6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e531f5bc-2186-4001-94d3-3b41210bd7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c3142c-105f-4aae-828b-7e26f9c872cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe067539-e171-4b4e-a35b-5959ea750246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d493038-f150-460b-ac18-c154c5d528d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df51cfca-a4b4-4110-8bbd-a23fb86e4640",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f26d7f-4271-4243-a848-32a5063a404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d20db2f-0cda-4459-a7cc-312f32c6d14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c92c84c-ed5a-4ad7-adb5-8b90a4e06142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccf6003-4b10-42e8-aac2-b0adf9ebd897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc966ab-2704-4548-90bb-b1a69707a8ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a593f3bd-5a58-46b1-805f-3d894c86aeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b9be62-cce6-47a8-bf72-a7f81587bee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9f86d5-e0d6-40e4-b95b-52805eb5d275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "00984364-edca-4b1f-990e-91bbc60f5036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf9b6c-d4fa-472c-a24b-6f8d75ef24cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e3060b-5015-4b21-b50e-fba35cfc08c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1c8ceb-1240-4af4-b89a-acf11abb1adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53699f71-faf5-4137-b97c-3338d63679da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6da539-7d15-4853-b9cc-15d855231b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00250469-4ed0-4f39-b112-c46de0dc55f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d7e0c-7492-4359-a67f-23ca3cb35c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df2834b-0864-46ad-80e5-fc36d243012b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed91a5f-b13f-463f-9fc1-9314e2a108c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0b1c4e-9098-4cb4-8568-ffcf475dbab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f302ded9-dfa3-437e-9e2d-4d551af4d992",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe34a75e-5dbd-4ab9-a572-49e1d906bdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e08e24-aed7-4257-8fd0-ccca108ddd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6dde8c-138c-40d2-90ac-bf98c15ce661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc6dc63-a865-4977-8576-0178536dcc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef77e379-f411-4aab-ad2a-66b167f5285e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3556f225-2ab8-40ed-a36c-2456daac530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e886184-b5de-4d1b-9c64-89469636a6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46347e3f-6620-4bb1-902a-e63dadf25618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf9fc41-b215-42f5-9f48-0a8f4b86ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4199af-283e-4779-88df-391bc81970ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a1c8a-bb73-4981-be8d-e0dcd397338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b70ef1-f234-47b6-92c3-d237f8bdcb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abeaf70-f68f-4e2c-b85a-ee638d3175d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16bdde9-d4f2-4701-9391-cfb8fd0b7a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a559687-e8f9-42b5-8f2e-205647fcc51e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4385ba-614e-4793-b898-436b4b76f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e46e72c-ea3f-454e-bfd3-e9e3605efc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69c39f8-17af-479a-b3e6-ef8e43ce6436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55426e4-423c-4f04-be8e-1fc167e86709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e627b-3883-41ec-ba1d-caf944df45dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597e4154-9916-4cca-81e0-796627593b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6508aff8-eeee-4712-9659-a68d35133047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53683a52-a412-4a65-a67e-15d7f3b8c771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2504418-7b00-45ea-91ad-2fb80b7b9b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f2fddd-c0cf-4701-a397-b35efa025135",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0de6cef-1972-4396-9195-28aeed2d27ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a901f994-b812-4bf3-ae3b-dfef171cd142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59823fe5-043c-41b5-b6a1-1fac58ced9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cd4c8f-20c2-4443-a0bd-0da067a9f290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5e3c4a-0cfc-4b9e-9797-2e12fe2a44fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ac30f1-d0b3-4271-af31-5dc416096822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710a6ffe-be8d-43c0-98e7-2ac730c3a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667176e8-f3d1-4378-8821-85bfb5d39670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed9ce0e-7808-48b0-bb5b-659a45079d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef3a5e-8778-4047-ad8c-011380d14d9b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0a4681-428b-425b-a0cb-f3227e792c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cbcd47-7322-4814-ac6a-538b0644c311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e50e09e-a994-45e2-8993-af3de880ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4038c4-67ed-4e9d-a24d-15d9162a760d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05431c9c-2f5f-47e2-b29e-40c58a21d445",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b6456a-4553-4d99-8cd1-7ec43311851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f003662a-fff1-4523-82c4-bf702f993892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2eb246-f550-4ff2-9883-097ec31896d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac97fbfb-1142-4e5b-a665-2f8c5db14a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6f8a6d-e373-4e9e-abc9-abd4113333b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02535d72-9023-4dc8-993d-e9ea32e82c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5306c2-e0bc-4835-a2b7-27a47e6b6729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93a24ab-e848-44cb-b6fd-34ea014c6ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743ee8b5-6ffc-41e1-aec4-f365dcb8f88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e4c1f-530f-4751-a72f-8c7ad889d89e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de76f89-cf56-4c93-9248-d056cd866f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40ba99e-09ee-4fac-8281-e34d28908a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b3ab0c-a97f-4a00-9d4a-e8b2947de165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa3f7e4-d099-418f-8a3e-60d2f179351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08306263-a837-4066-8fd0-0d8736d30a3d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c24f1e-9777-49aa-8fa8-85e5b8dae715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b7d590-3a6c-491f-8609-b7a204ed61be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecd55cf-45fe-4fc4-8c92-842010e343dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdcffcd-04ee-4ae3-b419-27511f24e29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd7763b-377c-49a3-b963-e664137be1cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6060a1f5-2b36-4ab9-a4bd-b5ff323ebb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8497d32-4e9a-4298-bceb-995e9906e25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39fa858-961c-4464-82c6-541e9baf1cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "424a2294-8b83-450c-baa9-c3ff3762b746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6359bcdf-19c8-4a36-a052-3e9776beee3b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e37db4-aa4c-45dd-8209-a96e49699492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de17efe-c0d1-426d-b8c4-b94adb2d6298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970db41e-83e4-49c3-9891-e750362e665f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f962d9bb-0340-4bf7-bbc2-837edb321541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1109fd-51ae-422b-9f49-42af825dbefc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5612c-d835-4110-88ac-5b66d3a2b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844095ec-37c8-4958-ad03-219d29504c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf44ab-01a8-4439-96d4-06ea7bda9f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10302cca-5e71-4f69-983e-91e4f304ac2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3215e293-f2bf-4f26-afb6-52a7dd9c5e70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5a09d2-ed39-4676-8f06-73bb9c5437d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863051a3-e359-454d-8422-905787933a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f5d0de-99da-4fbf-b74d-07166f934c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "097b6689-9276-4cd5-9112-4059a7473ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc9c33c-b24a-4e26-809f-bac1fbc6446d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e448aa5c-fd30-484e-bb67-d069e18cee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021fdf37-d3dc-449a-abd0-59ae803c42bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80871776-0a30-43a9-9052-30b6213a91e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51727524-25a1-4bd7-8d05-b80b71254aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bba347-43ae-4408-9233-0c7e9d8f85f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29fbb61-b68f-4214-a700-999e61eacb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd0c01a-1e47-443f-857a-0623134a5cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969422a8-9f3a-4e87-b99f-f683d2af00a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f3490f-5229-4834-be18-5acebdd69e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783f3ca4-7ce5-4b96-a615-7c95ea33c1c2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95eeda7-6040-42ba-99aa-9ae070d58067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee1ef97-3fc7-4787-8505-daa21b551223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211cd69-f99c-4b33-90f5-41cb463a11bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47c4070-193e-40a2-921c-4d2f38333b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eecda3-9997-477f-b649-fbb36fc2b375",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543f2e32-c71a-49db-95e4-24c74d8c4041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd639965-2be7-4e12-88ba-f9a26cd29a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fcc481-ac6d-44f4-9cc8-81a01ec66bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae7c1d6-96be-4a3b-8fba-d637d0dbe50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7379536a-9a48-443d-9bec-a39f7569cde7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd46ae3-90d2-4c1f-8d17-45a198edf738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf935a73-5652-4c6a-871f-394da81988b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463e6c31-9a3d-4527-9dd5-d2b84e3f3a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba269ac-2f5e-4a64-8030-7adab5956b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19178917-8365-471b-9460-fa91922b43ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1e31fe-a090-49db-a6db-43fc3a03ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8ca3f9-2102-4fee-8a03-069d555eb265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03a6b8-656d-4935-9f5d-0f4abbb99fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbf594f-5b17-4b42-a6fe-ebb703ef41a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d319c0f8-8526-4640-8a78-178b57c1f213",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c358d755-0fdb-4723-8015-3b8a4fc65f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e15f35e-6e51-4b76-ba3c-b59107049acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470c23cf-d2dd-473b-832e-e26aa3605812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd682d1-430d-4b34-8b09-ba95c85ba828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b9b058-8412-40e3-b197-61aab013f40e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ef3347-d238-4a83-97f3-4747e695a69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de19bc5-e044-4939-80c8-99ef1bd0b561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a8a16a-5238-4668-a2e0-9b7bccce9f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c2e115-1868-41cb-9d83-e857b2aa5a60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89ec1885-86c1-4311-b9a9-ef6f9d98da19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c33d63fa-1a19-4aa1-adcb-849cd97367ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08808c9e-2837-4851-a155-92fc98682de3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d5829bda-c6b4-42ca-8209-38e192a8acd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a229beb5-f0e6-49ce-b0b2-b5004eedcd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c43e3f42-7477-41f2-b9c1-9506e282df1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7932488-886b-4eaa-8e3b-5bea60f3273a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ba92563-95ed-4a8d-b6d3-fd76223b7c63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b931dea-293e-48e4-b4c8-f9c5e1db54df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33247aed-ab7a-4c08-9501-906110b9eb9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5392b3f5-342d-4467-8033-07cf615ece76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27794e17-1c1c-4f2e-9bf7-4b0e72d259b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19db548f-b767-44cd-ab8e-1521a8970ef9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba9faf36-5ba8-4192-a0e9-8c30101b9e68"
            }
          }
        ]
      },
      {
        "id": "06df517b-dce4-4ea7-95fe-4df0cb75b056",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "acf99f63-3c56-44e8-81f5-0895dc200671",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e844fb4f-64ef-406f-b8ab-ae69228f62ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c82470f3-b10a-4465-8375-00d3c17acd4f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2526d4e4-81df-42e6-b9ee-fc332e763c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbde4f06-bd6e-4c6c-a71e-d0d86df94f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2c30be-9533-448a-bc5f-bbebde1c87da",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cbe152-45a3-42c0-86ba-a0e7aed24824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a774bd1-e550-46e1-b7d6-281f5f5966d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe02a4-575d-42ca-9fed-977ea1d563f3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958e8c43-937f-46e1-8bef-5fb6962ef1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd088ad4-eb05-4900-8864-db2e759cffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde9ff0-fc8b-4724-a3c9-0a6e42dc68b8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284f5765-5462-4ad5-a28b-706a3ee30db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd3ac17-52db-4a51-9a88-cc1536e44b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d1ad5f-ddad-4050-bcc3-1409670dd1e2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee770c4b-9b4c-4697-9275-41fd852196be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956e0c41-b4c4-4ee4-a9ec-0210f0e2b075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593ad9a3-88ea-4175-8a6d-7b29db7a3c36",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979ad64e-316d-4502-a7a3-03dceeccecd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dbf89d-ec3d-4d6c-9569-565bbf0c24ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8314a156-c3ac-4e8d-ba96-bdc336b1ae91",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9179b55d-f019-404c-8603-ec2a1a7bc59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0677f24-53e9-41e1-b709-22eefe9a726f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ea3e81-5ca6-4944-a742-7e3d8f3f04b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c189f539-2f7b-447e-8f3f-94176d9aeb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba385abf-1eac-4993-91e5-ad3e9e573a15",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda3243d-5b95-4998-bfaa-40e452e5a138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e75bcf3-6571-42ba-884b-85f933b013f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2713e649-3d0b-41d1-b001-dcae9ccac2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0cfbc1-e6ab-43ec-a97a-9bb9b5367a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f911953-6a40-41ca-a66f-e462856c0b35",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332e127f-9573-4da1-91ab-a76158590bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385b3da4-72b5-42ff-8165-e8617109485f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f541ca9-1b02-4b61-b861-73eb085e85d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50b27df-7f7b-40a6-ba54-52fc86dc0e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c47d65c-0a80-4e1e-8ceb-327c02200c8f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf9f60-8273-46e6-9549-c91d5f5a7045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400c486a-3629-4463-bb5c-73713bb9c984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df10ac06-a2e7-4d9e-a930-d4de12672e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cf9525-b945-4352-96d9-a5fc8aee997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa8a360-dbc1-465e-bbca-8944be44e43c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f1b0c6-4ed6-46df-85f8-afc8646846d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9de4d2-c9e9-45f9-a053-43fdca381917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19df6c68-8391-4f47-aea4-88076d4cb6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b63d9f-8b23-4c42-9c13-73cab8b4d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9b529e-b631-4ead-9ffb-4c39177ad383",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103e4ae4-4bbf-4d49-a448-eef2ca5eeea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e48b72-0a9c-47e1-9014-c850567b0d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664c618c-1f9b-4342-b807-9b9b354f2e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510b9761-2e63-4cdf-b4ec-287f17e528c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e16328-5b84-4be5-af99-a3094038c128",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92115f-d750-4d51-b809-aafb09a54f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2839f1-38af-4281-bf6c-5c1c19784f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60366c0d-6a73-40b5-bf95-f64f50c2a692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d1a9b8-2c64-4962-ba39-42d3ee8a222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca40869b-1da0-48ff-94d0-8a1fda5023fe",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25302a3a-9cff-46a9-9aed-ec23f33f3512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac606502-ab2b-4cd7-a508-71d155ceafee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f02b7-a13d-43f8-9948-3ea21523a431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3e9c09-07e6-4976-89e9-45c13ddb8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d836fe-d9b3-4266-af70-e29e9edaddf8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1c8db6-a5d9-4a9f-8c08-7408d1c1c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae60139d-60fd-45e3-b3c0-421dc46b28bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335266f0-2cb9-435f-8da8-aea3396301d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f746f1-f454-44b8-a11f-ded253183ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1c774b-e222-47b2-8381-aff225fc595a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1eb0904-d8a9-43f0-84fc-84a116de9037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24835222-a4ec-4cd4-84e5-90c1a0fdba07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1ed4fa-3ef6-463c-9c2e-f422baf0b151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a44f026-0723-4076-84aa-05ea1d90185b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa75804-756e-4e4c-aa90-8b85fd91d338",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ac13e6-e806-4082-ab77-dcde2c72d196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeec4ae8-d158-4c59-a296-aa645ea7e982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59349588-c6b4-4292-9182-f62a702fafea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218772d5-4418-48d0-bb7a-a51fb3e03496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9b993d-7fe7-48ac-9cde-5611c0e0c318",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24cbd14-d69f-41e2-abaa-ce55ce1489c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20bd28a-c374-499b-b55c-ef5ed84e5678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332e0e00-db35-486b-9ef9-c6fb7e95af89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc5809f-7b2d-41c1-9d27-62b1aae44783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8b5c0f-876f-4bfa-a30f-d95253fc50ca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f080f7-0f0b-4381-86e2-70f37ce3e0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28980a5b-ee50-4127-be50-0c3fbbf5b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf63575d-2092-45ea-b201-c9491cd5b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65790b1-3f96-4908-a5a3-22c1dc9855ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3c70d-7b1b-424c-aa4f-3cc19e5bb058",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fd7d1f-8fbb-4885-9dc8-265a2c759938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec2b44c-bda6-4a5d-95ee-afd50aa2ff9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e92f7dd-761a-4e23-895b-c54ca329dfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1393e4-ed8c-4549-8aa0-885e795f53f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da9058-d8e2-492a-a4ce-906d5756940d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253ed058-1197-49e5-b8ac-9b77e07eae71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1633e5c1-1d32-43c5-8fc3-e50fceeaba49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c1c492-1e18-483f-82e5-ee45349ed27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa045e05-f00e-4d5f-817f-8d750fde8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedf6140-0d3d-4144-8cc2-75aee0b6a07e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d87f187-4502-49db-83e8-69d0bfadaf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5316f9-673e-4c9a-b217-c7f38aff0f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f6f361-753a-4638-8571-e4b777d6d9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ee1d91-f3d7-48cf-a7fd-804869f18788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2e49c0-d213-4204-99a2-1b6d968ecba3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37972805-abe4-438c-8bc1-847371431a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987aa17e-10af-454a-8449-3b356b73212d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f5204-9083-4ca2-9752-0d4ec8fdd4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef289dd-4828-4898-8b8f-7a73b45f2d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e6530d-b211-4f19-8baf-9a385c513894",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5564a696-1606-4e71-97be-6db9e0576f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300937b4-802c-46eb-8a36-01de310c0913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47993b1b-a0b4-4c8c-bc4c-e6f18a254f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6492e65c-352b-463d-9eab-a67a442fb669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078d2334-e00b-4f13-94c9-a244af2b29c4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a1e897-70ca-4be2-8598-fee12813c4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e54d19e-fec2-4ea3-b4d3-10e008d127d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f0bc22-9a00-4635-9349-2c9bf213bc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13f85ad-a82a-4a03-bb3a-0b8d9fdff63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899f7435-e3fb-4f61-9f03-727421f9cc70",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bb081d-f4a2-4f69-bc85-f25f64d7872a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b350717-cc8f-476b-9e17-c9f802f65f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173d7429-7f5e-4db9-8fbf-3615be121e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed128a9-2114-40c9-9e84-212400968da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416d9c47-5b48-40f3-84c1-4f2beb79f7b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540f7238-a05f-4304-9591-731121ee84b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0afb0c8-da1c-4a5d-97a3-d4db77691377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de05b95-3999-4103-a001-3e5e03249742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8843110-b196-4d95-8ae9-bd019de7e9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80db605e-f25f-4a97-81ff-ad47bd53e414",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f4f69-23f7-41c6-9ae9-9013a0c15606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b436655-2551-466e-b5b2-8d09af0d6bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ba4263-e21f-4f63-84a9-f0b6f9a8e795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcecb25-3167-47a9-bd57-046a1226503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa5cdab-73dd-49fc-ac58-c13e3c2e3216",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e956d4aa-494d-45a4-9706-c8b19f4bf73f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d0dc78-ed15-4c9f-b933-6088331581a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62d882-219d-410c-a4cb-73f504b9bed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9320736-0710-482c-9ce6-98026ba27810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f425a1f3-4514-4e0e-bda2-445df41d8043",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b0dd7c-7342-454e-8c36-e271376e6ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b4f838-116c-41b2-ba1c-c9480e33d0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ef53ee-8718-4cd9-aed2-8a0016307904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668a5446-e31c-42e9-bc11-fe7d62ef3933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9dc688-dc2f-4428-88f5-ba287404a258",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec77743-c810-4068-aa91-9462a48528dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9104272-baef-4bb1-9502-67e8c962ae4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616d7bae-3879-4fde-a8b6-ac2489ed1832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb45c2e-74dc-4c35-88c3-9f3b461aab72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148789b1-fee1-410d-b4e0-0ce8b2720107",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedb1e2e-16e6-4caf-ae0f-1ddc11872ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2428580a-cee8-4aa7-b631-65d8e39058d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321e576f-6471-4e60-8e07-eb8fd38b7dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b7d500-0f64-495e-9dcc-1e4df1cfa2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f211a66-db6b-4865-a0ae-fc96620f28b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ca856-b648-4908-b27e-4c26d24a0657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86a4c99-661d-4b28-b144-cd4d55db017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b93a8-fd01-4491-9536-431345ff3da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090d02b5-7ffe-4412-afb3-7cbabef325a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dc4f26-499b-471f-a8e7-5b8489d23c67",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a466e2-9035-4ede-a8ce-b07a77054891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca98875-7a58-413a-82b0-656d7f4724f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b9c93-f211-4bb1-a3ad-381b15514d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f53652-7693-4831-b7a5-1cd0df339835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0c40d1-d017-4875-afe1-16ac1ee1cfe7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0ccb9c-8ea3-4091-9c4c-82385cec2563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e468ed57-d6d4-4559-9f36-d95d29177443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277ed22-2f12-4b5e-9631-14ea8abd1a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b465d8c-531a-418d-a6ab-890c6ee0a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2f06be-70d8-4823-a9c3-f03fac79c26a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22655da-b150-4732-81b2-7516982c5408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a06d53-331a-4aae-a106-059df456b6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f2053-98a5-4c0f-be78-1cde0d63525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96bec46-9db0-4b72-b36b-26f9c20b3f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c079bad1-b631-49f2-a848-babe12e4ac61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009b7900-6805-4cff-89af-6421becaed1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b490e01d-394e-4f2c-9a4d-9b1186cfe280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce094ac-de50-4952-8a1f-1de2ed0d8da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b8918e-9ce2-4440-b059-a1d30d083b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad85c59-3a7e-4739-a58f-22c69c0177dd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002a966d-9c57-46a4-b62b-8e395e9dcc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bd39f6-9b42-4e10-8e7b-ca639f86d7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca45eb3e-2c0e-4ec6-ad0d-a4e8affebe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e061f52c-6081-4233-8226-be975665c484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eea2b8-9d4b-496f-8fa6-38811f6e3bff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c985c3-a101-4aad-9eec-11c85585f2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729975e2-9660-4b71-ba0e-c7514d574f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862d78fa-5863-4530-9e39-df4814d49128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c89035-06f0-4c3d-a3ca-f7825c05a19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55c66d4-ae3d-4f95-8606-d89196db39a5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5495ef-c561-456a-98b5-c059b4491ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d74fa58-8c45-4b74-86d3-691c070972aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bff5eec-172a-4a95-86ae-945304ddef96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702b68f6-2c4f-4b91-b2d1-8061cd6c67b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad71465-e2da-40ac-a689-f2df2bc1a4fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65c238f-ad88-4592-b68b-8ec7b76e5592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96af2da-76fa-4c67-aca2-8b5c6f6f4d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cb71a9-f7e8-49d8-a72e-6c7c2ce19e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b055fae-fc57-462a-a3ef-83efe62e4eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae841d5-f90d-4b74-bcef-2ff798573999",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32420b1-8d8f-4fdf-a559-ee343e24c984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a13a27-96ca-4260-9222-bd08092e0eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6de0d0d-d932-4dd2-96c7-7cc1827c9037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12845f8-d373-4822-9965-4cc6bd250802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f415f469-6b1d-4e68-b220-ca9c434cc7a0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6e6495-62e8-4cda-af62-efa45b71c4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3ceb7b-4884-4cfc-8d0a-6f4f73e9c349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363eabc3-eb5c-492e-bde7-de0c47c97ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db287ba-8ac1-4ac4-8652-325f4f1b9358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de99a1a-e0c0-45ee-9319-eca4022ded8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4fe1d8-8304-41ff-9291-9b41f4eee3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff41b9b-3716-497b-91c0-a74998609c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea37aac6-21e8-42d8-b5b0-f2a963ec5058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0794ab8-5df0-44a4-8843-21e24f1be2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3badb20-30a7-45a3-9291-0c70be11fdea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e063c87-b6ad-4aad-a5de-34ea55e58072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d36003-1401-41b8-b2a3-49dc2b6d0bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40755a8-7c22-4649-bb29-16a63d24a993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063815a1-8a29-4014-8ec7-cf258577d781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796fcd40-7e4e-4fbd-9ea0-ccecdd577aba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7793f4-3252-4ec9-a424-bc34bf8b0c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c7d5f8-9353-4599-a633-d83e1244832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c557e3-5965-47c7-8ca6-2b35240f533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d5421b-95e7-4985-bcd4-2500c46c9a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feebb482-c443-43f6-b0d7-021353c143bb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68552f1d-1d6d-4039-b6d4-5b483f770aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403655f4-b2b4-4c90-a81b-8492b074cbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac1c1c1-0cb2-4a06-992d-a5405b60b4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ede3c1-b29d-484f-8f83-1f3a3879d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dff7df-bac8-4841-b438-79f17f849825",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8159f396-d356-46df-a780-bf267f7a743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd30675b-5b32-41b1-acf9-0d6650be6497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed904acc-7d09-45b7-877b-b30194fc752b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945de71a-e8a9-45a7-93dd-674d6dab4318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41d231-87a1-4686-bc26-2c2543db51f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea6993d-d02d-42e5-bbf7-c7e5a8db8f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d825ae53-d56a-4137-ad3b-8d4643abbb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914b2a7e-b120-4121-bc17-9327ee7e30c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf45081-01af-4c24-a6fd-d7d4a5163172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a782649b-f087-4fd1-9e14-eecfe45813d2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721b11be-818b-4f1c-9ba1-c9f5f61b00c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37652b9a-9c07-48a7-925f-0c0e6d228814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66f55ee-7f98-42ee-80ea-8e8f735325a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a5bf73-77ee-43e9-bc4a-cdde8b476f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1921d815-394e-4d65-985e-6f141d7ce7c8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae28caa-413d-4e67-8f27-f7308a8729b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e30ad79-3111-422a-8c28-d2ad98f97ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8767959-ba10-4a01-ba91-de49aec35d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca43eb3-e5d5-49bf-afb3-c1411c771ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ec086e-42e3-4058-8cff-34202db84c0a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a6f94-2109-41cf-9a28-e2913dab6ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb3e0aa-9374-4be2-8c0f-6a452afc8500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f98b5-5861-4b6c-812c-40fe056a5b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f07274f-7901-4787-bfb2-13d5adc0d5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafcaa5d-2674-459e-ad08-943fdd1a1de8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1d9595-c0be-4979-b9a8-248e9356da9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7612ee-909d-4b84-9ef7-43abb714e1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90d0582-dbec-4736-8f2a-94e5735f0dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c076e0-27ea-41b4-9096-9089ca2530fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5456ae5a-fa3e-4aa8-aafb-5b7b1d8c8712",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4411e91e-dae8-498f-925a-0d93448cbaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdd2f55-1195-4250-bfc6-da803aab5a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090d8ba-3a5c-4e92-9fed-850d5aebdb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a18ba69-2c3c-4257-8565-cd96e1e4dfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f676bc5-b563-4d5c-b7fe-a8666e3e9ca3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33c297-c5ab-491c-a8b0-e92cada109b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d609d98-a1c7-4b45-a7e5-6e3ad7874d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb58ff-1373-490a-b1b2-340088dd9e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa71803-303c-4c9e-bd71-81d907181ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f89ec-90d1-433e-a175-a7de159cbd66",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996ab4dd-749a-4947-8eb5-178885d0f672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc68cc26-55bf-4ac2-97c6-da80b40b3404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75af00ae-c668-45e9-bb34-8a97215ecfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af1e761-8cb3-4019-ad3c-ad3f042e3be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b409ee-a7b7-4d15-8759-e6c2f3629a74",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1396f667-51ec-4a4a-91d0-06788fff0dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d14d0d-a70e-4c79-9e25-226c8b0b9494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeba714-e7ca-4525-9960-fdd461bf5844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de2b6bf-fa30-4ecc-ad35-81129faebb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495362f7-9429-48fc-b061-89232bcc21ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6247586f-41a1-4534-9247-00a4a1aebc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7743331-15da-483e-a54b-bcbace5dda1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7020a77-b7d7-4844-84df-b978361a1be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a3f021-df29-4412-912b-28bbdf5e3776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011f8d74-655a-4a1b-b769-049ab95f74d6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f5e8f0-381d-4dde-a3cf-eecde3c5a8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09199b6f-ea07-489e-a469-42dd00f0edf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686ba693-4e4c-4d57-96ea-43cf0d38d683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ed18e3-9daf-455f-b8f2-d11addbe3b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97573ee8-5e3e-4cb9-b744-51092a5e8430",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf6cd26-9a28-4a36-9530-a604475df48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324c7561-7269-485f-a550-92f011851bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3dd79b-89b9-4df5-ac73-6d3ffdbf0906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa25cdbd-a9bc-4efe-a534-0898c1debde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00265938-cce8-4a73-a38b-85db4a8375d8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e6904-c386-41dc-b6e1-2e4ae1bac4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe8f49c-6b11-4d68-83ef-deefeae88621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcab00ed-6004-4863-86a3-17e7efb2b28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40d47f3-831e-4ecf-aad3-37eee8a1abae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393e2189-57b4-4831-9b3b-766886388c4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d70d373-a5a2-44a5-baf7-ba843dcdcc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e59ee3f-341f-40cc-909f-d0ef3fe7c38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86c9d9d-08e6-4018-978c-e83a0df16f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ad968f-3c35-47e7-a60a-63a7ad6b8cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d64e22-8efa-4d10-9988-54507d329120",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c4ec9a-a5ae-41ad-b47c-3d01b9bd121a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78c099f-634e-48e6-9539-c6381385716b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801f2f9b-7ff5-426d-adef-d62bed57c21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db517404-fa5b-4ecf-9824-e891871dbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae62bb7-fe94-44a4-a848-68b7757c9002",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc738df7-2a15-4ae2-8197-1006168e76af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643d07b4-ba82-45aa-b5c3-160727d25769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14f7cd8-d047-4292-a7ce-1369e9ea50bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770ba267-2e9f-4967-81a6-554ea3af3138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ac455c-764f-4d74-9265-fb8caa331090",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a7b45-3c6a-4f11-beab-c37e6d48381f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c94baf6-61d1-484e-b317-7f72b61dad29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05effa93-7c41-439b-85be-eeeed1927380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20278243-8f09-4050-a2ee-460142a31420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ada9f2e-cda7-47e6-b9f2-6fea95fe9b5a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f9566e-6d3a-4ac8-b439-b546d9d22681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945b54f9-a166-4c84-9c3e-2e16b9874456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2c592-b8ae-481a-8dff-4eee5eb2ac12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2925cea-cc6d-4355-be17-ff1390ac8bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a31b350-d39f-4d2e-bc9b-8476cee503d4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdb976e-45e7-443e-bafb-be3c73fe9dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a71772c-bcfd-4283-a20b-8428471dc22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e36ffb6-39df-4c30-b7ea-92b7f8a842f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a37b6e5-8850-4c6c-b20c-02dcbed05613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cade814-ef06-46a2-a5b4-3c21617c4d04",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f091f95-8800-4326-ae88-b09760a4ae06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73a9164-0a36-4a68-b0c4-23744080ddde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a1afab-9eaf-46c2-8581-276af2060dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e342bed-f234-49f9-a520-eb8b1e5824a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc75f07-ea51-4106-a870-5e007dc29d12",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc2065b-bea4-413d-9c2a-9f44835b5a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23681775-159d-4ee0-8d3c-539dbd8f2cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030837c6-09e7-4f0e-b9d5-6999d813963e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1576ad-3d10-4f9c-85ef-600e324a70c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e48c45b-503d-4f51-86be-c4bcdbc614ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642dd79e-9593-4a8f-91fb-7580b59cf446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8656629e-fbf5-46ee-9092-433269a5753d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad276e9-2946-49ee-968f-ade5f17ab8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f354e9-f6b7-441c-b3da-c5c0fc871017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1032534-5c78-4e19-bc08-4e5b06f17f2b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51288bdd-de4d-4a59-b6a4-f9e47ea58364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d930f69d-512d-4612-8d8b-8e358b89c14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61722a8f-12d0-420b-8fbb-21ec1342e3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ee9d83-2343-4bfa-9dad-02492c57d685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2851d77-50e3-4f68-95cc-ed372b3b96bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9012c67a-e88e-4f56-b6ef-1c1e0a741dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f6ce8e-72c4-4ec7-88bd-38bdb813a6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841028f5-0c3a-4f63-b516-dc35df7d66ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683fd6fa-78dd-4c32-85f8-3e2b3478dbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e467a-7ab2-4248-b61a-32e78aa1533b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a8b09b-09ab-44f8-bbb5-4681141c78fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53864ab4-1b91-45f0-b7be-49276cb6b2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191e6353-2fb0-4840-a3f6-1dd893e7076d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195cdf8b-1c91-4492-90b8-1f5d5359b482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dab890-8b59-4094-b154-b089892270a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc69bd6-8f8a-4e3f-aa91-b0c7fda1b313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07facb15-b7e6-4082-b0a3-bc8a58bb1e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2914a93-a9f4-4ca3-af71-e1000b68e6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0faa579-7595-4e1c-a088-3bcbac3e62bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91ee9dd-fcbc-46a4-bc0c-ed837c6c42bb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27253ae4-a92b-42bc-b95b-fdca4c043723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98918f6e-1480-4ddc-ad62-6eec70641444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf62d421-8400-4b5f-8091-a29bde9f57c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aeaeeb-e812-4f1b-a609-3a842d576f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a704b51a-0f1a-479f-a329-41a3f0e1587d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d67deb9-e2bd-470b-a28b-7ced104bf3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2042d7e-3062-418a-bbe9-b5eceba76620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b42f73c-f6d2-452d-a3f9-c38056b8528d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3e6ce6-68d9-4541-aaeb-bca05c43f1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777d4cf-4562-41fa-819b-b13d8893e5d2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e844656f-400a-470d-a8a2-19843c71e282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf062f7-63d1-4ec6-afc1-bad1f61f03cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9698b7ad-1b88-46b9-a1d3-0a38b86472a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a72b283-2bff-4a14-9220-5718b3b9e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb60b4b2-d894-4417-9d03-083ce3575bff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eeb10c-d731-4292-a941-cfad009ed3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd52069d-82f2-4579-b464-74a46ee71030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c4880-46dc-4a9d-ad76-4aaff66d6105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60feba2b-9e8a-49a1-a706-dc9f016023d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6e7a74-51ff-4ee4-8998-0365716111ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcd4027-6f2d-4b08-b43c-ed7c540b76fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4551ffbe-5daa-4571-8142-7a3883a87953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aff7de-8ac4-4b93-9d41-c34d4b4d6e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7de9b0a-4b8d-41eb-9ef9-99ebf3990934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e05d857-448b-4398-a0c7-3e6d80e6e520",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3b47c8-a645-4e79-a062-504a5b8fa698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9d05a3-1043-4d8f-a8b0-aeb4c2175494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3c932e-776c-42ca-a7c7-23457f7ae9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb46f499-4f9d-41b4-9b15-956be5e3850f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a23902-d64f-4a2b-8e2c-fb81bd733237",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465c1808-4d14-4fcb-bbc5-131c8d6e5b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08d14fa-fee0-4ef4-890d-6fd60f0adced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be03de54-83f9-40e9-aab8-ae142e1ee038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6cf90c-f789-4c03-9d9a-aac178612cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d782a4-df8c-413c-be5b-939a131df4c9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d4a5cf-d6c9-46f5-9260-49108439065b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb3c0bc-8c2c-420b-87de-65e37e5c48d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2be5fb2-32ec-4107-8434-97db37f86a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650ab022-072a-43bf-951f-e398580b4841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20439e55-00e7-4e4f-87cc-8c7dc0782f5f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdab6d0-5e3c-4b39-a22a-34efc9ba837b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984eecec-6247-47ec-8f4c-3596d10d81b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21885df8-f2aa-4d76-bc01-4272f2565166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dddddf-942c-4280-aece-bb2e2ec1d401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c3db96-5d27-4387-9327-024baf5654a0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bcc0eb-f693-4d17-8800-365434ee5452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735e9d78-b2f4-4478-981a-fe95bf50fe19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b8293d-6c00-42e6-bfc2-c55b0f893f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9dd1e13-2e22-49a2-8ecd-04544ed76f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b6a587-bd4d-4c12-921c-cbe88da6a333",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867fa888-7300-47ae-8eb1-470bd626ef53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5ebaf9-d009-4068-8848-1f2109839118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1923e1f8-d3f5-4125-af8f-fbef720c0c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d77a39-163d-4d69-bd7e-02ce8e8b8a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57138a97-afe8-46de-82b5-5d1f5c995f83",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8cd18f-d43a-42ba-8b5a-2bf4d23d1797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca97b811-b209-42b2-bc25-a13c270f2df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8187fb80-8480-4e10-81ac-b23e1beaf0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62511d9e-3ef1-461c-83e7-8145313d1414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a46bfa-cc4b-4c36-93e6-760d81fb3897",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9461b80-6939-4ca1-b93a-fbfd72626119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39ae2ca-74b6-4b4c-9edd-c5876439f77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65000793-dde9-4cae-980e-2b6b502e58c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c1ce5f-ff80-489e-9b1a-7ef95666a7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9b90db-4d62-4680-96ce-abe77261f76c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c96471-a44e-4f4a-a238-6b7720037419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9016957a-e9f8-4279-93db-d182f7cb3a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd674504-6b1d-498f-a191-c7c12e9841e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f1d10c-9a40-4c2f-b208-1a3bc1856385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2e98a1-5feb-4d45-920b-2d0ba1be01fd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80937625-7868-4f00-9faf-4981e7d6f27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b071c954-c23c-49c8-8ec3-aa7231452769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1bc83a-7d80-494e-9305-c0a66282897d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587b1201-0a9b-4b02-9a39-d13579eafa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919a52c7-d991-4c88-8c9c-9856c1dea2db",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62189f62-a5c2-4852-ac1b-b19ed67f1c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa862da2-f9c3-4ddc-bf72-2bd2de4d50d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875af123-b55f-44bc-afc5-cd6935bc79cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef566e16-ea46-4597-bbfa-cdd23902a8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733fefe4-bcd8-4e0f-9b58-81d58d4500c3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263736d-b261-433b-b3ab-427018cb9953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97650586-0d36-43ad-9374-539600d3330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9691ac-9345-4735-86ff-922527a620ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad10d340-803e-4988-b934-81674a427f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ac0dfa-5658-4b31-ab0a-40be70c37b4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c568898-b5a2-4818-ae54-522db6cb3964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a8e0af-a4ec-4ea9-aa57-18fd6aa81618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bae774e-2ca0-4777-92a4-8a1b850eb045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e541d50e-9d15-4af1-a665-621567971b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d9399-4314-4ac8-9cd1-4670eb4af81e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60698084-4943-4885-8bb1-c1757dc864fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11ad533-589b-4f00-b05c-58c2d5d08a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8c89b1-bfd5-47fc-bbcb-9fe2a102cb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8e6b52-7835-4c84-91c3-17ff4fa08a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fede5d91-b2ab-4908-bd93-0fd235ac8b14",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36009d4-6a45-46b6-a132-e45830eeb69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55026531-3544-446b-a6dc-2f0f936e9dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc747ed-4fd8-4ed7-93e2-65fad62b5dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b623740e-4991-4382-8dcf-2d5fecb159e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e9a116-0718-4aeb-9378-a23fa6cd0484",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387c27f3-0e1f-447d-aafc-45a69faf9774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81026ec7-05e4-4574-9d69-452b91c1914f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eace3fcd-41e8-4dfd-b0d1-197204853f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34fb0ab-0c64-4720-9bab-46e62cdb8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e20c670-d2e1-439a-9699-0fae674538ca",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec32707-8f49-4362-818d-4bd77df80e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75595d27-3b80-4b5a-9a70-304870af9bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8294ddd9-a751-4778-8682-b36f781c616b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61875a44-f855-44c6-a2b3-37cebfa66831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2b5e23-173a-4747-b93d-8071c6529d28",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f9e7fa-7b46-45ec-82b4-ee2f34d92f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8fb3343-8471-4a17-ae2f-583125eb369b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391dcf79-6b1e-434f-bbe4-06f6ede5954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372c5634-0346-49fe-af9e-07bdde85f3de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f04b919-e024-4dcc-834b-ddd3abfc1d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6403c7af-35f7-4487-b609-1d49359c734a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6c38f02-1367-44e0-9c8c-3c62d8bc353c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "901b6052-9d0c-484b-a54b-1ad9d7c52a9b"
                    }
                  }
                ]
              },
              {
                "id": "7b01ced9-5221-4fc6-a84c-fe7415787d74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a8a0eee-567b-4a56-8330-8fbcc6aba81b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc74f32-a69b-4cf0-ac7f-a0a72c6a3f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f4221db9-d015-4c29-9c9d-48ed848ddc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04c684c-87be-48dc-9c47-d8b424755ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "856634e1-b51c-4ac7-a811-6a81acee853e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44d005af-089d-430a-8b54-3bbf792ef691",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b815956-6076-4baa-817d-d8e38138b1f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8460d453-31a5-40b4-81de-3a503c31fa18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c82773b5-44e6-48e2-b097-1ceb3fe7ff3e"
                    }
                  }
                ]
              },
              {
                "id": "97d2136d-07d0-4610-8de9-b7dd8982cd1a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "358e8b95-7143-4733-920d-1a46caec7c9d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b7d98-de43-40d4-b553-93e5a2b67ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "004fab52-da5f-4873-81d3-ada70c049e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df5c8ee-deda-4be8-b561-6c55326826bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f98f2d-5d71-4fe2-8e22-326588c86e0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0aa412b9-e4f8-42d9-aa9b-e9da17e11843",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccbaf685-5024-4414-8f87-130f8e6f9760",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "543b630d-3288-4601-aed7-e757908dc448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b0f8880-7a5a-44c0-8b1f-1be234082117"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddda9dbd-106d-4bb0-8adf-48ad4efeff8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27e25603-bf24-426e-9188-e44089961ead"
                    }
                  }
                ]
              },
              {
                "id": "355ad2d2-9c8a-4c2d-ae7b-f669b12a69df",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dbbc633-4b13-4b5d-9093-859b4d6e146b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a0207ff-79d3-42f1-a6a5-884ef0ccd1a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da72b4b2-f9a2-4c50-b428-f35ed3bbe961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f71a4f-fe37-4634-8cbc-04292e135460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6ac0561-300d-4ef7-84ac-e6ddac02451f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e2703f67-beea-4ce3-822d-85aa671cc376"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ad73445-dbc5-493b-8027-0bbda623f924",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "670e0b57-dec3-4aca-ae8a-56996cdd4a41"
            }
          }
        ]
      },
      {
        "id": "df701bcd-9b99-44d2-b008-79a8a944a133",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4a1984fa-4992-438e-afdd-07fa482e07ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "420086cb-ce5e-4e3c-b050-d318c5070fb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93c1726f-5d19-4bea-8fc4-15a610174aa7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946be42f-125e-4caa-838d-b1cf94eed19b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78388a62-e206-49f3-8b9c-cde0a799c24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2382f0e3-d3b0-4fa9-a4f4-a0d02c5d5a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "116f56bc-7927-4e28-bbb3-a040e6a0fef5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab4c68b-1706-4d56-87f6-2749d6944efe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5852cadf-4b07-4878-97cf-471828535923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49a39b1-4e6a-4a5e-81ea-116065d8e4ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2823c13c-212d-49ee-aa62-447703b4a979"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de664c14-2b51-4947-bd06-5846f63f9a02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f3594ebc-d6c1-4362-8bb5-7b1f8f7c8cd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7988d841-d3dc-45af-8fb9-e56e71dfea15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72c9f20e-9a58-40b5-a1cf-f02c3a8a2e04"
            }
          }
        ]
      },
      {
        "id": "a1a80770-b679-4010-b710-36ce394d3661",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "730a212a-de1b-46d8-8c58-0d4ecd674416",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87f82a57-9fe2-42ed-b735-fcc435a5dee1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b87d631-bde1-4b70-8e1c-e9084d9023cf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b9eb2-e300-4f71-8074-38c8b533a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33aaa12c-fbe2-4c6e-8fc9-6dbc02c78cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fe3fb9-1a76-49ce-a303-fd3bb2728b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34fd2970-a4ae-405b-ae4b-05c2fb253732"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1397d1d4-ece8-4f48-8a47-0e023ec22302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a2f17f-c08c-480c-88c8-b9c1708d743f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c39f0328-3671-4594-b37d-3670a3bf6968",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67fc8af-f69a-440f-8092-9416a893543e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "916c095f-35f3-4771-91e5-9706a84a52e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49f8da52-e93a-4bee-968c-17981246f431"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2857c5cb-4495-408f-b4e4-b3f0b725a168",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4d099b2-5c39-448a-b425-ea3e1fce79ac"
            }
          }
        ]
      },
      {
        "id": "daf15ade-ab83-499d-8853-eb9cf25e25dd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "81b64564-8ec2-47d2-aa15-eec4030bfab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc9ca989-21e8-4ef8-8328-c356b936496e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e5289ec-e772-4a33-bbed-07c777518dd0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c6dee-d1cc-4b6e-aeb0-c0f93a707c02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1aab02b-38ad-45aa-a9fe-bb418e33d857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10775e1-2ce9-4020-bcd6-4f966cf2c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec4178c8-5395-4547-a7af-e6982c216f2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f45bf161-719c-49b6-8328-9dd6ff66fead",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ec7461f-52e1-4da3-b8c8-989226775df4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3288b24-f155-454d-9f1d-3eb3552ae25c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf0c5fe8-8e95-4f4f-8ae8-f99998b640ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9c15681-ca28-4eac-a5b4-91f994e7c4d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f655b7b-e15c-4928-b5b7-d938f5595fae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7614d5d3-1065-4b26-946a-a671aa363192",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f28e99b-adff-4031-8226-9ce6fbdb7530"
            }
          }
        ]
      },
      {
        "id": "fb9ef158-73d2-4646-92cb-5e87460931a0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "485dbb3c-dceb-4ed9-a24b-d1d44c4dd944",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae40d090-9017-4a9f-a79c-917fb111959f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90bab8c0-eacf-442c-adaa-7b6e40e61562",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a608640-fec7-4ad7-9da2-cc1dfbe51a65",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "247828bb-7589-4474-8a5d-c150f4adacd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.6111111111112,
      "responseMin": 8,
      "responseMax": 5451,
      "responseSd": 812.0828987730989,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717029443633,
      "completed": 1717029514621
    },
    "executions": [
      {
        "id": "cea7dfcd-634e-48e1-bf37-aff34aa34ead",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "584d215d-9b51-473e-86e1-ee6baf692bea",
          "httpRequestId": "e43c27f5-ebfb-46c6-83d7-51cfb015496e"
        },
        "item": {
          "id": "cea7dfcd-634e-48e1-bf37-aff34aa34ead",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "24654f24-411a-4f2b-9159-4fe491194edc",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 0
        }
      },
      {
        "id": "30352d9a-8113-418f-a3c3-1ac9dc32a47d",
        "cursor": {
          "ref": "99c4e8bf-3bb3-427b-baa1-99fe1e449ea4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "29d928c9-d130-4165-84b0-ec1bcb1c59b3"
        },
        "item": {
          "id": "30352d9a-8113-418f-a3c3-1ac9dc32a47d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "62001984-029f-4e9a-bf26-c8ae2078f667",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "999f1d8f-5bcf-4c6e-9af7-ac1bd56d1161",
        "cursor": {
          "ref": "8d2a47f5-d4c0-415d-b712-a2d4d45f0341",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "64eb7340-6b64-4456-b7bd-7a89eeee5f71"
        },
        "item": {
          "id": "999f1d8f-5bcf-4c6e-9af7-ac1bd56d1161",
          "name": "did_json"
        },
        "response": {
          "id": "f1e935c3-152d-4967-909d-ccd875835071",
          "status": "OK",
          "code": 200,
          "responseTime": 437,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ba42fa-cefb-4301-a95d-40d5a9e8836c",
        "cursor": {
          "ref": "ed4b8840-cc8c-4556-8015-f7c68614fb59",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "093b5205-47af-40db-bd86-3ced502d771f"
        },
        "item": {
          "id": "c5ba42fa-cefb-4301-a95d-40d5a9e8836c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2255953e-3115-4ce3-97e4-aefd05fa4b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1959,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ba42fa-cefb-4301-a95d-40d5a9e8836c",
        "cursor": {
          "ref": "ed4b8840-cc8c-4556-8015-f7c68614fb59",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "093b5205-47af-40db-bd86-3ced502d771f"
        },
        "item": {
          "id": "c5ba42fa-cefb-4301-a95d-40d5a9e8836c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2255953e-3115-4ce3-97e4-aefd05fa4b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1959,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af00ac0-57f0-4fd2-9b3a-7e0a69174196",
        "cursor": {
          "ref": "60cf4ba1-850c-4e50-9956-f429a30990d9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "79d88794-dada-4512-b91d-c10d309fef6d"
        },
        "item": {
          "id": "9af00ac0-57f0-4fd2-9b3a-7e0a69174196",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9e6d61b8-5be7-4587-a514-599db97d92a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2178,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dd69ff-22c0-45fb-b9ac-b8acd28a9046",
        "cursor": {
          "ref": "8e29c0de-a5b7-44a9-b060-443d94384773",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e858976-7eb6-4d97-84fb-14f4166356cf"
        },
        "item": {
          "id": "02dd69ff-22c0-45fb-b9ac-b8acd28a9046",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1c85db08-cb6b-4845-9b0c-d802be7fc444",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2202,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8623aa-392c-4207-8bdd-7d87358d9ec6",
        "cursor": {
          "ref": "0df55327-9ab2-47ab-85c2-466bb13e0296",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4fa13a5e-a227-4de7-9247-3bc8fbe29d8f"
        },
        "item": {
          "id": "aa8623aa-392c-4207-8bdd-7d87358d9ec6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6e6d688a-9a57-4870-aff0-70e131317543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 346,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a1a5c4-e3bf-46cf-8322-eb4de05b8988",
        "cursor": {
          "ref": "96075c2f-bf7a-4b8c-ad30-497855c10238",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a9a11987-ef15-4958-af8e-db4a18ba09d4"
        },
        "item": {
          "id": "e1a1a5c4-e3bf-46cf-8322-eb4de05b8988",
          "name": "identifiers"
        },
        "response": {
          "id": "48144731-d8bd-4275-a5bd-15b042584ddd",
          "status": "OK",
          "code": 200,
          "responseTime": 2370,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3501ff2b-5ff0-4ebc-8570-2e468ae721bc",
        "cursor": {
          "ref": "b1ec6364-0984-43e4-adba-2aec152f7ec3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "769687d6-5d6d-4bd3-a231-3abd3a803a2e"
        },
        "item": {
          "id": "3501ff2b-5ff0-4ebc-8570-2e468ae721bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "912e9351-e0c2-4de5-b156-59bc3f900ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34847b45-276d-4ee0-be30-e726910e9123",
        "cursor": {
          "ref": "2f70c6cc-aab8-4a65-9d35-6756ff107bcf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fe95f242-f352-4f53-8780-590cdb2c1843"
        },
        "item": {
          "id": "34847b45-276d-4ee0-be30-e726910e9123",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7d5d66c7-096a-45bc-a3b1-fdaab66a84b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d0ed3c-4ec5-4cca-a9e6-5a522803d258",
        "cursor": {
          "ref": "3b20b36f-c4f6-4eff-b6e7-3ff94c78c817",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4646bc0c-fb4f-4d19-b947-f2b51d8aa1d3"
        },
        "item": {
          "id": "32d0ed3c-4ec5-4cca-a9e6-5a522803d258",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "11418fa9-3c2d-4065-a153-85903fb95eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829b62d7-f742-4fcf-ac1f-b14cc489f2b2",
        "cursor": {
          "ref": "966e8dd8-60ab-426e-917f-f6798f8f3d26",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af74f783-3eb1-4de2-81f8-20f7ad9ee0a9"
        },
        "item": {
          "id": "829b62d7-f742-4fcf-ac1f-b14cc489f2b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "551aa99d-c79f-493a-86a8-4ff50778aa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9429d379-106f-4e78-ae2b-e8fcca195de2",
        "cursor": {
          "ref": "a058a1bd-e8fa-46fe-8ed0-9d41f9012a98",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "13e4668b-15f5-47fc-bd64-05304c20dda1"
        },
        "item": {
          "id": "9429d379-106f-4e78-ae2b-e8fcca195de2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9586c28b-e332-4b6c-b876-66e7bf0e9374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f6e17b-3bd9-4ac0-b341-c377e6324186",
        "cursor": {
          "ref": "98a9d664-6816-4888-9e83-4d00f009ecab",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bf163be3-3493-406f-9443-9103e1b6446b"
        },
        "item": {
          "id": "52f6e17b-3bd9-4ac0-b341-c377e6324186",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d91e17a0-f619-4334-935c-fe4b8ba69bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf9d50f-5cbd-4e82-a0a8-992ffc004550",
        "cursor": {
          "ref": "72e358ba-71c9-47b6-aa06-78e3e9e32f70",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0a195d34-41e9-4081-8cfc-4e6f1a576ec6"
        },
        "item": {
          "id": "ebf9d50f-5cbd-4e82-a0a8-992ffc004550",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0e81ef1e-2a6b-4763-89bc-4d152d9666b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6466e0-5ac8-4265-8798-4fc287ec3d76",
        "cursor": {
          "ref": "13f01485-b73c-4e7d-87f6-30a9c5311812",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8ef37ae6-5a80-4deb-b0ac-15655b94faa0"
        },
        "item": {
          "id": "4b6466e0-5ac8-4265-8798-4fc287ec3d76",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "35973893-01ca-4c26-ae12-c70b328fa151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a8127e-f235-4fce-a3e4-9172586b142a",
        "cursor": {
          "ref": "e8e0a455-4186-42b2-a41e-fc51054c0ca7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2616e09-a71e-4549-8307-01a7134de95a"
        },
        "item": {
          "id": "56a8127e-f235-4fce-a3e4-9172586b142a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "44a64e49-07a6-4d90-b64c-87e71caa7b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f438d1ea-3562-474b-9a86-c1ea999543ad",
        "cursor": {
          "ref": "8d444573-46ab-4c0d-b4d3-964611159326",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "faf9088b-e8f5-49d0-93e7-87e14f1ad5be"
        },
        "item": {
          "id": "f438d1ea-3562-474b-9a86-c1ea999543ad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c467cef-f37a-4a89-9f71-72a0fabc7b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2edebb-6531-4d14-a98f-48803375c4d7",
        "cursor": {
          "ref": "5e707ab6-ab73-4159-8895-abfc19917d40",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "78619183-bdba-4153-97f4-e80edca768ef"
        },
        "item": {
          "id": "df2edebb-6531-4d14-a98f-48803375c4d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f72b88d9-9bea-4eea-a715-ae0bec766c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cefcb1-99c0-4515-bed4-e16f1d849513",
        "cursor": {
          "ref": "0abdc152-3834-4edb-8320-501f72e05837",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6215aa64-da77-4105-85a6-f29ac7a29eba"
        },
        "item": {
          "id": "a8cefcb1-99c0-4515-bed4-e16f1d849513",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc53f0cf-4261-4663-b58e-94cb95321242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1242c032-2425-4499-95e5-4e8ba40ce91f",
        "cursor": {
          "ref": "14f15396-9cd6-4f29-beac-8f1e2fff585f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5516261-6d24-4ffa-9a9a-7ee00e4631f2"
        },
        "item": {
          "id": "1242c032-2425-4499-95e5-4e8ba40ce91f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8668ba21-9cd4-42ed-b505-09c261181b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d066e4a2-b708-42a4-b480-d23c9f882368",
        "cursor": {
          "ref": "037083f3-12ab-40d1-9539-4e0f824fa1d6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "939664d0-21dd-4f02-bd14-9a2594a1335e"
        },
        "item": {
          "id": "d066e4a2-b708-42a4-b480-d23c9f882368",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "20084ec3-6fd1-428e-b25b-3ae8d6aa0408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e668426e-b814-41d8-8104-646bda682ff0",
        "cursor": {
          "ref": "198bb9f8-e59e-4d83-93e5-585ef7512a67",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea9c2cc9-810f-4266-9545-056565de286a"
        },
        "item": {
          "id": "e668426e-b814-41d8-8104-646bda682ff0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f5a8d1a9-9b78-455c-adc4-a92b6ee5dcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3828bf64-8e31-4e5f-8f31-7a25c1b2ed3c",
        "cursor": {
          "ref": "b69e6e1d-b429-4a76-a7c4-9256ae277429",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cd5af695-80d3-47ef-8155-987f7bc85366"
        },
        "item": {
          "id": "3828bf64-8e31-4e5f-8f31-7a25c1b2ed3c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "68143658-6fa1-45b0-8d11-f41c1aec996f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcdcd00-d692-45c0-85f5-86a136173afa",
        "cursor": {
          "ref": "614f2927-22cb-411e-b993-d28b6c917686",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "52c4f9bd-1a28-42a0-a3c5-4d1ab8373daf"
        },
        "item": {
          "id": "0bcdcd00-d692-45c0-85f5-86a136173afa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "82160646-e5b4-42ce-975d-c2aae03e3f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b92516d-dade-41eb-9781-96cf6c85dead",
        "cursor": {
          "ref": "2a307fee-1465-4b43-8fe4-3bf99080cf26",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "195361c5-f766-47aa-acfc-7f8595155789"
        },
        "item": {
          "id": "9b92516d-dade-41eb-9781-96cf6c85dead",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "519aee55-d8ec-4ebe-b516-1524640fd3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e8595-0d28-4666-8f57-55d139797452",
        "cursor": {
          "ref": "ed224e3e-ef13-4e52-94e0-2b4c60acd61a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d47e0ef3-acb3-4df0-94c7-2def1f41a05a"
        },
        "item": {
          "id": "d72e8595-0d28-4666-8f57-55d139797452",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c5ec93ee-9329-43bf-8162-de552ed22398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7d6f3d-9916-433c-8295-af9894b75f39",
        "cursor": {
          "ref": "f685e467-4c8d-47b0-8203-37551b0bbf49",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "99ca0681-f0ba-4baa-9bed-f790452eda2d"
        },
        "item": {
          "id": "ab7d6f3d-9916-433c-8295-af9894b75f39",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "38bc6525-df42-42b4-ad07-5137f2f28184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f42fbd-da38-44d7-827d-ebc741aaf8b3",
        "cursor": {
          "ref": "7fd85105-f2c4-473c-98ef-2d1110cd31bb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "127e932f-d61c-48a8-ab29-0184272039a2"
        },
        "item": {
          "id": "29f42fbd-da38-44d7-827d-ebc741aaf8b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae78a097-1f28-4a6d-be22-a27086688c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30de78f-982c-4c74-8927-25c344d4a871",
        "cursor": {
          "ref": "1df65f44-6426-45b9-967b-07728197ab42",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0eeedbf8-1506-414b-b6e0-fdca6262366e"
        },
        "item": {
          "id": "f30de78f-982c-4c74-8927-25c344d4a871",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c7961105-d0f0-41ce-b326-885d72b2a2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c56a84-2702-43f8-b710-16be7ad408fa",
        "cursor": {
          "ref": "7df23354-efea-4c3e-99a8-53f6acf2c159",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bef5c8d2-1309-440c-9c9e-7ca862cb742f"
        },
        "item": {
          "id": "87c56a84-2702-43f8-b710-16be7ad408fa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3d0dc86d-bb26-4f84-bf3c-26f42f785b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd649b0-f0d6-4ace-a363-ea8be92940d6",
        "cursor": {
          "ref": "6bbb0831-6021-450d-9df5-7c5ce5d527b3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "de3b4c02-e122-44cb-9d49-1a9ce147c240"
        },
        "item": {
          "id": "5fd649b0-f0d6-4ace-a363-ea8be92940d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e694cf82-8075-444f-a391-0bfe0d6d8a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fc6266-e4ca-4ed5-a771-ea28559bcb4a",
        "cursor": {
          "ref": "7a00b5ca-31d0-493d-9fc2-f3f0c0b8dc87",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "639420a4-b264-4645-9525-b0e01f4aee1d"
        },
        "item": {
          "id": "56fc6266-e4ca-4ed5-a771-ea28559bcb4a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7447820c-dc3f-4449-b225-ac3db2f436a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837da917-eb43-4c83-9f32-048a2feeaffb",
        "cursor": {
          "ref": "381ed9bc-96a0-4d83-a70c-567f7c91ee11",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "650e1f09-3a57-495c-b828-347d83513e90"
        },
        "item": {
          "id": "837da917-eb43-4c83-9f32-048a2feeaffb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0208f793-5eaa-4d08-b1b5-68a6adda279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171fc1df-f91e-468f-99cc-930a91f33132",
        "cursor": {
          "ref": "30e2f931-02a7-4235-9be3-fb01388806e0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8f53b7f-6b90-4223-a3c8-d950951d0ecc"
        },
        "item": {
          "id": "171fc1df-f91e-468f-99cc-930a91f33132",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c26a7cae-2a8f-46b1-a38a-72ed6377d024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef9d5d0-420e-4593-af1b-8088fc0fa3f9",
        "cursor": {
          "ref": "b728ac61-70ca-408a-a822-cef577469008",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0af58a40-5320-40fe-affa-8075f751c94e"
        },
        "item": {
          "id": "2ef9d5d0-420e-4593-af1b-8088fc0fa3f9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "46ce5e06-1997-4525-920d-18a0a29d2e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c7b7fc-9105-4b76-9d9e-e63945bec3d0",
        "cursor": {
          "ref": "c1b25e7b-f9e3-431e-8ca3-ad228fdb3413",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "19ce3592-2369-4379-ad8a-6c1db9e100b3"
        },
        "item": {
          "id": "65c7b7fc-9105-4b76-9d9e-e63945bec3d0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87aaac54-fb44-4776-8d9e-6401db7c094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec534f-7b1a-4540-ab9f-8ffb526312e0",
        "cursor": {
          "ref": "96137f6b-60a4-480f-bb69-8c116f408d91",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "081e256f-d4b6-40ed-ae70-0614ec2baaad"
        },
        "item": {
          "id": "5eec534f-7b1a-4540-ab9f-8ffb526312e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ba35b1ea-cd16-41b3-9f9d-a8aabc6e87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ac5941-8058-457a-aacf-c12695789c46",
        "cursor": {
          "ref": "21290708-65d9-4ed7-9d09-c5869fb94ee6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ff197730-0fc2-44d4-83d0-69367af7c6d1"
        },
        "item": {
          "id": "24ac5941-8058-457a-aacf-c12695789c46",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fac51697-76bf-49a4-8060-235c9b412fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0903f-6550-481a-9844-e5d2f914b43a",
        "cursor": {
          "ref": "cf55a7cc-977b-4e23-afc2-3d0493e63871",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f46442cf-0599-4cc5-971f-f3740178185b"
        },
        "item": {
          "id": "b9e0903f-6550-481a-9844-e5d2f914b43a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2fd76209-e077-4285-8085-84d122d0fbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01de2a6e-a75f-4032-a6d5-817f52f23869",
        "cursor": {
          "ref": "d6e9fb10-dc96-4fa4-b444-e5adf602e7d8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b1c20af1-5781-4aa1-9af4-2ee5ba0128a4"
        },
        "item": {
          "id": "01de2a6e-a75f-4032-a6d5-817f52f23869",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4bd0066b-4716-4140-8c21-47af67008fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d1dbe-f4e9-4c82-91df-5c0051a50273",
        "cursor": {
          "ref": "d35136ca-353d-49c2-a343-bf882ac530de",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "98cfd081-4846-44dc-a997-ea8900337b9e"
        },
        "item": {
          "id": "f65d1dbe-f4e9-4c82-91df-5c0051a50273",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e82d4b12-7aa7-4e1e-8d57-bf4f8ad48155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472e4fb-9093-4f6c-893e-b4b670023ae4",
        "cursor": {
          "ref": "d2455927-771a-4c6f-a193-3b2aa66963c2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3d9e9c36-9aed-4da3-9897-0277e7c0f545"
        },
        "item": {
          "id": "0472e4fb-9093-4f6c-893e-b4b670023ae4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1152bba3-4ca5-4a1f-a383-3d2aba3dd950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24aad282-5ed2-457c-87b0-8463a47982e5",
        "cursor": {
          "ref": "2252e4ea-2151-4f82-a81b-d6dbe5e7eaa7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d40ea144-b49d-49e9-9d28-dafffc9e6546"
        },
        "item": {
          "id": "24aad282-5ed2-457c-87b0-8463a47982e5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6b18ee88-badc-44b8-952c-caa3a49011e0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93920810-6aee-4b05-ac53-3242b89116f3",
        "cursor": {
          "ref": "18446c08-a812-4db9-9c1e-72e94c5eb4c6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "056df142-efdb-4186-9648-e447db280dbb"
        },
        "item": {
          "id": "93920810-6aee-4b05-ac53-3242b89116f3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f1091d8-1e3b-428e-be16-3ece59dca841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d5c8ee-93df-4596-a7e6-f4a92c5019d2",
        "cursor": {
          "ref": "4f978b69-8585-4fd4-95e7-5f14b23074d3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6bdde34d-0a30-4935-b039-a9ec2395a40b"
        },
        "item": {
          "id": "73d5c8ee-93df-4596-a7e6-f4a92c5019d2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc66bfc6-603d-438a-8115-9c5e8425c2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfa2bcb-3541-4906-8748-1366254cd4f0",
        "cursor": {
          "ref": "fea91c68-879b-4fb6-b66e-9f7a62cd39b1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b386f0b-fece-450b-95ea-bfb9efd6bf9b"
        },
        "item": {
          "id": "9cfa2bcb-3541-4906-8748-1366254cd4f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c772a1d2-6ade-4346-9c68-132d3e529d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88b8bf8-e37a-4897-8dc2-0fd3743d9216",
        "cursor": {
          "ref": "15a5f76e-b037-4cfe-ad70-f43018e38fca",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e592f81-55db-4e77-8e38-a16ddc993ae7"
        },
        "item": {
          "id": "d88b8bf8-e37a-4897-8dc2-0fd3743d9216",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ee7a5db-2d3c-47b4-91cf-9cf604f320e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc30f3a5-d0b8-4f45-bcf2-ccc3a7cbb8b5",
        "cursor": {
          "ref": "bc6a4c0f-5787-4610-8e8e-6f5027b51585",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51d5733b-bb47-4f45-83be-6fbc9822ed03"
        },
        "item": {
          "id": "fc30f3a5-d0b8-4f45-bcf2-ccc3a7cbb8b5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "273aeab7-904f-4fc3-9026-bd466fb983de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b09056-6a33-47c9-ad6d-4ed4525e04e8",
        "cursor": {
          "ref": "eeabfbc2-e230-4699-80f1-9d8504357954",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7b293e15-8f8a-42c6-9b51-d319e82c6bd3"
        },
        "item": {
          "id": "b7b09056-6a33-47c9-ad6d-4ed4525e04e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f20d8f1-2248-4a69-a8d0-202869a381db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e1b160-7552-4805-b510-b1151e565f95",
        "cursor": {
          "ref": "1664022d-7acd-4000-834a-e28d60e7717c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95144da2-c9cd-4146-bc2b-0c951af54eb1"
        },
        "item": {
          "id": "04e1b160-7552-4805-b510-b1151e565f95",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2cdccd3-2fb3-406d-b7a6-4c743266eca0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58d004-2141-44cc-b3cb-1f12b339919b",
        "cursor": {
          "ref": "991408d5-1a51-4f0d-bc76-93dbba2c00bc",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cc14d073-22f6-4bac-8586-aeacdfcf39d5"
        },
        "item": {
          "id": "4f58d004-2141-44cc-b3cb-1f12b339919b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4f3f95a6-f8e0-4858-9e30-a62a25462915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67753dfe-9ad6-44a8-b63d-0aa8ad61ae7d",
        "cursor": {
          "ref": "67e05d29-b13f-43e5-ae21-4fe703828b09",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "279b11d4-009a-442a-81c0-3ad3ec1be6bb"
        },
        "item": {
          "id": "67753dfe-9ad6-44a8-b63d-0aa8ad61ae7d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6b80f74d-2d78-44f8-8ab1-d5b8cb99c858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f1dc3-5926-4dcb-8dea-605c4dedb181",
        "cursor": {
          "ref": "44871fae-5d0b-47fa-8280-6c2eb19fa3c1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c631aeab-a08b-49c9-87dc-c4d193c683b6"
        },
        "item": {
          "id": "4f0f1dc3-5926-4dcb-8dea-605c4dedb181",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "31f45116-5cce-4266-b152-cf5fd9ebff22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256ac195-48b3-4ddf-8016-6ebe0179567b",
        "cursor": {
          "ref": "b510d55b-b6a5-4c61-b6fd-c9cf819e22ab",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3918ea2-30cf-4139-95bb-eb60d8b8891c"
        },
        "item": {
          "id": "256ac195-48b3-4ddf-8016-6ebe0179567b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9e31deaa-13bc-4283-b3fb-b87b54f0eaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd843d8-9120-44fa-9298-4453c91a7b75",
        "cursor": {
          "ref": "d48492e3-10b4-422e-9689-b0ff7fd23b19",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "82d3829b-7ea4-4bb6-a271-fb38d2d26605"
        },
        "item": {
          "id": "5cd843d8-9120-44fa-9298-4453c91a7b75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ccb70e23-c181-4fc0-9555-303b08dd5554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398b2bf3-1f78-4aaf-a411-4eb0d407c9f3",
        "cursor": {
          "ref": "afdf895e-d169-4e82-9d7a-1502852427a0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9c20ac2a-2e03-4079-b8fa-72620ba278e5"
        },
        "item": {
          "id": "398b2bf3-1f78-4aaf-a411-4eb0d407c9f3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a0e6f584-f92c-46e2-9dd0-82e446c6a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46546d8f-5b31-4463-aa86-c0e79abbc590",
        "cursor": {
          "ref": "15310b29-205f-45d9-b773-b23454a9d7ea",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5c16995f-89bf-4d9a-8031-423d03aa2d18"
        },
        "item": {
          "id": "46546d8f-5b31-4463-aa86-c0e79abbc590",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12f4e8ec-4311-461e-832a-e700b2777b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aca91d-f59d-4364-914d-6cf432f91944",
        "cursor": {
          "ref": "6ab71646-ef20-44d4-a520-06301a4b9503",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38b7b1ef-d8b7-4fa2-90ef-bb3c2c333af5"
        },
        "item": {
          "id": "43aca91d-f59d-4364-914d-6cf432f91944",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "02ae61b8-92ec-45dd-b3f4-f0132ec2eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9006fc-5cdc-42f6-bff8-9c9a33a21d4f",
        "cursor": {
          "ref": "89bdc660-d754-4a48-a147-9eab9255d45a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d85183e-7937-432c-8773-3bd4babfd139"
        },
        "item": {
          "id": "6d9006fc-5cdc-42f6-bff8-9c9a33a21d4f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2fbba688-d7b9-40a4-8cb9-aca9af0126e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5050b1-33a9-4ea0-be78-f2732c934105",
        "cursor": {
          "ref": "f37c6f91-53df-4014-9f9f-0788abc78e31",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "818471c7-476b-4ce1-907b-0a26b06c1886"
        },
        "item": {
          "id": "1f5050b1-33a9-4ea0-be78-f2732c934105",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4d2144e4-9f79-40cc-972d-8750790cee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da70212-895b-4ea9-b519-d2b12ac63695",
        "cursor": {
          "ref": "9917c57e-eb84-4bb5-a487-2dc6cfed9ff9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "500af702-c73e-4de4-8872-a05b5c485d9a"
        },
        "item": {
          "id": "9da70212-895b-4ea9-b519-d2b12ac63695",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7c12fb06-f184-4303-96a8-ebce7681bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e169137-4534-40d4-88a3-fcf769781f3a",
        "cursor": {
          "ref": "25f6062a-9eb8-4d29-bf18-83bb8f93475c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e4b24810-cb69-49f5-81e1-3bc464beaf3a"
        },
        "item": {
          "id": "3e169137-4534-40d4-88a3-fcf769781f3a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4c83e8c0-7918-4643-97d7-3a08288af843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04271d3-cd9d-4671-9c4b-ba86048a7f6c",
        "cursor": {
          "ref": "7fba37c2-75b2-4a61-9922-66be6a214102",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "61967194-8818-4db7-9651-2feb8d3040c0"
        },
        "item": {
          "id": "a04271d3-cd9d-4671-9c4b-ba86048a7f6c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e387417-a773-433c-a98d-e3b7a2dcbbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf62153-ead8-4c9d-b108-948265e73695",
        "cursor": {
          "ref": "133e4779-7def-4b19-9727-aac678bb71f5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c35f1fa5-885f-4b13-8b59-ff80f5a7671f"
        },
        "item": {
          "id": "acf62153-ead8-4c9d-b108-948265e73695",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "838a109d-caaa-4576-aa77-3c3635997823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a9488c-f8d2-4ee4-8ef9-c008bae0f307",
        "cursor": {
          "ref": "4cc303ac-439e-464d-b54d-da729bd2cf3f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e50516f-6498-4f73-a19f-371131224362"
        },
        "item": {
          "id": "21a9488c-f8d2-4ee4-8ef9-c008bae0f307",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c33f3639-7e4b-45bd-a230-58f2b9662750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a99b03e-236f-4789-b538-925ab348648e",
        "cursor": {
          "ref": "8ed8b155-b90a-4da4-a551-f01d5bc52b8e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fa659fad-bc17-49df-897b-5d9e9da768a8"
        },
        "item": {
          "id": "6a99b03e-236f-4789-b538-925ab348648e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "deedbbcc-dfaa-4653-9211-096354672345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc00d2-0775-4fe0-bf8c-f37b5e30e4a2",
        "cursor": {
          "ref": "270d5567-30bd-4193-8064-abccc8653cbf",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5e00616d-ccfa-49df-8141-253ebc1fe0e4"
        },
        "item": {
          "id": "36dc00d2-0775-4fe0-bf8c-f37b5e30e4a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a2610d4-ce5c-4e52-8c6d-59a7a834c76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18c064b-f9f9-4a5a-bd84-f61ad18ecbf4",
        "cursor": {
          "ref": "36bd1c74-60eb-4bba-a4a6-987252b80401",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2399b4b4-e75f-4816-8d85-4396c5fde71a"
        },
        "item": {
          "id": "b18c064b-f9f9-4a5a-bd84-f61ad18ecbf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ba71b7a-ca3a-4f0e-9ca4-224c9ee0dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c434ab-5b27-4698-b5ce-d377366dbf32",
        "cursor": {
          "ref": "0ca4d204-1051-4b05-bea7-7375e83ad0d8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88c858bd-e01f-4dd1-88e4-69c021763ec1"
        },
        "item": {
          "id": "64c434ab-5b27-4698-b5ce-d377366dbf32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4a933cbe-f46b-413c-ae5b-6b9d925a0bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b382da-8f03-4fda-a633-58120fe9d869",
        "cursor": {
          "ref": "c2a1facf-9d0b-4847-b62b-65c6d9836861",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bb1288a1-6e3e-40fe-a162-3268c0d754dc"
        },
        "item": {
          "id": "99b382da-8f03-4fda-a633-58120fe9d869",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b256ebd3-8c18-4f67-a724-576340d20874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95751fb8-6e3d-4dbe-ba71-73d11ff066d1",
        "cursor": {
          "ref": "44850c78-4133-45dc-ad41-6704bd7442d1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a2801c4-6231-400f-961d-6c14e2c76010"
        },
        "item": {
          "id": "95751fb8-6e3d-4dbe-ba71-73d11ff066d1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "55e9b2f1-ee8c-4787-b3a3-77611dd0ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e0f1d8-ced7-4857-971a-073e4879cfae",
        "cursor": {
          "ref": "2e67ae8b-0f08-444a-8c71-2969e520cfc4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88c6a901-a3de-4cf2-92e4-293c0b110db2"
        },
        "item": {
          "id": "13e0f1d8-ced7-4857-971a-073e4879cfae",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "52a39610-2782-4ff5-8478-ade2984bcd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae86024-79a2-47e4-8647-a691b28a8fa8",
        "cursor": {
          "ref": "36d7dfe9-91de-4c99-9a8a-fa3d4ecbe21b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9cb06741-dc50-47c4-9827-674e6858749a"
        },
        "item": {
          "id": "eae86024-79a2-47e4-8647-a691b28a8fa8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "06935be3-777f-4914-8745-460c810e1300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168dff0d-7604-458d-8433-484c90425b6a",
        "cursor": {
          "ref": "83ce53e8-0f34-4732-98b0-d373efe21e39",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7145de58-cbbf-44d5-992a-3b9f7f1db316"
        },
        "item": {
          "id": "168dff0d-7604-458d-8433-484c90425b6a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c37bba67-81e7-43dd-94c7-51f959d674d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd4ba9-470b-4461-b694-bd4df49c45f4",
        "cursor": {
          "ref": "6a0967d0-73aa-48d8-be30-406e1f4dfb7f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2bc0eb4f-17f9-4bba-816d-284d3a69f8a6"
        },
        "item": {
          "id": "0ddd4ba9-470b-4461-b694-bd4df49c45f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5992e543-c82a-434a-8d26-e17820093825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226f3ebc-15aa-49b6-baf1-0a359c8df81d",
        "cursor": {
          "ref": "b9bf42ad-66e9-4be9-a3c1-2567de3c8e5b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ee0ccbc6-73ff-4443-934a-abb1bea6fa4b"
        },
        "item": {
          "id": "226f3ebc-15aa-49b6-baf1-0a359c8df81d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2a09de2f-08dd-4faf-8a2e-b8514289e3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a141b590-0547-4837-8451-532d5c70be68",
        "cursor": {
          "ref": "11b11cb7-865a-45f8-8698-75083508f3c7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec62e94a-a10b-4445-8136-6e6692993797"
        },
        "item": {
          "id": "a141b590-0547-4837-8451-532d5c70be68",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "762a32ba-6ede-4a46-aaa1-1c75640c9109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63cc25a-dee8-41bb-8111-848ad433e768",
        "cursor": {
          "ref": "7d73b0d8-c49f-4ede-92a5-ccc48b5161e2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e0826b24-7fd5-4589-b6c1-e8d82373a29b"
        },
        "item": {
          "id": "b63cc25a-dee8-41bb-8111-848ad433e768",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d2718d99-c273-4da8-9638-23aa2c0dc148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82be3ad5-3a3d-4c25-b56c-818ee0739c00",
        "cursor": {
          "ref": "f3643812-0d66-4f59-ba93-72466a79b6c4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a0a3f37f-54fb-4c94-aed0-5d3b6d548465"
        },
        "item": {
          "id": "82be3ad5-3a3d-4c25-b56c-818ee0739c00",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b277090b-6fe0-44c9-a3c2-2d5af5febda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4817d1d0-62c3-4141-bb33-dc740e52f31b",
        "cursor": {
          "ref": "746203bf-5b85-4023-b532-fccce24ed291",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "490c2572-d035-426d-bcfc-16aaba93fa8c"
        },
        "item": {
          "id": "4817d1d0-62c3-4141-bb33-dc740e52f31b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c83ccd8f-51fc-4ded-aa4d-734fe610df1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53135b8b-ad33-498b-bf94-626a07066588",
        "cursor": {
          "ref": "a0731c2d-75cf-4252-bbea-ba6f22659fea",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c5eca20e-da3f-467d-b1a7-9da532acf04a"
        },
        "item": {
          "id": "53135b8b-ad33-498b-bf94-626a07066588",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1544032f-e435-4355-b8b9-f6d9bd8be005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecacf7a-1031-45d6-9a62-c71faeb2a4ae",
        "cursor": {
          "ref": "251fa77d-f543-4757-8547-e59763b0102c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aefd0fe7-3930-4961-952c-0cd33f8c869e"
        },
        "item": {
          "id": "8ecacf7a-1031-45d6-9a62-c71faeb2a4ae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "edf29847-168f-458e-865d-5432e867d586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae799c6f-a289-4adf-a909-a8e797f2607e",
        "cursor": {
          "ref": "626c639a-fb62-45ff-b738-c21eacdefd0a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c1e38c34-aca2-40d5-9e8a-ed9467b05e38"
        },
        "item": {
          "id": "ae799c6f-a289-4adf-a909-a8e797f2607e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a5f6548-ee41-4451-8d61-ffb5b052a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5fd5af-f3a8-44f3-9477-cf8818370c0d",
        "cursor": {
          "ref": "80733af2-776c-4c6c-9a59-46438bfc7d59",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9abf8660-eb6e-43a8-8c07-1359890aad4c"
        },
        "item": {
          "id": "dc5fd5af-f3a8-44f3-9477-cf8818370c0d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "65921cc3-5e75-4d94-b902-351774a9e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda6560-e8b5-42dc-b99e-83eb4649fb75",
        "cursor": {
          "ref": "37e8ce06-bd50-4966-b9c9-f9e39ff139ec",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf5b26b4-9f98-41a8-bffc-d4d9b22f60bd"
        },
        "item": {
          "id": "ddda6560-e8b5-42dc-b99e-83eb4649fb75",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9c057c35-dcf3-4740-91c1-093c78cc9e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e4d734-310a-444c-9423-c07569c393a2",
        "cursor": {
          "ref": "70ff7696-39c6-4625-9aef-f2a082e1bc68",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bd247cb4-fede-4e4b-a16b-e50c7d735d6e"
        },
        "item": {
          "id": "93e4d734-310a-444c-9423-c07569c393a2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "909b8eb6-daf9-4b88-8602-c91f4dd8d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de3826b-2a23-4043-9b9d-c95399f3b89a",
        "cursor": {
          "ref": "4a6b9ca3-2544-4bf4-ac01-fcb0394aa6ed",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0b3a16fd-bcc8-46c7-8b2d-041c0a74ccd2"
        },
        "item": {
          "id": "8de3826b-2a23-4043-9b9d-c95399f3b89a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "761100c7-8e51-4c5f-86e6-1c6ef358dbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d35b827-e6cc-4cda-805f-333f293c8b31",
        "cursor": {
          "ref": "110a5207-d771-46f3-865d-eea55a351d52",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "adc3d8e9-01b5-4868-9ad7-1e7e287af88d"
        },
        "item": {
          "id": "2d35b827-e6cc-4cda-805f-333f293c8b31",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "970dc994-9ba6-40eb-aeb2-2c945ac4e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafbe804-ee3a-4266-a46d-6d9d1e6e698a",
        "cursor": {
          "ref": "c41f4d60-1504-42e7-86ba-ed602992b428",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "95af45e5-497c-4a45-bccd-268fb18bd9fd"
        },
        "item": {
          "id": "fafbe804-ee3a-4266-a46d-6d9d1e6e698a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3ab3d6b0-d935-4cff-86c2-94e079d58988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6672ac-db90-4bb9-bb44-97834f1f1f08",
        "cursor": {
          "ref": "3d1ab4e9-ae47-404a-98b4-73db0022c0e5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8d4a2659-f997-4f4a-b9ac-7934153832fd"
        },
        "item": {
          "id": "3c6672ac-db90-4bb9-bb44-97834f1f1f08",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "174d0405-7c74-4fcb-8005-d378c25d22dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340d2390-27c1-40cd-ae07-07172b79590c",
        "cursor": {
          "ref": "096795dd-1603-46e7-8250-14100660c6de",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3e95ce47-b44f-4296-84b2-4fc2815afd5c"
        },
        "item": {
          "id": "340d2390-27c1-40cd-ae07-07172b79590c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "97a5b4c1-5179-45c7-9b09-68e4e88bbe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0009fcea-6e8b-417b-a332-c43e23131323",
        "cursor": {
          "ref": "3f813ef6-2d8e-421c-b51c-58793c918983",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e567b22-e509-4706-94a7-bea2dabcabe3"
        },
        "item": {
          "id": "0009fcea-6e8b-417b-a332-c43e23131323",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "76d74024-9c84-48c9-88fc-1f000e33cd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d06b1-c5f0-4462-80d4-d27e074c21eb",
        "cursor": {
          "ref": "1f322d25-6475-4595-8dd5-4dd9de4a8968",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "15b15bc7-c5c6-444e-90f0-111ac4d33ef0"
        },
        "item": {
          "id": "ac0d06b1-c5f0-4462-80d4-d27e074c21eb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "85a3312e-ce2b-4dda-ba4e-bfc631646d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe5880f-e03e-4b85-9cf6-d6185bd081bc",
        "cursor": {
          "ref": "245b2a43-9cb5-4b38-8011-ed1c9550634b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d101ddf7-fca2-4717-acb2-3091ef0e761c"
        },
        "item": {
          "id": "dbe5880f-e03e-4b85-9cf6-d6185bd081bc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b1f698f-ef63-4c78-b6c2-b8a2de70cfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c262815d-cb21-4b01-a139-941b1d48d4c8",
        "cursor": {
          "ref": "2bd9d735-223e-46c2-b26e-7cecbeca9535",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b84f60a7-9325-4d54-8963-05cc7db6f7c3"
        },
        "item": {
          "id": "c262815d-cb21-4b01-a139-941b1d48d4c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6c2892cd-bebb-4ac1-b90d-4a10341a8c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfe82fa-d745-4a0e-a63e-fcbc34d13ef3",
        "cursor": {
          "ref": "aae64b0d-6bd6-4256-b315-7b6c82060c8f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ad0fe85-5a4e-4f65-bd3d-11e94291a404"
        },
        "item": {
          "id": "acfe82fa-d745-4a0e-a63e-fcbc34d13ef3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c6389fa2-ebdc-45e1-9872-a7c6c95e962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760c733a-8c79-4a58-aab8-3d3be2974e0e",
        "cursor": {
          "ref": "50ca6c60-e466-45a8-b2f1-cb8799dfdeb2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "15f6fb17-2384-4080-9004-5ee019e4b4bc"
        },
        "item": {
          "id": "760c733a-8c79-4a58-aab8-3d3be2974e0e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26fbe80a-57aa-4a04-af4e-acebbe9661e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d47fcd5-f02b-434b-8ae9-7980a4d686e7",
        "cursor": {
          "ref": "89ca87c7-e024-4272-a080-1730655c5043",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b6994cb-e5ed-4587-9a79-cc5b43172991"
        },
        "item": {
          "id": "7d47fcd5-f02b-434b-8ae9-7980a4d686e7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "500ada77-4010-4ff9-a1e5-089b12ec4c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10d9201-bb97-4234-9792-d6ef3b054d46",
        "cursor": {
          "ref": "98bd7ac7-80a9-4d33-a4be-b4f4509411f3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6257cc47-fcac-4166-a7c0-b426efb8d2f0"
        },
        "item": {
          "id": "b10d9201-bb97-4234-9792-d6ef3b054d46",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2c7ae793-e562-451c-9d60-a5f03920b389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522fc18d-e7a7-4cb6-a6c0-54f7cac31456",
        "cursor": {
          "ref": "96922de4-bfcd-4dbb-9af4-0a39e788e6da",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "70b1f1a7-5d73-48b0-b8b5-cda1e8ba8d7a"
        },
        "item": {
          "id": "522fc18d-e7a7-4cb6-a6c0-54f7cac31456",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ba8dea1e-2358-4828-b2c1-8e2875bc3dcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7969413e-363c-4d23-b465-73d5181da4ce",
        "cursor": {
          "ref": "da5e0a30-6daa-4603-aa33-5b5e5c0dac2f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "021c446d-4582-477f-a39d-3ac606cb38de"
        },
        "item": {
          "id": "7969413e-363c-4d23-b465-73d5181da4ce",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "abec32af-fec9-4292-a035-8081db07835b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "90581bc2-2da4-41a8-bc45-e6f3a66f07cd",
        "cursor": {
          "ref": "358965f2-aaa2-4cfb-8ea5-50e48f6dfaf4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0dfa3571-fbf7-4802-944c-f806257cd11d"
        },
        "item": {
          "id": "90581bc2-2da4-41a8-bc45-e6f3a66f07cd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8e5f15f3-e6ef-435b-8825-f70c68287c63",
          "status": "Created",
          "code": 201,
          "responseTime": 5451,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f158e7-94d4-49af-aa17-6d8bc4279532",
        "cursor": {
          "ref": "c379d4af-dc45-4753-99a4-2333f78c6264",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "72b14054-d2c7-43e9-a127-b5b3aff2541a"
        },
        "item": {
          "id": "c6f158e7-94d4-49af-aa17-6d8bc4279532",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c83af162-8fde-4b47-8b82-1153b2d29fab",
          "status": "Created",
          "code": 201,
          "responseTime": 4615,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "62527d7d-10ae-4968-b0a6-a3a88b006697",
        "cursor": {
          "ref": "a533a335-0178-4fc8-890a-dd2cbc244742",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f00f4c9-438e-4b2e-87d5-60b80291b60e"
        },
        "item": {
          "id": "62527d7d-10ae-4968-b0a6-a3a88b006697",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "37c6fa25-0a3b-4d4a-a04d-5878934cffdf",
          "status": "Created",
          "code": 201,
          "responseTime": 5045,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "634cddbd-a417-451e-96c8-3a0725c53458",
        "cursor": {
          "ref": "9163c062-c22b-4609-9900-969756f2a241",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "14791a62-66bd-40df-8916-0c8e3c9bbc8a"
        },
        "item": {
          "id": "634cddbd-a417-451e-96c8-3a0725c53458",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3782a10d-1071-4b3a-8b78-57d88d16bdb2",
          "status": "Created",
          "code": 201,
          "responseTime": 4699,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a348b6c-40fa-43d4-bbbd-a69376a0831e",
        "cursor": {
          "ref": "da9be05b-f12c-46e6-abf4-90591f24db3a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fd7f6713-0d11-4420-8850-30160ac41996"
        },
        "item": {
          "id": "7a348b6c-40fa-43d4-bbbd-a69376a0831e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6db0ab20-e37a-4a5d-b3be-2ab88dd0a398",
          "status": "Created",
          "code": 201,
          "responseTime": 4810,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-30T00:38:07Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-30T00:38:07Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e8e4ae43-98e1-4207-b22d-eac88174006a",
        "cursor": {
          "ref": "3caf5229-5398-4bd5-a85d-c352053919e4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "470b9471-5d81-41e8-a16b-004cb2153bb1"
        },
        "item": {
          "id": "e8e4ae43-98e1-4207-b22d-eac88174006a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bec66d7c-7c30-41a2-82ea-aa4f6a131263",
          "status": "Created",
          "code": 201,
          "responseTime": 4588,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80612e48-40ef-4092-a77d-30faf036be89",
        "cursor": {
          "ref": "a04954fb-1129-4c99-8065-448af5741c4e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cd8dac0a-36c8-41a6-93dd-70aa6b759ebc"
        },
        "item": {
          "id": "80612e48-40ef-4092-a77d-30faf036be89",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd41e1bd-eca7-487f-a455-cab28c739509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd498386-6837-4d40-928b-af439de1c16b",
        "cursor": {
          "ref": "0f0afb48-ef52-4098-b2f7-0cc112e884ba",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27c47000-6471-4b1d-962c-5eea66cd50d9"
        },
        "item": {
          "id": "fd498386-6837-4d40-928b-af439de1c16b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b8fc5e1-d865-4410-b0f8-e0343fa71ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af35c70-e32f-4bc8-8a5a-34d7f28999f8",
        "cursor": {
          "ref": "6324e9e8-3a14-4c12-a4dd-ab6cd5e9e8bf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "15f131be-4a7d-4d1b-b133-3b3022cbd187"
        },
        "item": {
          "id": "6af35c70-e32f-4bc8-8a5a-34d7f28999f8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71da1983-f8e5-46c6-82f0-dbbb1815f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1459a8-a381-4485-851b-b92cc8b91b31",
        "cursor": {
          "ref": "cf5b6c05-6ba0-4306-8dbf-d01b1ebead1b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3171c615-91d8-44a3-b110-2ef5fa67dd2b"
        },
        "item": {
          "id": "4b1459a8-a381-4485-851b-b92cc8b91b31",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e1dfe3aa-859b-4359-ac04-a38b6d1d4634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d57d1e-08ce-4611-b88f-964575120027",
        "cursor": {
          "ref": "4482aef3-6888-4c92-be2d-0140cc2dbd90",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "87ee6882-b70b-4cc9-a619-cdebc8105201"
        },
        "item": {
          "id": "10d57d1e-08ce-4611-b88f-964575120027",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cd01388a-866f-491c-8b9c-e3f1ff75b0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e234fc2-8454-4d53-9a74-d1f3a5478087",
        "cursor": {
          "ref": "51c19bfa-b623-4e57-8bd4-4ee4755b8414",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "67ac881c-1eb4-426e-9285-9c574ae859c4"
        },
        "item": {
          "id": "7e234fc2-8454-4d53-9a74-d1f3a5478087",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ca8c3d49-6307-486b-8239-61641470b536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06175b25-e4eb-4ef6-be9d-3b18612c9023",
        "cursor": {
          "ref": "97c7d044-acc2-409d-94d6-781a06a0ce74",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f66c1f14-e377-48c9-b4d3-c64534980efe"
        },
        "item": {
          "id": "06175b25-e4eb-4ef6-be9d-3b18612c9023",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8482afd4-b608-42ef-a145-4749104eeef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e126b08-b5a3-4b98-bf1f-8b16fc6eb0a2",
        "cursor": {
          "ref": "a8561d73-7c10-4117-8ece-b82c71bd510a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "341e1f9c-83f0-4d9d-bdb1-a87d0acdf4d4"
        },
        "item": {
          "id": "0e126b08-b5a3-4b98-bf1f-8b16fc6eb0a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e73f9b21-bc44-4406-9ff7-1f1578c4c286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eedbb0-6dce-4924-916c-05587d745bf6",
        "cursor": {
          "ref": "15b3f311-6759-410f-ad94-4170c4233acf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ea699cf7-22c9-4a78-81a3-6b6ca05cc6de"
        },
        "item": {
          "id": "a8eedbb0-6dce-4924-916c-05587d745bf6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ba38de87-8077-40e4-b753-38684ece1b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df51cfca-a4b4-4110-8bbd-a23fb86e4640",
        "cursor": {
          "ref": "459c07b3-dc88-4e00-9db5-44bbefcf1ac9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "41101252-d741-45d9-95bb-4447d74e4e0b"
        },
        "item": {
          "id": "df51cfca-a4b4-4110-8bbd-a23fb86e4640",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f551d60-915c-45ed-946e-71d5396a01ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc966ab-2704-4548-90bb-b1a69707a8ae",
        "cursor": {
          "ref": "cd61c333-e2da-4ecc-a9a2-fa53b5338f69",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eb7293fa-6e38-4c1e-a441-d3dc8e04d1de"
        },
        "item": {
          "id": "9bc966ab-2704-4548-90bb-b1a69707a8ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac3bafd2-070e-4576-9f62-010c5a4eb4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf9b6c-d4fa-472c-a24b-6f8d75ef24cc",
        "cursor": {
          "ref": "e4a13cbd-2607-4541-9e96-69d177f29ff0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8824d2a-82b2-400c-8b59-f680f22dc58e"
        },
        "item": {
          "id": "5abf9b6c-d4fa-472c-a24b-6f8d75ef24cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1fad97f0-8b2a-4058-b34b-1629d185bb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00250469-4ed0-4f39-b112-c46de0dc55f6",
        "cursor": {
          "ref": "863db0cf-9317-4722-b2bf-3087151c0ae3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2f580878-d81e-4234-a24e-26593dd569ee"
        },
        "item": {
          "id": "00250469-4ed0-4f39-b112-c46de0dc55f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d31f5144-e6af-4a63-8d1a-97afe066251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f302ded9-dfa3-437e-9e2d-4d551af4d992",
        "cursor": {
          "ref": "e461cef8-e612-439a-8df1-a059f30b7175",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "197888d9-7e58-43d5-907c-fd15005cb0ce"
        },
        "item": {
          "id": "f302ded9-dfa3-437e-9e2d-4d551af4d992",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ca79969-e3de-40bb-9f9d-dfee69a1fec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef77e379-f411-4aab-ad2a-66b167f5285e",
        "cursor": {
          "ref": "b1ab7a84-da91-4f70-9e15-a4883f305716",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a92746bc-9445-4edc-96ed-d71209249ddc"
        },
        "item": {
          "id": "ef77e379-f411-4aab-ad2a-66b167f5285e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5a82cf0d-f375-449d-9a1e-3fc777b982c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4199af-283e-4779-88df-391bc81970ec",
        "cursor": {
          "ref": "f53ae760-36d3-4016-adac-41dfab8ca349",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2fe0b256-b64a-40a9-8bf5-9a699ff040b0"
        },
        "item": {
          "id": "bd4199af-283e-4779-88df-391bc81970ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0da9abb2-6c28-45e9-becb-24c57f6675f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a559687-e8f9-42b5-8f2e-205647fcc51e",
        "cursor": {
          "ref": "ef294f93-90f7-46ce-9e57-0c317e8007ac",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "54627480-81ff-4e6b-b977-c338d4120833"
        },
        "item": {
          "id": "6a559687-e8f9-42b5-8f2e-205647fcc51e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1b467179-c87f-4e88-86f6-0ce86bdfcfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e627b-3883-41ec-ba1d-caf944df45dd",
        "cursor": {
          "ref": "9f1cfc80-521e-4b0d-90a1-d1f68caf3874",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0557a943-d8f5-4e01-b7b6-49f728fe8640"
        },
        "item": {
          "id": "7b5e627b-3883-41ec-ba1d-caf944df45dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f845cc8e-d0df-4879-b789-3e0ea527c1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f2fddd-c0cf-4701-a397-b35efa025135",
        "cursor": {
          "ref": "af6398f2-54e9-44b6-bab9-cbe236962681",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5e37bbfe-23ba-4f9d-8159-209bc6925015"
        },
        "item": {
          "id": "03f2fddd-c0cf-4701-a397-b35efa025135",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd861052-2e56-4a28-9c0a-6882938c8ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5e3c4a-0cfc-4b9e-9797-2e12fe2a44fe",
        "cursor": {
          "ref": "b58f8384-0f3d-44f5-820d-ebc5534b02df",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "51b200e8-5b07-4f5c-9dab-03c0dd8a4f81"
        },
        "item": {
          "id": "ba5e3c4a-0cfc-4b9e-9797-2e12fe2a44fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c0acde17-2734-43c7-aa07-5c505ab0b6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef3a5e-8778-4047-ad8c-011380d14d9b",
        "cursor": {
          "ref": "5ce03d9b-7516-4f1e-9f11-b73f654f6ac8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3547de7c-7272-4898-b765-cc3c2af3e535"
        },
        "item": {
          "id": "2aef3a5e-8778-4047-ad8c-011380d14d9b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "39677d26-9709-4744-889b-4c4d9b398bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05431c9c-2f5f-47e2-b29e-40c58a21d445",
        "cursor": {
          "ref": "a05ea9f6-4779-4b6b-9f0c-92ed4f671e89",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2dd3467d-67eb-4dcd-9543-fdfe420e9245"
        },
        "item": {
          "id": "05431c9c-2f5f-47e2-b29e-40c58a21d445",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a1a6125b-fe12-4a03-8552-632e0cf7a749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6f8a6d-e373-4e9e-abc9-abd4113333b7",
        "cursor": {
          "ref": "ed784ea3-265e-46cb-942e-f7da11641c4a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4bc01474-f4af-4e08-a86a-34af14cd4eda"
        },
        "item": {
          "id": "ad6f8a6d-e373-4e9e-abc9-abd4113333b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f4721598-9a48-47d6-84f8-338e59567f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e4c1f-530f-4751-a72f-8c7ad889d89e",
        "cursor": {
          "ref": "7f13e9db-327e-41ba-b9d5-5d42bece9928",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "27ff0a3d-f7a4-4818-ab3a-06c99ea77238"
        },
        "item": {
          "id": "650e4c1f-530f-4751-a72f-8c7ad889d89e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b90229a6-2459-4edd-9ce2-a2299ed308c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08306263-a837-4066-8fd0-0d8736d30a3d",
        "cursor": {
          "ref": "be9c2580-8299-4df1-a7b4-9d909e6114d2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3fc0c4f2-eb36-4d7c-9460-07c5b1f5c1e9"
        },
        "item": {
          "id": "08306263-a837-4066-8fd0-0d8736d30a3d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f2ec463-7c4e-4a41-b792-715206708ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd7763b-377c-49a3-b963-e664137be1cb",
        "cursor": {
          "ref": "066f0da6-05f4-4241-9c3e-ab80a8828e83",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eb10d258-4fbe-4f7d-8865-3d1d9884d7f1"
        },
        "item": {
          "id": "3dd7763b-377c-49a3-b963-e664137be1cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c658d764-fb57-4ed2-b0b2-e5cc7bb3ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6359bcdf-19c8-4a36-a052-3e9776beee3b",
        "cursor": {
          "ref": "b160242a-425f-464c-92cf-842179e8c915",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ad89c6e2-ddb3-4e80-8636-7fe102ee1cc8"
        },
        "item": {
          "id": "6359bcdf-19c8-4a36-a052-3e9776beee3b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a145eee-1950-4446-af33-067a6648d84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1109fd-51ae-422b-9f49-42af825dbefc",
        "cursor": {
          "ref": "d8df18e2-aa0d-4b82-8ab2-0b0fb5390f01",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "931c4acf-3e16-4cc2-9a48-6395b169bacd"
        },
        "item": {
          "id": "fc1109fd-51ae-422b-9f49-42af825dbefc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf6a1a40-1c45-472b-9e28-495456c95bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3215e293-f2bf-4f26-afb6-52a7dd9c5e70",
        "cursor": {
          "ref": "274d5332-aafd-42f3-9982-67276d743abd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dc5ce994-3b85-4a69-9c13-9d129235e8cc"
        },
        "item": {
          "id": "3215e293-f2bf-4f26-afb6-52a7dd9c5e70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "01349bdc-c7ae-40b3-898d-d88e78fa81cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc9c33c-b24a-4e26-809f-bac1fbc6446d",
        "cursor": {
          "ref": "cd95abc8-9eab-4a55-a452-05a812efe86a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f57bd89d-ffd7-427e-b73f-3b4868b9b4dc"
        },
        "item": {
          "id": "cbc9c33c-b24a-4e26-809f-bac1fbc6446d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3cd75366-76d8-4130-a0d4-04ea81b40439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bba347-43ae-4408-9233-0c7e9d8f85f6",
        "cursor": {
          "ref": "a45dc3fe-4fc0-4daf-bc9c-1f9f20a12491",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "88840e54-50ce-45a8-b53b-c8e1c79b6118"
        },
        "item": {
          "id": "19bba347-43ae-4408-9233-0c7e9d8f85f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "55e31c9a-1164-4040-bcc6-36707bf18363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783f3ca4-7ce5-4b96-a615-7c95ea33c1c2",
        "cursor": {
          "ref": "f28f1c24-7787-4da6-bcdc-5a6ab249a8a1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b47ed48f-67d6-4efc-a9e2-10d4eafbba24"
        },
        "item": {
          "id": "783f3ca4-7ce5-4b96-a615-7c95ea33c1c2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6c940fab-0b2c-4876-b279-9a13afe93260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eecda3-9997-477f-b649-fbb36fc2b375",
        "cursor": {
          "ref": "ef39d72b-4aea-4c4e-92f2-e7f66ea0f385",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f6070910-bbb5-48f3-b425-d92eb2e41de9"
        },
        "item": {
          "id": "61eecda3-9997-477f-b649-fbb36fc2b375",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f66bed9c-de90-4684-a555-829ea13e86f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7379536a-9a48-443d-9bec-a39f7569cde7",
        "cursor": {
          "ref": "c740bb47-0c95-4d81-857b-3a23724f86b6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8a3be93f-1cc6-426f-a9ae-006fa51b1dda"
        },
        "item": {
          "id": "7379536a-9a48-443d-9bec-a39f7569cde7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6594a9f5-c2f4-4696-9a8a-7c041b0dfc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19178917-8365-471b-9460-fa91922b43ec",
        "cursor": {
          "ref": "82bccda2-de6a-4cfa-96fa-b8ccce7d9b17",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c9db0c2-40b9-4d72-99fc-79e46e7a16ba"
        },
        "item": {
          "id": "19178917-8365-471b-9460-fa91922b43ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7701976b-f4c5-4b28-8cf5-97d9ff8ddb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d319c0f8-8526-4640-8a78-178b57c1f213",
        "cursor": {
          "ref": "1b4045ce-3c5e-4c5c-bd75-bd5fa5836b0d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "97646cc4-af1f-4a63-902f-9e2f6e23bede"
        },
        "item": {
          "id": "d319c0f8-8526-4640-8a78-178b57c1f213",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a1609585-aeb6-4d1e-9b75-c4c3a4f08619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b9b058-8412-40e3-b197-61aab013f40e",
        "cursor": {
          "ref": "7d6fe660-83f8-46b7-9fc7-136c8e775d28",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ad1a7eab-66b6-40bf-92d3-bc5e4d257f64"
        },
        "item": {
          "id": "d6b9b058-8412-40e3-b197-61aab013f40e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ae16a0ac-ffb9-4b63-95c7-25b1230a484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33d63fa-1a19-4aa1-adcb-849cd97367ff",
        "cursor": {
          "ref": "f10c3a20-5521-4b8a-b011-c70dad3c325e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a2493e6-aa41-4b75-ad09-2d6c32fbeddc"
        },
        "item": {
          "id": "c33d63fa-1a19-4aa1-adcb-849cd97367ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e28d7c80-4f16-495a-b772-d0855873cd3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82470f3-b10a-4465-8375-00d3c17acd4f",
        "cursor": {
          "ref": "a5c2041a-7838-4c73-9340-9e3983f8cda2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7995173a-508a-4d01-a6b6-386a9b9ad557"
        },
        "item": {
          "id": "c82470f3-b10a-4465-8375-00d3c17acd4f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "21c651d9-e2df-476b-9bb8-8810f9e63f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2c30be-9533-448a-bc5f-bbebde1c87da",
        "cursor": {
          "ref": "fa9b6254-a1af-4696-b5c5-790f6f654c0a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "41cf7b47-c606-422a-95d5-e33fbf6d9d40"
        },
        "item": {
          "id": "fc2c30be-9533-448a-bc5f-bbebde1c87da",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "af4fab58-234d-4b7f-b683-941e7e5eebb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe02a4-575d-42ca-9fed-977ea1d563f3",
        "cursor": {
          "ref": "de66c5c2-3ffa-4118-aaf1-9e7111fceaca",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f9c4af39-74aa-4e3b-8902-239e8285261a"
        },
        "item": {
          "id": "45fe02a4-575d-42ca-9fed-977ea1d563f3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c6854b3a-a7b1-4878-9a0b-16b45dfe6ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde9ff0-fc8b-4724-a3c9-0a6e42dc68b8",
        "cursor": {
          "ref": "05cb1f65-4065-42f3-91c2-eeb9b417f67c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6b1a5c94-9e69-4584-a784-c38e8506e987"
        },
        "item": {
          "id": "4dde9ff0-fc8b-4724-a3c9-0a6e42dc68b8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8c846320-86b1-4ecd-9bfb-444bcc134ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d1ad5f-ddad-4050-bcc3-1409670dd1e2",
        "cursor": {
          "ref": "a501e724-aa05-49c0-a07c-f23c62d60365",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "42e841a7-7201-4bad-b819-094d26433e95"
        },
        "item": {
          "id": "35d1ad5f-ddad-4050-bcc3-1409670dd1e2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fd133179-83d4-4441-86ce-a050492f4b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593ad9a3-88ea-4175-8a6d-7b29db7a3c36",
        "cursor": {
          "ref": "0ad6af4c-6ba6-4c21-8c3e-936086e95a3e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bfd85b57-57c8-4c00-932e-1bf6927d3d2e"
        },
        "item": {
          "id": "593ad9a3-88ea-4175-8a6d-7b29db7a3c36",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f99a89d-9031-4cca-a7c7-5c5c22d6f356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8314a156-c3ac-4e8d-ba96-bdc336b1ae91",
        "cursor": {
          "ref": "9bbacd40-d21d-4409-a4f0-95d185608d98",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b492745-7185-47d5-acb2-df217b8ed872"
        },
        "item": {
          "id": "8314a156-c3ac-4e8d-ba96-bdc336b1ae91",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a2125ade-0ae0-4e5c-98f2-0ea9b748bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba385abf-1eac-4993-91e5-ad3e9e573a15",
        "cursor": {
          "ref": "f990bcb0-dc3c-4a94-9706-2a7319d846d5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1acf3d22-b9a2-4148-b49d-fe9e61a7abc5"
        },
        "item": {
          "id": "ba385abf-1eac-4993-91e5-ad3e9e573a15",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6c803877-9ed8-446c-8469-72ae09e021f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f911953-6a40-41ca-a66f-e462856c0b35",
        "cursor": {
          "ref": "22365b6e-4395-4beb-8d94-c4c2c4285184",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "92e43fe0-f798-4364-8f97-b5df53a79a6c"
        },
        "item": {
          "id": "3f911953-6a40-41ca-a66f-e462856c0b35",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "009a1636-5d51-4c5d-89b5-825589e42f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c47d65c-0a80-4e1e-8ceb-327c02200c8f",
        "cursor": {
          "ref": "8a03bf4d-89d7-4966-904f-612572eaf86f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5f7f3a33-f7e3-46f1-bcc3-bd8a35c2ccff"
        },
        "item": {
          "id": "3c47d65c-0a80-4e1e-8ceb-327c02200c8f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c046da50-5654-48d5-9a0b-5e22b745414b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa8a360-dbc1-465e-bbca-8944be44e43c",
        "cursor": {
          "ref": "b127419b-176f-4619-8581-3b1a87dbae11",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d7720fb-42e9-4724-a33d-0b43625ebac7"
        },
        "item": {
          "id": "2aa8a360-dbc1-465e-bbca-8944be44e43c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "13ea55f1-e7ab-4fd6-b73e-17f9cf42c6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9b529e-b631-4ead-9ffb-4c39177ad383",
        "cursor": {
          "ref": "c0a3e79b-1a39-4ee7-aa5b-8f245faa2335",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "812d7a12-cb0a-45d8-9b07-d0383043bafd"
        },
        "item": {
          "id": "2a9b529e-b631-4ead-9ffb-4c39177ad383",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec977d22-7662-4410-b874-5daf11e0bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e16328-5b84-4be5-af99-a3094038c128",
        "cursor": {
          "ref": "ea00d9d1-005c-450e-bfa6-679a0a0da0a2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8fc02665-4ad5-4530-a802-415eb289d773"
        },
        "item": {
          "id": "50e16328-5b84-4be5-af99-a3094038c128",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e05d7f3-d719-4be1-b85c-9a1365f62b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca40869b-1da0-48ff-94d0-8a1fda5023fe",
        "cursor": {
          "ref": "37c9076f-b8d8-4170-b75a-ba043f2e172e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3dbac9a8-3574-4d19-a908-82a0cf6422a5"
        },
        "item": {
          "id": "ca40869b-1da0-48ff-94d0-8a1fda5023fe",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "329cae6f-1cdf-43b9-97f5-fd06a5ed51ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d836fe-d9b3-4266-af70-e29e9edaddf8",
        "cursor": {
          "ref": "2927c577-ef11-4da9-9888-ba5c63a6ba4c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "310c4ae5-7082-4c68-b339-d63abfba1954"
        },
        "item": {
          "id": "37d836fe-d9b3-4266-af70-e29e9edaddf8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b5e230b2-9d9a-46f8-9751-5016208bf2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1c774b-e222-47b2-8381-aff225fc595a",
        "cursor": {
          "ref": "0d58a703-61fb-4fd7-8934-986dfe78090d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8802672d-a958-45f4-a87b-3a89cee38a59"
        },
        "item": {
          "id": "3d1c774b-e222-47b2-8381-aff225fc595a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b052b2f1-a9a8-49ad-abdf-851742852fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa75804-756e-4e4c-aa90-8b85fd91d338",
        "cursor": {
          "ref": "5ce87499-0758-4c32-916b-52cc96e1fa48",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2e106bbf-5373-4269-b18e-223fbabfc2b4"
        },
        "item": {
          "id": "bfa75804-756e-4e4c-aa90-8b85fd91d338",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "90cf449a-5144-41e2-966c-28f3ebcba1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9b993d-7fe7-48ac-9cde-5611c0e0c318",
        "cursor": {
          "ref": "da73d94f-e182-427a-9299-741849e933d1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "815268c8-cd40-4fba-a97b-4311ee385848"
        },
        "item": {
          "id": "8c9b993d-7fe7-48ac-9cde-5611c0e0c318",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9eafb702-0f72-4d7a-b190-a938fc94f65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8b5c0f-876f-4bfa-a30f-d95253fc50ca",
        "cursor": {
          "ref": "8ae6db6f-64e0-4714-a5ad-c0659c1ab9e7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d94d744-a0e4-4174-90a3-c17480231235"
        },
        "item": {
          "id": "7f8b5c0f-876f-4bfa-a30f-d95253fc50ca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c72d4bf-16f1-42c3-8005-b73ee81397fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3c70d-7b1b-424c-aa4f-3cc19e5bb058",
        "cursor": {
          "ref": "302195a2-591b-4a21-bc5b-b86925f641aa",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "184606ca-04a6-47f7-a573-fc1c94e9ad24"
        },
        "item": {
          "id": "c1c3c70d-7b1b-424c-aa4f-3cc19e5bb058",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d8273dd8-011f-4f1e-8f80-a9798523da7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da9058-d8e2-492a-a4ce-906d5756940d",
        "cursor": {
          "ref": "dd653bec-5b0c-4940-b10d-be02ca3c65ea",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eeb88b8b-96d9-4fdc-81e1-b0bed7b30fd2"
        },
        "item": {
          "id": "85da9058-d8e2-492a-a4ce-906d5756940d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d2e3ffbe-a299-4bbd-9667-1f7f8fdf6ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedf6140-0d3d-4144-8cc2-75aee0b6a07e",
        "cursor": {
          "ref": "78bcea7c-001d-4a10-a6be-98793dbd2b47",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "acd8ca9b-3337-4a47-8b94-3fd1f69fdb8e"
        },
        "item": {
          "id": "bedf6140-0d3d-4144-8cc2-75aee0b6a07e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "116ffedc-d129-41dc-a2bb-ba055d1ec496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2e49c0-d213-4204-99a2-1b6d968ecba3",
        "cursor": {
          "ref": "c512c9bd-c611-409f-90cc-3e605283445f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e46467a5-a3ab-40b9-b1f5-11f4f5a7c80b"
        },
        "item": {
          "id": "1c2e49c0-d213-4204-99a2-1b6d968ecba3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b4336574-ed08-4272-8065-9ccefe0f3675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e6530d-b211-4f19-8baf-9a385c513894",
        "cursor": {
          "ref": "d41556d6-c6e4-4598-b3e8-b934952ff02f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cfc3e4c0-c192-46d0-8f83-b63fb1e1cafc"
        },
        "item": {
          "id": "44e6530d-b211-4f19-8baf-9a385c513894",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9d21ce78-0a02-4078-933a-a51d7c467844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078d2334-e00b-4f13-94c9-a244af2b29c4",
        "cursor": {
          "ref": "250b915a-0af5-42d2-978a-49ebd8994ce4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cc350278-6d6c-45fb-81f1-195af03533ce"
        },
        "item": {
          "id": "078d2334-e00b-4f13-94c9-a244af2b29c4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "17b6509e-97df-4142-94a7-62d28a85eb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899f7435-e3fb-4f61-9f03-727421f9cc70",
        "cursor": {
          "ref": "cb605284-d0b8-4b3d-9f48-5eb902f78ff0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3666d527-64a4-41c8-94aa-9823c573fddc"
        },
        "item": {
          "id": "899f7435-e3fb-4f61-9f03-727421f9cc70",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8444c0df-838d-42c3-8d65-c4eeceb7a6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416d9c47-5b48-40f3-84c1-4f2beb79f7b9",
        "cursor": {
          "ref": "04de115d-fcd5-40eb-853f-5a1528f5f8f6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "716655f2-a450-4258-96e2-7ddfd2e2a065"
        },
        "item": {
          "id": "416d9c47-5b48-40f3-84c1-4f2beb79f7b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7d959a00-803c-4277-96a2-7b38e54f92b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80db605e-f25f-4a97-81ff-ad47bd53e414",
        "cursor": {
          "ref": "63ca9f6b-3bec-4f69-9642-a6892b64c768",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21b71728-2ff3-4be4-a096-fdd610549704"
        },
        "item": {
          "id": "80db605e-f25f-4a97-81ff-ad47bd53e414",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "715a7b4a-e8c5-4617-a5d2-a3d5a8e8f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa5cdab-73dd-49fc-ac58-c13e3c2e3216",
        "cursor": {
          "ref": "894100c0-699b-4689-b58d-078493a887a8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "775a4cb9-82cc-4174-a528-f25703b968f4"
        },
        "item": {
          "id": "9fa5cdab-73dd-49fc-ac58-c13e3c2e3216",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "606d0140-ec06-4ac7-b804-fb98e9d7485e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f425a1f3-4514-4e0e-bda2-445df41d8043",
        "cursor": {
          "ref": "15d5a3ee-ef44-4310-9cd9-24de7fc20f9d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7859077d-c67f-4b92-a699-329cf03c70b2"
        },
        "item": {
          "id": "f425a1f3-4514-4e0e-bda2-445df41d8043",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c9d6955d-2ae0-40f4-9eac-23f2741314d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9dc688-dc2f-4428-88f5-ba287404a258",
        "cursor": {
          "ref": "d034b710-4e20-4d31-ad0e-a1751cad377f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4dc9ed09-da4d-4075-87d0-11aa3948a704"
        },
        "item": {
          "id": "2d9dc688-dc2f-4428-88f5-ba287404a258",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "56bf376d-cf33-40c3-8dfe-8837a1a60b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148789b1-fee1-410d-b4e0-0ce8b2720107",
        "cursor": {
          "ref": "a7024a39-6aa0-48c7-a108-2c3ab88a635b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "36a4e93e-11e6-456f-9539-2ba4661bc876"
        },
        "item": {
          "id": "148789b1-fee1-410d-b4e0-0ce8b2720107",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bbdf4eec-c9a9-40ae-91c5-871494f5d6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f211a66-db6b-4865-a0ae-fc96620f28b4",
        "cursor": {
          "ref": "8b4c5abe-3c83-45f0-99d0-d1090d2f6779",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b1496dc5-d10d-48b0-a15c-c9101937379c"
        },
        "item": {
          "id": "2f211a66-db6b-4865-a0ae-fc96620f28b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "30fe12a5-6e70-458f-addc-714d264a0ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc4f26-499b-471f-a8e7-5b8489d23c67",
        "cursor": {
          "ref": "106cbf30-4cf1-498b-9611-433ee4fe9ac5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "364ed278-86da-4093-a2a2-741310238efa"
        },
        "item": {
          "id": "18dc4f26-499b-471f-a8e7-5b8489d23c67",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6da24900-3f44-4431-82bb-8114c9e704b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0c40d1-d017-4875-afe1-16ac1ee1cfe7",
        "cursor": {
          "ref": "a3b55847-dd75-4a7f-a180-5240b42144db",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "441c4ac4-dfc3-4ad2-8732-42b8e3c31f77"
        },
        "item": {
          "id": "da0c40d1-d017-4875-afe1-16ac1ee1cfe7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "15ab64a6-a62f-4d7c-9de2-c4c9027041d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2f06be-70d8-4823-a9c3-f03fac79c26a",
        "cursor": {
          "ref": "eed28064-7b98-44cd-9241-c2602738c7d7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e78df7b0-b979-43d2-a39f-3761b2caa61c"
        },
        "item": {
          "id": "3c2f06be-70d8-4823-a9c3-f03fac79c26a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "283f060e-131e-4df5-8a59-1023abf68ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c079bad1-b631-49f2-a848-babe12e4ac61",
        "cursor": {
          "ref": "70572179-18df-4ccb-97a6-f9c9236bbdde",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d9c05890-910b-48f0-b002-8048058aa883"
        },
        "item": {
          "id": "c079bad1-b631-49f2-a848-babe12e4ac61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0991298b-652e-460f-aa93-ec762759d524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad85c59-3a7e-4739-a58f-22c69c0177dd",
        "cursor": {
          "ref": "7e40b965-dea8-473d-96bd-3c41caf307db",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c42182fc-d0bb-4d17-8504-24e2225fcd6e"
        },
        "item": {
          "id": "1ad85c59-3a7e-4739-a58f-22c69c0177dd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a4aa0a57-9b3b-4e01-b8de-fb5e14f1561e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eea2b8-9d4b-496f-8fa6-38811f6e3bff",
        "cursor": {
          "ref": "5ebae08f-5153-4273-83fa-33419e9f1a63",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "72037da9-82e7-4ef0-8841-a5168def51bc"
        },
        "item": {
          "id": "b2eea2b8-9d4b-496f-8fa6-38811f6e3bff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "77fd820f-52b6-4056-b673-9a8c513337bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55c66d4-ae3d-4f95-8606-d89196db39a5",
        "cursor": {
          "ref": "d8b0564f-1007-45f0-86e2-c6318c717b49",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "651eff9b-fd17-4c29-9cde-7e5cb67ae832"
        },
        "item": {
          "id": "b55c66d4-ae3d-4f95-8606-d89196db39a5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af3fb204-6028-49bd-b1e7-eaa81164d3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad71465-e2da-40ac-a689-f2df2bc1a4fa",
        "cursor": {
          "ref": "79540271-1f9d-4e58-b4e3-148e43f8a918",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da69cc75-f004-4dfc-b162-bdb660706562"
        },
        "item": {
          "id": "fad71465-e2da-40ac-a689-f2df2bc1a4fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b0e2f6ca-41ae-4749-9dd1-4608bf31bd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae841d5-f90d-4b74-bcef-2ff798573999",
        "cursor": {
          "ref": "dc3868fe-e8dc-46c2-b832-cd8328015d38",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bb8d978a-148f-44ce-b91a-6a36166e722b"
        },
        "item": {
          "id": "7ae841d5-f90d-4b74-bcef-2ff798573999",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b0736e7f-754c-4389-bc50-3ee2ac10c2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f415f469-6b1d-4e68-b220-ca9c434cc7a0",
        "cursor": {
          "ref": "be4b074c-9267-4fec-9bf9-a29501b4dbf6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e415123-9b46-45b7-b170-294e29fadc4b"
        },
        "item": {
          "id": "f415f469-6b1d-4e68-b220-ca9c434cc7a0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4adea3f1-6794-4250-b227-c5e4e39de116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de99a1a-e0c0-45ee-9319-eca4022ded8b",
        "cursor": {
          "ref": "333214be-b96c-49c9-becf-f7a2f88425dc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "21136e2b-6e72-464f-b57f-8ff7ff5de5f0"
        },
        "item": {
          "id": "1de99a1a-e0c0-45ee-9319-eca4022ded8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f64fd133-a5b0-49a2-bbe5-6a80c25dac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3badb20-30a7-45a3-9291-0c70be11fdea",
        "cursor": {
          "ref": "9794c91a-4705-4a21-b4d2-cf30c6bfdda7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2860cdf3-58e0-47fa-986c-8399bd2f93b6"
        },
        "item": {
          "id": "f3badb20-30a7-45a3-9291-0c70be11fdea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0c8041a6-3618-4615-93d0-8305572f1958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796fcd40-7e4e-4fbd-9ea0-ccecdd577aba",
        "cursor": {
          "ref": "1f318ac2-5bd0-4098-b8c1-bafff1bcf644",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b86eed26-f774-40ee-b9c3-8239390b5361"
        },
        "item": {
          "id": "796fcd40-7e4e-4fbd-9ea0-ccecdd577aba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7bf74aca-4bc3-4254-bf3c-8bcbd3498935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feebb482-c443-43f6-b0d7-021353c143bb",
        "cursor": {
          "ref": "eb612b5c-9712-40fd-bd8d-d66a17609d63",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ddd40ebb-93a6-4522-bc75-165b85265dd2"
        },
        "item": {
          "id": "feebb482-c443-43f6-b0d7-021353c143bb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "25355ea8-3b32-4aaf-b1c6-8f492f6624ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dff7df-bac8-4841-b438-79f17f849825",
        "cursor": {
          "ref": "e52edd00-bcde-450c-87d0-b077ef711f9e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02e558f9-6325-4651-aaa3-6d8da6e20ff1"
        },
        "item": {
          "id": "83dff7df-bac8-4841-b438-79f17f849825",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "650a4b1e-8eae-4d5e-aafd-efee4b1987ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41d231-87a1-4686-bc26-2c2543db51f0",
        "cursor": {
          "ref": "fdf8bb15-0340-4dfe-9f2a-ef3032e153c2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1337fc81-088b-425e-9f11-2b38754a4d7a"
        },
        "item": {
          "id": "2c41d231-87a1-4686-bc26-2c2543db51f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fba862fd-b549-45c1-af6f-9f692ae537ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782649b-f087-4fd1-9e14-eecfe45813d2",
        "cursor": {
          "ref": "656ff88f-f59b-4ead-8e13-ab27388423b2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2d978cd-4267-43c5-b5b2-067d4dc2912e"
        },
        "item": {
          "id": "a782649b-f087-4fd1-9e14-eecfe45813d2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7f83a6d4-c949-4c6b-bc8d-e96345d4bf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1921d815-394e-4d65-985e-6f141d7ce7c8",
        "cursor": {
          "ref": "432ca601-2764-4eb8-84ae-403d7509162c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d913ec5-4622-42af-8d2d-05838a54e61d"
        },
        "item": {
          "id": "1921d815-394e-4d65-985e-6f141d7ce7c8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "329ee875-2c5a-4f56-9527-2e9f5342ccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ec086e-42e3-4058-8cff-34202db84c0a",
        "cursor": {
          "ref": "2cbaac0b-25e4-42b1-b2ff-545a5be9f6e1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "27d88cf6-3bc2-452e-aa15-d0c7da93fbb2"
        },
        "item": {
          "id": "49ec086e-42e3-4058-8cff-34202db84c0a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "60298053-5cbf-485f-ba84-4d574ad074c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafcaa5d-2674-459e-ad08-943fdd1a1de8",
        "cursor": {
          "ref": "02230a6c-7114-433e-9051-4c2fa8e9a2a9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c12976c7-71ed-4cd0-ab15-faf3e333e80e"
        },
        "item": {
          "id": "aafcaa5d-2674-459e-ad08-943fdd1a1de8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d2b0fb4-97ea-48f1-b424-5a02344e6569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5456ae5a-fa3e-4aa8-aafb-5b7b1d8c8712",
        "cursor": {
          "ref": "1bfd40a0-832f-46d5-876c-5894b5889bff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "08837744-097b-41d2-ac1b-1fa4853ecaae"
        },
        "item": {
          "id": "5456ae5a-fa3e-4aa8-aafb-5b7b1d8c8712",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9ccc2441-5e61-4f5c-a0ef-f7f3e632a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f676bc5-b563-4d5c-b7fe-a8666e3e9ca3",
        "cursor": {
          "ref": "0d7d092d-a9d0-433f-95b7-ed73211ec2a3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "433e9dd9-798b-4391-88dc-b436a088a0b4"
        },
        "item": {
          "id": "1f676bc5-b563-4d5c-b7fe-a8666e3e9ca3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dcfbcc23-0b34-45c1-b417-5e97bf82ad67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f89ec-90d1-433e-a175-a7de159cbd66",
        "cursor": {
          "ref": "d3ba91db-abe0-4ec4-8ec5-efd634da2492",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "796aaa99-a9d8-44b9-a84f-02e4c1ed0f25"
        },
        "item": {
          "id": "8b5f89ec-90d1-433e-a175-a7de159cbd66",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a5d79351-b844-40f9-9041-aceca7b2e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b409ee-a7b7-4d15-8759-e6c2f3629a74",
        "cursor": {
          "ref": "1870cb89-4843-43c8-9562-19f35d0488ac",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "51445299-5e82-430d-b2b0-abbf5ae1d720"
        },
        "item": {
          "id": "54b409ee-a7b7-4d15-8759-e6c2f3629a74",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "892f57c2-055b-4403-b221-60f17f3598b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495362f7-9429-48fc-b061-89232bcc21ea",
        "cursor": {
          "ref": "eb57f438-3363-4aef-a790-cb11fd8135bf",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9cb54f3c-0334-4538-8798-8a3c46eaa4a4"
        },
        "item": {
          "id": "495362f7-9429-48fc-b061-89232bcc21ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b0aca7d3-1555-4f50-9178-b68300ee8291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011f8d74-655a-4a1b-b769-049ab95f74d6",
        "cursor": {
          "ref": "d86efddd-c63e-474c-aee7-c4db0900fd18",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2078fe4b-94b8-4756-b8b9-9aab0a188ef7"
        },
        "item": {
          "id": "011f8d74-655a-4a1b-b769-049ab95f74d6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7e7b3d1e-26eb-4f8a-a47a-19049004ad85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97573ee8-5e3e-4cb9-b744-51092a5e8430",
        "cursor": {
          "ref": "db85abce-a705-4622-8552-afc2c4a59e5a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a70bc85a-6cb1-4f05-9635-dbca55a847e5"
        },
        "item": {
          "id": "97573ee8-5e3e-4cb9-b744-51092a5e8430",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2bfc4eb6-555a-4650-9b99-9546039cfc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00265938-cce8-4a73-a38b-85db4a8375d8",
        "cursor": {
          "ref": "cf013f1e-1609-4d14-ada7-94a9f930dcee",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1d182774-ce13-48d4-929a-a16aaece4e06"
        },
        "item": {
          "id": "00265938-cce8-4a73-a38b-85db4a8375d8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b7f530da-cf8a-453b-9b4d-9c9b80fd14f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393e2189-57b4-4831-9b3b-766886388c4f",
        "cursor": {
          "ref": "794edfc2-13ee-4e66-8e66-0dd01eee22cb",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "70d63ad8-e7d7-467d-b69a-a7b328189003"
        },
        "item": {
          "id": "393e2189-57b4-4831-9b3b-766886388c4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d918215a-30f8-44ae-b502-8451ee904913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d64e22-8efa-4d10-9988-54507d329120",
        "cursor": {
          "ref": "521d1ece-8ffb-4993-a86f-76ec166de8d8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "33193823-ad74-4715-a460-86d8db01c70d"
        },
        "item": {
          "id": "33d64e22-8efa-4d10-9988-54507d329120",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5f32bb86-7d74-49a6-8658-384451d22a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae62bb7-fe94-44a4-a848-68b7757c9002",
        "cursor": {
          "ref": "06600e9e-de0e-4d2d-b203-5ae4827a8778",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6eff14f6-671a-4ab5-acf8-36e265f29d6e"
        },
        "item": {
          "id": "7ae62bb7-fe94-44a4-a848-68b7757c9002",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df589c75-8dcd-4784-9818-6f342c5939b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ac455c-764f-4d74-9265-fb8caa331090",
        "cursor": {
          "ref": "3a30f7ca-348a-48f0-a689-cf25c90978dc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65dea021-3dfa-4bb2-86ea-879f0f5a2b9e"
        },
        "item": {
          "id": "d0ac455c-764f-4d74-9265-fb8caa331090",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eb339dc0-815e-4f6d-927d-a7d3cf7b2f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ada9f2e-cda7-47e6-b9f2-6fea95fe9b5a",
        "cursor": {
          "ref": "294878fd-de34-4b6f-b360-e2afac6d42db",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c8a37bc3-73be-400c-b0f5-4383941709ca"
        },
        "item": {
          "id": "2ada9f2e-cda7-47e6-b9f2-6fea95fe9b5a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "25534126-591d-4d11-9df9-e1b3380e980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a31b350-d39f-4d2e-bc9b-8476cee503d4",
        "cursor": {
          "ref": "7eb9cdc2-bff5-4e1b-914f-5fc1a67fec4a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "33054a44-2c10-4ad2-8ba7-3889375b4595"
        },
        "item": {
          "id": "4a31b350-d39f-4d2e-bc9b-8476cee503d4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1832ce80-b53f-4155-8c5b-4159ff7a566f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cade814-ef06-46a2-a5b4-3c21617c4d04",
        "cursor": {
          "ref": "45b95609-b87d-44c4-ae52-6bff6b4e01f4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e74e452f-079d-4021-9543-de0d8e61b3dc"
        },
        "item": {
          "id": "7cade814-ef06-46a2-a5b4-3c21617c4d04",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9944ac3c-f95e-49df-baa0-73564fd01e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc75f07-ea51-4106-a870-5e007dc29d12",
        "cursor": {
          "ref": "e7ab2f6e-fead-4891-b655-de861f32e62f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99bd05fd-b697-445b-bd24-d89cc7a95eaa"
        },
        "item": {
          "id": "dbc75f07-ea51-4106-a870-5e007dc29d12",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3a5adedf-e317-43ce-949d-06bc08f98c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e48c45b-503d-4f51-86be-c4bcdbc614ef",
        "cursor": {
          "ref": "922efb0e-d5d6-49bc-85a2-2011e9fd4cf2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5991e54e-d369-432c-a67b-00074387dfec"
        },
        "item": {
          "id": "8e48c45b-503d-4f51-86be-c4bcdbc614ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f23c4335-6d35-455c-a8d0-9e3c16b98be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1032534-5c78-4e19-bc08-4e5b06f17f2b",
        "cursor": {
          "ref": "c519ffb8-d3e5-4983-b4fa-771d4e020e36",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1803afcb-d619-4b60-9af4-78165f5b3cf0"
        },
        "item": {
          "id": "e1032534-5c78-4e19-bc08-4e5b06f17f2b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "76b005b9-51df-4b05-8565-40886eddfeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2851d77-50e3-4f68-95cc-ed372b3b96bd",
        "cursor": {
          "ref": "444a475d-7011-4f2e-a04c-619903a894e4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "374677d3-76e1-482d-a890-14d1ad0cc540"
        },
        "item": {
          "id": "a2851d77-50e3-4f68-95cc-ed372b3b96bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5e2bab7-3ee7-42c9-aba4-bfce12a94759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e467a-7ab2-4248-b61a-32e78aa1533b",
        "cursor": {
          "ref": "796501fc-653a-4ce0-be7f-19cfbefc4670",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ca66ff80-3243-4ee2-9320-dc671adbb077"
        },
        "item": {
          "id": "085e467a-7ab2-4248-b61a-32e78aa1533b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "85f46263-be86-4061-9980-9991fd5853a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dab890-8b59-4094-b154-b089892270a6",
        "cursor": {
          "ref": "9829a9c0-e7f0-46fe-b60b-883530344ba5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2810cbcf-1e6b-4ab8-8118-be205e530bf0"
        },
        "item": {
          "id": "71dab890-8b59-4094-b154-b089892270a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a649408e-2de6-4373-a47e-15121f4611f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91ee9dd-fcbc-46a4-bc0c-ed837c6c42bb",
        "cursor": {
          "ref": "c154f98b-90ad-43a3-ae4f-55a0e92e5cc9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e1bd642-63da-4890-9ee7-c81afc1f837d"
        },
        "item": {
          "id": "e91ee9dd-fcbc-46a4-bc0c-ed837c6c42bb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fae2a8ed-ef0b-461f-b6fe-f4932cf98971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a704b51a-0f1a-479f-a329-41a3f0e1587d",
        "cursor": {
          "ref": "ad03252b-9f7c-4f46-91fd-0cae28deed62",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c164f9cf-8085-4f01-9c6c-7ed1aea5a895"
        },
        "item": {
          "id": "a704b51a-0f1a-479f-a329-41a3f0e1587d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "905aaa1e-7d97-433a-a1cc-05a2c6673927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777d4cf-4562-41fa-819b-b13d8893e5d2",
        "cursor": {
          "ref": "6847ffec-c202-4bb8-833f-45a51f3541dd",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d1676ec1-f9bd-4f9e-a93d-2667968fb175"
        },
        "item": {
          "id": "1777d4cf-4562-41fa-819b-b13d8893e5d2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6c26e2d9-8af4-43ad-a3d6-811bedf902e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb60b4b2-d894-4417-9d03-083ce3575bff",
        "cursor": {
          "ref": "a1684a21-8f2d-48dc-8930-181a78f7b0c3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4f5fbcbb-aa29-44ef-84d5-c8cd576a32b9"
        },
        "item": {
          "id": "eb60b4b2-d894-4417-9d03-083ce3575bff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b071f3b3-bc23-424c-abe1-04fc1da3b52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6e7a74-51ff-4ee4-8998-0365716111ae",
        "cursor": {
          "ref": "fc5ab3c0-72fa-46f7-a890-38a48389c481",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a58427ab-4eae-4fc7-9414-046383d747a4"
        },
        "item": {
          "id": "3d6e7a74-51ff-4ee4-8998-0365716111ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5edea8bb-4241-464e-bf6d-a12561c880dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e05d857-448b-4398-a0c7-3e6d80e6e520",
        "cursor": {
          "ref": "a10d6b27-eafa-4460-afa5-c9c6f4607b77",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "62e62912-a035-4e6f-9d11-3ceabf3bede1"
        },
        "item": {
          "id": "6e05d857-448b-4398-a0c7-3e6d80e6e520",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d30c3029-5560-4881-b027-3d491b1746cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a23902-d64f-4a2b-8e2c-fb81bd733237",
        "cursor": {
          "ref": "8d28722c-04a7-4139-bde3-517331957c69",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f181eb7b-962e-4e29-b201-a5fe38e6f51e"
        },
        "item": {
          "id": "40a23902-d64f-4a2b-8e2c-fb81bd733237",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3895d383-92f7-4949-9f0f-fe08db387bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d782a4-df8c-413c-be5b-939a131df4c9",
        "cursor": {
          "ref": "7e6336b2-d3c5-444c-900d-5af0d893d282",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "46ba8363-972d-4bf7-b1fe-c448d5bb6c4e"
        },
        "item": {
          "id": "d8d782a4-df8c-413c-be5b-939a131df4c9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2ae25887-029a-4820-9523-aaafd43dd9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20439e55-00e7-4e4f-87cc-8c7dc0782f5f",
        "cursor": {
          "ref": "a8ae173a-dcf3-4edc-940c-c242de93aa2b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9559795a-8fe0-4ff9-bf9f-d155b5f418c3"
        },
        "item": {
          "id": "20439e55-00e7-4e4f-87cc-8c7dc0782f5f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8354b04a-bbc1-4b40-b3f8-dc3e5b9eff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c3db96-5d27-4387-9327-024baf5654a0",
        "cursor": {
          "ref": "4d1805cc-50b3-4448-89da-85cb330b81c3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8c0363c-802d-4ef3-8903-161985c80f1f"
        },
        "item": {
          "id": "99c3db96-5d27-4387-9327-024baf5654a0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0885715a-8eb4-4d7e-aeeb-21cd86585e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b6a587-bd4d-4c12-921c-cbe88da6a333",
        "cursor": {
          "ref": "aa01817f-51d3-490f-a99d-d7514b74ca3b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "15d648df-300f-403c-9f9b-f7f4c8678a0f"
        },
        "item": {
          "id": "69b6a587-bd4d-4c12-921c-cbe88da6a333",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "39538770-dd63-4f62-8222-4a1f7c241627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57138a97-afe8-46de-82b5-5d1f5c995f83",
        "cursor": {
          "ref": "f2bbe0d0-880a-41fc-85a6-7f8e96cde5e3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "518210c2-7390-413d-9622-397217036b00"
        },
        "item": {
          "id": "57138a97-afe8-46de-82b5-5d1f5c995f83",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "de7690e7-db00-41f6-bcad-2b2f46bf18bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a46bfa-cc4b-4c36-93e6-760d81fb3897",
        "cursor": {
          "ref": "d1e89ea5-e899-4eae-8854-cdf8d9bab99f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "db0d2fab-8baf-43b9-8b85-9f7b5ad35ef7"
        },
        "item": {
          "id": "02a46bfa-cc4b-4c36-93e6-760d81fb3897",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bcdad0dd-31ae-4c57-9c14-7454d5f89149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9b90db-4d62-4680-96ce-abe77261f76c",
        "cursor": {
          "ref": "1ddb7099-77af-4d94-b442-39d2f4a40f99",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "64cd9eba-d836-4164-bd3e-ee76bae1d32d"
        },
        "item": {
          "id": "0a9b90db-4d62-4680-96ce-abe77261f76c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e78d360-3a17-4feb-bf2c-939fff0a562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2e98a1-5feb-4d45-920b-2d0ba1be01fd",
        "cursor": {
          "ref": "f4c1a3ff-047a-449a-bb66-0717933c3bf8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "212b78d7-c6b0-4cdb-9c5e-a73cb1d372d7"
        },
        "item": {
          "id": "1d2e98a1-5feb-4d45-920b-2d0ba1be01fd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e57451f-ed79-4403-ad7d-b647f61322fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919a52c7-d991-4c88-8c9c-9856c1dea2db",
        "cursor": {
          "ref": "46fa4e05-2a02-46fc-bef5-d1b8bc7ad937",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9f1c25da-9af9-4487-9a80-db16b5e53d80"
        },
        "item": {
          "id": "919a52c7-d991-4c88-8c9c-9856c1dea2db",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a11362db-fbf5-42b7-a369-b8a3efd1d1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733fefe4-bcd8-4e0f-9b58-81d58d4500c3",
        "cursor": {
          "ref": "eb32eb9b-e275-42f1-877c-67b19528a34a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "804cfdab-c215-4d93-bf61-00ffcae97bc1"
        },
        "item": {
          "id": "733fefe4-bcd8-4e0f-9b58-81d58d4500c3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1346bf32-4649-4333-95d2-cacee5d3b670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ac0dfa-5658-4b31-ab0a-40be70c37b4d",
        "cursor": {
          "ref": "9b4f80eb-d6e0-45a4-b15c-13b367d57fc9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "78ef2dc2-5d8f-408c-9c76-6226b35032de"
        },
        "item": {
          "id": "61ac0dfa-5658-4b31-ab0a-40be70c37b4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f7782ec3-0750-4797-9e77-13ddabefd512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d9399-4314-4ac8-9cd1-4670eb4af81e",
        "cursor": {
          "ref": "f6d833e9-35c8-4026-94b8-fc7aa0246e41",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9e809b5d-cd8a-4cf2-be3c-c2a1a0b76599"
        },
        "item": {
          "id": "907d9399-4314-4ac8-9cd1-4670eb4af81e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8ee72040-f870-4c48-a711-d2fe583663a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fede5d91-b2ab-4908-bd93-0fd235ac8b14",
        "cursor": {
          "ref": "6385cf2f-56e8-48f4-9323-829f7e8a889c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3e502e9-ae80-441e-b6f2-ad4970daedf3"
        },
        "item": {
          "id": "fede5d91-b2ab-4908-bd93-0fd235ac8b14",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e0dc8c50-3dd9-414c-b880-c955e059839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e9a116-0718-4aeb-9378-a23fa6cd0484",
        "cursor": {
          "ref": "3c4e1db4-b286-4bd4-b6ed-ed1d28ba55e8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47b884f6-04e7-49b0-9570-a5993563f597"
        },
        "item": {
          "id": "12e9a116-0718-4aeb-9378-a23fa6cd0484",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1eda6585-5b22-4187-9cca-f520dca09c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e20c670-d2e1-439a-9699-0fae674538ca",
        "cursor": {
          "ref": "f3752825-f1a1-4ed1-a26b-c5ab04bfcf8e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7323c940-3b04-4149-8b3f-91b1693a4a9a"
        },
        "item": {
          "id": "7e20c670-d2e1-439a-9699-0fae674538ca",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "329d34f7-2946-4c3b-bb40-d75414fe2812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2b5e23-173a-4747-b93d-8071c6529d28",
        "cursor": {
          "ref": "c76c312b-d815-40c4-a399-a8c00f01a7f5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "891e27fc-29dd-4d93-8104-616f41086c14"
        },
        "item": {
          "id": "ce2b5e23-173a-4747-b93d-8071c6529d28",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2c69aa83-5d19-4226-a10d-734c9481cd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8a0eee-567b-4a56-8330-8fbcc6aba81b",
        "cursor": {
          "ref": "104d6363-fa2d-41a4-8c3f-5545d5d2bda6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6471ee21-2805-4c04-913b-45918a62bfd0"
        },
        "item": {
          "id": "2a8a0eee-567b-4a56-8330-8fbcc6aba81b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8fa566ff-bee4-405a-aa72-8e4b5339ceb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358e8b95-7143-4733-920d-1a46caec7c9d",
        "cursor": {
          "ref": "61e9fa74-bc73-4049-ac17-aa85997f748b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "06af27f1-5069-4158-b0d5-72ef4e6b76a2"
        },
        "item": {
          "id": "358e8b95-7143-4733-920d-1a46caec7c9d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "920ef6ec-c9b6-4821-b6d2-4a0b98ffc111",
          "status": "OK",
          "code": 200,
          "responseTime": 2262,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbaf685-5024-4414-8f87-130f8e6f9760",
        "cursor": {
          "ref": "9cbec89c-feca-4846-9674-b16fe408b8a4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b61047bc-96e4-437a-8cdb-1f57e7a56e93"
        },
        "item": {
          "id": "ccbaf685-5024-4414-8f87-130f8e6f9760",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3d1e678b-4bf9-46c5-b161-3d4a10bb64c1",
          "status": "OK",
          "code": 200,
          "responseTime": 2830,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "355ad2d2-9c8a-4c2d-ae7b-f669b12a69df",
        "cursor": {
          "ref": "7d72197e-70bf-414c-8308-1f3d5acbdb82",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7168b9e8-8c02-4540-a546-a3390b49a334"
        },
        "item": {
          "id": "355ad2d2-9c8a-4c2d-ae7b-f669b12a69df",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "28d4e995-9897-4040-aac2-0a7de312f02c",
          "status": "OK",
          "code": 200,
          "responseTime": 2290,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c1726f-5d19-4bea-8fc4-15a610174aa7",
        "cursor": {
          "ref": "cfa16cbd-42fc-44d7-83a8-5ad6a0c375bc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7601e0f9-82de-4469-b9b9-0146d0771a6b"
        },
        "item": {
          "id": "93c1726f-5d19-4bea-8fc4-15a610174aa7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1429ee23-d8b2-4aed-aec5-080272b13c0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 390,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c1726f-5d19-4bea-8fc4-15a610174aa7",
        "cursor": {
          "ref": "cfa16cbd-42fc-44d7-83a8-5ad6a0c375bc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7601e0f9-82de-4469-b9b9-0146d0771a6b"
        },
        "item": {
          "id": "93c1726f-5d19-4bea-8fc4-15a610174aa7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1429ee23-d8b2-4aed-aec5-080272b13c0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 390,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b87d631-bde1-4b70-8e1c-e9084d9023cf",
        "cursor": {
          "ref": "58022014-56a6-46a0-8612-9ef6208c7ee8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fd4f3a4b-e3f4-473b-80dc-239572cc0842"
        },
        "item": {
          "id": "9b87d631-bde1-4b70-8e1c-e9084d9023cf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ba1c94e3-a9c3-4616-b979-19eb6baf710c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5289ec-e772-4a33-bbed-07c777518dd0",
        "cursor": {
          "ref": "1974a8be-b37b-4af9-a137-a7fea3970e85",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ec5d37ce-3a16-4fe8-8288-0946b0632a1f"
        },
        "item": {
          "id": "2e5289ec-e772-4a33-bbed-07c777518dd0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3e18a293-5a1e-4ae9-bc62-778f7d3999ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}