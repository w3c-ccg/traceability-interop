{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "842bccc1-9b43-4f18-b1dc-915c32a5c257",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5e6a0052-2a61-4701-83f4-37cc99e2fb1d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79697b94-2d5f-4b7f-b8b0-778621c6f796",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66aedf4d-69f5-46a0-8c63-a2b934828fbc"
                }
              }
            ]
          },
          {
            "id": "a9ae1c47-17e0-49ec-8027-d86e53b55ca7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63468836-4846-4259-a506-76adda2fdb59",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c6d2f72-c5b6-4cc5-a12b-bb81d6ff2108"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aa1a3c1d-89dd-444d-8bcb-8014e499a2a8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "44d5e7dc-3958-4c4c-8d8c-9ad19a661f6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9dbb9bfb-cac8-4491-89f2-e719622c63ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d14894-c8fd-443e-8285-5f818953fe11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac1ee8fe-9eea-4399-bfd8-08fb9525844a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "280a2d3c-ffd4-4ab9-9b3f-1feebe76c2d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b99338d-4003-4f98-90bf-7a7df5e4d2d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "796a7cef-8694-4144-af5f-254df7fc969c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3912d0f9-399e-4c00-ab6f-ea6558a23d36"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcf2abd0-823e-4d73-95a7-024d321970a7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9f50dc4a-6dee-4704-9ee5-3a517f7cd124"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9cb14a8-2381-42a9-8282-21390e919d2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5553c68a-86d1-4bad-ad13-5aef3800c6df"
            }
          }
        ]
      },
      {
        "id": "14a9df3e-bd66-49ae-a25b-6f4f8037f5f8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2fee277d-d22c-4d77-8b5f-f712093e0bd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3d41eda-f77d-4458-8400-94f3c116d8e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb2fb869-ed96-4467-8b75-6c106257cf80",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d33e10-7ba8-4ea8-a45d-29ff2da13364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "943006fb-418b-4a47-9ee1-32cfd8b4724a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e13565-3caf-445e-9bfb-50dc2567293e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f817b769-c527-4418-b21b-6bada1aae4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "024cbe78-079d-4d9b-a795-30cbfc8b25fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa29e59-8e5c-40ab-b47b-a8feb6d18b33",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2df7a8d-8073-4f0f-b355-e1c512df3737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95100e4d-5272-4ed3-b624-c143f3e5b45a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6900bd2b-568a-496e-a45d-401ec37d30c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53a676de-4475-469e-8948-904509f509fd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9725a309-0c23-46cb-a911-55242af943af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e36eb78a-3162-42bb-86a5-fef9445126af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f31b9-16a9-41f8-95a8-c0f5cc2e4bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294ea89e-cf3d-435a-8ac9-db4100d1484f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6ab4f401-00ac-4ea5-9f64-bed4baff6481",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48a709ed-0e6d-4c89-a4c2-ace47c9a21db",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f021bbf-a4fc-498d-98a3-5828ec68062a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7d503f11-313c-4b6d-a4ce-9db04eea3b06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2ae6f6f-ca65-400e-9529-a631f928377b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d84cb1f5-9bf7-4912-b4c9-debf0463a5c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7234dd2d-6e9e-4330-9703-da96898a3b78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1aa4cd26-8d9a-4b58-a2d1-33bffbe99cf3"
            }
          }
        ]
      },
      {
        "id": "c6ecfe4c-2d99-4c22-95a0-9122c425df86",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8f9d11bc-4e70-4a02-bae9-72f1db8e1f21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d057e9b-0dc3-4776-938a-c193311a666e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "104a1ef9-a188-42fa-9dfd-8f34c15b85ad",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48929364-9478-483f-91cd-94801a2d89a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44483135-6e6d-42da-9a52-b5dc466e3b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c03455c-246a-4578-8027-835029ad4e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92807c88-9fd9-4352-b48f-1ace38e41716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bbcff6-abe8-44cd-8436-3e4b32fc6370",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec5da69-d466-4295-a45d-27430c57f2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b520a1f-ffb1-4ded-9c63-d3560f3fa921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a088ac51-b568-4482-a46f-ab533a70af4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76f542da-b83b-4346-8f97-2f00a9c31fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73aed98-891e-4946-83e7-de3252c710e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0542b64-3146-4635-a42d-13ca3f31ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980b6f40-6f6a-4857-9b74-1b3a6d40f208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e32e77-e542-4383-b4ec-ecada12586f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a58ca74-3fa8-4949-ba74-3f6fdb59515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf0fd4f-4078-43fa-84e0-53003c6f6abe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd21c2-15e6-4cc3-af71-f28c8cb908bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb08bac6-a8be-49ac-8095-53cd3226520e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db525130-fe53-4f40-910c-033cec635f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c36b9478-faa3-415b-9ccb-6dc352f290e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671c448-3d85-4d7d-bd7d-aadcfcaedffa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba490e0d-99ed-45af-bb94-29cf272a4993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb5a18d-5d2d-4e4c-8a14-3ecbe9b4fd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90da43f-7ea6-476d-902f-4df892c92b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf373a2-4600-40ac-bdbf-dcdcb312cc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3bddde-09fa-47f1-a411-9e929dcfcfec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65336bb-c18e-4c4b-8543-8c72bdf4f310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ee7fd4-189a-451b-9773-4473c81ad677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961ed99d-8033-4a82-845c-06efacc4d1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee4fd595-4afe-4491-8267-efc96aa14e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89a0068-199d-47c2-a68a-14b50232e1ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf7faee-493f-4394-aede-5c7410661b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33dde3d-dc61-48e8-a42f-d79c6233b418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe02ffd-cf1a-4806-a445-be11eb753fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85d41dcc-5be4-4897-a6dc-6fac4a2224e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6767657c-c1fa-48e8-90d9-f150478c3169",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc22b8fa-20cc-428e-a377-1ba51920f3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1b6ccc-373c-4f54-b46c-b54dea9fcb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f901a-d6c7-4968-81b9-dfdb6c4f2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a41618b-97c1-45c4-a237-c1724fdc9b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304a916b-c068-4f15-8751-e3aaa250afff",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ce8473-a146-4cd3-89da-ec5f10778b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf92028b-31b6-44be-a590-de0bdafc64af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2064d825-018c-40c8-968a-4cefd09ff1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aff00663-f04f-4ef0-bd58-a94bb35f5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b605bad3-36cb-4c95-8ac2-d61114a55700",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1313f3b-5a7f-4db4-9b9c-667216c9c3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32480d0d-9089-4f6f-95c0-8c405b723df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fb7018-8870-4d8d-bb27-8d246e47894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b493b2c0-6f7c-411d-93c3-4893e85b1f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da2738e-b45e-4f59-9b2d-981ede97e0a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146b77df-9123-4516-8b69-b8e735855148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d723adb2-5790-48d1-b21e-c239400642dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179b5124-5f3c-4ed0-92aa-88bd0afc25ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415acf7b-2f90-4b8b-9c50-60b3d52c9726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5322bba-5426-42ab-9ede-d8771e5d3de7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2688de-ac3c-40da-bfb9-c4c52aded9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74292c54-18ab-46e9-843e-01fb2fc3be15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60277ae9-db10-46f6-a250-b87e38bdbf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "543b783d-8f82-433f-8d0a-c5d6233adbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc79404a-c6b9-4cf1-900c-f42a462b616b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae35a98b-e6d4-420e-a37e-3882986bf5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e181ef-0eff-483e-8380-27f8193b5c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d32082c-f505-4e44-84aa-6673531ca3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e25c094-44b0-4511-9e39-7c372d0e591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8742a1-5c3e-4966-b7df-dc53a7333e4a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d69c43-915b-467c-aef7-4f8ae59c679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adceee75-21f9-45ca-afb1-c86b7311d6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85976549-828e-49ff-9c43-8519ae4749e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01481d6b-e1fa-471a-9ef0-3ce28bd49dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a7fae-b765-4311-8b74-55e41033c1a2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7772f14-7f8e-4f60-bcfa-67155b5da42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb75c8a0-4c8f-4350-9268-809ee9e945b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bceae6-0ed0-44c8-a02c-1982a11a8892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8433839-ee56-4202-803a-0573c7d0bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71aa37b-379f-42ae-859c-57f6a61881a8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf19e4a9-e7eb-4e6d-a029-1c25268d3872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39442d9-6b3a-45ab-a13a-fd958f61b255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ba8be8-1d0e-4f77-bc79-56567b275414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8956849f-9393-4f1e-a184-fa4a845a1642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffb01bb-6368-4333-9ccc-540760920cc7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b6b0ab-bfe2-4941-8946-ffab95d8aec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5b63ad-9c35-49ad-b3e0-b594aa715eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a519b8c-36a0-4ef8-9cd7-edaa21cc1daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc9f6b5-f1e8-4827-aa27-eea3ace08d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6666352-955a-45c9-a614-a7a68156b83a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c07af11-d619-412b-90e6-96ba883010c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bdbaa7-850c-4878-82f6-6bedb1601aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d435ed-a59b-4d73-b3d8-72a4e299fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c615bb3c-b503-4163-b231-24bc588eee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2726d30f-c22c-4f40-b349-07b53925d223",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addce21f-3bf4-4ffd-bd2c-80418b145046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d35acd2-3aa2-4047-9a5c-b53a23732a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825aedab-1ba8-4482-b679-7cca27eb612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cd8a7b-482f-4d69-8825-0b71b185ac30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90802cff-364e-4f47-be64-84897c0d3082",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6800f735-4df3-4db1-99ee-be0736595a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc848cd7-f83c-4795-ab66-87d0524b88cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712d25a0-4e61-4a7f-8b72-9a508b282c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97671edd-6d04-4271-8c23-2459b04960c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3fb2fb-6147-49ce-ad69-7646bf8cb450",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04a64ea-59bb-4321-9351-3fac2820dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006eeb8d-cc8a-401c-9534-a0180b058209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24e4c3f-17bd-4ccb-b847-67cb5df33b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ff1dda-3b9d-4ba0-94d6-1017f48c80a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5834c-3822-4008-bba9-dda63bbf7022",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b266a102-7cb7-496a-b53e-03f12dd08b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425ef430-2ba0-4912-bd27-b7c8f3ea03f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a3b30-bdcd-42ca-991c-ee8603f0e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4ff099-e118-4962-bbbe-1040b0d17ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef612827-98a3-48d1-9114-c83917f7600d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0040804f-1487-4d96-89c1-44ea9693f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c270e4ce-1034-4b13-bcc0-7abe0248b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9976e78a-4798-47f6-a958-c23c70e3a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de8cb0e0-9ded-4b84-aa6b-f4b884fffe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f8ffb8-eb1e-41f1-ad31-f7192c2ada78",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53307ac3-0615-45fc-acb9-556060c93b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e38812-01db-4929-b0b0-94463241d656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33233a4a-62b1-48aa-a26f-f6d0e90300a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "255c8829-e4f7-48b2-b40d-540dc7fb40ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875b5a07-9723-4739-8267-37e4e42c1c2b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87538aa-efeb-4107-aaa2-b216e12141d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ba0970-96ea-4a38-8b83-ad00f309f4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef22f832-e1e1-4a69-9251-9e9fb8538f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9f3156-250a-4a0d-bced-cd8c7537a003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313fd9c1-50fe-4c61-904a-2dc7ecb8aa03",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c16e119-1b7f-4915-bd1b-fc59e699aff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58d6301-256d-47ae-8e91-9108b2458e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b548b4-da6e-4cfd-a5ce-858bf437dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d5c229-762a-42a6-b487-e5093c2f1cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122fc7bc-f7a0-48e1-a2f2-cc4e19e9d89a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d9325a-8b60-4858-b9d1-7fc6de64bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3f452e-19b7-4b44-a69f-f28aec40a944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb90e641-4619-4e67-a17f-fc79fa3748d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e6b3a2-595d-49fb-a736-6368e1b99e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d113eeed-9569-42c1-bbc2-5144f8309a98",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f81ec-04a0-46bb-a54a-84036263e9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d961c7-af98-432b-b40f-4cb3d70a3e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42271535-c2f5-4326-9667-adf1f1e701f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "989408ba-0153-413f-9e1e-51df6276b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1bd849-cb54-4e99-8881-8d5a29964b58",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d1d4b-2f5e-4725-ad3b-bc72b6502852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d0176e-c241-4a8f-9046-95de34f9220e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33483d7-9db8-4728-b249-fb2e6ece76e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04796cbe-ab63-440a-9bcc-b78c62ce3447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea8fdde-def8-4946-810b-8b69ff5090e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a422494-59ad-4959-aebb-45cc3cf0e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1833eddd-7fd4-416f-a219-2bff7e57be79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae6d344-31b0-4abb-a490-1aaa1fedd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc38bfa-43b4-4f2b-a205-da4e0f350661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58eb93a-3944-4d66-a11e-7c31e1999986",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3807515-ca25-4066-bc7c-164db4986ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4d3be0-94ba-4005-8cd7-f33ed7c1da52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea634731-c511-42d8-bbb9-6bb62cfddd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd1cb79-3982-4447-a372-79ee7cd3627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c37ce9-bfeb-41b5-a744-a2d0090cd085",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d36d202-a7d0-4d58-8441-35491df57f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284b2681-2d29-454a-a992-78c39b361458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aeae20-af51-43b8-bedb-814002561a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f468a0-6a0a-4939-b38a-ec5bdd380e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be690ff-ab88-41d1-a1c8-8daaeb64dedc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb96d0f3-aaa8-4a00-868c-a5cfbc10b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c818b170-d9e4-4fba-945d-206211f170e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4bfe23-1e1b-4260-89be-1884dfd3bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0417aad-e4bb-440d-8350-85f1798cb267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9cb8ac-1ce2-431b-a32f-1bc244976704",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a91b1f4-0c04-49d8-b4bf-856e0ba4df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3fa8e1-fb40-4228-a69d-0bb8b7e65c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb29d1f-bc86-4849-ac7c-b7a7437d1b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b77c09f-62aa-4364-ace9-78a713644a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cbab98-5e46-47a1-9018-0e1cbab7a286",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65415a4a-1ee6-4c2a-9ebd-22da39f1c446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0667876-e3f4-491d-8e9d-d27ef17c58a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3440037d-25ca-49c4-aaf0-cbe93fbe3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc644d1-8798-4b27-b9cf-65d4bace386c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0990464-5e64-4ae2-b38e-59cb57c81822",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308503f1-764b-4c8e-b157-7302fe810502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4618196-58af-4320-9df1-bf90b671b793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b463348-633b-495d-b84f-cdc0458da755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1a01ce-290d-4e0d-afa4-766a0bd4e082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e8b0d-09a1-47f3-b0bc-fb0762f2a6c4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f67fb47-7f3e-49fc-81ad-6ceecfd8b079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18510720-b06a-4302-b818-4c0220143be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30378fc3-0a30-45c8-a3c0-457136662e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbbccc8-da4e-49ba-9f4b-125d2f9f4a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a57cb-1b61-4f58-a7f3-0edd0e011094",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4800f10d-14a0-42af-9486-0e9a846feb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eda2c9-8881-413c-891f-838d537c1948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23395252-7d58-4e49-9e6e-0636806be346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5257fd-e3f6-4050-bcec-510a070d9186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8058799e-1358-4c28-9856-2cf423368a81",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218cb218-2ede-4b24-b102-4441c151c1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3ccb86-68de-434a-86cb-592b644cd5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41f3bf1-6c53-4654-941d-114fca5673f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06f6b586-74d4-41bb-8dce-7e7d526d0680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115482e0-b8b0-43a6-b933-5db7bc4ebe0c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ae5d7c-793b-4ae2-b0ea-54a852f78cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4782a-e215-4154-bd6f-6a8f13cf2aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3034a651-36c4-4ccb-8d4b-7b06fce504a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b064fe6-09a3-4131-b123-9fcb22907e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b133c1-4796-47de-87d2-4daac2dcb617",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6e9352-d839-43d1-b667-5d9f65b8cfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9af378d-da0e-42ed-b2b6-20aaaa95f44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df47ba-4f29-4271-af03-5c7f2e07d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad659f2-80da-4764-b8d6-c89e9f75c6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ca8abf-d157-4aef-86c5-8aa003d02a25",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2368c10-2f75-42db-9215-50b662eaa275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529af054-af1d-415a-869f-94ab7c6940f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89eb5b0-b3aa-4117-ac77-ce6dd357e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "68b8b4a9-e370-442d-ad28-813da928b080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5669953b-ec6f-49cf-9234-86f57584a53f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97550283-834c-4f85-872d-164f1503bf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3259bfe1-4bcf-45ad-98a5-a9b104582861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e5a4f3-5608-4964-9ce3-764fa46e6f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38198d38-f07f-45c9-ab91-cffec0c9f6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2331eb6-2e98-4f85-a080-d3561ff83379",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b59b180-8171-49b9-b6c6-6e5d4e71a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0711892b-d3d2-42c5-b4f1-e343fb31bc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e99626-2d5e-48ee-b134-9f674de0d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a46185-63a9-4b36-8950-a025fa9b06fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885f322e-e4a7-4bb4-b592-df23fb49cec8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ee655-4871-4fff-9abd-cc0742d3feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e26bf8-7733-49dc-8845-112ae9ec362f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1618874-5169-408c-a4f0-17256f3c2510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d724469-810f-4d94-a719-1a2efc0730da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89035cf-018b-4025-ac9b-4e28d919a504",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544df921-5ca4-412d-84bc-031e1d54e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f84ab0b-0190-4d0d-bd64-5a46690db581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f567afe-e585-4b14-af49-77316f4a00eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b45c118-59d0-43f7-95bc-b499e03538a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c1d19-cbc1-4da8-aedc-f6585d0f093c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7448a5-cf6a-4036-ac72-6ecc30d4a55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07dd5f9-87f4-45b3-b10b-e3a779bc4a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac8c9e2-c50b-436c-85ba-12b6d315861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f772f045-8828-4e31-9542-badc5b6e5dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817b09be-ea2c-4205-9db3-2851cb60149f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1830659f-8eb8-4bbe-8c14-9ea54eddbb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05bc06c-d27a-4202-afad-56850edf88d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41040333-443d-44ee-b066-cff1271bc214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f01907-11bc-4d34-a956-a2d3bfab1ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bee86c0-80fc-4163-bb2b-905ec849d7e8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d68382e-332a-4fa1-86e0-33c9ecb009d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754a0d5a-2d81-48f0-89be-f8bdae350311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860a28ae-35ed-4635-9abb-d5d5ae0e4d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39cbaab9-a0b7-423e-880b-9fee7c094a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01331b3-10fb-4fcf-9dcc-5949be1bf694",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf0e050-c596-43ec-b9f4-722d5b457a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5023083-cef2-4a6d-8b3a-e5a71a344bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c0856-8c9e-44e0-b1f6-f27427788bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aed781-90a4-436e-85b7-3539eae173e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52966bb1-fff0-4e83-887a-86499e648f28",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac096fb-8a70-40e3-910c-c1d23d579c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24f1496-61b4-44d9-9622-c4d03640f520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aaafb2-f882-4b98-8be6-5b453d4bb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "144dc34f-cf98-4f11-92cc-c581fd39e97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c3fb68-7248-4814-a89e-89ba3ad29282",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2831192-6b86-4433-98d5-1a675193361e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0035cf4-b271-45c0-aa91-fdc61c4a4a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11155f57-f865-488d-aef9-f5c4c3c7aab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa931865-b125-4c82-965d-33991b594a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d69e24-e10e-46b1-9c2c-2e2d58995f3d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315c5452-6c6c-45b5-9010-150047d27c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b8223a-56f1-429b-92cd-442e3ad36c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a78fc0-edb1-48d1-9984-1479d35e0338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1b6b50-2b2b-4124-a7dc-00141c9c29a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69ed019-78e9-43e4-a3c8-1c22b9d7683e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d5e2c4-7b4c-48bc-9bae-5cc496c21668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c55bb18-9e8a-41c1-a816-3c51ccf5adbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f505410-b79a-4732-928f-d00bdc2a1917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c50a97-85bc-4b08-be71-72105bd3eb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb9c0d-c5db-4969-8d55-cc2c2a317853",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73cb3fa-9038-4a15-9a0d-4974fbd002b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785719ad-1efe-450f-ab02-5b33d8476df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1589b01-d3e0-4429-b776-947032ec11f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60069ecf-291d-433f-b5f1-e6526f40b030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8afe151-5b46-49ae-ad8c-7b738452d681",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af64a99-08bd-4db2-ac06-5260abc58d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b0c38d-6eaa-4c89-a731-563f17ed67e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1074f737-965c-4c54-95b7-2c0e66ddef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cca1c230-9b72-419d-b462-987e78b5085c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c45f5f1-6ef0-4208-9259-fef7bd1a27e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb138c59-d14e-4d7c-81eb-68dc47b86e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7505a532-bd22-4069-a42d-6d43bac2434c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec80164-cc2e-43a2-be76-378ba0112314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a7995a-c042-4193-a932-3a5f25b82dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4924ae20-43e9-412f-a5fe-95862fc8822a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff14f58-25e6-40bd-ac93-1089c0232a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af377b3d-cf17-46bf-8258-5733c89fa1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90abdd3-94ed-4406-a1e7-b3a366db6991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3efccff8-4816-4c57-be95-edb9fbe11e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ccef8-c280-47b8-9cc0-e622bd0a5fe4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0021744-cd4e-413e-8b52-8191b83656b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764c319a-6279-48c9-bb1e-2b22db8d6a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365b59db-734d-493d-952d-499a18083f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ec317f-628e-4469-b048-624819591f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649ba0b6-9d73-4c5c-9042-7f882bede4df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f041fa-0841-472b-beec-9243d3c94833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a14ae5f-2105-4fbb-8449-f05425e28863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ed64a-7c67-411c-a1b2-9245f858473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb57de2-5c20-49a6-9285-a0d17c47add7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cb57c5-f6b0-498a-b169-d180105cae41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23c5a63-e75d-4ce6-8fef-73b168952b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27c051f-7712-43e8-a0ad-4258cbb075a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e5b7ea-946d-4bc7-866a-7b7367885fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0301aaaf-cc7e-4ac1-8a5f-ec97da7e79d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc818497-dee6-4f57-9d61-30d5dd06d42d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6513b33-10a8-4010-85cd-ba4197dca9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95304f5-470b-4eac-96d4-57d84439e0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2284be32-fcf6-4022-92b1-245a2c276344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d9792c-ef62-4964-8a0c-405eeb641985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bedc8f4-31f4-42cf-8b32-d8a64fd27749",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c918a4-7c8b-4e9c-b89b-e2a1569b208c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7818ec6b-115a-445a-945a-06731ba4ab50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbd688f-8d71-4146-ae09-07ec7fc27f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "248fb35b-357c-459c-b565-bca322bc01c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4772b754-542c-48a2-9171-870200d56214",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a43d2-08c7-4807-adb5-fb543212f947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0a399e-c5ee-4b4c-abc5-7342970c704d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222afbae-a298-41d6-8b3a-39822ed4098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d88549d5-de68-44d6-b0ef-519d27ec12d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93afd65-4e92-40b8-8dea-573b1d18df65",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f3545e-85d2-4b83-94d9-069b69da90fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edc9388-717e-46b1-966f-5552ed414a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4266e57-a6ae-4212-9e68-48d7837da3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e491a8cf-1409-4d16-aada-ace8ec619d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f321d0e-6558-470b-87ac-3d53093bb5e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1824b0-9875-456f-a6a3-c44745a79859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a26fc51-d28a-4a87-8d83-72f872c87880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589f241-3cd8-4597-8412-4a9014d373f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff43e5e-816e-4e16-a41d-d31cd48cb77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1875f9-b38e-41fd-8780-61eb1f383f6d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae223c-89d5-43b8-92c2-e6f131c76f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46347d26-5a55-4e5f-85e7-d1ef57d7b0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df3e828-7bac-4b86-b166-f7f094ed86ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "912775c8-d93f-46b1-be96-a214cb1e4078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39d633c-ae18-457b-bd60-e471263b969e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db0972e-a5fb-4e68-9c19-a2432d94a232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca22129-84b1-447d-b42c-29aa596b91c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675350f-d6d9-4aa1-9e72-d983383fe0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfbb7bf-ca4f-4203-a5b1-6b90e23e8d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78719c1a-ac02-4203-87ae-23607190b28d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b23e81-1389-4b58-8fb9-3c5fdc5b3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af96dd75-52d9-4f8c-ad74-d1c35298a9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bb1ddf-a940-4f22-8018-ea6e6dc8890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9bfaf9-7c26-4027-8c33-d058126c37dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf72a311-a7b5-4260-9a37-caa5eb51ade4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a094cf-f183-4d33-9a34-b32b2443d660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5f73c9-c406-4069-a58c-70ab141de313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94815dd7-819a-4d9c-bebe-7aed47df933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a46403f-a7ba-4921-bf7d-3b960e9fd9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f1b06-dac0-4d23-8aad-8d46a3101b0f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b27c21-3a2e-4b9e-901a-b923ac315a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b74399-5b67-4b39-9ab6-bc8547542f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5473558c-4ffa-454a-beef-21ed11658166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3091c58-5e2b-4a4a-bd08-64ac9be46f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8197006-8d77-4900-a57a-5d91886efae4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321b3d55-6c08-47f4-8d6a-457997abc9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cc8c95-4b9e-43ad-bcee-9920eda2d95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc01fa1-ed38-4701-b0e1-aeb55b2536c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2df58e-1fe9-450a-88c9-c2bff3e5127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e7bb66-3f69-4b0a-9b0b-956c1ae9951d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12bddb-2627-4462-a65a-ee57cabdb309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e71e8fc-16cb-4ed3-8d68-0323cb869d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68100294-787e-448f-b24e-5d38e87b4416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b311cedd-9f48-4ca1-abdc-25e6bc82319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0879d75e-9071-4307-bae4-c579c027c99d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c3501-ddb1-4a14-b4f8-79af143e758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ada92a-5c67-4136-a93c-3398a60e78dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac3affb-33d1-4e13-9c37-635b5e7e8452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe55942-3641-4dae-939a-0778114dff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d4a905-ede6-4b73-911f-3f8817ed7c4a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc5d5e1-f02a-4526-b154-97751131a346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad50a65-fa15-4813-9006-0bf593bd6176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825606d3-5f5a-48ce-9fa5-380f21be3ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fbf716-5778-4cff-b997-c9749cceb746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0719aee7-009d-46bb-822c-bb3539f2d01c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1377b86-cfea-4428-87a0-88185a52e41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c002a7f-fb83-43a6-8de2-5d853f6f15a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c052b991-9352-44b1-af43-9100cbff69b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9834d18a-a40e-403c-816c-ecede0f6f1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab62965a-41ad-4a51-bf10-64e3536ab701",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0ea3e7-67e3-4ab5-a725-401dc281fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78ef4b9-e1a1-43a6-8ec4-86ebad157f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c98303-a5c0-4e4b-b521-43a55ded5088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d95460b-e78e-4424-a70d-898dc870fd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a22c0c2-c7a1-4033-9fdf-0837eded140a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e9ab58-374f-4b52-96ac-b76f98772c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3ff2ea-3b57-4612-92bc-4e636f7f5db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f00f18-c42e-46f9-8e18-bb56ad315d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a3b679-3137-4aa9-924a-743f443af71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff2850-b566-42d5-b3db-0d16bca06024",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ca15d0-95a0-4fa2-9319-4b685688fbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4f0196-51b3-4302-949b-158f2e74936a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a62bf-c777-434d-890b-abc3993e739f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "526e7926-0d9d-4e76-a44e-f13a87700bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b7ad47-426b-4ce2-9e00-5fb4bb745a26",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7a0ed9-2ad3-43cd-851e-248aa30e7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9881bd41-c8f4-46a5-9394-e063a7f073ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f34ad0f-4f4f-4d3f-b702-deaecbccff3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ede042-6324-4238-9ef7-eb76afcf4634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276e4b7-3276-49c7-b026-189250099324",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de56d635-9a43-4626-a36a-b5f89a699275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afadbe09-02ac-4ee6-8c14-76588cca3581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf140067-122b-4eb6-b15e-ae2cf1b94dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58eacd85-4e9b-41a2-9535-56f4026c6643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68de458-ff49-427e-97bf-b20d50c41159",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee232e00-83a4-4f55-a36c-1c468591e64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc128c9e-b87a-459e-b1d5-414c618d7293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9e8013-a37f-491b-ba3d-284e5626bdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb156d8-6fc7-41ea-a0e9-570ade1b91dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488cbc42-2635-43b4-9a0f-107ba5d36b7a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089e898-b206-4f8b-9716-3089352da139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf9ba8c-7b5a-4171-8b44-f03bc34e1b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f5f8c-3e8b-4a10-af59-95fb9dce56af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91fb879d-445c-42f6-b72a-886fa1bc61c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aa798a-68e9-461e-ab4f-b5efbe3f094d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd14648d-8def-43be-9cb3-5751f5161e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6c88f4-0581-49e1-a3e3-623cea0efcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee603f6-c996-46a5-a2d8-a6d5ebdccc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c234dd49-c8b5-4fc4-96ce-c0dd4645c9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2042f4b-e21a-4d99-bd65-8e6384ac434a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e800cb0-f51b-49e3-bf79-0c2b46e961d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d9433e-f20e-429f-8f9f-a62f8b93614f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fc88cc-96b7-4f12-8aa5-f898835e7c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d603f5bc-ede2-4148-88f9-6cd36a25a152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8f483f-3566-4f60-be01-1e08e59f2057",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ac381b-8c66-4670-bed8-d989fe508d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cfcce4-c461-4a13-ac8a-50ed35f41091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6e4504-35b8-436d-83dc-881ef153374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf205a93-01be-4e9d-9e19-e8a62ebe6d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8f5ec6-b895-438f-819c-e2bb0398fb6e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22443fb9-07b8-4242-9663-98fffcbe50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693487a9-a82b-476d-aff6-8bdd837af7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2daface-8ba8-46eb-9ecc-67c0d20a4684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71234c36-c52f-4cef-8e89-7e18bed0a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a4b817-52c3-4d71-a7c6-4e7d76a49b77",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69511466-b60f-44de-818b-d8660efb32b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d8a1ef-6f50-4bf6-b8f5-d7dca9f90689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ebd958-baa7-4996-b365-66ea12ea2f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd76ef8d-fcb1-43f9-9558-1c55eda3cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239ffe3-db87-4c7d-b21c-774cc678104a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6834bab7-aff9-419d-a4a5-b7832b3b0880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaeefd7-ba81-420b-900e-ba17f30a3d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2684244c-5389-47a6-8987-ac7c731b925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87660a7b-cc68-484b-9b5c-3936c59ffaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654507f2-2929-461e-b957-190951bae3cd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc91c6a-3742-485f-85ec-dffa42704626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c4baff-74fe-4926-ba07-68a42af6b6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc25a8-ed61-4136-9b8b-badef4c9f52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f6591a-ac67-463b-8846-53f94da64e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc2dfb8-65e4-4484-a0b5-afcb9d4f4a13",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2270602d-dded-4e70-955a-f8a44c3c751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be1419d-c6b9-40ca-9ad1-690565b630d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16935f12-594b-443f-84e6-1957a6db52ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4823e0a2-332a-4614-ad97-b4e6a7cf075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05d3467-f84d-426a-a5af-7e7244c5d670",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550a36b2-70c4-446e-b4fc-527cc060fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0ade37f-0133-4e50-b065-085a63635375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345e47e0-ce9d-434a-aca1-b536079aa482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d30e3d-df3c-404b-a2d2-7b85f5363626"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51fe90ca-c3f2-4e44-bc0a-3f8d3c475304",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cea0083-6e69-42df-87b5-4bc8b8469001",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e53e43-78d1-4b63-b032-88534eb19a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "696e0b16-85cc-4fed-b7ea-1694ffc5de09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3669e99-6929-481a-b8d2-83a42c751cfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9d8a105-65ce-46aa-b4cd-0987616d800c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26987dc0-419a-4320-8224-99ee6cb9495a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8976636b-0e33-44ea-8a60-df695efda47f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b228e3e-f43e-4f44-8c80-980b20820c17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e5a99da-44dd-4a44-946e-fddfccc0def4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05733bd2-d043-4b70-bf71-9bd2ba8a38db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "980a297d-14ba-4a19-ab9a-bbc32d253baa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6297764b-b43f-41fd-bfc1-c167db29fc07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf1d2a43-b2ed-496e-b595-525cc047a1ce"
                }
              }
            ]
          },
          {
            "id": "1a5fd9c7-d029-4d73-82ca-dd4086473c57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c95baae-943e-4dfa-a75e-424035a7acfc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9997c358-7635-4b19-a56a-dd10520a5f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12bb7d3d-0d58-4219-ab1c-20fb22734f7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b00806-89d8-4484-9ffb-16678da83bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb1c3e7c-2dd1-4efe-9675-ca7199d19227"
                    }
                  }
                ]
              },
              {
                "id": "22915b65-9b0a-4d41-b682-848cb1674524",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75931b7b-ff46-4624-bb1f-aa0f3a6a8731",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2f92549-6e1c-4fc9-b099-9e8e45586ead"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4da9c73e-5596-4218-9eb7-93d324f595e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5cc591e4-49aa-4080-94f3-75c5da423f15"
                    }
                  }
                ]
              },
              {
                "id": "d01409d4-f4de-4bd2-96de-96774524c35e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29d0df80-8899-442c-b047-d029f969f9ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d9a60a5-13bc-465c-83a0-282fcfb27dc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90cba13e-5cc0-4a5d-abd2-aaa5db14fcdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf7c3004-7765-43ba-b5d4-362b27df0b3b"
                    }
                  }
                ]
              },
              {
                "id": "c67af745-c7fa-4a8a-850d-d9db05381a3b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae0c8064-d26d-4954-b049-5756fbbc37f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59f0ade5-d780-4d83-af55-f2ab41af84b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95c9d4d1-09fa-47af-b59f-603ef31dfeee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61281529-684a-45a9-a37e-a0c93fb4ebab"
                    }
                  }
                ]
              },
              {
                "id": "23179922-65c5-4bfb-bad9-d1c1087359a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d41f7f87-4b09-4cd2-b248-801b943a5a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01d49bcf-f8eb-4408-a8bf-5e7f170f8063"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64f1ab1f-9fe5-4c07-a23d-a311dbde0ce7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f910ab69-3b29-4341-856b-7079014469d1"
                    }
                  }
                ]
              },
              {
                "id": "360e76ff-92a4-4b2e-9976-f6a8d2bafe12",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c11e3ea2-d6dd-430f-836e-80482470befc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26b7344b-2cd1-4d74-9410-b13bfaf0f80c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9396b04-6a9a-4bb3-961d-e10964550789",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a9e4213-2fe8-4983-8ec0-929d8052d2e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4f317d2-7f74-4d17-b9a0-172fb94a959f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a951302f-32ce-49c5-8e18-f64e32d8978a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "225faafc-0e61-45b2-b2e5-a0f9274f7526",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee026022-b7c7-40fb-b430-6fbf30ba1f31"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4d4b18e-bae2-418f-a665-382b04a491bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ec0b933c-66e0-4636-b82b-2f76995bc93d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff408ace-cbd7-4b6b-bc50-0b44d03aa638",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9895ccd7-06e3-4380-89e1-9f8bdca1ab87"
            }
          }
        ]
      },
      {
        "id": "7024ff60-a6c7-4a77-a92c-dd1e39914c44",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8d21302e-6a9a-4b52-96ae-9069f05ea5f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5b1282a-754c-482e-b05b-a573b7383638",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fda6adb8-f38d-4f5c-822f-6e1235513c8a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d48b53a-f9eb-4ecb-825d-0a74cb2af46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b570c43-898b-4f4a-86cb-1c634c94c97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72a0f0c-16e0-4905-a6af-bf754d3f7999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c541a2-871b-4821-905e-b722a864c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0461ad9f-dd72-4da9-bbcc-057907ef83bb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85871490-3dd2-4df6-8afa-e0ca6899dc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4225b6c1-32cf-47bd-a873-c970d81c765f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9320095-f657-498a-b6c1-ac02a91eb643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a91943d-09fb-47c1-a79c-d5a67e1bfb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed86e312-700e-4870-992e-632698d903ca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14571244-f2d4-4774-b218-77ae54c4fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2165f5-6436-4789-9a75-cce4d0785e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c9b13-c8da-4380-9224-e476d1d2b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "707c4c3f-9c2e-4aa9-94a0-a559bb1cf4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de55749-d6fe-47cf-b975-1476515bfcb3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f949b9-a4a7-4ed0-b55f-f8bcbb22a46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7381745-d545-4023-b1d2-35af553d9acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db2b1ab-f65e-46d1-b69c-f89dcf99c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea875e66-1aab-4090-8988-c0189c81618a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef576ad6-82ee-4668-882b-f6da7181f3b9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f0f03a-9624-43ff-989f-6451696e76c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00ca977-f399-4895-9c39-c8aff01fd293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0712550-c1d6-4995-8f90-f8fc222b687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a06297-c613-4651-824a-9f3a99abfd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08c7222-70fc-4c93-9a80-7b144035b8e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42582fd-3d18-4f98-a83d-d0f005b95c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e244950-7fec-4ccf-814f-a9e92a1bbc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6995c1d-0631-4b6c-9e25-d47ce27e12d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "517c90d8-059c-4fff-be54-46d84dad064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88263da8-2816-40f6-b821-f8d612ab4947",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8108d09-1a2e-404d-97c9-203742857c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1d1e01-61f1-41fd-9ec4-7d0c24a9e707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ab501-4952-48fe-9feb-6d618be98e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f90576-2dc4-4a44-ad25-9a2f4ceffafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52771266-e0a0-4ccb-8927-83769c7cfd28",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c610d34-ad55-4d97-9f77-d3217725f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369e35d8-638b-4cf0-8157-b26b38a72c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ddcb51-6a1d-4d3a-b82e-bb51575755dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a545f1b1-bca0-4ebe-b0c5-67cc740a26c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a421cc88-e13f-4747-908f-c6468ac1a5b3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faf1328-95ae-4c71-9a3c-4af947d23bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9aba2d-8fd5-45b6-923f-77a038faaf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f1029-8536-4efe-ab29-fd688cee12ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9376ba6-d2a6-4d44-9ffb-023fdff7d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40952ca-c705-4025-b1ee-e469c4198ae8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698609bd-85fc-48c3-8227-434c5a87a873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13cffe4-b669-48b6-ad55-214f82f035e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741421f3-b01b-4e7c-9cff-469bfe736c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "007b8d66-9319-43db-8392-d2044a841ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c3ca30-c6d6-4905-9ab0-07979a2fdd8d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369e1ea-95c2-4817-9ddf-8836b9b42fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0833f5d-8fdc-477c-8807-60494cd4c95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267643c1-14e1-4f6e-8cea-4523d7f6ad65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a14d5fe5-609d-4ed5-9771-97d5715c1ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82292b36-f64f-4c33-bfe3-409c067899df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cac15f-84ac-41d5-9365-05c1d75eddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95572df-1814-4709-852e-d0dab654f36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a2a967-abfa-44f0-a09e-f7be61f51ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a436714c-9f28-4749-baf7-61ccd3357d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c1c583-9ea5-4119-a9dc-ba8266d867a4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c956f5a-1b27-4a76-918e-5065ed18498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c611a6b-6f8e-41b8-9381-d5dfdfd27d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a39aa-589a-4ede-b112-b76c44c56119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1db4e2-62a6-4b56-bd39-62fd1bcbce85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf736d36-aadc-47c2-b583-488ba3c2ac15",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869356a4-16cc-497b-b612-336694d7f901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973be2f3-bf21-40fd-864f-9dfb10dbdb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cdb212-9675-41c6-904d-87567bb5ed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1ae6ba-504d-4170-900e-2cc58c27f9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f448bd80-004b-4885-b822-45663bb12f6d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f090166-1dec-48fb-8fd0-38f3dce6c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cb90a9-925b-42d4-b926-4e4d36a7d232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2388b1b3-b7b8-4e4b-93bb-2eeb8fcefb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e465c3d3-ee80-4bb8-bcf8-6bef689cb50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38103808-7756-4b92-8129-b2d231772e22",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f38618-d9cc-470a-80f6-5473778345db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc3ca41-f0fb-48c1-ae77-47be9fe4f85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc59c30-4af7-4d9d-93f8-bcb189293994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7762555-bf14-4158-be6d-dbfab1f01309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd68612f-84fd-480d-8494-e03eedb18bd4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cd6374-0352-4179-b72f-05fc26395b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67d386f-9cde-451f-8999-e06e072e7a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baf2082-2a1f-48be-9333-6e42b98f62f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a4f980-177a-4efc-9721-7830af5236e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39938e5b-f493-4845-bb33-564117ba4bde",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebb2363-ab5c-4923-a0dd-0f993fdf8f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c0abf6-e62c-4f8c-b862-b4768b04d544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aa380a-752b-4e12-8dce-5cca7dd88e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0b7fd0-1579-4d87-988d-e531ded9b4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219233fc-1d6b-4f22-b6fb-b0aad41ce444",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f45b0ed-de10-4c02-9812-f29f871c9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24615edb-d5b7-471d-a7ec-c76956da7b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1bf139-9867-4ae9-9e05-776367a3a176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e626a763-9159-4913-84d5-f2bbf7c5dd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836cd162-a566-4d97-9b3d-3c6cee7d7327",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1194d977-948f-4354-9002-200cba115a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6186716f-19e7-451a-8845-d347224ec47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb9bbd3-1617-411e-956c-2e105d8a6c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e719fd-5bc1-4ebd-9c2a-137cea2c5de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b097b155-370d-4b3c-bc29-ef7d36f0df81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b62241-9bea-4a9e-b233-d8adc39b5393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543cdb86-6309-4b02-ba71-bcc088ac21d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5285138d-7f4f-4790-8768-d71c967693ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f246de49-baed-4b91-b5fb-48d7b787a51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e71d1-9450-4c31-8581-5b6011f321cd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b66ee-1500-4265-a412-ef81495eecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999dcc90-f8bd-49a9-b2c5-5929d162ca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83678d2-abc1-48d2-a4b4-97df8480853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b24e64-20b2-453a-b709-7c18a3359059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31483b7e-aba8-4099-a22f-2f5cf77b2e21",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fce485-e4ff-491c-8abb-66db3abf0ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b41f893-074d-4d68-b5ac-9d8cb5e8e06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d28818-c9af-4b4e-8674-1d6f608c3d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fd8959-cb9f-431d-8fb3-21d819c6a819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81b3f7a-fac1-4b7e-b175-ecba3b4a57a8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9fe482-0586-4491-a40b-48e2d9fed4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099caaf8-8781-43b7-b2a8-f668eeab26d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5766878-cc50-44b5-aa38-7b40f3af4f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68801755-bd85-41d1-af88-6a1b4180c0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a241b2b4-3872-4f97-b811-73966f8fa9be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ada8077-b680-4a8f-bdc5-1ce325e0164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a8032c-153e-41ec-b22c-711ca57da79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1569a8-6680-4509-9d4d-1f0a83ff04fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9a44b4-cf43-49eb-83bd-b2da0948abc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56250be0-95f3-41e9-8bdd-738abf499890",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969e4183-e226-4d78-8677-9c20d6d1c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c46bc3-b3d5-43ef-8369-fef08a2d8fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f50345-7502-4dc9-ad12-a384a9112d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b608cc46-d751-4a89-8ac9-75f15546c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fae05c-cba4-461e-8ab5-199cb0eaf2de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15398e9-a50d-45a1-94d5-83996f76ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e932d7c-d961-43db-95bd-f255309ed330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e26a1d4-52d7-4065-8c34-f1582eed600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a016e2db-92ce-449a-8a7e-1c43d744b31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1efc25-c731-4a40-92d4-571b31c4b6ce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2049e1-3685-424f-b606-375736f93e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e556b30-b6b3-45d7-bc43-c34e8a5dfa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4230fa-1b2e-4385-9353-75f684674185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ccc43d-c669-42e2-9bdc-2e274b846cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ee95ea-d0ad-4e9e-8c71-b35144ea6b00",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f58c1-882f-450b-85eb-b7358a42b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c65287-7000-49df-aca3-4f8c51094cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac619d4d-9415-4f03-acb1-a6d5f799d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39fa3887-5090-40ae-870a-cfa68bc10456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6183fc-8e7a-4d1d-b76a-2b9f01982a1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455e66e1-e23b-4ce4-87e0-72d46bcb533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd2afc5-f365-4680-9e17-11a4becab8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f44f77b-eb39-45ea-b1bb-dabd054bc6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44bacc47-3cc5-4f32-b220-d6da97e65277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1548c488-f747-47cc-9b5f-d7a88a822c05",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c8fe5d-7b60-4465-9323-a556e524de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02545de-b514-49b5-b47e-5a4488c6e906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e7c66d-c522-4c3a-8f41-00c6589c707c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6f6ece-c307-4b98-ba50-2e965ad2ab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fef6a8-8d17-4ca4-b2ca-efebfd18fe9a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e667d1f-6fc5-43f7-84a5-27abf892af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4389ede-ad8c-4551-86b4-eae064978f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872db833-aedf-46d2-b8b1-0a3feae7872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9839bdf4-8929-4be0-93e2-bbc389c413a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfd0db6d-3925-47ef-8117-fe38c973a548",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dea98f15-b54c-437a-9397-1d105b340531",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ed81db-3101-4ca8-a53e-976cc5786c52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5253c87e-bd9f-447c-b1be-71366e6398f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530a0cd6-5363-471d-b3a6-ae6b141df0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "083957bb-9bc4-4f59-a334-f73d3a60eafd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17311b6c-b358-43a1-9d62-b12b638ec6cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca5fd341-3f6d-4d0f-ad45-7e4f63ae3fcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0674968a-75ab-4a97-8837-2ded20ad7450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bc25d47-4cd9-4317-8535-1230e1ea34d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "822d495b-1d7a-4705-823a-7b536243adb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa1a205e-19d3-4dfc-99f1-48062b409136"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea2cbb6-a11c-4329-92a9-2b275bb41f66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e403bd4-d6ac-4fa1-9fb9-3fcea1a21a8b"
            }
          }
        ]
      },
      {
        "id": "d1caee20-d8a5-4512-b767-3d4982874255",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "71bc05b8-9669-48a8-8665-0bc59bb6b39f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d100f34-41d5-46c4-8dd6-3b23dd8813c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "655448ee-0ca8-422c-836a-5f3e808ba299",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7ce4d5-4e0e-4505-b1e3-f0973f27c31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b66330e-d03a-483d-aea1-94a6df9167b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb33e39-b8da-4491-8cbb-dc0a60eea33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39aa26a4-49cb-4c2f-aa1f-2ba17316204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fdcdfc-d793-4f14-8877-43a02db5e2c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f691a14f-841f-4fa1-b9e2-0f0482d264c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de80b71e-5855-4439-9505-baa2746f4beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a77d655-353c-492c-ad51-590593df0ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc3f25b-ebc8-467b-8529-10e6202d8fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c7507e-afd9-4c9e-b2aa-48f56833354c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762d3e98-5f69-496a-bd29-8f300e210782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3462e1b-eb74-45b0-9176-74d2d776a27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe507cd-8330-46ac-8078-4c8259efc81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb37cd2-3ef5-44b2-bf7b-73501ca53d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bb3349-8cc4-469c-a1ad-fa96fb8131d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aeb671-9eeb-452f-9b5e-f3a7d6d9a790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f62d91-06fb-4faa-85d8-8c88afb8b510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5d67c-bf03-4a4f-90ac-caa634be78c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7778a56e-83e3-4620-be66-ca230785d9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8751851-e8c2-4aec-96c3-5738dc18d998",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5375ee38-ac52-4ed3-bea1-2e3c865473df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0173d5-ba20-4c9c-a034-36e0eb2d492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde932f8-afe4-47c3-95e4-5ac6933d4bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf390f3-43d6-4131-b4f4-ad62e2fc425e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cfb011-eff5-4699-9ef8-9c3daf4a92c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0a5251-9a58-4bee-83d7-549970fb06d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9f08ff-9a33-46ad-92b6-baa61ac87cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cb68cb-07aa-4918-8e38-518257c81fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d079b083-27d2-44e4-8ae9-53fd909c3857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d0f595-84c2-49fb-8729-bfedfab2c411",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7671422-911a-4aca-93a2-cd35c10a4b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ef84f9-7225-4706-a816-c573e706006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c79fa83-e142-4ce7-8133-c18eed83c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2a89ce-2872-4d72-92fa-6c3340d65376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac1cfc-8373-42cd-860b-2ee1395499bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fb4681-7843-4131-98e2-8bda2888e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306a5a9c-b102-4eb5-92d7-f720a4211625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fcfc23-b093-4c80-b622-7834390a9fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d93bf3-a1af-4783-88e3-91af6d0bf48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd5cc4-b22d-44d4-94d9-a8a5f2e5f073",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ec313d-2116-4d7c-9c5a-79c3b26a36eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453e7a01-2b60-44ca-b68c-7bc309b133ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50274f79-a866-4f88-bd5a-07081c063037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29258951-c677-4fd0-859f-f753ab46c859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bff6c2-088c-4e1d-b388-d8bfafd970be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0d67c6-42df-4129-90ab-6a8058ec4477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725081d3-be2b-4be6-a09e-c42c1a81faba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1058415c-1d20-4b36-a3aa-bcda88977398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "720a5e76-0f2d-491b-a29f-0ee68a2292c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14db8afc-776b-4382-9950-aaa0c6b659bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ae40d5-960c-4c81-8d38-37864c3bbc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494d58ef-5c32-4ce2-b8d0-4ba468f3e181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c26c9fd-1193-4e25-9cd2-7a3ee4730698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd34f2b4-819b-47b4-b0a0-30b4feb7a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e5004-6c46-447d-9051-fc1b41f5db9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d4ee31-fc8a-4072-b4c5-0e0fa8c1def9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccde36b-8eb1-43c5-8a5e-6a804687a9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a213af4-dc06-4629-a8ff-e6b941702b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9788be2f-1aae-4773-88ff-d74c1a28bf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b0d723-b70c-4541-b1d7-813b14b2bf9e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e928c051-eaa5-4e7e-99e3-ccdcc078d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4bb6fb-6990-49d7-9b58-8dffb956035e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82477ded-f266-49d4-ab82-476cb8347d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eaa09a-7b5c-4536-94df-01e2a67f7b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a65d5e8-6a5b-4d13-a98b-0dbe55837a90",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6078ead2-4d42-41bd-8c7c-26ff77f56c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ff3809-d640-4d25-809b-3095f9617832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a42739-19e0-4696-ac0b-c61e9a063bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5c7cad-c567-4c23-83aa-2c92a71205fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86373091-6c0c-49a6-bf2b-ab3f35c0af13",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e74799-0aee-43b3-b311-ea52405671cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fee7d0a-289c-4be1-878c-0bc492440d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d5dbe5-9406-43d8-b368-a76212734b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e54ae8-13d7-4fbc-986a-4e06e31391d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24a7aa9-9c37-4c4c-a18d-0f9cf38b446a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d6b6fe-3d92-4012-b09b-1f8dcdaf70cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a283a90-b58e-4316-981d-0a5dfa01b05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e56ac5-94b2-4ff5-8d42-9edfefc1a8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4dce1e-dab1-483b-bbc5-4f8e2593c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a36cf5b-0aa1-45dd-bf09-9da118bbd9b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa3cd96-21e1-40a6-9e35-5bdce1528aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f43374-08f6-4578-8f30-d3f73101dccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b294b5-9a37-4c94-8b94-5510b676fed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ce18ff-167a-43a9-9df5-09fbbc5bddc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c002307c-5d28-43de-a8d9-6f654bb127d2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fd797f-c092-4a69-a41f-02c910834390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166ad1f4-c5cc-402c-9866-183d20e4fd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59231d24-982f-4515-8f7f-32e47a47ae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee66e2a3-2619-4edc-8a1c-f401658a9ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a97fa2-984f-4fef-908e-d21baa1a056f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecce3b07-0858-48fa-84a0-d9d92570ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da848088-7cfa-48cb-bcaf-f29f5d07c84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b3fee5-c734-4d28-9bcf-66afe3f3a28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ed48f2-b0c7-4da1-8356-ec115778d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fa4209-934b-41b1-8b6b-46583a249473",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edaba7e-2fc8-4b62-bfae-e747e568c872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ea57b7-15ab-4cc2-9462-daf446555d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251a912-dbac-4b2f-80da-67db6d59b185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9feaee-6cf0-4cc9-a7cc-730368745f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0212be5d-3db0-48e3-8a6e-a3f03b65e269",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879cf8d1-4ce0-445b-86ce-77fcce53a053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55862f46-cd46-40f7-8d0a-f834ba432eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb777120-bc7a-4c14-9710-077ba0eda621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41bf8663-5423-4f10-a89e-1caa0adc60cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dce285-e199-42bb-9900-805f162b01cc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6693be4-9b3d-4816-a718-4212b2a73382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7fde21-7481-4a13-acda-1532a048322a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f107d892-d891-4384-b145-7d5903678a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a9c226-a2ae-4cb7-a1b6-3f75fa993f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d89d220-a8c0-46d1-acda-db801bccda31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e753184d-d5b4-49bd-add2-b1bfdaef887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccd1890-9297-4776-807c-0239cfa609fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef87ffa1-b5ff-487a-a589-56e3a4846e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a5b69e-a29b-4610-87ab-1a7a4df79d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f444646-09c0-4410-b36a-773d50a41e6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1818ebba-6063-40de-8a84-df09e592890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ad9022-7579-43bf-a9db-a2ecec3872ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a0173f-fbb6-4f74-9a55-d77d3de6cbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc4b9e3-68a5-4286-94ba-4cee2a2761b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3addafee-5c34-483e-854c-87ec4dff37bc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa2a90d-9038-450d-b112-91c0b1cf99cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067078ae-d213-4dc2-9c4c-1c4f3c39e95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549c0e6b-374d-4f74-b67c-e56141ae6ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e6da0b-7573-42b5-a158-dbf72d199733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166640b3-d817-4edb-b1e5-b927fc1a7a49",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740c0a91-e74c-4a22-b62f-603723fb7019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e4e56a-b6c9-4b6f-a530-c42fe3c61b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe9ab27-390f-4b2e-86e9-de0f711e82d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb5f106-2f59-4e50-b48d-307901d2a618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec58167a-0a18-4bc5-8320-0e0bf33015eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b54f3-6654-40fc-bc02-ddb2a8317251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7b33e6-1f36-46c0-82bd-48a03051bca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbc6eb2-f3d7-41d1-ba47-28c3cfd548e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef74c19c-4c2f-47f3-a0f8-0f51d17566eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ef5c1-2c0f-4b6b-9619-73e03f709aa9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc307aa-1a17-4450-9b2e-732fd2756602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a7b23c-08ff-418b-a898-bff27f678968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb80607-7112-40e5-8e1e-9d4b4c2d684c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f823e2-f112-40e5-a9b6-85ab87e7ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0097e0-4c42-446e-91b7-333717836855",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99144747-0257-4edc-9077-47360ca6aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887bb9e-b98f-41c3-b831-e2e1a6362507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709bf327-aca4-4438-9aa1-74fdae8fcc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d30bc1be-fa11-4166-bc3b-357d26e5591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759268ff-b08c-4db6-b29e-afb7a096655c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e9183e-70c8-4b68-81eb-4e1c19d2d3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b38e3e3-2edf-4fac-a2c5-bb7460af6649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7de6615-9621-4e0e-96bd-812ed8b8f3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7a77a0-7e4a-43ee-a41c-f19dacf3b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa2063d-331a-459e-bd01-523a7b664c38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d439d6fd-783a-4f26-8cb0-c7d1a8357d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5760393-5d11-409b-8a6f-aa86cb883b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906bcf24-4a02-4969-a4a7-f796481281d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ec63b4-9b72-42bc-9ee4-f0ad3a645049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539022e-eb5a-4e04-a37d-ecc368b5f84e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185897ca-b9c5-475a-8291-22e5e6bb14e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15143768-cf65-4d3b-a404-3a9bbac4baf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba32b15-e9d5-4ab9-ad53-98703dd71ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf333d07-52c4-4aeb-9b6e-7407baa85f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b050cd6c-827f-4b8b-83f3-09d2fd454e26",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e698cfe7-b9cd-49ff-96f2-fe620f12a892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8d3014-a632-4ec8-a175-febd0c343af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52439dcb-ebf3-4c13-ba3e-afb820bed59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9e0bf1-e39f-4126-a103-9d532bf16758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8de8bef-a9f6-4bea-8a77-d358d15e10cb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde61cc5-5f25-4401-abb9-db8709d712e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e11e95e-a12f-45e7-9da1-6a51e9e7ca1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81677529-1bfe-47b6-b794-e782eeed350c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e839f769-47ef-4348-a3ab-fa5540fdfcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe9730-735f-4024-a610-184c7e51e893",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f74d340-c5aa-40fe-b66c-afa75c2f07d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce0a993-bc0e-45d7-a08a-1caddbfb488e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c16503d-b054-4cd5-9148-13a06015efc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555a0e5e-f663-4ce1-96c4-c718e496be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc286ef-eab4-4ef7-83bd-421f278d68ec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8599004-7b08-4247-b628-401ee5aea3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b6b48b-eb6b-4f6b-bedd-49eefd0009bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253eccb-10b0-4a3a-97d4-8664134bb3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d02a0f-61e2-4fc7-80a3-071047232d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f22775-6ff3-4f67-8d23-8d576b367a67",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a518c3eb-cb0c-41ae-a690-202b5f29dd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0729b19-e08b-47a5-a7ad-8077598f41cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc2c424-9a1b-4db9-957c-f493bc0dc63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "096e4660-c1b7-4951-8c8f-7bbec4592d93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b2151de-c2ba-46bd-b102-62d26b434c78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f3184b8-2882-48db-95ac-20822a22ec0f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafd8285-c980-49b0-a48a-3930982bd219",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "84598b23-bc95-400a-b61b-2bbd94432e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7426308-fc5a-4f18-aae0-84974170c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8340c6e2-5cf4-4bca-9627-db5743973732"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28a309de-4a78-437b-b363-976dc6cc0896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c67e236-af74-48a6-97cd-80b4d0b71ff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30a93b42-cc9e-440d-901b-4cdc80458e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11a06ba9-ce2b-400d-869c-9b7e7ec916d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe188776-7be8-4711-8e4d-fe4a54590222",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "452be3f2-6abc-48ba-b68f-2d6a09590035"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01c2c972-d185-4ffc-b7ed-6622b6462e2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c21a9d15-c94a-4649-bf35-42e608e095fd"
            }
          }
        ]
      },
      {
        "id": "41dc628a-9c2f-4041-9440-3e92fb7bf3e6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f3a21d31-bef0-4bff-ad49-0d3c7fd3f919",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bff6a87-6c38-40d7-bb5c-c46fc6942fe7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25e700dc-7e79-402e-a275-ffa326b6d294",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b548ce75-934d-44cf-b898-4372a4dd75dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae06b20-5319-4fb3-ad8e-5f12b1122908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb064cc-c375-43c2-88a9-35f18eb816f2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1843304-6210-4004-8f42-21c72bde0b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fb1455-8d8e-4028-8d3f-fe727330e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b6de3d-4acd-4b2a-8520-e086b50606ca",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f2c232-c5a6-4c61-9dc2-f573b77ebc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5c24af-d015-4563-8293-bf66f3476634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf9ab90-f81a-462f-a2c8-92dbbe0ee2da",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd14d14c-1da9-4403-9649-dd329bc73406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f0075-d059-49fc-9065-80b11ce7a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d271115-7683-4697-aac5-a9f6b00ad8d7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c39690c-db73-4636-ba1a-6b4233b4f186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a33271c-3324-4b82-a1a1-2e5ead328ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ea6e7e-1677-4e88-8055-bfc3cb93d1b6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1fe7d7-220c-4153-aa02-13a7b2a9bb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a65e7f-6e51-45b8-acba-ed1972e24d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14d0d1a-9202-4102-ac21-dd49f09dd0f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d7733f-b178-4a64-8eac-590b528cb6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81e7aa3-767e-495d-906a-fb104618d176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff5d520-ecf5-457f-b5ed-e7af672f8568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56f8b18-96a5-410b-bc8b-cdb88f205474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fbfbca-fe6b-4064-bc83-c85d1dce9dcf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992a2a46-9232-4850-a05c-23ea802a04d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d9a38c-8e11-4a5d-8217-2039a8910fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4af1b99-dd6e-4156-ae1e-6262514c3a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec0bd15-edb6-4ca7-bbed-43b14cd27f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2141a4-4b53-428c-9f9e-cea8ac3dda1a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3454fbb0-2ae9-4d87-8cd1-ca595897e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d9186f-2dc5-452b-8b10-46309c7c12a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4baa1-9c1d-427f-b491-6728dc1d6845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb8d8b7-4653-4ed4-b598-552695bc457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d45727-812a-4fea-83a6-0398854f6fd5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e2e02f-4611-4ee3-a441-b9dff78fdfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c5735b-a178-4eaf-9f2f-ad519d72c9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41dd1db-ec04-40c8-85b9-8ac6dd51ebe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5333deb1-b37d-4714-a7e6-b36880cc6b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fb40b2-636a-4bc2-ab36-1bb844d6cb10",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284fcb8f-d0a1-4547-a321-9beaa91ea225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfe2645-b5da-4914-9dfb-56dbc946d505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e824e815-19f5-4d99-94e4-5b266914133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff6fac1-1231-444c-afcd-999f0dc8f422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8abf9fe-711b-41e4-baba-8937b6ed2803",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866f5de5-2f8d-4cf0-b119-e319cc0c2633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a071ea-4025-4462-b07a-f41fafcc9f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779224cf-871a-4003-814a-2a8df9fafe0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2e3678-13fc-4105-ba48-57628da52fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f7aed0-b38c-404b-a5f1-b6ffa032359f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75d48de-9cbf-452b-a109-c4172dcdcae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bba61e-21e9-4d26-ae5b-309662061c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49898c9f-dec2-4fd2-96a5-edb35cd86a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bb45d6-24c5-4d6d-94c2-edbcb21da445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897f0e1-99ae-46b1-807d-e0e34c78ced9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42690d17-621f-4dad-a615-06dc52409262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e97b5f-1402-4f41-a3a9-75507818a194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3075de-866d-4904-8d26-26ab0ffd3d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d9f048-623d-4da2-8dc0-7c0ddbf15524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a17f06-a85d-4baf-b713-b111a786d3da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c2f49d-ee37-45c3-84e1-c93035e75b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30a683e-ecf6-4ee8-b7f1-3e78966890fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a454770-9aa3-42d7-8783-55a78fc4420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36963b20-5d56-4fbf-9cb1-ae0f88a5ff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6804bdda-d044-42d8-9f54-f18965fe2ece",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7916926f-c82e-4e8e-8b46-7af86a34610e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3999c659-59a5-46cf-b45b-59e3c95a14af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9c4410-82d2-4297-82e3-3af45f895815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2a4b0b-4c7a-47f4-b340-f5ae721a5a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf624b7-5504-4238-9283-b4b052eab715",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e63eb15-376d-43f8-b503-d99a1f4c148b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db59e52-1bb8-4005-a08e-c126ce03bd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f726266-2067-4efd-805d-72aca8af0764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a2e4be-c862-4882-841c-6e7f39288cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899d6167-0c67-43fd-9c79-43b50fd92563",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba61cf01-c7a2-4e86-83af-899c710a0c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db703ed-d2a0-4316-8d7b-f89764b2d3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9391d4e2-43be-40d7-b2a1-d8e9bf1a1ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16cf2e8-b388-4e6e-bde6-e0c96792cfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f46894-191b-49fc-8aae-a6244e7c899c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc86a019-47a1-42ae-ba31-d668f671d74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718b8b0f-6585-44f0-90c8-eb724d83cd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e12d76e-e6bc-4704-b7c0-aa9146050b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816dd438-f1ef-44de-ba26-74321078b5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53663300-862a-482e-b539-149d7769e97a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de82fac-0e36-4b11-8d0b-f4d357581e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b740be0c-a584-410b-9c84-770900656963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d21722-bc72-4bd9-afba-e47bb2c9aa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2ee60a-0a9e-419f-82c1-65998c5de470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60ce124-9a6a-4c1c-a4aa-3918298e5816",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8bdb4d-aeec-4e18-aa3d-7539c84998db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f8c992-013e-4544-8a06-aef3bbeb6ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d71446e-2bd9-4fa3-b197-61f8258f2cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e7c290-1362-4609-88bc-1d2caeae6bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7be42ef-a991-4e8c-95d3-82eb8adeb966",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c434e671-0192-454b-b87a-4468c4d0d48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a729291d-eb91-4893-842d-4465b8a20492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4602e33f-7ccf-4c8a-a242-1bcd2740a0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc34c6f-964e-4086-b6f3-35e2925e5949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc3915d-b8c6-4688-a7d1-96379c9376a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c412ed-d743-40d5-b7cf-d692e501abc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4508d0-2533-42cb-8f99-0cef79aed90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115dea6c-d38d-4680-a3d7-b90254d4b930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d755020-389f-4a13-8413-b695199b32f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a2a8c8-8397-44a3-a1d6-4533bff3ccf5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9dcc24-d5e0-4d91-9b6b-5a47fe04d8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86712e82-a64a-403c-9c9c-99115aaefa4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ae87a4-3106-407b-bf5f-eabff9f2aa52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b15dabb-be5b-4ebf-ab3f-dc515bc9a078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d543eac5-1455-491b-a1ed-fe9018b8bfad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8a4b9d-956e-47ca-9cad-3c09d02a6ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762d73b3-02dd-49db-ae48-0cf88e1944c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d59c59-5941-4e9d-87fa-d95a1b5a4ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed77fe10-1e73-4ef5-b9a6-03dc0be1163c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b75626-d368-4fa3-bab5-0ba69e1b82a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4e72b1-f4d3-48b5-a97f-5c1db4377648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3646f9-8aa5-4092-812b-0170db173b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bedb05f-a985-4306-baca-347ccc9b8921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d16e86-207f-41a5-8927-f11b6bedf1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1827ab-4b7c-4955-95a4-c556ea0deb7d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a65bf5-9ab1-48a8-a7b0-f1162acfeca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c837f59-86e7-4c45-ac98-59bd11c0c130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c13474-b35b-43f6-8bf6-c5321d750936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29f6d9b-110e-4370-accd-bda28a7eb21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4b3246-be8c-4e5a-8e06-b91d6666d677",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb788b4-c9d9-4107-8cfd-b6a4b665b9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d0b177-3ddf-47e8-8345-38659124d10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eda893-b1f5-469d-8840-cad7353c7748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c86c71-4d0d-4ae5-82f8-523989deb68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50575fb-22fe-454e-91a5-eb232de6550f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619dd0c4-3ba7-428d-a983-a092be799b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486b20f1-d3cf-43c3-8b1a-174d9a5db817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5216f05a-ec84-4eac-a9a7-929e24a266a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b7579a-7c80-4013-9724-861e6888602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bfb59f-f6c4-4f2f-986a-02e9fd4e2f17",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e7b59c-2786-49e1-a431-39c8bff1263e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae6b8c7-9b0f-4a3e-ace2-651d091a9ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a408e76a-53d9-4765-8930-950b30d32052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02995c1-6a74-4183-97bb-49224e0b5f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97261581-931b-43bf-b4bf-ea66c0a7250e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5b3354-f974-4dc0-a4e4-59ea460845e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb049b5-7fe5-4389-a7c3-c082301a61b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d08d3f1-f066-4951-9731-704f0ae3442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930a0c73-98c5-41ab-92f0-a8162af93060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d00c22b-861c-4e5b-a04a-902292eb6023",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869d47c1-b306-4309-a235-43f7acc99c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ca9cd2-4670-45c3-a119-11f44a017337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92649b33-56a6-4678-a5ba-9ac67929d146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd25fa7e-35b5-41c0-a51a-6a0e7c25a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07177ffd-7a4d-4405-871f-36b16e1d81c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9880ec-d52d-4c2f-815d-fa10086d3024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c272e0-8181-4c08-bb30-060a3ce67772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482538c4-07c4-45f7-b3b1-03617141d1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1317591-a1f2-4435-a4d7-3192110a9670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e5eecb-6451-4065-ba9f-1dc52f5acbab",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d32257c-774d-41bf-87f1-7619a30b5b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2edd0323-017e-4c54-b700-ca8e18884c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998cee38-f963-4611-b638-dd109fd81994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a964631-d715-4c4f-9b25-62b92c16e719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c62ec59-5d4d-4c60-8689-3987a4565eff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e011d941-e10d-432c-a6c3-26577c09c41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74aba1c-dbe3-498e-9da7-02d76542f44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d29435-a021-4d67-9d32-3f6a2c21c06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd12a3d-81d0-41b3-bf18-d1f3800edc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab38335e-a89e-4e74-a8a0-ea687f293fd1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cb16ce-1d1e-4d70-95e1-97c5fbbc4c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a898a7-87ae-4c6a-a994-d4932eebe786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f85c3-4b2c-4c76-ad4f-5fc4581dd5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb30db9a-4d44-4987-bbc5-eb5f35008d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e30429-6e3b-412b-81bf-2b03e5e821a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf237a9f-b608-4d88-a3af-70949c52de6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761afaf2-4355-4085-953a-5b319093e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e963c7-4d7f-469e-a9a1-c0f09fc374c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ae0abd-d8da-404a-89ce-7c9a53c5882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c376651c-915f-4aa1-af81-e53ad785c4f5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd58bd-6584-4976-bcb6-7e27b9267e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5b0c29-fd1c-45d7-9432-c5ae36d996b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760b3b98-9f73-415d-8a54-da20d0a71f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b00a32-7994-4b40-adc0-352e37112ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b67774a-be6d-4c27-a76e-aa22d99ccb9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc471248-bc07-412a-953d-440e4798a716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535c9c00-a6a3-4aa7-b2ed-e72d78234f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e65ab3-58f9-470f-8199-d16c95b3bf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8618fd-4371-4f0e-9907-64096a459d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c1d2f-b687-4845-a7c6-ef69279e378c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810a6a7-3063-4517-819c-89d233eac5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f302d9a-d384-44df-b993-addcf8966cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af456160-84af-4a22-96ce-4c5747fd7c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2a807d-c55b-4e11-a3e5-655da2be1a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a570b61-a263-49b1-9999-1af1669946ed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755c0529-457f-4b91-901c-b010ab5787dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba87bc3-f37d-461a-8bb8-0c0bc4bd8b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dfebe6-754c-4565-a633-b5ef79e39e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9928a461-f54b-40c9-abc2-5f45c3fabca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cba997b-58da-4e41-afe7-1cfb36f9ef79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65445f2a-3aee-407d-8e54-50652be11eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826a3f87-8f88-4f65-96f8-6c6ad8e4ee1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d94f84-91d5-4be3-af6d-bcd4bf7ae9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7292abeb-702c-4595-aa18-2f9a58ea99a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94272cbf-c491-49fb-8777-d661eb8613ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316c4b2-60b4-4d34-a355-900271ffddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a346d61a-7910-4937-831f-2044cd36189a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada28aed-8b95-4efd-8ac6-91dd4ed43e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf25d838-a4e5-48a5-90a0-ebb47fa8982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de94792-4027-442a-b59e-71c7af9f5e8a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84dc866-7d72-42cb-a93e-7ea121375cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370eccf5-d05f-4bb8-a0f9-72aec9ea6910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f65773-0ac9-4c2b-9257-be2069571a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ce98a8-bb01-4904-ab31-4fe574b57ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eaa247-b55f-4e68-a42c-7ad09d276f68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a37648-716d-4fb1-a73f-2e0c76370b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123d6bb9-955e-4f38-93ca-396046d907bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de1ec2-1c6b-493a-a9ae-56bfff193de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4475d45b-13db-4565-afde-d4fc2c1b3b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea897356-1a66-4bfe-821a-be6fcbaf1b5f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62452cd-9def-4466-b6f8-0ffc16aff774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567ea01d-5883-4c91-8aea-c5ce3c08013f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d57a135-3043-487b-8910-f51f0feac1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662f3509-f24a-4fa4-9d91-0f4de61a1509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717c579c-68f3-4c4a-9e52-c513c460709b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb98d8ac-3415-41e5-bac7-5f6301ce972f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b433a-fcce-415b-ae30-af0dc9e47b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc68278-1d58-41ab-846e-a82895c54a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7d6651-4d52-4cb3-b8e1-02c01179d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668a01ac-4505-4c32-a772-cd78b04dd915",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ecb73f-ec53-4322-a3f0-2b1e93f8bb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27278151-2169-4ff7-b8ab-e435688c0457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa70cf06-5919-47e8-8529-8a0189832f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397bf8e3-f177-43ec-8cdb-f13b42c9c8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69323385-b3db-48b6-8b46-07cc07047b2c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fa700d-4cc2-4754-93fe-a5995496a91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cea0b41-a95f-4e52-92e7-d781899527a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd419ce-06ca-4b0d-ab0a-aca02a7ec114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb85ad5-d747-42b1-b8cd-61345d63baf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd94e3f4-7639-40ec-a040-17db0b4ca25c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852947a0-30e5-49d0-bae1-01d98f4e0bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7daa2b8b-65b3-48b4-8f6f-1f2642e373a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e5db1-9fe4-4602-82b6-c4c929395484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ef3de0-58c6-4f69-bc12-8cb3a0f0de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b61ece-7d4a-42a2-9a81-386fac75b98a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c205bad-b42d-4213-b8e6-27cfada24637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8f024e-77d3-4084-9413-f53ff636e2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0ec798-76f4-4383-bf4f-6d2ea3645f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe355a9-75b6-42a9-a83d-e0c833df10db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cfcdee-24cb-4955-8b2b-e836d64d2a6d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3921bca-057e-4d78-96d3-a932608062a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c104751a-d142-4838-8b86-ce7650e5e77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e77039-95ce-4bbb-bc7b-3f04783603c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ea2a7a-432c-4d78-a8d8-44241bbc25ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bc8363-23dd-418d-b773-74a9f16d9e49",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d12c5a5-35b6-4603-b8be-fa7cfbfad147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1961c94f-b18e-48ba-b1f7-fdd266d25b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3d93ef-1421-4929-91e4-bf86ba118613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9467bee0-87e8-452e-95e7-da12ef05f5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d958edf-7ffa-466b-ac8f-a62a1bea164f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52103700-d1ac-4286-b7b3-7d678820cd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dff9d6-7dbf-4d10-9cef-b555a672bb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b3bf48-706d-4c1b-a831-5b347da1d70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d99c06f-204d-4674-89ae-31c1090af143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d1bcb-cda1-43e7-9b01-4cda8129cede",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04a856f-1f46-4927-b45e-ef999844d35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5b80e7-f414-496a-902c-e5c360ea5d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd3da40-6e32-4a51-9fbe-f39a409d0bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea9b599-dae1-4adb-815a-c4aa25bda9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cd8065-4c7e-466a-af59-72462d4b0ed9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ecd62-d1f7-44eb-8f84-53f58e7ad96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ebbbda-e7d0-493e-bff9-50ad7c01b16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9334c55c-d15f-4cb5-b310-dd07ddff265e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9a80f3-c91c-4733-9dc8-1c1f29e9c026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e78a17-5da9-43a6-a5c4-fd985a69f108",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a476cc-4e8c-4b1b-bd53-a057262c2681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9953244-7f15-4c98-bc4d-12c98e540dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73335b1-4080-43e2-be12-94f04cfab35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2a1626-99ae-4774-8939-ada7f366f862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b848961c-8e81-46a7-a6fc-f99c3c6e5076",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a6c834-b0da-4ed9-bdc3-4b34a54601e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda8240-31c8-47a1-8181-26480ea8f598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437297b9-3cc2-4d77-9505-071c6a47a5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278ef350-0ed3-4729-bb76-4acffae8f725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528f1805-dc28-4cde-807e-536c917b1453",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd523b0-7f40-41f1-a569-a20d19ef1466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793604ca-0d1b-4bb2-a150-68ee68cf1261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609ce997-d234-4731-b6d9-c0a28bad30ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ec8f6a-6197-43ea-815d-876b5b398f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeae0ee9-2d6f-4820-a2ea-86acb1673313",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22301d9b-17b2-4852-9452-19d966f08259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93914b33-1d73-4b07-8c48-c642c3d984ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6120ab0d-6b2f-4d61-8224-fc20aaaf37d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88f3a51-a464-40ce-ba3f-d7e3bda190e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fd35b0-af42-423a-bf97-0711e4675c2e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7bac33-487d-41ee-8c0a-cdd2c6068d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516da8f3-a663-4dca-9a40-ae55a83db3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc715070-67a8-4fd2-ad1f-e5e2c582b111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209d1dec-7767-4302-b88a-e062f6b9c542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6724ba0c-149f-4a58-8762-949dc9005062",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dbb6e2-cd8c-45b7-b13c-82f2320577f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851529f4-5791-49ac-8d77-535220046e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fb4674-1020-4c3c-849f-a1602313ffb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf7299e-3303-4617-a5dd-e95820c350fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d284f6d-389a-421a-a735-d5b529c24e0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0a5a20-8d85-4cd3-9574-b03b311144fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6674f31b-9af5-4385-90f3-f4054bcdee6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915454f6-bb95-42df-b24e-e498296a4eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e745760-95aa-4a09-8df0-6d7810334bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af60a8b-28c7-4b96-843b-62e3980682a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0de9995-d6fa-4dfd-a0b5-656136f17c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07792db-10d0-46ee-a781-c71bb591fb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b607bf-e5c2-4ce0-ab70-cd97465e8803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4386b8fb-8528-479d-a2b0-6945c4395c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d80a6-1ffc-4ca0-b9be-5192f70a3cc9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcd4d6a-5ad6-49c1-af2b-458950fc7bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f5834e-d08d-43b7-8ce8-cf2a1ec52832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3fa2fd-c1a1-4498-9e50-e9d26edb0954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3901b16-bb90-40ff-a6f4-a5ed9250354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072ecb6a-a33f-4455-99bd-2894da679db9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1c7eff-9e91-4c58-b3c0-e4c1ad0499de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65688421-253a-46f2-bac6-fa00c8e24bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb0c47f-779c-42bb-a17d-4e3258a98e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eaf805-6108-4eb5-8b9f-bd232ff04dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9065ebab-3da6-4e1a-ba6b-388e4a21a81d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954399e7-ac33-4704-80fb-86d673d8a016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9a81aa-dbf3-48a2-b0ea-aca9dcab80b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1c9208-be0f-4317-bdda-3744817d30d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7839ce-309c-42bc-bd83-4068cf5aff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1981865a-2634-43c9-97e9-18e605a33173",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41643336-4942-47fa-92a6-835ee5d7f702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ee6a97-4336-4933-bf90-1bd6545da6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb191a-9302-4e3a-918f-5308d01b60af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27472f9-ffbe-4200-871f-90d64fd1152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a32ccbd-71fe-45f4-9649-2472d2e365b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d58848-d941-41b6-94f0-ad7c93184e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b837e6b-8a07-4f94-87dc-80e6b58876bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a7062-7e7b-4f46-b2c8-6596a709d057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77eecc0b-bd45-49ce-8e38-3aada6cd3c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff65f0-4607-4583-b6b2-cfeac20b64d3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369d7452-10a3-409b-809d-36f32020945e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2f5cc0-7edb-47b3-8932-ae186aafdf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deebb7f4-bb3e-4d8b-8ba3-11f8eaff8a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833c6140-ea1d-4fb6-87e2-df50df0c8398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a756e7a8-6d98-4f05-a6a9-7e86d11cf237",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e94c8-a0f9-404f-b0da-41d2d1cb28e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91067d04-adcb-4026-9fbb-a3579144320e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d034863-5af3-4dd6-90b7-0c52bce2d14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686a3c86-cb81-4ee6-97e5-15d45cf73fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92b30f5-0234-46f8-b0ff-6c7a218dd843",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1714f17-8a52-43ab-8c6f-35f03f563387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad64b9d-277d-4262-89a4-fdad6fa9ab86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe33427-6ecf-4140-83de-123db0669ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49223041-e474-4bd3-8a95-bfcb2b0ab194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e1c7a2-13dd-4f0c-9442-2944fdbbf111",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04ca9b2-e6ee-46e6-924f-f9ff00c7829a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ec0034-fb1f-4d69-b43e-bf3a98c6ebdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a98764-0523-471f-9a2d-9d14ed50290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ff800c-c4ca-4af6-a0f7-8b72a3d1f611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76256831-1835-4ae8-ab22-31d173cd31c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358f6e36-f33d-4e1c-8962-78097fc1cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a51d553-4732-4525-8085-acf77adc4542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47df486a-2719-4a8c-90ec-d96cc934ad29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bf4557-3123-4df2-8646-1541919b210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f9dce4-ebfe-4f22-81db-7adac4d7d67a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96e5dea-2aaf-4378-b2c5-f0b8db84d413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d205265f-50cf-4b9e-b6de-63ac97366f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f87bc87-8e27-482e-8027-234b4f77cd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e71a35c-3efd-47a0-a682-4e0246322f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f180e091-71cf-46c3-ba1d-1da9372f0425",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb50cef6-c6a7-42ba-bcb1-bb46bf98e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f590b900-6a36-4fcc-b461-f4bf87b65bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec6aa3-51b9-4729-b6cf-b7ee7dc82c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ab9ab5-1e5a-4178-ae7c-9914a7379c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c481980a-5462-4d3b-ba90-df3a188db4b5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98161a9-217f-4d08-b20a-2b9732a40a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3476ff74-c166-4c01-b430-9e0d7890ce45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65ec61a-db82-4b04-ae89-1a70cafab44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de880b8-a738-4c63-a55f-70bc56310123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b3ae40-8cd6-45ac-b23d-54016ba8b7c1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df950546-10e7-4d28-a126-50f2058af286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9af2631-f43d-4deb-9b76-518fd6c739e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8afa513-37eb-4e68-b0a8-78ab2ef45236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9f8cee-0fbf-4cf2-b724-0e4d6a441e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf1b5b1-aeac-411b-b021-1c04a58cfb6d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c277621-2542-42ff-a15a-57760e1fdbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5410e824-097a-4712-a47c-23e22b64730d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365157ac-1081-4aa8-aa01-e89cf6ae25c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bceeb3-3c4b-4044-ade2-04987ef324a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88eb732-6712-4da3-a6c0-77f375422866",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58984d25-54f7-4238-9990-572eabf5b9e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9c7a21-c482-445e-a6f8-f64cae3ecb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef7b29c-87f4-450e-bd57-a9dac526b1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a352fc7-d795-46ac-970e-a3145e2ee540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb8ae2-e03b-433e-ab2a-6efd9940bb1a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05f35e2-a2ea-4aea-923b-cb6df4664abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be022df-ecbb-4d66-892c-da7f78eb05e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b6aeb6-fa03-469f-88eb-9ff86cc87517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf41a928-de59-4c61-9888-66c044687067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ab5dd2-cf5e-4e9e-a6cd-2b7d2d17c760",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2cba40-e59a-4b4b-9148-f762a7f18680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633e40f0-6323-4aae-bc73-6fc465c970f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd97bfb5-48d8-4abe-be0d-5d97c023a1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79072168-81b9-4214-ab30-073e3dbb3d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3acc3df-8fcc-48be-94f8-9d3c54a516da",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dad858-1e68-4e68-85be-47de6ca03571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce55f99-32c7-47ea-8af6-106e1691edf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eb3521-587d-4f0b-9926-890a95851e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5c13e9-0be9-48a2-8969-f7cda58db3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbcc4e-a92e-4aa8-b2b8-cce276291eaa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89b8718-b084-4f7c-8a78-b41b08ef7ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cacb7cc-c8c1-4765-b886-407116715bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8802a4-5029-4034-8b60-5cd048d2282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffe96dd-ada7-445f-91d7-73dfec70a3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf146dd-d484-4635-a29a-85e3fa6340a5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad32438b-0669-4931-9704-2f0a771dee05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85413cdb-9cc7-42d2-97d0-9706f0fa4f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0929725-ca79-4f6e-a8bc-75e28654fbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5e4ed7-28e0-4e88-8213-cf24439a913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccafb344-3ea8-4adb-aace-d1966bf02717",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c011b7-55a6-4de8-913c-d5fa2f889621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1170940d-60c5-4656-9f45-894dabb7cf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0b105-1b55-4bb7-9c1a-ecdd5fe798cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a500cab-4bcc-42b3-b88b-6ee91634f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608aeb21-da27-4aee-a296-fd0c52a19bf2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a078c9-52ab-4f4d-849d-86cb59592dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a54a20-cccc-4c0a-b3bf-f9d42bd6f977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93deffdc-8219-45e7-b841-b56c4838da26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36a5d8e-65ee-4ed7-8720-f20c0bfa1d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f53e4-eb14-41a1-8ad9-a944d9ddd29d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875bdbba-8754-48f9-b4b1-53c151a7d53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b01e949-c6a3-4290-8b39-b4f012e6455f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf40060-879a-4f80-aa4b-0eabfe95f8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b212b34-1164-4ecf-9300-04bc058d7142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971b6ff8-1ce4-44d5-ada1-e3ab61dec7f7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdd8628-c409-4cd3-a631-1baedf249d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e51f4d2-7302-489e-af49-0b3a43ada3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385de73e-6e54-4559-bae1-294ecb522d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cd7222-f2dc-47be-91dd-ca626b648138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93082bd1-0378-4ddf-b1b6-a8468a394513",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cd7e44-1611-4168-ae30-1f487dc60191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda8fa79-2827-45b7-8173-c288a16140c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a22fb93-34a4-435f-bc4e-2c321a25e838",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a189b1-01fa-457b-912d-7ee7dd94621c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8909d32c-c34b-4b23-8e4e-5c75a0f34005",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07ffd73-d98c-49e7-83fc-69a2d8af033c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee120fef-b2bf-4ca7-9a1e-713dc9545d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5332f217-b60f-48a7-a962-114672f5e769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1e285d-c813-4942-a4b5-5061de86b560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd15c51-3d57-4d57-8e3e-e388812d56fd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc19b01-050e-4146-9726-bd6aaeb6ebf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e16d890-abe6-4129-b3c1-9905c2701998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e7224-903d-4575-9c17-a8042bcfe650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed15d40b-9e13-455f-a74c-5ba1e856f3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd00f046-e4e1-4488-85b7-f91b8ccb12aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284e29c3-eaf8-4490-ba48-93a335e7cf44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64731ba8-ee2a-4e86-9e64-8dc4b0404b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc67193-4e7f-4df3-9fd8-6557b562b198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e89430b-c556-4036-9d87-4c085d1342b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d6da3b-a8ce-4674-a7ab-07722f8f9576",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874997d-b1d7-444e-9ef3-b6118c6575f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3d897c-91cd-410b-8c88-1b66b705e3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b09fa0-29c8-45c7-ac32-2fa5fa2816a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f47949-4326-4acf-844b-d33476cbdcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdf89f3-c62f-4c8f-93c2-fd26242d3346",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80790a86-2199-4885-9c23-ff7d1730c952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593dd9f9-b162-4b67-a17d-b264daf2f764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e50022-1af3-4062-90c8-55138a521400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279b8b00-0ee0-4cef-bccb-262dcb356083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a974668-5981-45fc-b6b1-9b9bd3809235",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55729513-7a3a-4f55-bccb-b3739b34ec74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff00b347-926b-4d64-b62f-38e42b1c1c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0856fe30-d746-4fb5-ba68-2266f04389d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d79d83-c09c-4c8b-8f1b-37ec2001ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98bb6b2-4011-437b-969e-3e85f0d2e296",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e531ce6-cf26-4689-8073-0d1e1697359a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5e0a96-cf02-43c9-a807-45c03403f1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09478555-e399-4645-a063-24a470b0502d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d3de14-7d64-4ed4-b282-80de333d995e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f60735d-29ac-46a0-9b02-6aa9dbc3ae6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49e2acbf-1a55-475b-bddd-168c6e8a087d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5407462f-5194-4ecd-bdd2-7a22cbf7929f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3689c821-1b4f-44b4-b486-48aa9963430c"
                    }
                  }
                ]
              },
              {
                "id": "9ee84536-4b8f-4ba6-bd0c-028f0becf6ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dde47bf-c173-4b18-9060-cf89a8ebbf51",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656f374d-3b23-47ba-9797-c4dd173dc216",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4b4e857b-8fc1-44e8-b23f-1d686d107d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d6ede1-8f3e-4e93-8fed-baba6f490109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e33428c8-6e84-4da8-90c8-56616d2edbe6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8e9a3ff-b50d-480c-9038-f4b7e0299526",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ecda176-46fc-4e10-898b-1314a0c8a3b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1574eba8-5546-445f-8a8c-d7622cda7bbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74b638e5-917c-4e1d-bc28-3ba16a647211"
                    }
                  }
                ]
              },
              {
                "id": "aa0b0322-abf0-461d-8917-8d0f425f2d37",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ec82e41f-8d41-40fd-ba71-57d5c373b4eb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ebfc4a-6900-4a4c-9f30-562b1975e099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df0d46ad-90b1-4342-9b03-6b9bdac5ab20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c31829-1834-4dbb-90fe-ad53714d30a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d0dc1-6a76-4786-993c-724e4ea2d665"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e213f036-eca1-4f1a-904c-ac9a9169bf48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccb6d514-a847-4844-9f16-0c7db99c435c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52246f61-24db-4b72-a570-412fd917ac7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e20a9d88-e2fe-4c2c-a951-90d074060199"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d4f3581-86d9-4218-bd8d-1df6dc1b824e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40608aed-cac0-47a8-b012-beeb03ca4f3b"
                    }
                  }
                ]
              },
              {
                "id": "9fe30d5f-5d49-4acb-aae5-295e9af01cb5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7732ffc8-1b62-4f6b-8ea0-6b7d9805f2e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e605fc46-88cf-43dd-b6d6-42a14c55af0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04901dd2-7094-4fc9-89e6-d1b73508c6ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "861283da-fc42-42d6-b9db-f5aaa178b82f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4725f9a7-153b-4d1e-9e5d-8557901dc55e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a49fda6c-7026-4794-9b41-bc235b8714c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d5ea261-4cd0-4eee-b433-9d1daf97a7ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72432d38-b050-4156-8ade-bd80f2c836eb"
            }
          }
        ]
      },
      {
        "id": "eb26b1cf-bc55-4b25-8543-7632c6003a6f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5c561a16-0d15-4618-b264-78a75ce65133",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a7f7503-8774-4ec1-ad33-67d9020587a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "716d38a9-2c33-4d9d-bec4-28c145922848",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebbc84e-3762-42ec-8a89-355972fa4703",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9faf77dc-934b-41fa-b97d-8edf6a1f7d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b78eda-40e2-414c-83e2-54b6f07f527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e0a89bf-303a-4d0c-b71f-6d12d6c8ee4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "402cc449-f7a9-4d8f-891f-f7a0bb0cb363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7af1a13-adb2-4b3b-8262-968af9abd440"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ea205b-249a-428b-8ed9-dbaaf5d6194c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e568776-c052-4f9b-827c-5ae671080d01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bebf85a5-5bea-41d4-ba16-878353aad612",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3e88aa21-fc66-41d1-9817-1114501beb38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d21afcb-c626-4ab4-be82-282ad4196319",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f335b6c-5d0c-4f80-90fa-14f8ace6dc72"
            }
          }
        ]
      },
      {
        "id": "e0868fe5-3030-4c31-b18e-4071d38178bd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf0b5254-f039-4e7d-bbbc-a0675b3709a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e76a179a-829f-4dff-9f81-a027b07e1f89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0119e45f-e553-4f06-90d4-fc420e656df3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae83c710-c7b5-44dd-9502-4c7ff173b18b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f972f8-caab-454a-afa9-91617a92401d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c075ed0-a305-452e-9a76-0789ed2d83a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbee8971-7c31-47cd-9070-dd248803a995"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fcbe3f4-741a-4b7a-8266-9044006c7823",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de02f272-fe1e-4cef-b89c-4212eb6241e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "012ae53d-c118-47d0-8b62-356383c51cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d4ba0f1-6a26-43b6-97d6-7c334dbcb006"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea665785-ad3a-42ff-8c8e-3c42d0884857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b7160aa-02ab-490d-b247-92b691db1d04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fb94e1d-322c-4633-9135-5de7a8a05885",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dff2841-5a38-4e71-ad2a-0556fbebc2f6"
            }
          }
        ]
      },
      {
        "id": "8925c23f-c9a6-4d67-a00e-50114ad2b907",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a9c44ea9-3962-47b4-8ff9-7e396e3d1286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56a9a0ce-3dca-44ce-a5a6-a3a113153539",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e64abdc0-c025-4cbd-9685-6eeb902e00c3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72de50cf-e3de-4e45-a7d3-8202ef5e585c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfe43215-088d-40ed-9067-5fce31cd338f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d17ae87-f318-44b2-a0d8-57501e043545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf4e7f1-9c46-4f5c-9403-b938b58fd3d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ced6cc8-7edb-497f-98a6-766eef4ed659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec91b9b3-c166-4274-986d-98edf0fbcc75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7e902b-02a0-4a1e-a51c-8e96c9b32feb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caa1adf1-3a43-4b70-9e59-f2f2ea98c3b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "353ccc02-5cb9-442a-a489-b4da6c3e3bac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99723790-6862-47a0-8d79-3ca45a9b9e1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fa57d17-1555-4ff6-92e5-c8a1b5976418",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49fa57d1-4cab-418a-aa17-543ec6bd912a"
            }
          }
        ]
      },
      {
        "id": "fb20fb05-f867-4177-b29c-a13cc357fc6b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40b2b126-402b-4f24-8c8f-5630f501fecd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eae2f9a0-7899-4f9c-bd84-87ebae86277c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27e00368-e6e1-4a4b-94e8-14a491f8c238",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "deac9e86-7d8f-492e-a4fe-13f2c0e2c3ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f31c4c41-e62f-4e23-934b-52832c4d0d39",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.10211267605634,
      "responseMin": 9,
      "responseMax": 365,
      "responseSd": 30.568673480435862,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697330197215,
      "completed": 1697330234785
    },
    "executions": [
      {
        "id": "5e6a0052-2a61-4701-83f4-37cc99e2fb1d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ae098081-d7fa-46f1-8fd1-54d3c39fb929",
          "httpRequestId": "ffab351a-1042-402a-b5e1-c2676c91107d"
        },
        "item": {
          "id": "5e6a0052-2a61-4701-83f4-37cc99e2fb1d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b1bea43e-135f-42ce-9a57-9fa21b4be5b5",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "a9ae1c47-17e0-49ec-8027-d86e53b55ca7",
        "cursor": {
          "ref": "2b8e0435-4d28-4c52-8a42-8858e9e0af4c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a92a6416-9388-40c6-ab30-8ccb648b49c7"
        },
        "item": {
          "id": "a9ae1c47-17e0-49ec-8027-d86e53b55ca7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eb594c2d-b54d-42e4-bf06-0b040fbf7fdc",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "9dbb9bfb-cac8-4491-89f2-e719622c63ca",
        "cursor": {
          "ref": "53c8ff4d-e7b9-4108-ad56-955a973b2b17",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "762c361c-3fae-4bd0-89d4-247978f4b4e6"
        },
        "item": {
          "id": "9dbb9bfb-cac8-4491-89f2-e719622c63ca",
          "name": "did_json"
        },
        "response": {
          "id": "96221eba-fa28-4e54-99f6-351bfe78f6ef",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2fb869-ed96-4467-8b75-6c106257cf80",
        "cursor": {
          "ref": "dad063ca-1157-4828-96bf-3a0e3e35be3a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed19c11f-09b0-4354-97ba-487662595908"
        },
        "item": {
          "id": "eb2fb869-ed96-4467-8b75-6c106257cf80",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b9603aa-f945-4f40-a40f-ee724ad5557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2fb869-ed96-4467-8b75-6c106257cf80",
        "cursor": {
          "ref": "dad063ca-1157-4828-96bf-3a0e3e35be3a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed19c11f-09b0-4354-97ba-487662595908"
        },
        "item": {
          "id": "eb2fb869-ed96-4467-8b75-6c106257cf80",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b9603aa-f945-4f40-a40f-ee724ad5557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e13565-3caf-445e-9bfb-50dc2567293e",
        "cursor": {
          "ref": "8e2de878-52e3-4d35-b347-098f01ac0193",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "75e7f3df-7c34-4290-8525-29f4c39dd8e0"
        },
        "item": {
          "id": "66e13565-3caf-445e-9bfb-50dc2567293e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f67a364f-1134-48c2-90f8-ef1e6b6a2e05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa29e59-8e5c-40ab-b47b-a8feb6d18b33",
        "cursor": {
          "ref": "b5e8c545-b03d-44a3-9cc6-baa702a54d3f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "634f173d-3924-4bc8-991e-7a10fd0425be"
        },
        "item": {
          "id": "1aa29e59-8e5c-40ab-b47b-a8feb6d18b33",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4d15c529-45db-4883-81c4-68c626aca63b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a676de-4475-469e-8948-904509f509fd",
        "cursor": {
          "ref": "7c6b6002-6d30-402a-bad7-2f669abee5f9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0701fdde-6de6-4a14-aca6-01760513b949"
        },
        "item": {
          "id": "53a676de-4475-469e-8948-904509f509fd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "becc5fbc-9f63-444f-9888-278da22f010d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a709ed-0e6d-4c89-a4c2-ace47c9a21db",
        "cursor": {
          "ref": "cce4f9e5-6806-468f-8d68-9947354eaeb3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e563165d-a55e-42cf-8006-1e8236744fcd"
        },
        "item": {
          "id": "48a709ed-0e6d-4c89-a4c2-ace47c9a21db",
          "name": "identifiers"
        },
        "response": {
          "id": "40af9c15-b318-47ba-ab7d-13e2e6dc8526",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104a1ef9-a188-42fa-9dfd-8f34c15b85ad",
        "cursor": {
          "ref": "7b6d16f8-7833-4dcc-a374-a6f7474a630f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ae4dd59-5d29-4d37-8647-6c3fc1c879aa"
        },
        "item": {
          "id": "104a1ef9-a188-42fa-9dfd-8f34c15b85ad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "af2c1eee-d58d-449e-a6b8-e66cd1fc06d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bbcff6-abe8-44cd-8436-3e4b32fc6370",
        "cursor": {
          "ref": "75c5b432-21ae-44a2-8343-86604c4b4db8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cf5a7fad-d416-42e4-8875-35b89d445d2a"
        },
        "item": {
          "id": "f7bbcff6-abe8-44cd-8436-3e4b32fc6370",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "da8162fb-317b-4bde-b29c-adb0d03552fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73aed98-891e-4946-83e7-de3252c710e4",
        "cursor": {
          "ref": "c8f0687b-4f2f-4ba2-aba7-476935600aec",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3affb32f-670d-489f-9f3c-d54832ea178f"
        },
        "item": {
          "id": "e73aed98-891e-4946-83e7-de3252c710e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d4381937-ab61-4e75-b5b0-927dfaea9b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0fd4f-4078-43fa-84e0-53003c6f6abe",
        "cursor": {
          "ref": "1d39e5f1-13c0-440c-afce-355ec88dcce4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3878066f-9188-4f55-94b0-484c1e67dc32"
        },
        "item": {
          "id": "2cf0fd4f-4078-43fa-84e0-53003c6f6abe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c09738e-6db6-48ce-8fad-d5b6c40911dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671c448-3d85-4d7d-bd7d-aadcfcaedffa",
        "cursor": {
          "ref": "dbf76dfb-9415-462b-b590-f9523c7f6340",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "429f7101-ed5c-4a7a-9979-aed91ef17ad6"
        },
        "item": {
          "id": "4671c448-3d85-4d7d-bd7d-aadcfcaedffa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "66ee6d21-eb75-4c15-9dd3-c683f9c91a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3bddde-09fa-47f1-a411-9e929dcfcfec",
        "cursor": {
          "ref": "084a258f-e27f-43ab-8b4a-bad39547aa38",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8275ef2-b7a3-43d1-a99a-e0f91aa21cb6"
        },
        "item": {
          "id": "ed3bddde-09fa-47f1-a411-9e929dcfcfec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51e8a678-702e-45e4-b579-3e906dd864fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89a0068-199d-47c2-a68a-14b50232e1ec",
        "cursor": {
          "ref": "274800d7-34b9-4961-b259-ed1abb318234",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "86c7bc04-07ef-4a9c-ae82-0217729510ae"
        },
        "item": {
          "id": "b89a0068-199d-47c2-a68a-14b50232e1ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "edd6a8bc-132d-4e6e-8120-647495765ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6767657c-c1fa-48e8-90d9-f150478c3169",
        "cursor": {
          "ref": "4bf964bb-237b-4cda-9e84-57ba9aaa7515",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9193ac25-c63d-4c54-a508-ff606f0fe0a1"
        },
        "item": {
          "id": "6767657c-c1fa-48e8-90d9-f150478c3169",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0756fd16-f813-4ab7-8875-df23a27843ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304a916b-c068-4f15-8751-e3aaa250afff",
        "cursor": {
          "ref": "7dc8225c-ca4d-45f0-a561-eace03b2a1fc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3b02e687-7a37-4965-9c8a-ead10af29697"
        },
        "item": {
          "id": "304a916b-c068-4f15-8751-e3aaa250afff",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "818d0265-77c6-4c0d-8690-b4faddc446ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b605bad3-36cb-4c95-8ac2-d61114a55700",
        "cursor": {
          "ref": "e15b8e3e-3fff-4f09-b4b5-32de28b2a90b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "16b2aab3-323f-41b7-a30e-3104d3d00fe6"
        },
        "item": {
          "id": "b605bad3-36cb-4c95-8ac2-d61114a55700",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "742b8a65-8cc2-45f4-96de-ae2aa196e04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da2738e-b45e-4f59-9b2d-981ede97e0a1",
        "cursor": {
          "ref": "bac93236-ae2a-47c9-bf36-3300c83253bb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "729091ec-7efa-4c27-9ebc-d41719a01d2a"
        },
        "item": {
          "id": "3da2738e-b45e-4f59-9b2d-981ede97e0a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d02ccc0-f5af-4543-9846-f76f11b2cd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5322bba-5426-42ab-9ede-d8771e5d3de7",
        "cursor": {
          "ref": "6a58ea73-b514-4001-abec-2d61934ecc02",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b07c4c2-a1a6-4922-bf14-11d7f6990276"
        },
        "item": {
          "id": "e5322bba-5426-42ab-9ede-d8771e5d3de7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a71efb58-70fd-41ee-bc0d-abec5ec8746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc79404a-c6b9-4cf1-900c-f42a462b616b",
        "cursor": {
          "ref": "bec1052b-9c70-4955-8788-96d14bbe2587",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "65eb36a3-ced7-432f-af05-d5e3b67d8eaf"
        },
        "item": {
          "id": "bc79404a-c6b9-4cf1-900c-f42a462b616b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae72d55d-f622-4bff-92ff-78d20806e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8742a1-5c3e-4966-b7df-dc53a7333e4a",
        "cursor": {
          "ref": "7fd5ecaa-308a-4786-a55f-a0923c92d886",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c6a696fe-62bd-4f61-b47b-83a330cc2fb1"
        },
        "item": {
          "id": "0c8742a1-5c3e-4966-b7df-dc53a7333e4a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b21448e-bb7b-409e-9b01-f19ad531ce80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a7fae-b765-4311-8b74-55e41033c1a2",
        "cursor": {
          "ref": "1a183b2c-6ad2-4717-b607-b0fe74a2b979",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f57188d3-f4d7-4fe7-84dc-604c4db0ef60"
        },
        "item": {
          "id": "425a7fae-b765-4311-8b74-55e41033c1a2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "983fd686-bf3e-4d9e-835b-6af293687169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71aa37b-379f-42ae-859c-57f6a61881a8",
        "cursor": {
          "ref": "8c75eda6-123b-4323-95aa-fa011852433f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e9ff286d-f824-485c-ac27-19b40787bf50"
        },
        "item": {
          "id": "d71aa37b-379f-42ae-859c-57f6a61881a8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9313eb77-b5ca-4100-adc2-3ccdfdbac55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb01bb-6368-4333-9ccc-540760920cc7",
        "cursor": {
          "ref": "85263b8c-8728-4066-9a40-27858c04bbd8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f9e04329-24a8-4a69-b612-6f438224e085"
        },
        "item": {
          "id": "4ffb01bb-6368-4333-9ccc-540760920cc7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a280843a-a21e-4618-a540-2fc1ac6d1d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6666352-955a-45c9-a614-a7a68156b83a",
        "cursor": {
          "ref": "bc2b34bd-ec6e-4672-909e-0dc4b9bc6c10",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2fe655ee-ea82-4508-b199-5e934b4314b6"
        },
        "item": {
          "id": "e6666352-955a-45c9-a614-a7a68156b83a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b8a762e4-14f0-4031-b652-4e8d8c2ddb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726d30f-c22c-4f40-b349-07b53925d223",
        "cursor": {
          "ref": "7886e0bc-f426-463e-b6ff-bc68a2872fd3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "79b2fcfa-eab1-4f7d-931b-438ab6213743"
        },
        "item": {
          "id": "2726d30f-c22c-4f40-b349-07b53925d223",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "405a0d63-0cdb-47d2-9065-ad3a74103092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90802cff-364e-4f47-be64-84897c0d3082",
        "cursor": {
          "ref": "d5cac930-010a-43e5-8ad2-a04946d8d97a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3602abe4-ffe7-4903-9d9d-c1b8ffb1360a"
        },
        "item": {
          "id": "90802cff-364e-4f47-be64-84897c0d3082",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ef8db205-85ec-4d97-a255-72c7e98c0484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3fb2fb-6147-49ce-ad69-7646bf8cb450",
        "cursor": {
          "ref": "841beede-0187-4a07-b397-ea2bbce98228",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "acf83522-a07a-4cd5-a984-46e26624eeea"
        },
        "item": {
          "id": "ca3fb2fb-6147-49ce-ad69-7646bf8cb450",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b6182968-a02f-4c4f-86ac-9fff5f621f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5834c-3822-4008-bba9-dda63bbf7022",
        "cursor": {
          "ref": "a8dd3709-6747-4507-8452-6ba01fd153bc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d2a2197-a3a0-486d-a442-b8440dfbd91b"
        },
        "item": {
          "id": "bac5834c-3822-4008-bba9-dda63bbf7022",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b26f1d0f-824b-4bc6-8474-378ef2602dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef612827-98a3-48d1-9114-c83917f7600d",
        "cursor": {
          "ref": "3c58ed4d-67cc-4853-9584-b3e266b3e5a6",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1cda8580-627b-4814-ae52-f225bfa6ec8f"
        },
        "item": {
          "id": "ef612827-98a3-48d1-9114-c83917f7600d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ab27b109-737c-466d-9859-c7a936b4874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f8ffb8-eb1e-41f1-ad31-f7192c2ada78",
        "cursor": {
          "ref": "3c7ad21b-8218-4718-ad77-b1f7ebbe22f7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "daa9fa48-13b6-4fee-a820-f97cb4fdeba1"
        },
        "item": {
          "id": "48f8ffb8-eb1e-41f1-ad31-f7192c2ada78",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fe57349f-0d25-4190-b054-7a4c48f8526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875b5a07-9723-4739-8267-37e4e42c1c2b",
        "cursor": {
          "ref": "91fb9f2e-65f2-449d-8793-a2a38dc599be",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8f568a22-7338-4e30-88ee-9bffa2ed76d9"
        },
        "item": {
          "id": "875b5a07-9723-4739-8267-37e4e42c1c2b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b823ff29-206b-4de0-940a-48822cc9fe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313fd9c1-50fe-4c61-904a-2dc7ecb8aa03",
        "cursor": {
          "ref": "4a6cf3ed-059f-4e52-9130-74fa41d5205d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "974fcf78-6f04-4719-a302-713d49b4f138"
        },
        "item": {
          "id": "313fd9c1-50fe-4c61-904a-2dc7ecb8aa03",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8355bd88-ad32-4df6-bd08-6e56071eba18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122fc7bc-f7a0-48e1-a2f2-cc4e19e9d89a",
        "cursor": {
          "ref": "e6cd87e8-30db-48a6-b443-4b8375086152",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "70fb5d5d-a525-42fe-a25c-dc3701081616"
        },
        "item": {
          "id": "122fc7bc-f7a0-48e1-a2f2-cc4e19e9d89a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "85e634c8-ce33-467b-b386-a7ac310aafb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d113eeed-9569-42c1-bbc2-5144f8309a98",
        "cursor": {
          "ref": "92e5fddb-ab63-493d-b91c-91a03b79bfae",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "332d36a9-93e9-40fc-8ade-21dd9e4bc712"
        },
        "item": {
          "id": "d113eeed-9569-42c1-bbc2-5144f8309a98",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "36ed3ad6-a6a6-448c-9296-fdcc5dfb2f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1bd849-cb54-4e99-8881-8d5a29964b58",
        "cursor": {
          "ref": "e2476cee-ac36-4d27-b7c5-4daf328627e7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8818385e-5104-44f2-ab1f-9fa5f445f1df"
        },
        "item": {
          "id": "6a1bd849-cb54-4e99-8881-8d5a29964b58",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d6aac73f-a4b8-4592-96fa-c8ca66b0e96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea8fdde-def8-4946-810b-8b69ff5090e7",
        "cursor": {
          "ref": "1171cf27-c9ca-4874-be51-54403e806440",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1ddc107b-7cd1-43c8-bfcf-b507ee7c4b9a"
        },
        "item": {
          "id": "1ea8fdde-def8-4946-810b-8b69ff5090e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e302d4a1-d6b3-43bb-954d-bb25ba823fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58eb93a-3944-4d66-a11e-7c31e1999986",
        "cursor": {
          "ref": "55e5eadd-d40a-423b-8372-4d568366c6ef",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b7e92f4e-b9fa-4906-a1ed-f2a5f4f7330a"
        },
        "item": {
          "id": "e58eb93a-3944-4d66-a11e-7c31e1999986",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "253309d7-347e-4bfa-a482-6693aaca3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c37ce9-bfeb-41b5-a744-a2d0090cd085",
        "cursor": {
          "ref": "77ce905a-5f04-4168-90d6-78dc18f500c8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b42696d3-4cb3-4811-b716-34e2946679c5"
        },
        "item": {
          "id": "58c37ce9-bfeb-41b5-a744-a2d0090cd085",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de08b485-7e78-44f5-b5ba-99380bbfa0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be690ff-ab88-41d1-a1c8-8daaeb64dedc",
        "cursor": {
          "ref": "9f336691-6e09-4614-a541-788f839dc4bf",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "11919af1-6dc8-44d5-b986-d70737b144ae"
        },
        "item": {
          "id": "3be690ff-ab88-41d1-a1c8-8daaeb64dedc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8085bd9c-88ff-435d-a219-c80fa12efb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9cb8ac-1ce2-431b-a32f-1bc244976704",
        "cursor": {
          "ref": "981ab284-7924-4568-bc78-19caa9c570bb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ef6c18b9-3622-40b1-93fb-3f1355677dd1"
        },
        "item": {
          "id": "fa9cb8ac-1ce2-431b-a32f-1bc244976704",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4aefde31-6deb-4820-b19e-d5d6b1af6eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cbab98-5e46-47a1-9018-0e1cbab7a286",
        "cursor": {
          "ref": "66da5e22-8140-44b6-b083-b4fe2cb4ea3d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2df80baf-56d2-4c18-9797-0e5e54d58da0"
        },
        "item": {
          "id": "10cbab98-5e46-47a1-9018-0e1cbab7a286",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c15ad0aa-a9b6-4725-95d9-9be926223fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0990464-5e64-4ae2-b38e-59cb57c81822",
        "cursor": {
          "ref": "a5c8575c-1fad-44d0-b12b-1e82eae07cd1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "130f11a7-38e6-4d3f-8f82-c7195b33d4c1"
        },
        "item": {
          "id": "c0990464-5e64-4ae2-b38e-59cb57c81822",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0337fd24-b364-486a-afae-9c383c92e3b2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 122,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e8b0d-09a1-47f3-b0bc-fb0762f2a6c4",
        "cursor": {
          "ref": "43f6dc87-3691-4351-abe4-78554bc11a19",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "08d839b5-2946-4337-868b-282c879466fd"
        },
        "item": {
          "id": "229e8b0d-09a1-47f3-b0bc-fb0762f2a6c4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5b93750d-b661-45a7-83c4-6f1316ac2f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a57cb-1b61-4f58-a7f3-0edd0e011094",
        "cursor": {
          "ref": "912c944d-7c40-4c0a-ae5c-02f28356af46",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8dae2577-3874-4980-873d-8fe73958d939"
        },
        "item": {
          "id": "b20a57cb-1b61-4f58-a7f3-0edd0e011094",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "db36a79f-1e9c-49ad-baff-db591ec90633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8058799e-1358-4c28-9856-2cf423368a81",
        "cursor": {
          "ref": "7ee92856-bd81-4d13-8858-d5a60616693c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a779a2a-e430-42de-ae14-f9b181e67e93"
        },
        "item": {
          "id": "8058799e-1358-4c28-9856-2cf423368a81",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a3685ddf-1d9c-432f-91c7-155f214fbcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115482e0-b8b0-43a6-b933-5db7bc4ebe0c",
        "cursor": {
          "ref": "aa072d19-8b11-4b77-bf6b-b059b0b5fb5d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ee635ce-289b-43af-8562-5dd715f18bcf"
        },
        "item": {
          "id": "115482e0-b8b0-43a6-b933-5db7bc4ebe0c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9b7c8b4f-f964-48e7-8244-44fad0db18f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b133c1-4796-47de-87d2-4daac2dcb617",
        "cursor": {
          "ref": "1727948a-25af-4049-b88c-60c7caa71886",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "715f5e20-46e6-428f-b396-2c11aec09eb5"
        },
        "item": {
          "id": "d6b133c1-4796-47de-87d2-4daac2dcb617",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "be837486-2fb9-47a6-a54f-7b4f039f56e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ca8abf-d157-4aef-86c5-8aa003d02a25",
        "cursor": {
          "ref": "dc1ddec0-491a-44e9-ac0d-821530d4775e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "44808060-4b4f-43a5-a3bc-a0a158cf405a"
        },
        "item": {
          "id": "b8ca8abf-d157-4aef-86c5-8aa003d02a25",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a194ab5-4002-4c0b-bc93-64c4b787f996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5669953b-ec6f-49cf-9234-86f57584a53f",
        "cursor": {
          "ref": "3045f404-6b0c-4efa-9a24-3e34e8acc61e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "779117bd-bac8-4d74-9b60-08effa119627"
        },
        "item": {
          "id": "5669953b-ec6f-49cf-9234-86f57584a53f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "22b9de6d-186f-42e8-9cf6-b73b34a07c05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2331eb6-2e98-4f85-a080-d3561ff83379",
        "cursor": {
          "ref": "733ef0cd-e180-4f19-a859-2287f425652d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f63dc90b-ecee-4cac-a330-bac671acce28"
        },
        "item": {
          "id": "c2331eb6-2e98-4f85-a080-d3561ff83379",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c1dfb3f1-24a0-4d71-8b8e-837f41dd60b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885f322e-e4a7-4bb4-b592-df23fb49cec8",
        "cursor": {
          "ref": "83212fad-a075-4207-b619-2e40180f6f99",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b2221e85-2ab0-463b-8fa3-080a59d0cd0e"
        },
        "item": {
          "id": "885f322e-e4a7-4bb4-b592-df23fb49cec8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e830aa0d-1c6e-44c0-89c8-ff1bfc91a960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89035cf-018b-4025-ac9b-4e28d919a504",
        "cursor": {
          "ref": "85d32db2-6457-4002-b72f-8826d4d7a7ec",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9bb39f57-0a6b-4aa1-a110-baa8db6f8cb7"
        },
        "item": {
          "id": "e89035cf-018b-4025-ac9b-4e28d919a504",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4532c697-766f-4a60-8d37-e9b1fe59a5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c1d19-cbc1-4da8-aedc-f6585d0f093c",
        "cursor": {
          "ref": "1e205200-f191-4852-968a-648f9ab65bf2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "970e36e3-5a4d-4d05-b1c8-33a96d525879"
        },
        "item": {
          "id": "758c1d19-cbc1-4da8-aedc-f6585d0f093c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "41b635e4-69b9-467d-8ef0-9616eb5552ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817b09be-ea2c-4205-9db3-2851cb60149f",
        "cursor": {
          "ref": "e4021719-7cf6-4dc5-8e5e-33eb437e279b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "baad8256-0269-450c-83ab-51afee5531c0"
        },
        "item": {
          "id": "817b09be-ea2c-4205-9db3-2851cb60149f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9bf35e3-0572-4b74-b305-1a396134278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bee86c0-80fc-4163-bb2b-905ec849d7e8",
        "cursor": {
          "ref": "bef11ed5-bf68-4062-893a-f56237eefcfe",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6473b7c7-4140-4c1f-8d5d-1b3f5775ebd1"
        },
        "item": {
          "id": "6bee86c0-80fc-4163-bb2b-905ec849d7e8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c1dedaf5-15b9-4d21-a92b-391c3d095175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01331b3-10fb-4fcf-9dcc-5949be1bf694",
        "cursor": {
          "ref": "c97a6dc5-8432-4b7a-907d-6d7136802268",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dfb748e2-c381-4b8c-a3c0-cedf64f0168f"
        },
        "item": {
          "id": "b01331b3-10fb-4fcf-9dcc-5949be1bf694",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7be23c9c-3c22-4c3a-b53a-d86ae2a34512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52966bb1-fff0-4e83-887a-86499e648f28",
        "cursor": {
          "ref": "3bea2a90-8880-40e9-879a-a6ce45e6a17c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17f3ad28-5156-4e10-b5fa-942709194c84"
        },
        "item": {
          "id": "52966bb1-fff0-4e83-887a-86499e648f28",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d3767090-2be5-4cab-806e-4cc2d813639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c3fb68-7248-4814-a89e-89ba3ad29282",
        "cursor": {
          "ref": "d311abfa-bdb5-4422-9959-99f4d9e3720d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "20f89f20-0798-4cf7-9b83-c0f5fe2edec0"
        },
        "item": {
          "id": "01c3fb68-7248-4814-a89e-89ba3ad29282",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5792062c-773b-4332-aa55-ebc80601c2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d69e24-e10e-46b1-9c2c-2e2d58995f3d",
        "cursor": {
          "ref": "ecd866fe-746c-483d-895f-e1ffbad07b8d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5ed9fadc-7da3-4797-8f94-eb14fc7e1b66"
        },
        "item": {
          "id": "b7d69e24-e10e-46b1-9c2c-2e2d58995f3d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b4fd72f8-c475-43f1-915c-3ec9b77b4354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69ed019-78e9-43e4-a3c8-1c22b9d7683e",
        "cursor": {
          "ref": "1de65941-3f1f-463a-a26e-a2e13b45d6f0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d5c55820-69b5-4543-ad8e-68e58bebbc73"
        },
        "item": {
          "id": "f69ed019-78e9-43e4-a3c8-1c22b9d7683e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "662eaefe-9e80-4cc6-a6db-64a14c69e84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb9c0d-c5db-4969-8d55-cc2c2a317853",
        "cursor": {
          "ref": "1ba4d33e-ccdf-4c12-aedd-294e285f9f7f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "048ae095-0bf0-4a0c-b553-2bf0f209d1b5"
        },
        "item": {
          "id": "bceb9c0d-c5db-4969-8d55-cc2c2a317853",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d90344c7-add8-4a00-a011-92e56610c583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8afe151-5b46-49ae-ad8c-7b738452d681",
        "cursor": {
          "ref": "86ae1989-f669-4a28-a68c-39a222fb33b1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1f01db7f-18d6-48d3-b84c-5a6d9f0fb074"
        },
        "item": {
          "id": "b8afe151-5b46-49ae-ad8c-7b738452d681",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dad25e00-7913-4eff-9710-91c754942691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c45f5f1-6ef0-4208-9259-fef7bd1a27e8",
        "cursor": {
          "ref": "c09b82f4-107d-4c00-8b5e-b23f92061ecd",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "034171d4-a12f-43c7-978a-7c898275bf5a"
        },
        "item": {
          "id": "7c45f5f1-6ef0-4208-9259-fef7bd1a27e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e8cc98a-9159-4806-bef2-48346bfe1c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4924ae20-43e9-412f-a5fe-95862fc8822a",
        "cursor": {
          "ref": "4a831676-1284-4c20-abf1-e9f8a2489dbe",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "41c4a5cc-bfac-4a99-b4c1-420019910d2e"
        },
        "item": {
          "id": "4924ae20-43e9-412f-a5fe-95862fc8822a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8273e791-80ef-4c92-8fd9-bd47bb7c8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ccef8-c280-47b8-9cc0-e622bd0a5fe4",
        "cursor": {
          "ref": "258d4cf1-9094-465b-9b66-a4b52cfa44af",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "95eaea3e-dfee-4dbd-9cd9-49e280fdc32e"
        },
        "item": {
          "id": "423ccef8-c280-47b8-9cc0-e622bd0a5fe4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9d42f600-a0e8-4bbc-9011-cf2a99123358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649ba0b6-9d73-4c5c-9042-7f882bede4df",
        "cursor": {
          "ref": "c6fbb72d-b8c6-4865-a904-dbfce4750ae7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97d840ed-c228-44c9-86a2-ab09c220d851"
        },
        "item": {
          "id": "649ba0b6-9d73-4c5c-9042-7f882bede4df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f05a68e8-a5da-4c1b-a5ad-f0cac1c6e518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cb57c5-f6b0-498a-b169-d180105cae41",
        "cursor": {
          "ref": "06866dfd-1124-4617-b321-c94b5586ee04",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0f3dd908-c407-4d5f-90ac-fd83a9d08e20"
        },
        "item": {
          "id": "48cb57c5-f6b0-498a-b169-d180105cae41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f848a4ad-0cf5-43a8-8bf2-c64b668b1fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc818497-dee6-4f57-9d61-30d5dd06d42d",
        "cursor": {
          "ref": "56e0b405-6d21-4477-8aa1-7c8c18de94db",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e7d188c0-af68-45d7-8f1f-2fcc17f77ab9"
        },
        "item": {
          "id": "dc818497-dee6-4f57-9d61-30d5dd06d42d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "85a85b4b-aef2-496e-98be-254d91054815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bedc8f4-31f4-42cf-8b32-d8a64fd27749",
        "cursor": {
          "ref": "208bf119-6f0d-40e5-8d61-798b34dea2d1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "80e1894d-9cc9-4099-bb6e-9d3cac4be77a"
        },
        "item": {
          "id": "7bedc8f4-31f4-42cf-8b32-d8a64fd27749",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d4a6a75d-5603-439e-94d4-ef17905079d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4772b754-542c-48a2-9171-870200d56214",
        "cursor": {
          "ref": "d04c253c-6302-41c5-a536-999f82240abf",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d01c43d1-e030-48da-949c-a4e620994b10"
        },
        "item": {
          "id": "4772b754-542c-48a2-9171-870200d56214",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a24beba0-1b98-4a15-986e-ee5f2236f90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93afd65-4e92-40b8-8dea-573b1d18df65",
        "cursor": {
          "ref": "39b1a6c0-569f-4dae-93f8-36200e95e477",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "27801593-54af-461e-942d-64702a5b8b2d"
        },
        "item": {
          "id": "a93afd65-4e92-40b8-8dea-573b1d18df65",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "16f437fa-8793-4441-be37-810720e08634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f321d0e-6558-470b-87ac-3d53093bb5e1",
        "cursor": {
          "ref": "99378cf9-48d9-4091-baa9-521e841c74b4",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6d9dcbb-33fb-4eff-b98b-617da8a942b0"
        },
        "item": {
          "id": "0f321d0e-6558-470b-87ac-3d53093bb5e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff96e6a4-813b-404f-841c-01403d861644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1875f9-b38e-41fd-8780-61eb1f383f6d",
        "cursor": {
          "ref": "cbe75d8d-eff0-4e68-b4a7-292dc6f0becf",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f30db414-6876-47ae-9431-b8f8bd89b806"
        },
        "item": {
          "id": "0f1875f9-b38e-41fd-8780-61eb1f383f6d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9f74f883-b311-48b6-9c62-e0ee84a3d194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39d633c-ae18-457b-bd60-e471263b969e",
        "cursor": {
          "ref": "b29dbc23-840a-41bc-a1fc-695225f13477",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d927eb1d-c5e5-4299-86c2-5a2fa029759c"
        },
        "item": {
          "id": "c39d633c-ae18-457b-bd60-e471263b969e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c779379b-3751-47f0-8c0d-a36b84b9b2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78719c1a-ac02-4203-87ae-23607190b28d",
        "cursor": {
          "ref": "81d4476f-a178-43bb-b072-278a6324b48d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51468538-82e2-4dc0-b832-edf0b8d163a7"
        },
        "item": {
          "id": "78719c1a-ac02-4203-87ae-23607190b28d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35958ec4-f363-469c-b053-aee3eec78302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf72a311-a7b5-4260-9a37-caa5eb51ade4",
        "cursor": {
          "ref": "87df1644-f1bb-4e67-a160-71ba94836c44",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "98102498-bc3a-4370-9039-fa8cd70d354d"
        },
        "item": {
          "id": "bf72a311-a7b5-4260-9a37-caa5eb51ade4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cd0f0b19-30f8-495f-a4c2-6ad0183a7468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f1b06-dac0-4d23-8aad-8d46a3101b0f",
        "cursor": {
          "ref": "a567124d-b475-42a4-aaae-fe27ea939b57",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "47ad034f-033a-48ef-b990-c7483f51a3f9"
        },
        "item": {
          "id": "778f1b06-dac0-4d23-8aad-8d46a3101b0f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "911faf9e-bea0-4ce1-b8e7-84d758c3eef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8197006-8d77-4900-a57a-5d91886efae4",
        "cursor": {
          "ref": "14405454-ee6c-47dd-8758-c296d5852b5c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "918573f3-0efb-48b7-913f-cceba735ec73"
        },
        "item": {
          "id": "d8197006-8d77-4900-a57a-5d91886efae4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2371b931-0390-4cb8-a274-4ab081a8f561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e7bb66-3f69-4b0a-9b0b-956c1ae9951d",
        "cursor": {
          "ref": "852a99eb-dcdf-453b-b9b3-352a1da96e20",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1af0f592-6917-4560-8efe-dc84dcf5a356"
        },
        "item": {
          "id": "51e7bb66-3f69-4b0a-9b0b-956c1ae9951d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cc63d06d-e38e-46ad-8161-72a4ec187d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0879d75e-9071-4307-bae4-c579c027c99d",
        "cursor": {
          "ref": "b53cf0fd-5eff-4dfa-a266-6a6e78220fca",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b8b83311-3ff1-46ca-877c-aa973472c5a5"
        },
        "item": {
          "id": "0879d75e-9071-4307-bae4-c579c027c99d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "821864e9-5260-4292-bba7-103e2087f771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d4a905-ede6-4b73-911f-3f8817ed7c4a",
        "cursor": {
          "ref": "84c0c2c8-2fab-45e2-9a52-2721c2d7dff5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c9297354-3b63-4e28-80c7-92e55a4ad2e2"
        },
        "item": {
          "id": "d9d4a905-ede6-4b73-911f-3f8817ed7c4a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "77a6906e-8d64-4550-a889-b9255d84a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0719aee7-009d-46bb-822c-bb3539f2d01c",
        "cursor": {
          "ref": "6daaa955-8b09-4442-9de8-c63d16760a2d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fe2a3592-9fc0-40d0-be3d-fc2b22c51f2d"
        },
        "item": {
          "id": "0719aee7-009d-46bb-822c-bb3539f2d01c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3fd8443e-e878-44ed-aab1-3c23d2962966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab62965a-41ad-4a51-bf10-64e3536ab701",
        "cursor": {
          "ref": "a126ccd1-ab51-48b1-ba24-68c82f56a2c5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0538a862-d87e-42e9-a764-fbe3a7bef2c6"
        },
        "item": {
          "id": "ab62965a-41ad-4a51-bf10-64e3536ab701",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2d6d0b8f-719c-4db5-a392-ed88a7d4307a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a22c0c2-c7a1-4033-9fdf-0837eded140a",
        "cursor": {
          "ref": "5109659e-0cc4-4e44-85d4-802ada1bd110",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3751163-1ed5-401c-bba3-ae4ba70ac9da"
        },
        "item": {
          "id": "4a22c0c2-c7a1-4033-9fdf-0837eded140a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7fb13ff7-f0d7-4cde-883b-873c75cde27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff2850-b566-42d5-b3db-0d16bca06024",
        "cursor": {
          "ref": "161bb614-bb8b-4135-9bd7-c16be0c9438f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c19e6c63-dfe5-48a8-a0db-fd408efe68ed"
        },
        "item": {
          "id": "fdff2850-b566-42d5-b3db-0d16bca06024",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5bc2b678-561f-4c2f-84cb-5453df9695dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b7ad47-426b-4ce2-9e00-5fb4bb745a26",
        "cursor": {
          "ref": "a4a71d55-07a0-4857-a4c0-a0c0b2cd5a89",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ce9d656e-016c-470b-9bbf-2e1089a83170"
        },
        "item": {
          "id": "26b7ad47-426b-4ce2-9e00-5fb4bb745a26",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc40e7d2-0701-4828-ad5b-9f34456b8e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276e4b7-3276-49c7-b026-189250099324",
        "cursor": {
          "ref": "b0adbb5e-6e3c-4d2a-a76a-0c9dd9de5a3e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e990ca24-80a2-4cd9-ad3a-efb40f70f223"
        },
        "item": {
          "id": "8276e4b7-3276-49c7-b026-189250099324",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db303c43-f4b8-447f-960e-4e1ed3fb7819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68de458-ff49-427e-97bf-b20d50c41159",
        "cursor": {
          "ref": "7920745c-91c6-4e26-b236-8338af07e4cc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72e9a11d-03b8-4e3e-a0d5-a8be6fdc785d"
        },
        "item": {
          "id": "c68de458-ff49-427e-97bf-b20d50c41159",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1726ecea-7916-438e-97e9-e61f3daf2304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488cbc42-2635-43b4-9a0f-107ba5d36b7a",
        "cursor": {
          "ref": "c9b17e74-cbd8-498f-a10e-272543a2210e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0cc07992-239f-4d65-a207-49e13e8cff0a"
        },
        "item": {
          "id": "488cbc42-2635-43b4-9a0f-107ba5d36b7a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9c558ca-ae64-43c8-a23f-0b6556253c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aa798a-68e9-461e-ab4f-b5efbe3f094d",
        "cursor": {
          "ref": "0baecfd3-19f9-4d85-a5aa-a66522f1d0e9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bde3ee7b-96b7-4c6d-8c5e-3e4244b71501"
        },
        "item": {
          "id": "46aa798a-68e9-461e-ab4f-b5efbe3f094d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2a9e2a8e-fef2-4db6-9737-71aa9d92edbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2042f4b-e21a-4d99-bd65-8e6384ac434a",
        "cursor": {
          "ref": "18f650bc-aadd-409c-a978-2fdb686f3bf2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "90a14763-eb9f-4056-8b7d-885309fc101f"
        },
        "item": {
          "id": "c2042f4b-e21a-4d99-bd65-8e6384ac434a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8fb349ec-41f2-4446-b41d-024bbab8a6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8f483f-3566-4f60-be01-1e08e59f2057",
        "cursor": {
          "ref": "31c4072f-295a-4c99-941f-b5551120d60f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ea9606e-1663-473a-bb94-cfac0c26e217"
        },
        "item": {
          "id": "4f8f483f-3566-4f60-be01-1e08e59f2057",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4f7c57fd-c4dd-4887-964a-92452d9b866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8f5ec6-b895-438f-819c-e2bb0398fb6e",
        "cursor": {
          "ref": "8f3d2b57-2c4e-4e1e-8ef7-23d699aa0d57",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc4ac15e-f54a-451a-b54d-10bdfbb9e5eb"
        },
        "item": {
          "id": "8b8f5ec6-b895-438f-819c-e2bb0398fb6e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01a5411a-e332-4640-9bed-e37ecb5b5fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a4b817-52c3-4d71-a7c6-4e7d76a49b77",
        "cursor": {
          "ref": "5b883110-9357-4bfd-9e6f-637abd152c03",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1e114cba-6847-4152-b67d-cb8578487d3b"
        },
        "item": {
          "id": "e4a4b817-52c3-4d71-a7c6-4e7d76a49b77",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ddc27979-9735-44ec-b154-f00157aff2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239ffe3-db87-4c7d-b21c-774cc678104a",
        "cursor": {
          "ref": "7955ddf5-0ae1-479e-bdd8-f6be9718b25f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "76ac8424-8492-4537-a639-43131a7dec9c"
        },
        "item": {
          "id": "6239ffe3-db87-4c7d-b21c-774cc678104a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0c79b552-dc3b-467d-b42b-cf19172fd2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654507f2-2929-461e-b957-190951bae3cd",
        "cursor": {
          "ref": "5a02505d-3dce-483b-9319-4722f3bd7b0a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bec4fec0-714f-4d49-a65e-1fa0c7e916ed"
        },
        "item": {
          "id": "654507f2-2929-461e-b957-190951bae3cd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c00a4837-2e2d-4713-b3c2-20da3c25299b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc2dfb8-65e4-4484-a0b5-afcb9d4f4a13",
        "cursor": {
          "ref": "288f08e3-5ece-444a-b2f9-a6c74ddc2f85",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "56090ffa-66c5-4a8e-93e1-00f4c5882ebf"
        },
        "item": {
          "id": "ddc2dfb8-65e4-4484-a0b5-afcb9d4f4a13",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f57b9e92-ee77-45db-9699-b4caff71f350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05d3467-f84d-426a-a5af-7e7244c5d670",
        "cursor": {
          "ref": "3ab4f8cd-940c-44ee-a1b0-fde9d09e5ed6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3818cf8e-1bdc-4149-bc71-c27a3c681e07"
        },
        "item": {
          "id": "c05d3467-f84d-426a-a5af-7e7244c5d670",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a2ac6a51-7268-432c-94ff-893e59758e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cea0083-6e69-42df-87b5-4bc8b8469001",
        "cursor": {
          "ref": "8b012aff-5343-4167-bce5-57df1bd9594a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c4b8664-d260-426c-8293-8e85d536d2a0"
        },
        "item": {
          "id": "3cea0083-6e69-42df-87b5-4bc8b8469001",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8e8a831a-ba02-4815-8711-e9c002e3c242",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c95baae-943e-4dfa-a75e-424035a7acfc",
        "cursor": {
          "ref": "b3aeffe1-c95f-443e-99f7-939cd7aa301c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bfe8d234-969e-4ac3-9ab1-0a03a5279029"
        },
        "item": {
          "id": "7c95baae-943e-4dfa-a75e-424035a7acfc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "97689095-0543-49a9-a133-46e996232d92",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "22915b65-9b0a-4d41-b682-848cb1674524",
        "cursor": {
          "ref": "b11f2554-62e8-4702-b82d-c61bcfa806e9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b15767b5-dcb6-463d-9f78-c599653593a8"
        },
        "item": {
          "id": "22915b65-9b0a-4d41-b682-848cb1674524",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "26fdb054-72d9-4b55-93ab-dd9fdf073283",
          "status": "Created",
          "code": 201,
          "responseTime": 251,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01409d4-f4de-4bd2-96de-96774524c35e",
        "cursor": {
          "ref": "32080673-9a38-4095-b78c-a9cc6ab56fa0",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f723611d-73b3-4996-8ec3-9a44131973f6"
        },
        "item": {
          "id": "d01409d4-f4de-4bd2-96de-96774524c35e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4cac1c98-157c-499f-af6e-f66a705bf7cf",
          "status": "Created",
          "code": 201,
          "responseTime": 135,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67af745-c7fa-4a8a-850d-d9db05381a3b",
        "cursor": {
          "ref": "0929b510-8f22-4916-b8fc-62bd38e65e65",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e218e8a4-15e7-4d5b-b451-73645fc08f68"
        },
        "item": {
          "id": "c67af745-c7fa-4a8a-850d-d9db05381a3b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2032b341-c81b-4dbd-81af-8b6aaa2d54b2",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23179922-65c5-4bfb-bad9-d1c1087359a8",
        "cursor": {
          "ref": "76a0f098-5a2f-44ed-a5bb-5f3f4d0ded2b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0d3c64e9-a9f2-40ec-83b9-4ccef3ce74ad"
        },
        "item": {
          "id": "23179922-65c5-4bfb-bad9-d1c1087359a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3612c8b5-468c-41a3-96af-c94ba4357783",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "360e76ff-92a4-4b2e-9976-f6a8d2bafe12",
        "cursor": {
          "ref": "a499b911-6753-41ff-afa6-95925a3468ec",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f17d2b2-ec41-41bb-8970-ef24b5e29d1d"
        },
        "item": {
          "id": "360e76ff-92a4-4b2e-9976-f6a8d2bafe12",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d6f362d4-d71b-4102-8714-a1c1828ab84c",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6adb8-f38d-4f5c-822f-6e1235513c8a",
        "cursor": {
          "ref": "3db636a1-2da3-4736-979b-0ae9e83721c1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e05c24b9-ff81-49e1-9bbf-25819a1ab142"
        },
        "item": {
          "id": "fda6adb8-f38d-4f5c-822f-6e1235513c8a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c74c57fa-42d2-4a8a-aa9b-f67aeb26dc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461ad9f-dd72-4da9-bbcc-057907ef83bb",
        "cursor": {
          "ref": "0e24e18b-7f00-4ef0-bee3-1e0234d86970",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e3928ed3-d903-4e99-a8fd-7a664aafeb03"
        },
        "item": {
          "id": "0461ad9f-dd72-4da9-bbcc-057907ef83bb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e6734da-3f86-422f-a5ff-5d374418f281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed86e312-700e-4870-992e-632698d903ca",
        "cursor": {
          "ref": "17efdbb1-8f40-4921-bcc3-e155323ddcf9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bdb225c6-966e-462e-aa29-a87076b5c9e9"
        },
        "item": {
          "id": "ed86e312-700e-4870-992e-632698d903ca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5cd6a723-77e7-4389-bbef-072c74547881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de55749-d6fe-47cf-b975-1476515bfcb3",
        "cursor": {
          "ref": "429a92e2-928b-4be7-bdad-5ff1d9d779ad",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eee6a03c-8aa6-4f96-a79f-56ec3b896008"
        },
        "item": {
          "id": "6de55749-d6fe-47cf-b975-1476515bfcb3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5581a984-f0b6-4152-93fb-fc8f29a60aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef576ad6-82ee-4668-882b-f6da7181f3b9",
        "cursor": {
          "ref": "3a8d4519-2655-4a6b-a949-343911524a9c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "64d30f00-c493-49c3-aec9-732f7b78124a"
        },
        "item": {
          "id": "ef576ad6-82ee-4668-882b-f6da7181f3b9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "77011484-bb16-431a-9c09-3f1992f9fc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08c7222-70fc-4c93-9a80-7b144035b8e2",
        "cursor": {
          "ref": "60da8199-02b1-4070-8f69-b3090b108d38",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fab43f79-b16e-49c2-a520-58830984fd93"
        },
        "item": {
          "id": "d08c7222-70fc-4c93-9a80-7b144035b8e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89f8f8a9-3c19-4395-bbaa-b75002e76348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88263da8-2816-40f6-b821-f8d612ab4947",
        "cursor": {
          "ref": "9e46f473-aba2-4a30-90e6-04697b98de30",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "84b502e4-ff00-48b9-bb2d-1c3112ec0cfa"
        },
        "item": {
          "id": "88263da8-2816-40f6-b821-f8d612ab4947",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc87e5f6-9707-457d-aa64-624c72b0cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52771266-e0a0-4ccb-8927-83769c7cfd28",
        "cursor": {
          "ref": "036c39f6-0523-4592-a12e-529854e9cd58",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50ba4632-5868-4b72-8057-47679769db07"
        },
        "item": {
          "id": "52771266-e0a0-4ccb-8927-83769c7cfd28",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5240505-e4fd-4bcc-869c-f5f762a6bb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a421cc88-e13f-4747-908f-c6468ac1a5b3",
        "cursor": {
          "ref": "ef433221-f57e-49db-a8dd-b7198a8a4b73",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7b229a42-7d26-433e-bd35-f0f8b79cbfb3"
        },
        "item": {
          "id": "a421cc88-e13f-4747-908f-c6468ac1a5b3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da548a9c-3169-40e5-84dd-abbd2da0728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40952ca-c705-4025-b1ee-e469c4198ae8",
        "cursor": {
          "ref": "27f3f365-42bd-42ef-87c9-7192c4e88210",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5223fa98-a8bf-4737-87fd-1fee51e5d8cd"
        },
        "item": {
          "id": "d40952ca-c705-4025-b1ee-e469c4198ae8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f4d1bad2-8e1e-4a14-8aaa-902d6aafc50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c3ca30-c6d6-4905-9ab0-07979a2fdd8d",
        "cursor": {
          "ref": "bde443be-8e23-465d-8b91-95ad59c1b07b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9fdd5566-1ee0-4d7e-bea9-8d386275b51c"
        },
        "item": {
          "id": "85c3ca30-c6d6-4905-9ab0-07979a2fdd8d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c238a788-6a3b-43c5-a09d-7bd3ac6c261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82292b36-f64f-4c33-bfe3-409c067899df",
        "cursor": {
          "ref": "8ddcc538-e397-4d62-9017-57c88ff5b270",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8ef27f53-b9e4-4438-9547-a881018f35ce"
        },
        "item": {
          "id": "82292b36-f64f-4c33-bfe3-409c067899df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4903c9a5-f060-4305-8b13-5bb2ace9fcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c1c583-9ea5-4119-a9dc-ba8266d867a4",
        "cursor": {
          "ref": "7b8973c3-8b82-4e1e-b489-8f422354168a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "775b12e2-fd07-44b1-a573-e1528b4ef601"
        },
        "item": {
          "id": "70c1c583-9ea5-4119-a9dc-ba8266d867a4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "84f13b98-5450-4bdc-9cf7-ca2faf8de13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf736d36-aadc-47c2-b583-488ba3c2ac15",
        "cursor": {
          "ref": "33be3863-a089-4eeb-98d6-22835de90706",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6dff08c3-4d0c-43e6-83d6-52b9d0fc1690"
        },
        "item": {
          "id": "bf736d36-aadc-47c2-b583-488ba3c2ac15",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "611b87db-bc3a-4756-9354-9724f6295664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f448bd80-004b-4885-b822-45663bb12f6d",
        "cursor": {
          "ref": "cb37c7cd-adb4-4d41-8569-e9dc67693da1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "808a1e08-5903-4e04-b5fa-e8e8b8628be7"
        },
        "item": {
          "id": "f448bd80-004b-4885-b822-45663bb12f6d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4d04c21c-4bed-4dbb-95d0-55425da23bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38103808-7756-4b92-8129-b2d231772e22",
        "cursor": {
          "ref": "e6b68a3a-5fb5-4e8c-8c95-ea7c3d93f63d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f76b5d3-1223-444d-8538-4676527a172f"
        },
        "item": {
          "id": "38103808-7756-4b92-8129-b2d231772e22",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "88182cd3-8416-482a-a64f-46b035a927c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd68612f-84fd-480d-8494-e03eedb18bd4",
        "cursor": {
          "ref": "e095ee48-1260-44b3-a6cd-8ced05d14c63",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4211899e-2a37-4da9-b13e-c259d6143117"
        },
        "item": {
          "id": "bd68612f-84fd-480d-8494-e03eedb18bd4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d778b76e-9d2f-47f1-9248-1c6b8332c3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39938e5b-f493-4845-bb33-564117ba4bde",
        "cursor": {
          "ref": "d341ded8-4d6b-49d3-a481-eaa6a8eb6615",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d2e5bbfa-7959-486c-a417-b24e5f7742e1"
        },
        "item": {
          "id": "39938e5b-f493-4845-bb33-564117ba4bde",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "752bf2f5-5693-4e29-9742-69c46a9b9073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219233fc-1d6b-4f22-b6fb-b0aad41ce444",
        "cursor": {
          "ref": "b92d8b95-6e5d-46d7-8d18-742106944384",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "61a88257-7419-4d00-b4b1-09affd90b1c1"
        },
        "item": {
          "id": "219233fc-1d6b-4f22-b6fb-b0aad41ce444",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e38d1b1a-7d1f-4cab-9ebc-1f045a4318a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836cd162-a566-4d97-9b3d-3c6cee7d7327",
        "cursor": {
          "ref": "d7c12ec7-e54d-4964-9546-60953f41f5ba",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "62c50ff3-28b2-45c0-881c-6b80a3f9da04"
        },
        "item": {
          "id": "836cd162-a566-4d97-9b3d-3c6cee7d7327",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1065ceb1-a760-440e-8b82-a3c71b12b452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b097b155-370d-4b3c-bc29-ef7d36f0df81",
        "cursor": {
          "ref": "3581b71d-33d9-4545-a502-d4856b897ae2",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "283683e0-1598-4918-8592-f6b51aad1dbf"
        },
        "item": {
          "id": "b097b155-370d-4b3c-bc29-ef7d36f0df81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe34d744-7274-459b-adfe-9ebbfeac14a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e71d1-9450-4c31-8581-5b6011f321cd",
        "cursor": {
          "ref": "3fd2f3a7-3fa6-4264-85aa-9a2de75c3195",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a3d73f10-8ed7-4644-8dcd-5a6654cfbaad"
        },
        "item": {
          "id": "a72e71d1-9450-4c31-8581-5b6011f321cd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78446f69-386b-4cc6-89e3-361995bd1f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31483b7e-aba8-4099-a22f-2f5cf77b2e21",
        "cursor": {
          "ref": "0ca0720b-3145-4ed1-a6e0-192f9e43ebd6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "61dc2e64-49c3-4338-ac53-07918fecc99c"
        },
        "item": {
          "id": "31483b7e-aba8-4099-a22f-2f5cf77b2e21",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27dfcb04-9a3c-4c9e-8438-e1cbbbd5f482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81b3f7a-fac1-4b7e-b175-ecba3b4a57a8",
        "cursor": {
          "ref": "8cc834cb-5954-4d68-ad3d-9321d09af886",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "36306e44-481d-4972-98c6-c5702c9e4324"
        },
        "item": {
          "id": "c81b3f7a-fac1-4b7e-b175-ecba3b4a57a8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7cbd6fd1-7f80-48d7-9237-5c36d6fbfa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a241b2b4-3872-4f97-b811-73966f8fa9be",
        "cursor": {
          "ref": "37884758-f0eb-449e-a891-cbd6fbae31c2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f5a148e3-82db-4e35-9f32-7c5c511bf4e3"
        },
        "item": {
          "id": "a241b2b4-3872-4f97-b811-73966f8fa9be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ccae83a-a263-436b-8ed3-16e6667a4312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56250be0-95f3-41e9-8bdd-738abf499890",
        "cursor": {
          "ref": "cd7e970a-4ba9-4072-a1e5-3533d71900fa",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ea1e87dd-9738-4336-a02c-6c9a650d679e"
        },
        "item": {
          "id": "56250be0-95f3-41e9-8bdd-738abf499890",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a0d95fc-089f-4ff2-8017-f05f59120ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fae05c-cba4-461e-8ab5-199cb0eaf2de",
        "cursor": {
          "ref": "c70d282f-38e6-4841-80b1-c7cf8dce9341",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1d3e872b-6e6f-44fa-9010-9dd5db178ca2"
        },
        "item": {
          "id": "c2fae05c-cba4-461e-8ab5-199cb0eaf2de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0076bc0f-3903-4374-84db-6c2ea0b1af3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1efc25-c731-4a40-92d4-571b31c4b6ce",
        "cursor": {
          "ref": "26b23b36-9cfa-4f03-b20c-72a6ad5c58ce",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9e382630-d6b6-4e7b-8d80-e39a05b09516"
        },
        "item": {
          "id": "1d1efc25-c731-4a40-92d4-571b31c4b6ce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e858ce2f-5aef-4d22-927c-4a50b47e80b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ee95ea-d0ad-4e9e-8c71-b35144ea6b00",
        "cursor": {
          "ref": "74fb382e-36a8-4768-82e9-d180a5b69da8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c1dbb35-7f42-48d4-9462-f33a0488f7e5"
        },
        "item": {
          "id": "67ee95ea-d0ad-4e9e-8c71-b35144ea6b00",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "797e385d-bd63-4b8b-b502-c441ac135fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6183fc-8e7a-4d1d-b76a-2b9f01982a1b",
        "cursor": {
          "ref": "ff20e488-0ead-41c4-8137-56e7a3703f22",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "277baddb-091e-48a3-98ef-193c3967d17c"
        },
        "item": {
          "id": "9a6183fc-8e7a-4d1d-b76a-2b9f01982a1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11d450a4-0af5-4c17-9539-2695caee5778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1548c488-f747-47cc-9b5f-d7a88a822c05",
        "cursor": {
          "ref": "34b55929-cfd3-4e7e-a57b-17d1c117333d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1baa0e96-b944-4b2e-9e42-78b150b33e2a"
        },
        "item": {
          "id": "1548c488-f747-47cc-9b5f-d7a88a822c05",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4e55c344-7c99-4450-9332-3e8bba1e11a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fef6a8-8d17-4ca4-b2ca-efebfd18fe9a",
        "cursor": {
          "ref": "cdb764bf-79a5-42ff-8732-f200fc4df999",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7608a5e1-0d9c-42d3-a97e-76fe83550ab7"
        },
        "item": {
          "id": "a7fef6a8-8d17-4ca4-b2ca-efebfd18fe9a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f73c9735-bce0-497f-a2fc-520882d2bcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea98f15-b54c-437a-9397-1d105b340531",
        "cursor": {
          "ref": "230508b3-f284-4c55-9085-ed7cf9c0a0c5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be9981c0-8550-475a-8e2e-835db51a272e"
        },
        "item": {
          "id": "dea98f15-b54c-437a-9397-1d105b340531",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "734b3296-884b-4993-9e1b-60b4c716a6d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655448ee-0ca8-422c-836a-5f3e808ba299",
        "cursor": {
          "ref": "c05a8f1e-5356-4b79-871d-249ffc6a11ee",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd8358e8-0b69-47db-ab5f-2dca25910bf0"
        },
        "item": {
          "id": "655448ee-0ca8-422c-836a-5f3e808ba299",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "112f5351-a6c4-4279-89a2-cb1c012f5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fdcdfc-d793-4f14-8877-43a02db5e2c6",
        "cursor": {
          "ref": "ba19dd5f-57e6-49e3-8927-fcc9cfcdbb27",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ca4d98d9-f389-4005-9645-0a3dfcb85ace"
        },
        "item": {
          "id": "92fdcdfc-d793-4f14-8877-43a02db5e2c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "958ee9d6-4578-46e0-8ab2-0f5ba6f28e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c7507e-afd9-4c9e-b2aa-48f56833354c",
        "cursor": {
          "ref": "06e70a72-d005-48c1-a942-23539f538f76",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b12bfae3-9be7-4b8c-b036-5c1636202150"
        },
        "item": {
          "id": "c3c7507e-afd9-4c9e-b2aa-48f56833354c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "048f6c1d-32ee-458c-b3e1-636f6193d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bb3349-8cc4-469c-a1ad-fa96fb8131d4",
        "cursor": {
          "ref": "730d32fc-3b03-44a1-89da-a8be8a38c4c5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43562e0e-f6c5-4671-8ec9-0a772b2573a8"
        },
        "item": {
          "id": "44bb3349-8cc4-469c-a1ad-fa96fb8131d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "53e662ac-de8e-41c5-a3ca-f201e7cf9d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8751851-e8c2-4aec-96c3-5738dc18d998",
        "cursor": {
          "ref": "a27118fb-8ba3-40af-8fb7-cc5746246a2e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a6858fc-fb7d-4f3d-9b95-c7284d696529"
        },
        "item": {
          "id": "f8751851-e8c2-4aec-96c3-5738dc18d998",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f33a576e-2773-45a1-8bc3-a9544b914c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cfb011-eff5-4699-9ef8-9c3daf4a92c1",
        "cursor": {
          "ref": "145d4909-4749-436a-a0b9-9674e9eb4bf3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2f733b0b-7a9b-44f5-b1e1-9b9a83277373"
        },
        "item": {
          "id": "22cfb011-eff5-4699-9ef8-9c3daf4a92c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "98d37fa2-3b68-493d-93ef-e1dce0d1bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d0f595-84c2-49fb-8729-bfedfab2c411",
        "cursor": {
          "ref": "06820f41-9f5a-45f1-b97d-e8d9aa006755",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "78bc6b3e-f5f6-4580-b114-ba2c0c01a3fa"
        },
        "item": {
          "id": "b9d0f595-84c2-49fb-8729-bfedfab2c411",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9749fda-a652-4ad6-89e2-358e068e2d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac1cfc-8373-42cd-860b-2ee1395499bb",
        "cursor": {
          "ref": "8ab3004f-0c1f-4d45-804e-43aa06b8a467",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "186f6fdc-fddf-4f30-b4da-8a046b089c34"
        },
        "item": {
          "id": "26ac1cfc-8373-42cd-860b-2ee1395499bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8166f645-cce8-41f7-835c-f6e34ba78089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd5cc4-b22d-44d4-94d9-a8a5f2e5f073",
        "cursor": {
          "ref": "32c3f4ac-9a73-4803-999d-b43b334fb21e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8bea8fca-a3a7-4e7a-ae40-aaead7db8c11"
        },
        "item": {
          "id": "20fd5cc4-b22d-44d4-94d9-a8a5f2e5f073",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0a0d5cd5-524d-4c9b-ace6-e36ebbe5d854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bff6c2-088c-4e1d-b388-d8bfafd970be",
        "cursor": {
          "ref": "ef7d2e8d-375e-477e-8576-b288ee527134",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c88948d-6b4f-46ab-8ea9-8658e568190c"
        },
        "item": {
          "id": "b6bff6c2-088c-4e1d-b388-d8bfafd970be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1ea4e07-1107-4341-8827-98c519a5fa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14db8afc-776b-4382-9950-aaa0c6b659bb",
        "cursor": {
          "ref": "a6b6c63c-0d63-440f-b58c-d3b36448ed5b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83e03963-93d7-4652-959f-fe6c5325564b"
        },
        "item": {
          "id": "14db8afc-776b-4382-9950-aaa0c6b659bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1af16437-0bf5-43f6-9498-e3fe2044ed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e5004-6c46-447d-9051-fc1b41f5db9f",
        "cursor": {
          "ref": "870fcc16-58a4-4df0-a468-6434ac703fc9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5c9255f0-d83b-4a21-b13b-9c18a324c621"
        },
        "item": {
          "id": "cd5e5004-6c46-447d-9051-fc1b41f5db9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "95b9d682-4b0d-498a-b9ff-50c4d16d055f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b0d723-b70c-4541-b1d7-813b14b2bf9e",
        "cursor": {
          "ref": "5428bc4e-a60e-42fe-b7cd-3c16668c8e68",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "54359547-f6c9-4989-a844-a288a94efff1"
        },
        "item": {
          "id": "e1b0d723-b70c-4541-b1d7-813b14b2bf9e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2c1dbbd1-e44e-4edf-b076-e55469762dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a65d5e8-6a5b-4d13-a98b-0dbe55837a90",
        "cursor": {
          "ref": "468f9284-b45b-48b5-8706-8b8c95d4832d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7062af8f-e4cb-4ca1-9f0d-88d0b4964892"
        },
        "item": {
          "id": "3a65d5e8-6a5b-4d13-a98b-0dbe55837a90",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "81f8d55a-6bbf-4fe5-af03-ec7751b91608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86373091-6c0c-49a6-bf2b-ab3f35c0af13",
        "cursor": {
          "ref": "9fd7284c-2446-479a-bf37-896b541cc20e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5e7d3634-0bb6-4423-8f27-ece4e8acf34d"
        },
        "item": {
          "id": "86373091-6c0c-49a6-bf2b-ab3f35c0af13",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b8ae6dd-e22e-443e-930b-b2d56f38b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24a7aa9-9c37-4c4c-a18d-0f9cf38b446a",
        "cursor": {
          "ref": "2468b596-cc69-4a87-a9e5-823d9356a790",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f331ae9-4a87-4d27-89e8-f1160dc338cb"
        },
        "item": {
          "id": "b24a7aa9-9c37-4c4c-a18d-0f9cf38b446a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "faf5f6aa-8506-4ba6-b297-25c95e20a6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a36cf5b-0aa1-45dd-bf09-9da118bbd9b8",
        "cursor": {
          "ref": "1405ebdb-39f2-4a1f-b504-5e797b9765fd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "39b0b2b8-29fc-4205-b34b-f035ac8f313f"
        },
        "item": {
          "id": "2a36cf5b-0aa1-45dd-bf09-9da118bbd9b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0fed9692-e60f-49a7-bd82-560ec3ccb98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c002307c-5d28-43de-a8d9-6f654bb127d2",
        "cursor": {
          "ref": "75aa4369-1039-4fbb-a04f-00a268317643",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db823eaf-2c03-45d0-bbf3-a2958aca0cd2"
        },
        "item": {
          "id": "c002307c-5d28-43de-a8d9-6f654bb127d2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "955ac90b-221b-401d-8f16-985996775035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a97fa2-984f-4fef-908e-d21baa1a056f",
        "cursor": {
          "ref": "1356839a-27ba-4043-8e4c-b56760211a25",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "194b3d69-380d-4d38-af58-0801c6074c9f"
        },
        "item": {
          "id": "a1a97fa2-984f-4fef-908e-d21baa1a056f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c998982-8506-4513-aae4-d56404c4d09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fa4209-934b-41b1-8b6b-46583a249473",
        "cursor": {
          "ref": "f9fd5c9d-5267-4ade-91d0-c4574cdd2563",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ca3a0d78-d989-4b7d-b62c-0f5f5179f931"
        },
        "item": {
          "id": "70fa4209-934b-41b1-8b6b-46583a249473",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c0151ecd-5874-4d6a-a67f-a3cd500ae06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0212be5d-3db0-48e3-8a6e-a3f03b65e269",
        "cursor": {
          "ref": "91a29708-e2e0-48f2-a279-c18118710b7c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "74e00aa6-9a16-43a3-ba52-c1ac467e1c4b"
        },
        "item": {
          "id": "0212be5d-3db0-48e3-8a6e-a3f03b65e269",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7c8b1d33-b5b7-417d-9575-b7606cdfd428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dce285-e199-42bb-9900-805f162b01cc",
        "cursor": {
          "ref": "c15be939-e988-425d-9989-06b7a85193a1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2cfee121-3de9-4cb1-89dc-ddd8ea337513"
        },
        "item": {
          "id": "56dce285-e199-42bb-9900-805f162b01cc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fcd805f8-68b3-4674-9f27-6d16cb67ef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d89d220-a8c0-46d1-acda-db801bccda31",
        "cursor": {
          "ref": "570a8ec4-4db0-4bee-8c89-604dba849dbc",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9b30daf1-5c2a-4686-9e4f-c43aae24223c"
        },
        "item": {
          "id": "9d89d220-a8c0-46d1-acda-db801bccda31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "11659664-23a3-4188-a6b4-d49ce9925613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f444646-09c0-4410-b36a-773d50a41e6e",
        "cursor": {
          "ref": "d348760b-24bc-453f-81e2-5e26d14422ee",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b742f343-90f3-451c-85ba-056184dee324"
        },
        "item": {
          "id": "9f444646-09c0-4410-b36a-773d50a41e6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9324c573-63b8-4c88-a8ae-0bcf84be7540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3addafee-5c34-483e-854c-87ec4dff37bc",
        "cursor": {
          "ref": "853fab9c-07f9-4ec6-b128-23b17481cd11",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "50969fe7-a5c2-43b1-8a04-16be22b24f7a"
        },
        "item": {
          "id": "3addafee-5c34-483e-854c-87ec4dff37bc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "79e16424-6888-4c32-b193-f95b80e6ec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166640b3-d817-4edb-b1e5-b927fc1a7a49",
        "cursor": {
          "ref": "e784092c-a715-4f1e-9bd2-9757fa202b78",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d1ed146-e722-4625-a80c-02c6f45db111"
        },
        "item": {
          "id": "166640b3-d817-4edb-b1e5-b927fc1a7a49",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0a564bd9-21a8-4589-9dbe-7ee2708cd481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec58167a-0a18-4bc5-8320-0e0bf33015eb",
        "cursor": {
          "ref": "aaa64f3e-e185-4947-b511-009f7e911b6c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f40ddd1d-3f88-4a1f-893b-6b5360caabcc"
        },
        "item": {
          "id": "ec58167a-0a18-4bc5-8320-0e0bf33015eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2874342c-d1f9-4225-abbb-76d672862d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115ef5c1-2c0f-4b6b-9619-73e03f709aa9",
        "cursor": {
          "ref": "756c6158-9431-4b49-8f41-74dfd6c3472a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21db4ab0-0462-4d4f-87ed-a4536e2b1635"
        },
        "item": {
          "id": "115ef5c1-2c0f-4b6b-9619-73e03f709aa9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d5a9a2e-ddb6-4533-b89f-b099b3a54248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0097e0-4c42-446e-91b7-333717836855",
        "cursor": {
          "ref": "41259fbe-3f17-45b5-a381-82f7a18b61a8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dc5f995a-6db6-4aef-ae3e-ddcece06c3ff"
        },
        "item": {
          "id": "8e0097e0-4c42-446e-91b7-333717836855",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c72be768-550a-4fef-afe4-e2532d18d059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759268ff-b08c-4db6-b29e-afb7a096655c",
        "cursor": {
          "ref": "ad9969d9-73bd-49fa-ac3d-008e7f7eda87",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "78c0deef-7082-4d6b-97cf-fc1a277f0c0e"
        },
        "item": {
          "id": "759268ff-b08c-4db6-b29e-afb7a096655c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b19e49f-6add-44a3-bdff-40a72ee49659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa2063d-331a-459e-bd01-523a7b664c38",
        "cursor": {
          "ref": "216b3709-196b-4dd9-91ea-ecaefec21933",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "215275ea-4802-4794-a83a-6452543cbde2"
        },
        "item": {
          "id": "2fa2063d-331a-459e-bd01-523a7b664c38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "400b3142-8d17-4c4a-820d-0d545416bf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539022e-eb5a-4e04-a37d-ecc368b5f84e",
        "cursor": {
          "ref": "2194e170-2ec0-4af3-9c89-a0fef3472335",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b5ed17b6-c738-4b75-a920-5a6ede8170da"
        },
        "item": {
          "id": "f539022e-eb5a-4e04-a37d-ecc368b5f84e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fc6c8dd4-512e-4899-b01c-8a0074c3105e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b050cd6c-827f-4b8b-83f3-09d2fd454e26",
        "cursor": {
          "ref": "6758b31c-a861-4ce3-a044-e7fe8be891fc",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b8340201-51f8-43ec-9af9-49cda7e7f9db"
        },
        "item": {
          "id": "b050cd6c-827f-4b8b-83f3-09d2fd454e26",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "567669ee-3bf9-42f6-9fc4-952a5743bb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de8bef-a9f6-4bea-8a77-d358d15e10cb",
        "cursor": {
          "ref": "d64b502a-239f-40fb-85b3-1f2b9a410a55",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "96f37561-2c5a-4eee-bc3b-98b47f255c1d"
        },
        "item": {
          "id": "c8de8bef-a9f6-4bea-8a77-d358d15e10cb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7193bbf0-36cb-4ed7-8d20-adbd27a99125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe9730-735f-4024-a610-184c7e51e893",
        "cursor": {
          "ref": "be6ac92e-0342-4b6e-87f0-58575a1a666a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6df55070-c55e-481c-a934-03b0c788743d"
        },
        "item": {
          "id": "4dfe9730-735f-4024-a610-184c7e51e893",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "90fc460d-b1b6-4ac4-92d4-36f76406a2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc286ef-eab4-4ef7-83bd-421f278d68ec",
        "cursor": {
          "ref": "deb1abfe-be5d-485e-9652-fd6fc0a5a9aa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0a2a8161-5e42-4811-b2b3-3ff7a411417c"
        },
        "item": {
          "id": "1bc286ef-eab4-4ef7-83bd-421f278d68ec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b8c9aec4-89f9-48ba-8b89-4c57d0a5a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f22775-6ff3-4f67-8d23-8d576b367a67",
        "cursor": {
          "ref": "56eef494-7ed6-470c-8826-07bd8e5a98b9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "566460c1-4c90-4ac9-aec9-e47d767332e1"
        },
        "item": {
          "id": "39f22775-6ff3-4f67-8d23-8d576b367a67",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c8929f42-02ae-4779-97ab-b9499bf9c9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3184b8-2882-48db-95ac-20822a22ec0f",
        "cursor": {
          "ref": "8503e81b-aeab-49b5-b7da-1d1a62c98c4b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "720fe98b-d339-471a-b33a-c0ddb8f8fc12"
        },
        "item": {
          "id": "0f3184b8-2882-48db-95ac-20822a22ec0f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79ce4f75-6f2a-499e-b60e-c82dde3e5eca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e700dc-7e79-402e-a275-ffa326b6d294",
        "cursor": {
          "ref": "1aad95c1-27b9-43aa-83ad-805bd3ed60db",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "13a928ac-a3e7-456d-86a3-d9ee70f6bfd1"
        },
        "item": {
          "id": "25e700dc-7e79-402e-a275-ffa326b6d294",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "989e439b-5c54-4b69-a2a4-ef02101d97e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb064cc-c375-43c2-88a9-35f18eb816f2",
        "cursor": {
          "ref": "ceb558b1-7197-40d6-87e4-350e17a3c1ff",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3b457164-83b7-49b5-a63a-fb7bc8b7438a"
        },
        "item": {
          "id": "7cb064cc-c375-43c2-88a9-35f18eb816f2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "af4647e5-7638-43b2-a1d4-dac6cd0f06fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6de3d-4acd-4b2a-8520-e086b50606ca",
        "cursor": {
          "ref": "b1346b7a-a80e-49d0-8838-55117b4cdf93",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "508f94ea-4197-4f4a-897d-be9347ef4ed6"
        },
        "item": {
          "id": "b8b6de3d-4acd-4b2a-8520-e086b50606ca",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad823a66-4eec-47ee-8acb-974a24f03c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf9ab90-f81a-462f-a2c8-92dbbe0ee2da",
        "cursor": {
          "ref": "b2208130-1249-4d88-ae73-17371f9ad1fc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "897ac3ab-7a21-4c23-b5fb-e42a9a717ded"
        },
        "item": {
          "id": "abf9ab90-f81a-462f-a2c8-92dbbe0ee2da",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a289fe5c-cbc3-4e7a-8060-69c751d02048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d271115-7683-4697-aac5-a9f6b00ad8d7",
        "cursor": {
          "ref": "159997a2-16d3-4333-ba34-4fa2a8e76b57",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f41994ba-f83b-4a91-b0bd-147d014aa947"
        },
        "item": {
          "id": "7d271115-7683-4697-aac5-a9f6b00ad8d7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dd81c264-d843-428b-970a-3b74a7662faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ea6e7e-1677-4e88-8055-bfc3cb93d1b6",
        "cursor": {
          "ref": "f0e93e5a-f5dc-4d90-94e5-374fc8f9e707",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4c024be3-7839-4e9b-8ec7-6a5359e51982"
        },
        "item": {
          "id": "62ea6e7e-1677-4e88-8055-bfc3cb93d1b6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5564b27-3fcc-497d-aef4-ed28599a0be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14d0d1a-9202-4102-ac21-dd49f09dd0f2",
        "cursor": {
          "ref": "15abe630-9071-48ca-86a5-043cbe259d88",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f5b2df4c-604b-4c53-a049-708311013baa"
        },
        "item": {
          "id": "d14d0d1a-9202-4102-ac21-dd49f09dd0f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c79a213b-1160-4200-ba6d-e0d50ce41c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fbfbca-fe6b-4064-bc83-c85d1dce9dcf",
        "cursor": {
          "ref": "e3e044e6-1aee-494b-beae-482a3a15919e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "542fd023-adb2-400f-a086-14bc25794cd2"
        },
        "item": {
          "id": "94fbfbca-fe6b-4064-bc83-c85d1dce9dcf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "83939a1e-0f3d-4179-a36c-fb81675780ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2141a4-4b53-428c-9f9e-cea8ac3dda1a",
        "cursor": {
          "ref": "eae30b1d-66ed-443f-a2b1-948bd5e49572",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a806799f-07b2-43cd-b580-e663108b2e50"
        },
        "item": {
          "id": "7c2141a4-4b53-428c-9f9e-cea8ac3dda1a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1dfc594-0a5d-4404-89cd-369038802266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d45727-812a-4fea-83a6-0398854f6fd5",
        "cursor": {
          "ref": "c67bb2aa-675c-412d-b0d5-2c23cf9ebcf4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "30ca01ef-c14e-49de-8aaf-1460dedd7926"
        },
        "item": {
          "id": "c0d45727-812a-4fea-83a6-0398854f6fd5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b515acb9-28cb-4fc3-aa2b-ee0ecc8070b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fb40b2-636a-4bc2-ab36-1bb844d6cb10",
        "cursor": {
          "ref": "89cdf62d-ef72-483c-a7e7-735f8d4b88ee",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "373994be-116b-4d17-af0a-81ac400ea759"
        },
        "item": {
          "id": "d0fb40b2-636a-4bc2-ab36-1bb844d6cb10",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b3b9c57b-596b-4277-a035-cdeebcd768db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8abf9fe-711b-41e4-baba-8937b6ed2803",
        "cursor": {
          "ref": "50b6e42f-e1e8-445d-98f5-5a6d2d5d6075",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3f08a4fe-92df-42d8-903c-d86eb4773bad"
        },
        "item": {
          "id": "d8abf9fe-711b-41e4-baba-8937b6ed2803",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e00d74e0-1106-4ac7-b20c-9ec17479ce56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f7aed0-b38c-404b-a5f1-b6ffa032359f",
        "cursor": {
          "ref": "83128944-e2f2-4668-8111-16b457a1ca83",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e5dc9eec-deb0-4a17-b224-2b03f223f5a5"
        },
        "item": {
          "id": "61f7aed0-b38c-404b-a5f1-b6ffa032359f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "179d7af7-de98-451f-acb0-7fd585b6791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897f0e1-99ae-46b1-807d-e0e34c78ced9",
        "cursor": {
          "ref": "12070144-d401-46de-8e12-38c5799a45d4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fb820ede-4c3b-4004-96c5-055354933f1a"
        },
        "item": {
          "id": "8897f0e1-99ae-46b1-807d-e0e34c78ced9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1e543340-5e3b-4eab-9ed4-8fe0d701494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a17f06-a85d-4baf-b713-b111a786d3da",
        "cursor": {
          "ref": "52001d0d-19bb-40cc-ae87-428445cecb35",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "979f1c88-c936-456f-8977-9926419c53f9"
        },
        "item": {
          "id": "35a17f06-a85d-4baf-b713-b111a786d3da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c611c635-9a5a-4610-81c7-cdddba6c5a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6804bdda-d044-42d8-9f54-f18965fe2ece",
        "cursor": {
          "ref": "df98dc72-9e5b-4288-a20a-89f0d8e59bef",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d6ff8588-51d3-45fb-b232-3e0d957b7800"
        },
        "item": {
          "id": "6804bdda-d044-42d8-9f54-f18965fe2ece",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8e4ec891-b261-499b-a8aa-70aafed76d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf624b7-5504-4238-9283-b4b052eab715",
        "cursor": {
          "ref": "f813d669-0210-4f5a-b4fb-1d85fe2ee020",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0f4a93f2-075d-4fe0-b293-d8b004c5d5fe"
        },
        "item": {
          "id": "5bf624b7-5504-4238-9283-b4b052eab715",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "52c5c703-0917-41dc-bf6e-273586ea7b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899d6167-0c67-43fd-9c79-43b50fd92563",
        "cursor": {
          "ref": "730eb551-e555-4b34-a203-81887f8d7d0c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16c6db9a-56df-4bbf-a3fb-d21550800141"
        },
        "item": {
          "id": "899d6167-0c67-43fd-9c79-43b50fd92563",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "683f4289-ebdd-4a83-8b76-83eac6436c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f46894-191b-49fc-8aae-a6244e7c899c",
        "cursor": {
          "ref": "a132236d-9bf1-4e07-a2ea-33e412793a97",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "55475b68-0e3a-421f-a883-318438ec0767"
        },
        "item": {
          "id": "46f46894-191b-49fc-8aae-a6244e7c899c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "261fcad9-f007-4b99-8ec6-ff7ef8951d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53663300-862a-482e-b539-149d7769e97a",
        "cursor": {
          "ref": "6ab53779-6ad2-4bc4-bad4-96338ed569d5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ae0380a-2f34-44a3-ac98-81bee8a3c9c8"
        },
        "item": {
          "id": "53663300-862a-482e-b539-149d7769e97a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "14b887d1-c3a6-4ab1-806e-02e2a4af44f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60ce124-9a6a-4c1c-a4aa-3918298e5816",
        "cursor": {
          "ref": "2e3f6b5f-b00b-4270-a1ba-5664c4ff92b9",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9d6ff8f-5df4-44b4-badb-c68a54a9e7d4"
        },
        "item": {
          "id": "b60ce124-9a6a-4c1c-a4aa-3918298e5816",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "497e8c50-0676-4a7c-8bd1-cfdb1332cadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7be42ef-a991-4e8c-95d3-82eb8adeb966",
        "cursor": {
          "ref": "329e68d2-7025-46e6-a6de-21d1547146ce",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc02ff4b-91f3-4520-b0db-7d81746a8e57"
        },
        "item": {
          "id": "e7be42ef-a991-4e8c-95d3-82eb8adeb966",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "837afeb7-a25f-40a7-86f8-0ee007046953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc3915d-b8c6-4688-a7d1-96379c9376a4",
        "cursor": {
          "ref": "3f7ae252-c6a4-4b58-a228-b3529b6f387a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1b8cfad-5184-4556-ba75-6d24a73886ad"
        },
        "item": {
          "id": "cbc3915d-b8c6-4688-a7d1-96379c9376a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "005970b4-2c80-425e-afc4-aa8d3bd8c79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a2a8c8-8397-44a3-a1d6-4533bff3ccf5",
        "cursor": {
          "ref": "5d5c7d61-f550-4924-9704-345d6b5bc654",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d6ce50d8-6b8e-458f-8a09-69435b0882fd"
        },
        "item": {
          "id": "89a2a8c8-8397-44a3-a1d6-4533bff3ccf5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3ad26007-2856-4d51-bbe4-702bfd2d9a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d543eac5-1455-491b-a1ed-fe9018b8bfad",
        "cursor": {
          "ref": "31caa2cf-a22a-41ce-8d42-2a1677306057",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1caff747-5bea-44ad-8a9e-697e80cd2a54"
        },
        "item": {
          "id": "d543eac5-1455-491b-a1ed-fe9018b8bfad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7cc73c2d-c3ca-4278-8105-08b0d59f21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b75626-d368-4fa3-bab5-0ba69e1b82a5",
        "cursor": {
          "ref": "a8b901ca-f8ae-451a-864b-142a4f8341cb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "10132378-27fb-4f52-b60e-cc73ab3cd75e"
        },
        "item": {
          "id": "12b75626-d368-4fa3-bab5-0ba69e1b82a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8acc6251-894c-4e93-b093-820ce23991f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1827ab-4b7c-4955-95a4-c556ea0deb7d",
        "cursor": {
          "ref": "c12891b6-8735-44fc-ad92-1f084c58a410",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "388f0ece-6f17-4bec-8d75-f5b41dc5849c"
        },
        "item": {
          "id": "3e1827ab-4b7c-4955-95a4-c556ea0deb7d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f867af36-cc26-44fa-a2f7-9ba41d3cf0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4b3246-be8c-4e5a-8e06-b91d6666d677",
        "cursor": {
          "ref": "e6ccc779-9a62-4f50-976e-ca60ea2fae69",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3707cc4a-f249-45d7-9536-90c7c60af341"
        },
        "item": {
          "id": "ab4b3246-be8c-4e5a-8e06-b91d6666d677",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5702506a-02ff-458b-b6a2-ae3f7c499b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50575fb-22fe-454e-91a5-eb232de6550f",
        "cursor": {
          "ref": "dada6099-d484-418f-beba-6db1be690934",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1e1f1c7f-5d29-4545-a6ef-a433a8338c46"
        },
        "item": {
          "id": "e50575fb-22fe-454e-91a5-eb232de6550f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90260cfa-2c0a-4f7c-a8f8-e2c35283d233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfb59f-f6c4-4f2f-986a-02e9fd4e2f17",
        "cursor": {
          "ref": "5b8d6617-2ef7-4a82-b15a-aecd40845388",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8c9448c-41bf-4f1c-9691-e291c7a28b4c"
        },
        "item": {
          "id": "98bfb59f-f6c4-4f2f-986a-02e9fd4e2f17",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c2a23f3c-af76-41c6-aeee-24d5c7734a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97261581-931b-43bf-b4bf-ea66c0a7250e",
        "cursor": {
          "ref": "69951469-9d1a-4f75-bb40-bb4f7f98fae6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ef2caae8-e536-4b4b-94e1-2c052bced6d2"
        },
        "item": {
          "id": "97261581-931b-43bf-b4bf-ea66c0a7250e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e2a1fb67-2596-4111-b851-8c6e89d53f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d00c22b-861c-4e5b-a04a-902292eb6023",
        "cursor": {
          "ref": "f7a69404-dc95-441d-b7a6-3032891557a7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2d32cbe7-94f4-46c6-914d-134654285637"
        },
        "item": {
          "id": "9d00c22b-861c-4e5b-a04a-902292eb6023",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "492fde3b-7529-446d-8c5d-aa013cbbd756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07177ffd-7a4d-4405-871f-36b16e1d81c0",
        "cursor": {
          "ref": "092e6a0d-7333-4055-8bd8-3cffb732f828",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3d854edb-bf15-4104-b690-8aae82a6d9f0"
        },
        "item": {
          "id": "07177ffd-7a4d-4405-871f-36b16e1d81c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "72b296db-d20f-4c48-aa5f-5a67ca7448b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e5eecb-6451-4065-ba9f-1dc52f5acbab",
        "cursor": {
          "ref": "9f87d17b-fdbe-4041-8e3e-02ba793c1150",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bc559225-e3c6-4c2f-ab86-bddb7a580e2b"
        },
        "item": {
          "id": "26e5eecb-6451-4065-ba9f-1dc52f5acbab",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bd3a5692-3da4-45a4-bb77-7ad1a9d5a00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c62ec59-5d4d-4c60-8689-3987a4565eff",
        "cursor": {
          "ref": "9f2d28af-3e22-4908-acef-b5c755bf4db3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c78f457c-5ee0-4658-a9df-13ec27ad0a34"
        },
        "item": {
          "id": "3c62ec59-5d4d-4c60-8689-3987a4565eff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "740c9539-ca57-4da1-9a54-34c4964fe4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab38335e-a89e-4e74-a8a0-ea687f293fd1",
        "cursor": {
          "ref": "17c9e87b-532d-40a7-aefc-8e11755357c4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f93f3f88-6c7f-4a51-95a1-b1bb7d965d55"
        },
        "item": {
          "id": "ab38335e-a89e-4e74-a8a0-ea687f293fd1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "57f501b2-7d99-4095-82ef-984103ff77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e30429-6e3b-412b-81bf-2b03e5e821a3",
        "cursor": {
          "ref": "079b73c1-ffd6-4340-a268-5a6764a49676",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "178aa29f-d96b-4e21-a8b1-235eccdb048e"
        },
        "item": {
          "id": "43e30429-6e3b-412b-81bf-2b03e5e821a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8c1aa699-1929-4fe5-b75e-82ecefcf691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c376651c-915f-4aa1-af81-e53ad785c4f5",
        "cursor": {
          "ref": "30be2fd8-759c-4c44-bd3e-d89ac210dfda",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f52e50dc-c229-4e15-91b0-e9d1dd9e6884"
        },
        "item": {
          "id": "c376651c-915f-4aa1-af81-e53ad785c4f5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0c38ca6-ca6c-49fd-b470-d513ff1db0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b67774a-be6d-4c27-a76e-aa22d99ccb9e",
        "cursor": {
          "ref": "7998bdd9-4005-4cee-9438-456e618d4dd9",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "035a0346-fc4e-425d-bc68-90949d0d22fb"
        },
        "item": {
          "id": "0b67774a-be6d-4c27-a76e-aa22d99ccb9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a376159e-8e2c-4cb5-8b02-b96b9cf8288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c1d2f-b687-4845-a7c6-ef69279e378c",
        "cursor": {
          "ref": "e491d070-cfb3-40cf-b3f5-007fc43e2e60",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "278a8144-9e7e-4f35-b03d-b7df4d418e5c"
        },
        "item": {
          "id": "a07c1d2f-b687-4845-a7c6-ef69279e378c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11ed1488-4a9d-448f-b29e-4033638da7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a570b61-a263-49b1-9999-1af1669946ed",
        "cursor": {
          "ref": "080ad1cd-e419-42ac-82e4-01402837c319",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d3ae35f-dae3-4981-8d9e-820e8e4c5a7c"
        },
        "item": {
          "id": "0a570b61-a263-49b1-9999-1af1669946ed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e3e8e79-d3f8-4f32-8b7b-eda474b8523c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cba997b-58da-4e41-afe7-1cfb36f9ef79",
        "cursor": {
          "ref": "7769b5ac-0373-45ac-86c4-5339d088f557",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ce018eeb-67cc-4901-9da0-94a73d2c800e"
        },
        "item": {
          "id": "5cba997b-58da-4e41-afe7-1cfb36f9ef79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "477d2e2b-7f5c-4c76-8fe4-9ff8cca9f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94272cbf-c491-49fb-8777-d661eb8613ae",
        "cursor": {
          "ref": "5332a535-ada6-4578-beb3-f0f204ce0699",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bd010b43-e586-4d18-809a-c6a19369cf37"
        },
        "item": {
          "id": "94272cbf-c491-49fb-8777-d661eb8613ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "417f707e-4aad-4ac8-aa46-5a411ee02f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de94792-4027-442a-b59e-71c7af9f5e8a",
        "cursor": {
          "ref": "87a60b46-3160-4315-9710-9d260c5d24bb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "70a23031-d885-4b43-9533-44ce1129ac4f"
        },
        "item": {
          "id": "8de94792-4027-442a-b59e-71c7af9f5e8a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5b001303-dc32-423c-99c3-bb4b98d7010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eaa247-b55f-4e68-a42c-7ad09d276f68",
        "cursor": {
          "ref": "d0a64674-2ab1-4bb9-aebd-b08531f461d9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6eb87d1d-e8dd-4486-8198-130e99e83cb1"
        },
        "item": {
          "id": "d3eaa247-b55f-4e68-a42c-7ad09d276f68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3902c1e1-d5a1-4e77-bda9-72af54b27fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea897356-1a66-4bfe-821a-be6fcbaf1b5f",
        "cursor": {
          "ref": "44c0c5d4-0332-4eb7-91a0-52ad4324405f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2974c436-fe9c-44c4-9a2b-4eeb571a813f"
        },
        "item": {
          "id": "ea897356-1a66-4bfe-821a-be6fcbaf1b5f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9427e14e-92ce-4bf9-93c4-70f12d091cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717c579c-68f3-4c4a-9e52-c513c460709b",
        "cursor": {
          "ref": "edc9cf1d-7443-4bc6-b782-67fa01ef318c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b6933b75-f56f-427d-bb37-f274b3eca292"
        },
        "item": {
          "id": "717c579c-68f3-4c4a-9e52-c513c460709b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7490583c-9c7c-4ada-8609-945adb1f3ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668a01ac-4505-4c32-a772-cd78b04dd915",
        "cursor": {
          "ref": "347ee769-5771-4548-9cdb-f59f04e5f605",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3d030a2d-c356-4fa4-aed5-45443e2da836"
        },
        "item": {
          "id": "668a01ac-4505-4c32-a772-cd78b04dd915",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e55e3bdf-d934-4e7c-8dff-d691cf3b8ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69323385-b3db-48b6-8b46-07cc07047b2c",
        "cursor": {
          "ref": "193336c5-ba4f-48dc-908c-1dbe1d4acf1f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5df72f37-1475-44ed-ac19-8e59ba5acef4"
        },
        "item": {
          "id": "69323385-b3db-48b6-8b46-07cc07047b2c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "93f3424f-2076-4958-9280-7399d6fb963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd94e3f4-7639-40ec-a040-17db0b4ca25c",
        "cursor": {
          "ref": "1a4d41bc-31be-48c8-a51b-4ca3f5613fa3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "59cc9a36-b45e-4988-a02c-1f9c40398fc9"
        },
        "item": {
          "id": "fd94e3f4-7639-40ec-a040-17db0b4ca25c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b19f55db-59ad-4b0c-b4d9-a0eeb0506743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b61ece-7d4a-42a2-9a81-386fac75b98a",
        "cursor": {
          "ref": "121e56b9-a836-4b28-9d6c-14bb4eaf2b66",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fe1e589f-0acb-4502-9312-de75e40f3e27"
        },
        "item": {
          "id": "02b61ece-7d4a-42a2-9a81-386fac75b98a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d463a14d-6ae5-4412-a8d0-67b75878d516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cfcdee-24cb-4955-8b2b-e836d64d2a6d",
        "cursor": {
          "ref": "37603c75-fa06-459f-8cc5-91066e28d6b2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "267255e5-6bee-4cf4-9a8c-6e073b2e6c4a"
        },
        "item": {
          "id": "72cfcdee-24cb-4955-8b2b-e836d64d2a6d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "14cec2c7-ac13-4897-84df-7f470b8fe7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc8363-23dd-418d-b773-74a9f16d9e49",
        "cursor": {
          "ref": "7e8d6639-dd4f-444d-83f2-98553b2aa58a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b97ae75d-463a-4a08-8b41-8080bf9d5710"
        },
        "item": {
          "id": "09bc8363-23dd-418d-b773-74a9f16d9e49",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "364f09da-834a-4d93-b0b5-e4498531bcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d958edf-7ffa-466b-ac8f-a62a1bea164f",
        "cursor": {
          "ref": "52c6a4af-748e-426c-8f19-47e5c9273717",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3ccf6440-348c-426e-bf15-8fc3f93a9cd8"
        },
        "item": {
          "id": "3d958edf-7ffa-466b-ac8f-a62a1bea164f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "771b130c-63ca-4843-bf39-252991bdc644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d1bcb-cda1-43e7-9b01-4cda8129cede",
        "cursor": {
          "ref": "61c03e5e-7016-4600-a4ea-ad55e77b71ca",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f7e8e122-f3e5-49e5-8d83-422d5c5875fd"
        },
        "item": {
          "id": "725d1bcb-cda1-43e7-9b01-4cda8129cede",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9e05b578-4e12-4b6e-89d7-6562bccca112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cd8065-4c7e-466a-af59-72462d4b0ed9",
        "cursor": {
          "ref": "14a45801-e28c-4af4-a9a9-28ac6df88ae3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f7fcf44a-4d04-4bfd-b5a1-5ddca6c46cc9"
        },
        "item": {
          "id": "b5cd8065-4c7e-466a-af59-72462d4b0ed9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a5d52b92-6cb9-4410-a330-ff4a8fc97b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e78a17-5da9-43a6-a5c4-fd985a69f108",
        "cursor": {
          "ref": "9a526395-6805-4a4e-a9ad-252eb43d0e3c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "71933e6f-51b7-4a9e-91f8-6ea304a8ddb1"
        },
        "item": {
          "id": "e6e78a17-5da9-43a6-a5c4-fd985a69f108",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e11cd3b6-5fb6-4253-8ed2-09bfc613564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b848961c-8e81-46a7-a6fc-f99c3c6e5076",
        "cursor": {
          "ref": "3a783575-eed9-4ec9-bb0d-b041eff77716",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3978d2d1-ec7f-4f2d-ae53-0b41f23cc4bb"
        },
        "item": {
          "id": "b848961c-8e81-46a7-a6fc-f99c3c6e5076",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fe60acd4-a227-4f4e-b5a9-ef39dd5e1151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528f1805-dc28-4cde-807e-536c917b1453",
        "cursor": {
          "ref": "03b4aaa2-8ce4-4425-94e1-619e8602d4af",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f1a9cfc5-0be4-41c5-b560-6b6465633412"
        },
        "item": {
          "id": "528f1805-dc28-4cde-807e-536c917b1453",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "508c0cc7-917d-4e1b-a2df-818006801b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeae0ee9-2d6f-4820-a2ea-86acb1673313",
        "cursor": {
          "ref": "0717a9b5-301b-4fa1-bf37-e50dcc92f46e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "32e0a7a9-74eb-491a-b61b-dd371f58a3e8"
        },
        "item": {
          "id": "eeae0ee9-2d6f-4820-a2ea-86acb1673313",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f0f2da46-a63d-4d2f-b67d-0e17ddc06450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fd35b0-af42-423a-bf97-0711e4675c2e",
        "cursor": {
          "ref": "8152d3b4-72a5-45af-a380-6228c33d562f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a4bd2b2c-b22c-45c1-a64e-032cd111fbeb"
        },
        "item": {
          "id": "d0fd35b0-af42-423a-bf97-0711e4675c2e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "41950b40-fd5f-44de-85dd-b7acf63fb97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6724ba0c-149f-4a58-8762-949dc9005062",
        "cursor": {
          "ref": "91b11e0c-c291-4ea6-93aa-01fa980abc94",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cdd19b5f-1aee-42a3-9e22-d9e53a587088"
        },
        "item": {
          "id": "6724ba0c-149f-4a58-8762-949dc9005062",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "23ea79bc-9ebd-443c-8e2f-f94d09539926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d284f6d-389a-421a-a735-d5b529c24e0a",
        "cursor": {
          "ref": "cadcd55f-3aa8-4f0f-bda0-0f421c2637c0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ba8daef3-d5cf-4a21-b67c-8ed84bd6048b"
        },
        "item": {
          "id": "3d284f6d-389a-421a-a735-d5b529c24e0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "beaf221d-bd07-4a1e-be5f-d98888d0365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af60a8b-28c7-4b96-843b-62e3980682a4",
        "cursor": {
          "ref": "262c3431-9fc6-4103-a85e-52206be0f3fa",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9eb66b80-17b4-471c-bd6f-112b9619174c"
        },
        "item": {
          "id": "3af60a8b-28c7-4b96-843b-62e3980682a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fb739c3b-6dd4-4ab4-9a92-27db1cc2083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d80a6-1ffc-4ca0-b9be-5192f70a3cc9",
        "cursor": {
          "ref": "1f6d7f35-77b3-4ff8-a34f-5bb5c41d2711",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "298b0a36-d69d-4f2a-8f85-682fcba7d2e7"
        },
        "item": {
          "id": "1d3d80a6-1ffc-4ca0-b9be-5192f70a3cc9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1232d974-a730-4e24-81f0-8edc908eddf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072ecb6a-a33f-4455-99bd-2894da679db9",
        "cursor": {
          "ref": "27f1942e-e755-451d-a0a0-03b623e79309",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02622ad4-ed87-46bf-b65b-a75bc88eb2b4"
        },
        "item": {
          "id": "072ecb6a-a33f-4455-99bd-2894da679db9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49727743-729d-453f-8e9e-05fc4f73d435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9065ebab-3da6-4e1a-ba6b-388e4a21a81d",
        "cursor": {
          "ref": "69e17c59-1714-4154-8bd3-3b3bbd198134",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ade0f084-4e4d-445c-bfc2-44cc16e6de07"
        },
        "item": {
          "id": "9065ebab-3da6-4e1a-ba6b-388e4a21a81d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "76ed85ed-80e4-46ef-94de-0a057302e847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1981865a-2634-43c9-97e9-18e605a33173",
        "cursor": {
          "ref": "6b04d896-96b5-4cbf-be5c-63db6ded5d05",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0fdce0f6-deb5-434d-ab33-96989a67af56"
        },
        "item": {
          "id": "1981865a-2634-43c9-97e9-18e605a33173",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4f3597fa-cf46-4c95-a183-8611e67bb1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a32ccbd-71fe-45f4-9649-2472d2e365b2",
        "cursor": {
          "ref": "593d0100-b5ed-4054-9235-f992bc0a4b1a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2d6a43d4-7bb2-42c4-a298-f5f9062d0239"
        },
        "item": {
          "id": "6a32ccbd-71fe-45f4-9649-2472d2e365b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2fd06a19-0a69-4812-b51a-37bbed4b9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff65f0-4607-4583-b6b2-cfeac20b64d3",
        "cursor": {
          "ref": "9361a1f3-d239-46dd-a171-0ca047dfe6fb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1de014a-2d3a-458e-adb3-b9cec9aca315"
        },
        "item": {
          "id": "dbff65f0-4607-4583-b6b2-cfeac20b64d3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "249dbc8b-5046-4b9c-aca7-ad1c3ab23778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a756e7a8-6d98-4f05-a6a9-7e86d11cf237",
        "cursor": {
          "ref": "eabd7c89-1f73-40aa-b6fa-596ef1e70038",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "efb0ea65-81b4-46e7-afb7-fcb334eb34fc"
        },
        "item": {
          "id": "a756e7a8-6d98-4f05-a6a9-7e86d11cf237",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "35a1b58a-0d7c-493e-972d-a8bc124103a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92b30f5-0234-46f8-b0ff-6c7a218dd843",
        "cursor": {
          "ref": "793607ea-c78b-4a80-87ec-6e0b8d5559bb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a83377fc-cbef-48bc-94a3-09da89e198fe"
        },
        "item": {
          "id": "c92b30f5-0234-46f8-b0ff-6c7a218dd843",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "54e0db0b-eb96-4b4e-9e22-6c4ced1aa345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e1c7a2-13dd-4f0c-9442-2944fdbbf111",
        "cursor": {
          "ref": "77a7b5c6-5085-4272-a6da-bb4d1de68bea",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c44c1bbb-28ea-4afc-86be-caebf7e547e8"
        },
        "item": {
          "id": "67e1c7a2-13dd-4f0c-9442-2944fdbbf111",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19565b88-d1d6-4c94-870b-d2fc96052839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76256831-1835-4ae8-ab22-31d173cd31c4",
        "cursor": {
          "ref": "7b84a182-bfd9-41fe-999a-1bc26d72a5b8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3a11a81b-9917-4c97-9fae-7ac67c85cf7a"
        },
        "item": {
          "id": "76256831-1835-4ae8-ab22-31d173cd31c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7907c4aa-7722-40cf-ad71-34e58b2604c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9dce4-ebfe-4f22-81db-7adac4d7d67a",
        "cursor": {
          "ref": "8ce27ea7-235e-4d65-9d5b-00c973cd66d2",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5453a8b7-bb90-47dc-8728-93a801c76b1f"
        },
        "item": {
          "id": "54f9dce4-ebfe-4f22-81db-7adac4d7d67a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "435f210b-e9ed-45c8-a9f3-8892e4d5717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f180e091-71cf-46c3-ba1d-1da9372f0425",
        "cursor": {
          "ref": "08573e69-6b23-4e58-b044-1ac46812b51b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d2d644a2-a739-418e-92a7-fb9e47d85d44"
        },
        "item": {
          "id": "f180e091-71cf-46c3-ba1d-1da9372f0425",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "df07f4f8-4393-4921-9bf6-11e861280cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c481980a-5462-4d3b-ba90-df3a188db4b5",
        "cursor": {
          "ref": "a046514e-27f8-4226-98e6-c087aaa72e69",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cf9602de-450c-4466-bfe2-d4187625b6fc"
        },
        "item": {
          "id": "c481980a-5462-4d3b-ba90-df3a188db4b5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "54084488-38d5-487c-b5d5-fb5c2d5e1520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b3ae40-8cd6-45ac-b23d-54016ba8b7c1",
        "cursor": {
          "ref": "e91efa29-aee3-444c-8ccc-2ccafecc2d01",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2549514-ce51-4371-8e1c-2e7fd06ba650"
        },
        "item": {
          "id": "06b3ae40-8cd6-45ac-b23d-54016ba8b7c1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "68d16b4e-28d4-47ef-9ca2-1297f14a1547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf1b5b1-aeac-411b-b021-1c04a58cfb6d",
        "cursor": {
          "ref": "afb11ec1-b23b-4f46-a316-23c92f4861b8",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a612f054-316e-4077-93c0-aeb5b2da8ba8"
        },
        "item": {
          "id": "abf1b5b1-aeac-411b-b021-1c04a58cfb6d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d37c129-24a9-410b-bb0e-59473a9f660e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88eb732-6712-4da3-a6c0-77f375422866",
        "cursor": {
          "ref": "a9e1fe33-1979-4190-b95f-a09468f9670f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7e32bc8c-c50b-49b7-aee8-c7546ab29b91"
        },
        "item": {
          "id": "a88eb732-6712-4da3-a6c0-77f375422866",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d05291a5-a6fb-4dfb-8fc8-247c165aadcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb8ae2-e03b-433e-ab2a-6efd9940bb1a",
        "cursor": {
          "ref": "70e81c79-912f-41d4-8093-41e4f4e0e29a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "182a505b-16a2-488a-ad77-66e66e4670f9"
        },
        "item": {
          "id": "2ddb8ae2-e03b-433e-ab2a-6efd9940bb1a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aad30220-c8df-4619-a1de-76ccc2f1d787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ab5dd2-cf5e-4e9e-a6cd-2b7d2d17c760",
        "cursor": {
          "ref": "16a5e4a7-fbc1-411e-a1c7-f48eb22983c9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b47fbd60-e032-4ea2-86ed-64d37c3b8954"
        },
        "item": {
          "id": "e5ab5dd2-cf5e-4e9e-a6cd-2b7d2d17c760",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3097d679-38eb-41b3-9893-871852dda092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3acc3df-8fcc-48be-94f8-9d3c54a516da",
        "cursor": {
          "ref": "1730d170-1ba5-44b7-b38e-768bd38957e4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "10527202-6af7-41bf-8970-6afe52f58276"
        },
        "item": {
          "id": "b3acc3df-8fcc-48be-94f8-9d3c54a516da",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f9a498e-8a49-41db-b79f-86a9ad2725d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbcc4e-a92e-4aa8-b2b8-cce276291eaa",
        "cursor": {
          "ref": "da00d37b-05f3-473e-ac46-95bf8afec21f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0c181e61-d6eb-4c53-94c2-fe7fd56983c2"
        },
        "item": {
          "id": "62bbcc4e-a92e-4aa8-b2b8-cce276291eaa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a453ee0d-8866-4dc4-a1d2-98f06cab096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf146dd-d484-4635-a29a-85e3fa6340a5",
        "cursor": {
          "ref": "48a8135a-d771-44b7-8d8a-6c253f83779b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4778090e-adc2-4c1e-9a45-c00bdf15982e"
        },
        "item": {
          "id": "0cf146dd-d484-4635-a29a-85e3fa6340a5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4a8f07f7-63c8-4287-9d5b-564ccf65e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccafb344-3ea8-4adb-aace-d1966bf02717",
        "cursor": {
          "ref": "ce2c85fe-6f23-4724-9d41-53971edcbccb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fc9f6903-90d2-4e81-ad28-c9e59786495f"
        },
        "item": {
          "id": "ccafb344-3ea8-4adb-aace-d1966bf02717",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9a529a66-4fec-4326-90b9-a4e6a93ee2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608aeb21-da27-4aee-a296-fd0c52a19bf2",
        "cursor": {
          "ref": "3c5df0cc-fa5f-428c-91de-ffd2b6ccffcd",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9f0cef95-93f3-449e-afd1-8abc959e1855"
        },
        "item": {
          "id": "608aeb21-da27-4aee-a296-fd0c52a19bf2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "58c99ed5-1b92-4b1c-982c-c58504e488fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f53e4-eb14-41a1-8ad9-a944d9ddd29d",
        "cursor": {
          "ref": "7a595f16-6011-4f12-8a5a-8b13764d3b1a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5adaf4e2-907c-4546-bc37-470f1c208b40"
        },
        "item": {
          "id": "228f53e4-eb14-41a1-8ad9-a944d9ddd29d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "78c8e22c-d997-4f6c-9074-9cb23aab0928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971b6ff8-1ce4-44d5-ada1-e3ab61dec7f7",
        "cursor": {
          "ref": "e27ff24e-dfc4-4c2a-bf41-56fdd255367c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4138ff36-92b5-4605-8b46-a31c9f40dd5f"
        },
        "item": {
          "id": "971b6ff8-1ce4-44d5-ada1-e3ab61dec7f7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6c23c36c-8ae1-48f4-99ee-d086ebdf4c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93082bd1-0378-4ddf-b1b6-a8468a394513",
        "cursor": {
          "ref": "25fb6a4e-15f9-427a-89bd-1a8e2f01f1a1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7b81b689-5e79-46f0-83e8-f71645402c03"
        },
        "item": {
          "id": "93082bd1-0378-4ddf-b1b6-a8468a394513",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5454b2fd-06ef-4452-809d-0832cde42f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8909d32c-c34b-4b23-8e4e-5c75a0f34005",
        "cursor": {
          "ref": "cdd99d59-9681-49f0-b8f2-d5fbc63ade08",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "adec5b36-a3b7-4be2-a622-45989e29c1d7"
        },
        "item": {
          "id": "8909d32c-c34b-4b23-8e4e-5c75a0f34005",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7edf8f2-dc85-4bdf-8d62-cdd73cf572fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd15c51-3d57-4d57-8e3e-e388812d56fd",
        "cursor": {
          "ref": "51addf87-f569-4a6d-8ccd-8e667d5d2cb2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d0244bb8-6ec4-40f1-9065-c8bc37683eb8"
        },
        "item": {
          "id": "8dd15c51-3d57-4d57-8e3e-e388812d56fd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e494808e-e28e-4033-a7f2-2751dedb8bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd00f046-e4e1-4488-85b7-f91b8ccb12aa",
        "cursor": {
          "ref": "36a7fe61-f6a0-43cf-aed1-81ea7aead04a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "79429b6f-5317-4512-b827-22ef058a217c"
        },
        "item": {
          "id": "bd00f046-e4e1-4488-85b7-f91b8ccb12aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "235ccbb9-4912-4f4c-9781-770f384f02bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d6da3b-a8ce-4674-a7ab-07722f8f9576",
        "cursor": {
          "ref": "715bc8a5-32b6-495f-8911-96123b8038f6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d54dd918-e085-4f37-8c4a-d8f7deafa6ca"
        },
        "item": {
          "id": "f9d6da3b-a8ce-4674-a7ab-07722f8f9576",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f2de3b6f-df3d-4acd-b284-3d7194fc77c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdf89f3-c62f-4c8f-93c2-fd26242d3346",
        "cursor": {
          "ref": "fa864c9c-f4ea-4004-ad6d-36f56355bb45",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "33561ea3-b3c1-4851-8983-7fce8b8ca5b8"
        },
        "item": {
          "id": "ecdf89f3-c62f-4c8f-93c2-fd26242d3346",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "477f661f-7df3-4447-a4fd-02ffcc5cd8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a974668-5981-45fc-b6b1-9b9bd3809235",
        "cursor": {
          "ref": "56db64be-a03d-4800-81d2-7f310b16584a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "151688e0-4dc2-48c9-9cf2-f159f0b54409"
        },
        "item": {
          "id": "4a974668-5981-45fc-b6b1-9b9bd3809235",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f3bf2bab-eb42-4c0f-a5fd-91db2dd3db0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98bb6b2-4011-437b-969e-3e85f0d2e296",
        "cursor": {
          "ref": "6b6a592b-b67d-4bd4-a901-33e78f63dbd5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c6e99045-95db-42ab-98f0-31d59f32eb8e"
        },
        "item": {
          "id": "a98bb6b2-4011-437b-969e-3e85f0d2e296",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6f94b6d-ce6e-46bd-bdb3-a808613d6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dde47bf-c173-4b18-9060-cf89a8ebbf51",
        "cursor": {
          "ref": "5a5dac28-b913-4f1a-81d4-57156c729588",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "51f26f80-2675-47ec-b5f0-db400f1c09d7"
        },
        "item": {
          "id": "0dde47bf-c173-4b18-9060-cf89a8ebbf51",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "df19d6ea-5d14-4261-9634-bd06c29552f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec82e41f-8d41-40fd-ba71-57d5c373b4eb",
        "cursor": {
          "ref": "70528969-5689-4f02-842a-c2ea18108817",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "52224dc6-ab09-42ff-95af-5ca2db4afadf"
        },
        "item": {
          "id": "ec82e41f-8d41-40fd-ba71-57d5c373b4eb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9fb0b46-bce4-4241-8de5-773763d1fb6e",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb6d514-a847-4844-9f16-0c7db99c435c",
        "cursor": {
          "ref": "4d39d6bb-1445-4628-b6b8-9fd3995b095e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4baed34e-8217-4bdb-b7e7-5c8760f66b6b"
        },
        "item": {
          "id": "ccb6d514-a847-4844-9f16-0c7db99c435c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9ea5475-5501-465d-bb1a-044ec7c596b3",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe30d5f-5d49-4acb-aae5-295e9af01cb5",
        "cursor": {
          "ref": "df8b498f-18ee-4c2a-9bae-97bf61df870b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "777eac5c-df5c-495e-9a17-4d3e7903e848"
        },
        "item": {
          "id": "9fe30d5f-5d49-4acb-aae5-295e9af01cb5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1ac38dfe-7281-4199-a6b3-08d29c38e324",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d38a9-2c33-4d9d-bec4-28c145922848",
        "cursor": {
          "ref": "daec7949-78e6-40e4-bb39-d1fc957b316d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9031f186-ee33-4bca-b8df-8204a519c08c"
        },
        "item": {
          "id": "716d38a9-2c33-4d9d-bec4-28c145922848",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd0a7922-168e-45cc-a2fa-58ae39408763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d38a9-2c33-4d9d-bec4-28c145922848",
        "cursor": {
          "ref": "daec7949-78e6-40e4-bb39-d1fc957b316d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9031f186-ee33-4bca-b8df-8204a519c08c"
        },
        "item": {
          "id": "716d38a9-2c33-4d9d-bec4-28c145922848",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd0a7922-168e-45cc-a2fa-58ae39408763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0119e45f-e553-4f06-90d4-fc420e656df3",
        "cursor": {
          "ref": "300f3340-33b1-4bc6-a777-ee76e7eb21af",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "680c10d3-61a1-4e31-b479-8fd496310617"
        },
        "item": {
          "id": "0119e45f-e553-4f06-90d4-fc420e656df3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7fb4511-b7f4-4b96-a12a-3e4c08053e20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64abdc0-c025-4cbd-9685-6eeb902e00c3",
        "cursor": {
          "ref": "80018521-ac32-4c8e-974a-76b0db9c318d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f6f18bcc-95a6-4f07-8711-ac20e14c3498"
        },
        "item": {
          "id": "e64abdc0-c025-4cbd-9685-6eeb902e00c3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3d4f4318-ca99-42ef-a05e-709e5a10b632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}