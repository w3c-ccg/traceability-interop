{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e7d5649-c4bb-40b1-b174-a0283eb4332a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c9616be3-930f-442b-8cb1-e6b0c89be787",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cc187b0-3f6f-4845-aa15-fa3e33f2fe7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e2ba141-e2b2-4da8-930a-add670008cb6"
                }
              }
            ]
          },
          {
            "id": "481a14e1-ea89-4e8c-95ba-162514b57d64",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6da8d05d-0522-45a5-8669-85ff71af4a6b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20ea1f57-2465-46d6-8ec0-8336f7e67b25"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d184b446-168c-47ef-be87-8dcb4e6a4de7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ee6b3e9b-014c-4760-817e-eee669a29848",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f19114b2-5ba2-4a80-b845-884e203b9098",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3ce1b5-d60d-48e6-b758-9f7d0c2bef96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d031d0a8-bf77-489c-b44e-5982b9d47e8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9e944a2-8cd7-41dd-bc19-a106573cd00c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa319ac-3d55-419f-9013-264ec83eee26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4641bdc0-e63f-4e94-8c45-05f9c36cdcdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02ff282d-5dbe-4ee4-8ce2-403efb20a5e7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a8718b8-5ee7-4bf6-af67-8a925543d29a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fcd5e48b-ca5d-4837-a44b-9be3c9ccfdba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a3a7bea-41df-4cd0-9da0-451e040177b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3aeb615-8831-430e-91a9-9f7756ba2a73"
            }
          }
        ]
      },
      {
        "id": "8bd81d25-7156-4c18-867b-e719705fc4eb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75bbc1d9-6832-4e30-82be-59be8eb16f88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b8685b8-1849-4241-baf7-477acbcdeafa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8050449-a0ec-4ada-ac90-5e41ebb4368d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3bd3e7-1cd4-4429-92eb-f4a0465638ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31cbab69-2aa1-45df-9416-4924bd563b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8492e75-3d9a-4925-afd9-c55c061e1d44",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b850d798-7e89-40db-8872-7e036b0553e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d0d0af3-a507-456e-9a7c-9b399d5264d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda0f2b6-b48f-497e-a5e6-d60d87aff86f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92eb75e-e233-4d38-a99a-bb0cad5bb8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e2dc528-b254-4a88-949a-60a8fa10302e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50194431-dc17-4df3-abca-2e9d89643d25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43639b83-5759-4c07-90f3-e9057dcc9d91",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aead2cd-8e92-4257-8a2d-199b290cc673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de68c647-fa9a-49f3-abf6-b09c70d6208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f985fdcb-0e28-497a-906d-74b63300c85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9f64f2-3164-4736-b4c9-fbbca5e9f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abede27-c4f9-48fa-a44c-a69ca9be7478",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8bf8e3-25ee-4838-a398-f9f76dffbb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf85128-ec00-49ad-9b44-1397b528c0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d0a384-b04e-43d7-b5f2-b98c984ead19",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4d3c32fb-f2c3-4671-a047-5028d2d368a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "afeaeccc-5026-4768-b3ff-7f2f6cff871d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2155b11-8f71-4f56-9f3c-931549f2807c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06dab819-1ab1-48c9-8dee-c6205422c6e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3cc69f2a-4928-4e30-b565-db8db47bec20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75c49a25-4242-459f-a40a-09a5b0c8c8e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4b8a5ee3-7094-4b5d-910d-9d686f351418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10e81051-e22e-4582-8bbc-f71362e8d0fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b805ee1-23ea-40bf-8b12-0a3d4e3524d2"
            }
          }
        ]
      },
      {
        "id": "fd330ab3-8bba-44c8-81af-c465e2781cec",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "72a11cf5-f9b1-4ce7-af07-15476531bcba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a1ac583-81c7-4389-a288-bc4db42c54f9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "49d40142-e9af-48a5-be7a-1273a4d0051b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f54c41-99fc-4f7f-ae3a-fadd1552d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3c72e1-f446-4db1-bbe7-2e7954a91525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7c0866-a019-4311-a71f-a2e0c30532b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b250d6d8-de26-41aa-825c-68535fda442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae73360-dd03-4034-88e5-0c4ab03a86c6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f9a60-5efc-4d79-a125-c6177a763962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5e4ed8-9068-4aea-82ae-99c4ab2b659d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddb7a61-29a9-4194-b73c-15df9fa4eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97c1146d-fd11-483a-ae6f-57819d8be4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e7758d-05b5-4359-9b9f-b088fa2a4435",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886bde0-6672-4818-add1-e550d01df17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bfaa77-c3f2-473d-8e5d-f03fdbcada61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a10433-6963-4722-804e-9a7fa1291501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5001703a-e776-49db-b082-c85d26227e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34413ea0-572f-4ac8-bb4b-e4f0c1dab388",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ad5656-7e65-411f-9b42-0737008bce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e81b39-80a4-45ff-959a-6e13704860c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba59ffa8-039a-477d-9e45-2e8da34eb9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "573630ae-eb11-4da9-89df-097a460fd158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f630015d-d026-47fd-bb31-a0e3554f3f3b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f02c2b-b612-43cf-a514-554a1aad90d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab40801c-2f85-43d3-a6d4-5da881ee4627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc7e9f8-7d6d-4f23-b300-5cf8814af0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a99e37-5da7-40b9-b106-98a5f112966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a216f313-6b99-4826-9c27-9c9bb5384646",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842fc68b-417b-4b73-9008-e46e623fdacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0d8982-987c-4941-be97-ace6a109ad58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743108b-8543-4232-874f-a157685a5d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "184a4bdd-1a10-4d25-aa4d-3dffe2b8656e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8033537-8215-475f-be09-340f69438954",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48417892-f2bf-45b7-9b8a-e5a2d0859c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04672176-cecd-4b0e-b272-d01800d8bb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c461b5-fbd5-4b96-9b92-c168de5a09d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccef2861-597f-4e4d-ab26-ea47e5c67f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d752d47a-bdab-43a1-964e-5629fe992329",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a1bd05-137b-40e0-b8ff-0b91b9b90357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8042343c-e840-4f06-958e-e115c0bf25ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c337c66-1e23-4b99-88ee-2c9cda2e98e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6669c59-5755-44e0-a592-079b469a04b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e10ee4-ddf5-40b5-a24e-2fe1e9f9e3b5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce55924-a7af-4b03-b569-064bf3648c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939ece53-3544-4693-97f8-26c36ef25299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d34b69-5be0-4c90-a98b-73e9c6d0c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb9856b-36e8-4069-bb0d-7283de53ad94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eb6756-a2bc-43f2-924a-ba8e61b62123",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14681d0f-b3d0-49b9-a9ea-5469ca1621cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c746c6-2035-4c62-8341-3c2640c7122b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653661e1-74af-43a5-97ac-67a8c4df5a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "002822cb-ff75-4361-951a-c8859ca0a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0abdc-cf18-426d-8f74-a4e7efd4c7e9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5438c2-c527-4ce7-a1ce-d3c2a2f2a656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cec4989-0bf5-4b1b-8353-b87ec55c18a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941de783-7271-4f82-b5a4-c8af91be9993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f585e759-64cd-49da-8c37-aa42ccacea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1bd5c0-393d-4f21-be27-a3d7f63783d6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c9d19-0d5e-42b3-8cf0-f06066dd3c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6841fb08-160e-42d6-9ac6-1f96b86fdfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0222dbb8-f35d-4d4d-9690-453a6dbf441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37cdcce6-8618-48ce-9c81-bcc474b51db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f534c8a8-1054-4547-bc34-521bc8c11000",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62de3d-c9df-4b8f-a4ea-eb6ccdc0e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dfe704-7696-4136-8394-5ef4e468a928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681cc12e-0982-43c6-afb2-df690c64e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11e7d23-4a14-4e1c-9f19-b1a20c4692db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20148c1-2963-43fa-947d-7dbe26ec4af3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b01308-4a04-4180-8c5d-f3306612dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4d5986-dc55-496d-bde9-b93335f48438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e2fddb-3b07-4969-b146-65fed4cd01c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2eedacd-f1f4-41a7-84fe-cf8e54bc5f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74d4888-0515-4b84-bbb3-7b4595295dda",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b759bb1-3184-44d6-897e-bd9d75efd679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8687aaa7-633c-49fc-a058-5f47a3151479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eba23f-42c7-4807-a0dc-6ac1c66903de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0508f7e2-4224-4ecb-949e-d468999f3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba88f1-a817-4320-a3e1-4f4bcfa2ee0b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4fcb15-d693-4b97-ae37-ce812dafa891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a3eaaf-ade4-4b60-b4dc-e50b083d376e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ecd650-e2bf-4b9d-8163-8d72afd61d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2188a1-3a34-4874-9a58-7db671464011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c271d-5da3-490f-96a2-f1b5823e2730",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1aa324-7536-4c17-8008-f1ee0a9c6c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba6a8c7-686d-4cca-ad3d-127dbb4bd35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bc6695-2908-4115-af02-74a5e1ff6fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c7cbed-7a94-4c7c-a571-0b94676057b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe867ab-6c18-4f58-bd9c-267e9fe6f2b3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0743c460-0087-415c-adb2-2a661ff62ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddb54a2-8138-486b-996d-9b51fd7053a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e574049f-cee3-4097-9501-1115c3b091df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d61923-f515-4116-bde9-ea20ca95c4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e7d242-1d4c-4eb0-9e16-8af11f38c22e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a85a850-33e7-41ea-bc97-b290db5cad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f011ba8-dec1-4919-8830-593d66df9dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17bf9e1-f04f-43c3-9fe8-9fb13bd60b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ce4d1e-213a-4c95-b7ed-c56808de6bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025613cc-d920-4995-a293-e832e84ab890",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdae738-ae69-43cd-9ded-d1e13162ee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda8b2fd-0eb3-445b-a5ca-48ba2c23d748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13214be3-2583-4bf2-a08a-020cbbc0314c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa25546-db90-4a9d-a489-67f5d958c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f97fdf-8200-4352-9b3a-17e5a216cc2c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e5ae80-6304-4261-a22e-d7462bf9424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1198801e-f587-4a49-b8f1-08c8664f1c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49579c55-3f3b-40ef-b05d-d7714f295839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085db6a0-5b43-4c4a-9593-881120220e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78a9b14-0f78-438d-b681-519962f346ac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c1a276-fa55-44f0-a6e0-ebbe597ce576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28c6bf8-8b0d-429c-a238-6d03b3307f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8486ecf-8de1-41ae-8ee4-8a33477801bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d692273-5df3-42fc-bfdc-8e046143655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4d89b9-c72e-4f0a-bed1-160864943c46",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214c8df8-a1d2-4a7d-b9f0-7c960672309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a91e0c-9e11-4df5-a65d-ad58f9b2371b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1addd67-c2dd-48d6-9af8-7a67dadfe09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9d9880-d8ee-4026-b076-49c94bbfda76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a83dc3c-d125-4b45-9bfc-8b790e1db1f2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca3c196-2bee-4625-9440-74e60c71336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b6c822-a5e2-4c3f-b442-60052de4f16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27e4cd4-c5a0-4cce-9037-b35a688d4993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7c6e9e-4abb-4830-8d45-8a8aea11c3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b6a7a-75be-4997-a104-4617e46c7803",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1005fde8-f9a2-4fbe-97fd-1171d1a728c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28efb390-66e2-49a8-b357-f764740bef73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daaa724-fef8-4c0a-99d1-66fe2cc282da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd663b16-0939-4864-a310-76b51b81d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553f41d0-6ab6-4d13-8351-9301049c196a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eb4af5-4915-4936-ba4c-4d8fdd1a0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16138580-01aa-4e3d-a7e8-9a5d0791a329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869bb27-242f-49d9-a3d2-c4bf16229da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f0973e-2146-4f22-945a-8060070e13bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc2cb7d-9db9-44eb-a78d-39c7e49b109b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3805bd39-a5ed-4895-8512-6a34f54c5a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910512cb-005b-4860-b379-024e60e4ad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2574fad5-3a0a-4cc4-8d77-d381e924f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32eedb30-2e79-4133-ae63-e01c74c863a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8fb6d7-9486-432e-8a25-826024783be5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8e8b57-31c0-4fc0-9249-d98c5af5bb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185b74da-c227-4cde-ad13-62440d6df13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747528af-6c47-432e-a6ee-316809d5e231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2364ad-1cab-4492-a55f-8ab15717bde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075bd12a-0986-4b51-8b45-f5bc84fd1b83",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0faf65-a954-40af-ae0b-2d80d92ab74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dc8127-7b9a-44f0-972c-1c512e23bebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7406df-5603-49ad-8124-3ca846ba356a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e96387c-5ab3-4063-b163-02f9ec03495d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61efa5b8-509e-4cef-930a-7059916225e3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93891dc-b707-45f5-9a50-5a83f4d9b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322952f6-abb4-425a-a676-75c84f695490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76250952-9caf-4746-ae42-69a7b26cd7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "671e5133-a8ae-4402-a236-1a583271b115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b713548-dab7-4407-870e-ac3b578f28a5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdbc2b4-756f-422f-b714-017f03658b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0d005f-8f4d-44f7-8c4c-0d6fc8ea9f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c347814-deb8-4112-acc3-9fa0c3d774b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65078b75-6664-4f39-bdd7-8533e85ab8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fa6dc6-e746-401b-a0d9-733808fc55f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a056989b-3f4c-4836-bcdd-8a886ffde527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0e356e-b077-4484-a664-22a549b69b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a0dcc3-5b7c-4892-b9b3-c799af1af84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6092a8d-9b98-4baf-885a-93dda593822a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c6fcd8-d847-451b-bff8-286eafcab038",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d5ab70-3271-47d0-bf2a-e71f38495584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f18a46-536a-46cf-a772-6e5d445d90ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ecb7e7-1a65-49e6-84c7-c20cd08e65db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6c59ad-b723-4ebd-a692-785894d86c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7bac47-15c0-4659-b85e-b68c59d51124",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caef6c42-ed6d-4aeb-a374-2867124b5192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91691e40-41dd-451c-9636-86f019c65f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe3e63-cde4-40c2-b976-1d4064aa4229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87212d5e-2e83-4e17-bcda-c68f7b4b37a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f886fc-e23d-4792-b0ac-073ef2007bb7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21881760-4023-4c23-b933-83f19829622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd10dae-b764-4aba-9ebf-97ea0418f6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50665d0f-5d14-414a-bd98-57ef78588013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "00dcdd9d-ca1a-4fff-bfd6-b5d394bac408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a299fc1-5d8f-4f8a-8f57-3436aded324c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db14e215-f8de-4a09-a641-161a61a1ce26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83f10d51-34e5-4340-a493-f02dc9bd0018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de7d847-1a6e-4cf4-aefa-3cc1b2809700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545d0385-c025-42d5-ad39-3e45533a514a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272f8ca-14c2-4871-9c17-8d2c033cebbf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245090ac-6a9b-4889-b35d-cde2b7444a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220d6727-b81d-4b96-a758-9e9c887078a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8af760-ed00-4959-8a8c-bb94f113b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8e00ca-90e0-47a3-b046-2f042c0c23c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7714499f-21c5-41c6-a8c3-5bc7cbffff2b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97cad0c-b749-4a48-a6a3-fa1eb3e36245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a096c8-e743-4ef5-866f-9b2c8a58cb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e7fe81-86cf-4e3c-8694-54e0dc0a2481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd2d068-f8ac-4799-96af-8b7c0a55f8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a110e4f-9a6e-447b-895a-e146afe52028",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b25b965-6387-4d1e-951c-28b4828bf6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee801ff6-ca68-4b47-9d9d-3f98c4a218ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9073b6-8128-48ab-9ef0-cdcb2367e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f78f385-df7d-42ef-ba85-de3950891f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e26a10-783c-4e3c-b2ae-5e3408f91657",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821bef77-af0c-4469-9d5f-a40a23617288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d002cc1-fd95-4a3f-b4b1-b03d88d477e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74460d36-73cc-4da5-970f-283a0a6e8f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0976cebe-c532-4d64-831d-3b1b94c546a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b56eeb3-1c8a-42fa-be44-c795df69d7fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b55863d-05c9-48e9-a737-6fbbf11bf3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37db7d67-fb4c-4be7-966b-8851f23cbc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad7f010-55a6-4ad0-af52-c0577d13ea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5186339-f34e-4821-bcbb-4f62c6668cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d0d19e-7d3a-4b05-9829-6c170d821044",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c62cde3-b7fb-4eed-aac8-85a6cc0c5d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e9fe74-7ec8-4048-ad4b-355fe0c70b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ca1db0-e55f-4b56-8ecd-55dae0664711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ed818341-e3ea-41b8-aed6-0e08c5619427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f3c822-3536-4fd6-adf3-ad28cef71a5e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1a26fc-a8b9-4996-83ab-3ed68bc1d561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feefd868-ec36-413f-a01c-d8919a2cd716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486985e9-7336-44c5-96f7-dd06b8feb77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5c1e90-85e2-4bd6-a903-a54ca96b3897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe49787a-301f-422e-ad6c-60447f6dbcbe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e032cbcc-425d-44d6-bd3b-88f7009033e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f4ec80-6a5f-4064-a670-898d777f531e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c33032-62c6-4c70-b7bb-a984b0fcaca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "40607839-d0f8-435c-85bb-c47851e54594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40114d56-3673-4e4d-bc74-62089add78fb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440462a9-65e1-4e9a-83f6-e7f3e77bc575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0592f2ae-832c-4d90-9553-7824ef9c2c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6415b3dd-7e83-4582-93b6-b86645b1f3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3ed4cb-ad5a-40fa-b77b-98e25ef44a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49846686-d052-4d0c-b0d6-7c67f9874584",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98d97c4-96a8-4681-ba3c-d46252fb1abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f429151-d2de-4ef6-bcc3-21636615a938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b62ad66-e4a6-49a9-854d-4ce720dc40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5768dfe6-27d2-4543-bc83-1c59fdbae0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a366f85c-df88-4083-89ef-caae717aa311",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1592aa-9591-47b3-b3c6-d0d1a2e19989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93262f7-23d0-4cda-b1ef-35cef18ba94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35236fbb-cb29-46e6-b7d8-e502e258d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d8ae34-1f21-4ee8-bbf0-27effe9f42af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d91b905-3017-4cc0-856d-1cce6da842e4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f81588-ecc2-4956-9b75-3b6bafce9ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91da0ba6-761d-4fb7-af86-62d03e299e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eabc2fb-c661-4f80-ba96-f0d48da21a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f334f048-47e4-4ab9-acbc-a357d9999e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c840a48e-d6f0-4263-bd86-f9af221058e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6359ed-7555-498b-bcce-bae5b6ff4d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e817c6-438d-4380-8a88-b16fbba58e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0c2c79-703f-4bb9-a61f-34a4548009a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdf1dc0-4284-4860-85ad-a4bc4af1caf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7626a3a0-7f5e-44b3-b1d8-d1aa1fba6dd8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f98d5a-b9c4-4ae2-b286-7d6c5d7d7bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bce543d-5a71-4a89-ac58-acd8513b7aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbfcd1e-72e5-4ef1-b4ca-644b9e76a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e37cb6d6-ad77-433e-9095-a085d36c7c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f266c4ab-0eff-4f64-a481-ac82992c9e3f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca443b6-8416-403a-b221-56a4db910fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f15ec3-6d8b-49b7-b36b-b5c517be93e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04152880-199a-4bdf-a406-7b8665878ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "729c3e2f-7524-4bfe-85c2-0c5b8f888c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb84a10-450f-426f-bef1-cb8500406d7b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a54a1e-0ed8-4ca9-afbf-773d70fe7e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43ce757-d8dd-461e-8999-14e5ec9da78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b3b419-c607-46dd-b773-771aba637c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e89791f-818a-494d-8707-dc79e42d69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307464a0-0ec8-4987-a0d0-728d54d00d16",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654002f9-c9ad-4b2d-b345-bd2f26717144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae3985e-453a-47c4-9734-32bc329d1122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adda86b7-9c5b-42a2-851f-a65cb4943406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23ca9f5-39f4-4c35-b6ef-30f5bea9bdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb21f15-c248-487c-90e7-2135c93bfc7b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb93e04-b4ee-4577-9476-6e10f54696ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751f67b8-5b9e-4380-a044-18a71cdc5318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89a672d-6ca0-4cb5-b1a9-0ffdd2d95ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66525055-004f-4564-acfc-53a1ba51ac8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb96e12-bb0a-4814-87c3-7bb55f854776",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc4fb18-11d6-48ef-914b-5c5c12851b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df181017-0877-494b-a74a-ddefd5bf8800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8f1b56-d42a-43c8-bcff-3a00181a0cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a74fe9f-ae07-43f1-a085-334b30984919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d6c07f-cad1-4d01-bac4-c4516879fabc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8028877b-8452-4637-9186-cbd6c147d466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a17a1d2-ef2c-41b5-a015-5ae72aa5cb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e879b6-983b-461b-a789-8379d9f838f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "62b00ac0-d171-417e-9896-d2839a0c80e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95795dda-e20b-4d30-9de2-a5fdabce0d42",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb696ae-2eaf-4f50-b0e8-8cd7e5554738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75679b1-787e-43f8-abd6-5ccbf6a7c44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b598bdf9-83b4-4765-ba80-f83bbeae719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb49c62-2d3e-4a8c-9606-4cef5a4f2d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3187fee8-6944-4511-9c22-9a72a701e508",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b56841b-550e-45fa-9c7c-ebf2ed59d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d774a6e-80e8-458b-af27-0adc33b791f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ea6959-28aa-43ae-a10e-7ae70226343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b1b382-21a1-4c87-84e5-822a579b6e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b36cc-0fbf-45e8-bc84-eeca9f998308",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d713ee04-0653-4a5a-a2c0-45afdd0d157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e751da00-560d-4bc4-908b-cde835ba9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0095d2-2ad3-4b18-bfc4-775899408c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62e76d42-c33c-4b1e-adae-f89be17ff090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e979c8-3a86-42a4-81ef-d1d9f30ca4f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fefeef3-b799-4c71-882b-0ea2b7dfa1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b889f2c2-175f-4f10-9880-46231c9b15d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0202da-e3f6-43b4-b71b-894fc48d6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "663b9304-2e6e-4762-af93-4e04f55095c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c56a40d-9fb5-4979-b4d0-79f840bfa072",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5f5a5a-c850-4d0e-83fa-12e57c62b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27356bce-e2c0-417d-b039-eebe4fc6d835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2231db69-8586-4eec-a75b-720d9c0bf045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebddfdc0-74b5-4fee-ad56-45fa1d2b391c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7424e8cd-3b8e-42f4-becb-7fb2f4e8750b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffa5f20-ad69-4a80-ab0b-24cab630c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b92d4c-266c-420f-a0df-07590fde9332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eb7425-c57a-4f2c-aafa-e82af6da1401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5271df17-2ff7-449f-9dbb-0514f1caa719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12264ca9-52a1-4b9a-90b0-8b2de2716803",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e089c96-d61b-4bf5-b9af-02f688a69f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b4d3c1-ad9a-45ca-8155-e9c33559bb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faf34e8-5f0f-4267-820e-2600ce5b3eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc020d71-309b-404c-b5bd-a824bcd5775b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7012ea73-a7f8-46d7-9b5e-243da0650388",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fd7a6a-d966-4b9e-bed6-3f57fa1accca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d0421e-a1c8-4195-b6ad-5295648e222d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985d8b32-0e03-4d4a-90ae-06817ae977d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3754b42e-54ea-4736-bf8e-6696cf828d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab7796-8adc-4a01-b212-ea5932c07758",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d7938-b84c-4443-9dcd-cf90a385c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd99025-be7d-4865-a9ef-2eef52901f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb255ad-b796-4a7f-accc-cb63a28c5033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "964e2bd4-1ba4-4f77-98cb-5ff8e3b0b0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010b3838-6e75-4fd0-9960-772707d1b52c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a859d-07ee-424f-969c-df536b900e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aadde8-8c21-437f-a4eb-5a6b1b5c064e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb5abd7-e52e-469a-a986-9cb5e747ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c64912e-17dd-4184-b7f4-059e0fb930c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb5ccb4-03f7-4956-9851-508a988e43e1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adab5f21-1f4c-4d49-963b-1537f5d666c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e63313-11b1-44e4-9d38-ca9fbe0f494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a28f366-ecd6-432e-bc5f-3f7e54a3f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebc9603-3e6f-47f5-aa17-1fc491bc1416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f21d3-f3f7-4eda-afa4-0498f96cd5e7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87cfc87-62c1-4ce0-9589-9fc6baac121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcb6b7e-f1f0-4a70-8fff-5f1b5a336018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1578c0a-e5d3-4de0-8a2b-5f1ba2efb992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a081b742-4848-4ecf-9241-8ec9b4c6d405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bda2b1-8380-422b-9150-05c6b1b7ff08",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90c3495-5575-4943-8796-1cb52ad8c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756cf84f-5451-4322-987a-40d203b2c6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ead306-4bff-490e-9328-28e075708a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f25687-5ad6-45b8-a2c8-f37041b21b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dde822-f1ea-4e04-8b89-293cfd22042a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a05a74-d03f-4713-a2a5-f7d42064ac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c3aebd-d1a0-4094-a686-4e88e1da467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def9b544-58bb-46b4-8995-941ed18ba24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d59c121-e485-4d65-84c9-a895f27020c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd16d5f5-defa-4743-b743-1c2c62b51e07",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa42158d-69ce-422d-a399-f73e0537ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e868a7-daf3-49a7-9a35-13894b5319f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee2eb15-f9c8-472b-bd91-6907cdc1ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e386ec-6990-425e-a846-b89b57b48aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c6afa-5120-4b8d-aee5-b675c599b9b6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b8e80b-439b-4744-be08-d9544a964731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc02eab3-f910-491c-9e19-300798707deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eb0e14-b878-49fd-adeb-ea601a7a6743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f797daa4-4e16-46f2-8a6f-fbde29333b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7921083-b8c8-42ad-9dde-26b4bff8d4ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1989766c-abaa-4c24-8171-3f228b6c5cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f28425-4d6f-4575-a612-021913a3755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a041ad0e-89ce-4b05-beec-1adf5d662698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80aefede-9224-4638-8d7a-487b7bd882b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cd9d6e-af13-4813-ae21-6aec3f605d75",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb25d5d0-b852-4b71-b37c-ad17f146e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4e004a-3ef0-4990-94dc-87051a90813f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e26c3c-c583-4f18-92ef-c17d8c139f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "153488b0-48ac-4f06-b7fe-f54b5f2e0e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cdc1fd-9a54-48d6-95f5-b6222ec695fd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a12e17e-2dd8-4ba2-bd76-4275e2eb1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc43d540-7536-4000-ae83-9d5f8cde1911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b27b3e9-758b-4d44-a715-9900b9ba2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5248ac95-1278-47df-bf18-05a4b95ecf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e591aba-0ca0-4e43-814b-25304145f102",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a865085-d410-4e59-8087-145b9efcd1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfec9fc1-98fb-417e-86c7-a5a90034369a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14da4eea-b38e-4a46-9fa0-57494feddb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4845c0cd-7181-423c-9866-b3d957528e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27531f75-c8af-482c-b4e3-04b5008e3f55",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac6b2c-aea8-4856-b95c-dfdcb8f3a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bc37ae-edda-4059-a06c-a364a05c7ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baed9e11-cc14-4005-a8db-d1c3877f1b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d282349-ae8e-44d9-a21f-f4e5ddc6c69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a673a-901c-4d27-aa85-7b7f067b9c6e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91695b8-c949-4417-89c4-ab2d91541235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9653787-aa16-4bbb-ae92-be9c3b98c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b6db3-83b4-401a-9548-db91096accdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3f7692-e544-438f-b812-c1d5eca2b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c27cc88-57be-4f21-97fc-88579f86833a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3dec87-8454-4437-8535-036838331162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92bc3f2-997b-42f0-be09-9e18ab24126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e5826-f885-475a-ad15-c07400b83e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a1327b-21ec-4e0e-a9b3-e76d2c04841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87350429-0120-427a-bd08-8bd4e2dc06b6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04e0704-b4dd-4484-9186-193a9877af2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec28feb-6cbb-4936-9723-70ec510ae2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb1741d-2295-4927-864a-18556aeb7284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b978f65-3a13-4a75-bc22-f128a220058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dde46c-5307-4e5d-b494-916e55591822",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce19c7-cef6-4c55-b619-c6c59e983694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f927b1-4976-4eb4-b942-7576d13afe07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90f80a-bdf0-4576-9185-e8c20a77a345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45348c23-380a-49ad-98e5-d71da27f1710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725a285-7f63-4de9-9a1a-a25458967aa7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492d3b1f-0ee8-4c7d-a69f-cac07b5aba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f811296-291c-45eb-84f8-b15cdf60e883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff5c7b-d3d9-4f2b-90c8-948a4baa6932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6e17b6-b135-4028-b35c-66b8fe17bcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95d4a0-a974-4a74-b70a-16ad89f747e0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ca61f7-4b11-4ad7-ae94-c3d2ffd3a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d96ebc0-ccc0-4160-94cd-a96c7fa7cc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8693582-6547-4858-95ba-5ce69c83698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "890fbbb7-4ef3-445c-bf94-b4f5c77d83c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5623ab-23b2-4d84-a29b-aaf716e72753",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c45283-1b3b-4d9c-bff3-506f9110781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befb180c-74c1-4c8a-86f3-5a57262dfa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824490fe-d99d-4757-ab4d-7ef2e88ee97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75db1250-faf6-4b81-a3f0-cd9bb3ecab2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf7c82b-3768-4d0a-a600-add54dc1cb9f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3832f384-1f50-40e0-a89b-1af7474e04a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf63f20-278c-4052-984e-2da02b7c3358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c062a2d-d556-4e03-b6c8-818b1f950fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcb54a5-0e0d-46dc-8b9a-f06a58770412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fbaa7c-0f18-4c29-94ca-2ae0ec0bb3be",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca58bed-a733-4e25-b076-f4a2efd9568b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c47d52-07dd-42aa-be97-63d2d1f45297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6960fd-3eed-489f-9313-0e367261ae92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c00159-8390-428c-8427-a69b11b54e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d962ba4-1b6f-450c-aad5-7f13623eb9cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd773ada-0a99-4761-be4f-5e551f6f0abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f492d1ad-6c05-4838-9455-326e57f59698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9019bb3f-60fb-4252-8287-c7827fe2affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c60f204-6fe1-4be1-9c5e-50a420adf617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4ec688-6658-4424-83bb-2b18ded88af8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebd70ed-0f41-4a00-8271-958f5f405993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03842294-86aa-49f3-9bf2-9b84d1e4cd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb12dca8-6d61-41f4-ace6-d33cd2ebf693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f586c77-fbba-498d-8bf5-69a4ba459fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae35c1-e409-4479-a785-cd6bfcd5c08a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b718db83-67f5-42a4-871b-a1da66fcc690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd28030-c0d9-42cb-834f-62eb2ce94047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda78a16-7b9d-4db8-bb08-179ff3880dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b79b87-6788-4d33-9633-b1c75cfe6315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bf0551-4f5e-4d18-a383-7b43befec0cf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d4fa42-0f55-4d0e-80b6-c8f70338ec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adba4ba-56cd-4bfe-997a-0f8bed640b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4fd6e6-3400-4a3b-bdc2-4eb1d6f7c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f61632-6a51-4ce8-9851-a2d7ba3456c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16996e11-e2b4-4efd-baee-00070d942366",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b7f07a-0cd1-4c22-bd38-f9f70987051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c29ffe-eaa7-454f-af42-3c94c5cbd662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac33c905-128f-4e7c-a4fa-3f92dad2ff11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3b2918-d503-427a-b652-d3b5352774d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd286001-68b3-4ae9-b371-4c17ce2eb900",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072e0728-be05-4ce4-90a1-c1543bb070d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "36fde39c-7e93-4517-96d9-6076633f18a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d39f9-be2a-45f4-930c-90848315c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d99e9a26-a9e9-485b-90b0-740570272ad5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffa38a94-b739-4d70-99be-4b9b94b6f8fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "893c20aa-2287-45b1-805c-d8dca082157f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c326b3-b706-4f93-a542-5bc8bcd28be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7baffb8e-5cb1-4f87-ada5-7e9624f93ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b484a7-f0ea-482d-84bc-e80ab1dc3bbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "392c6a51-8e59-47d1-ae62-2d5e85f8fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e411e0-a343-4846-889b-463594a016ac",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d6ad6-8bce-46b4-ab3a-54695883d605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e2bd704-8a13-407b-9e99-0770ce9264cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e558a3a3-ca71-4e83-be63-01953e29e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "042a20b8-744b-4d77-bfdf-9e0156525990"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78a7bb2f-8aa5-4168-8658-79c9e4798b99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b18385e-5b0c-46c7-bff5-e66603f94e7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab302c6-53c8-495d-803b-6fd238404f43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef37ba5-56f9-4bfc-b80b-9fbd183fbe70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df13561e-00c3-4a74-9e80-024dee3cccc9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11b4fbea-6f07-47c4-9d8e-c3dcbf3142b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d43c0ed2-9bc5-4227-a263-ee924db26a8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5a1f021-35d0-458c-b95e-b5658dc898e2"
                }
              }
            ]
          },
          {
            "id": "28342546-9c19-4cfe-8b5d-af30c5f8dd06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3af8fed-96f6-4eb6-8aa3-a2494fd784f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4489281-9d6d-4824-812f-578684410e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c60006be-b6bf-4cc1-aeda-3d2f25cbe2e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e470f57c-56b7-4072-84de-5055b2a0a882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecdf7892-069f-4ded-bfcf-790e3cecbaa9"
                    }
                  }
                ]
              },
              {
                "id": "81dea687-ff8b-45a6-b86e-f1b6a9ddc0b5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "646e3408-e361-453a-a4d0-cb07bf28a090",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa383cdc-c5c6-47ae-b53b-3d5c50da9aef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0184edb-a60b-42de-a7f3-78697f2edc9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7990b038-fdf4-4e16-9d58-bef58d844606"
                    }
                  }
                ]
              },
              {
                "id": "3679d318-1bc8-4bb0-a7ab-beed549ae13a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a531d27d-9eb4-4f1b-a010-9818d857baa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b589de9-76e8-48fe-bbaa-c16713a7d9ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95d5e0ea-a12e-4b84-9368-d6f43ce51952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "183a970e-7147-47ed-b6c2-63339af99310"
                    }
                  }
                ]
              },
              {
                "id": "c02286e2-bea1-4f42-afb0-c2655beab7cf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8479db-1eee-4576-8b1b-33735da61b03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5525d40a-f63d-4e6b-b3cf-ded5ea02cc2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a68c67f-b944-491e-80f1-9c9d4c23a024",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "930555aa-a07e-496f-ae9b-ec8a4fbf052c"
                    }
                  }
                ]
              },
              {
                "id": "7575acac-d8e9-4373-8e91-2746955e1d65",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612c86ce-8bd1-41a2-8435-96f93bc1d4c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e337f7fd-395f-4b81-a420-9bd257369ec3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffc408b5-5225-4dec-b4a7-6dab8d4f3343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fac561b-25cf-4d6d-92d3-6bb86f5e108f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a320f2f9-ed1b-40c1-a4db-8342f208f0dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "750e1972-85d4-41fb-b556-9e26ebabc242"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2350cee8-1aec-4488-afb5-57cebc2aee31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1bcfc93-ac87-4ad6-b374-de1fadc492d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7cb6f50-86e9-4547-8907-7bb89b7828ae",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "db4b620a-9071-492b-9511-d669248ed209"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e00386c9-ba87-420b-a1ad-f6eed7c55643",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de5f7153-8736-4f09-964c-9d8e6451384d"
            }
          }
        ]
      },
      {
        "id": "987b3fa8-622a-4152-a7b4-47124270d88c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ce9ae19a-dbf9-4dfa-8909-454b4ab79888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb6ec1cc-8d98-4256-bf21-24097f1cb4d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f116abbe-65d2-4185-b81d-f7b77c7b5d19",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21252e8-0a4d-405e-b50f-9ed940c303a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56aaf4a8-57f7-43ee-9b77-eee67e4cd84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75f8953-b4a7-4dcd-830e-d990d142a82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9447eef-3d69-4a75-aa6a-69d2f3a229d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd661d2f-9744-4ca7-bb7b-59d9f0ce93a0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f839b87-4054-4d02-a0f6-02eb1a1566b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e6fac5-6f57-494d-b88f-a4e958d9ad4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc81892c-e2a9-4405-a0dc-08b556147e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30434a6-1507-4138-8418-6c14165b6053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab6df99-04d5-4162-842c-57f0df32e203",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6198408-05d6-4d58-b09e-b42b4101c433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbbd645-e798-4581-8b93-c49aa564dc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678bc72b-d0c3-45eb-9555-fa9223cfdd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a33dbfd-8e44-4fd0-9d6e-9a87f1965616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c86df4-83cf-4913-bc31-685773b10453",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4386b02a-0ece-4eb4-9bb7-d38c0394abfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a58c81-1b9d-4e45-9feb-b99d4b2077c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f0f073-a428-49a7-8699-ae6967003971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "063f23a6-ab6e-4919-87a8-e80fb00c2216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b803a9-806d-4508-bc8d-c06f1107bf22",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0283233-fe10-4bd7-8b40-8142fedf3304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bd1f17-fa13-41d0-9683-42309b854eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c829a1-110a-4149-a6ef-2e779986b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eed641a-c162-4b13-814c-f318c4f00da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0a92ca-d46d-4852-a4f8-fd9c3813e09f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa91cb-a631-4d25-827f-7a56644550b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8224aefe-51d7-4435-9f50-0174a4b8688b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa3e1d0-2dc7-448c-8f32-55f612ce1efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d8eadd-c568-4aff-90a7-d97901e8012b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e576b-836f-47d5-b6c6-ffe7347703f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52425108-e6e1-4c9b-ac6e-2601da5f2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f531838a-315d-4336-a5f5-40486f82f0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bebf91-62cb-443b-a061-42945ff9b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "561075bb-b6d2-4c7a-8a13-958906bcb5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65a0574-f288-4bee-8138-8678c6c9c238",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c6ed9e-bf77-42cc-847a-f8247318bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde6a4dd-fbee-476e-a374-8cfe7ba57747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5824c3-10f2-46c2-bef1-3e043a416ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1171bb0-a34d-4a27-aa55-c33b7e985270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3b7b78-63c1-4b1f-b35b-8ddc8fb0d187",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce21577a-f9e4-4227-9b0e-484ef6735a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab9bcc4-f9b6-45fe-9662-0c6543c65c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a659e3-ef69-449c-abfb-6c9b17b29a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d4b56c-e0d2-4e68-b14a-dcd02dbc2510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212b4f42-2a83-40d8-ab44-9e13e2d87472",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88764194-1f04-4ce3-88ba-1f60bff5fb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a2db50-8137-49ab-8a86-529545dc0a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f2cf6a-6bc5-4161-ab2b-b272733f61f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b5acd4-1427-4ac4-90fa-d2d9188b1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b904e16-5b96-419a-a182-8ea6f2bdef27",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3340ada7-2b3a-4548-872e-698cc9313087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d3216a-792a-4062-a271-fc14915ac21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8672eeff-292f-4246-9b48-bbba7041e3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d21a0ba8-253b-48d1-be0d-f3a080ea3e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8001538c-0a5f-43a6-87d8-a796cf2d04ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af5843f-267b-4d29-8ee3-2c1bc76e4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bce2aa7-41c8-4d52-af14-d61327fcd62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa76d9-d5fd-4fd7-a703-39f94d04855a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2c89ec-59d4-4d4f-a7c3-626fd88734b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50edd2e2-bce8-4548-b818-36165df5f137",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7476b2dd-d6d2-4990-a1d6-5d5ab25eab21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5e8f5e-504b-4ef8-8c2e-a9a7703dd03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5fb23e-c4c6-4698-b47b-8757bf30e479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17410075-93b2-4b40-94ba-dd22557486d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e5a66-3f38-4f96-951d-7e698cbdac03",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651fdeb9-fcdd-4338-ad5b-3665799a8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c235e02-8b7f-45d9-92db-d192d4f21415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d39441-2cb4-45d9-8727-dbb36d4688a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd890b0a-cff9-4285-b463-ef324d015e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929b655e-8980-4b8c-aea6-53cfe646b22f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22594d5-dd43-4acd-9cf0-666cd8dcd971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21da122a-e4fe-4269-8cc8-97e29e4c6d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80674e58-954e-4f68-bbd3-6ba64d2b0a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "041bed28-3fe0-4354-9687-a9c2b3af4e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06cdcfb-80b0-4f80-a3d1-8569f9cdf218",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb14da2-e945-4efe-879b-3eb86b8e2c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cb7a55-1067-4da0-8b29-eb73f407dfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e38262-529b-4516-9a54-f32b6fc9b49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b14cb8-cfbe-434e-8be1-f8ed71b35490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae987b14-a958-41f0-ac15-f2267ca1208a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c39fce8-ed27-40c5-8b71-6db22436d1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7567820e-4358-4bab-970b-8da0dbaa6599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10deea2c-632e-4433-8923-c5aa42ec28db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e850784d-394f-401e-987c-21e1f412b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e28d9c4-ddc5-4408-887c-0f9f5fbc7dd4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857b11e-7012-4c45-9cf6-a3c219eafd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8dbc9f-55d9-43af-986a-67d3cc9e8aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a7380-1f48-4219-846f-8aebb8bc989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f69219-4fc9-4c8d-a01a-ecf0a6ca13c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0f1de2-ba3e-42df-aa46-841a8742d2ab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91fd65a-5f5d-4efe-baef-88ef7db67b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ac8080-5d79-41d2-96c7-299c4c3234ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f71dbfb-e8a0-42d9-99e6-8ee3bcb55753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9641181c-7c27-40c4-96ea-4f85eb47578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071f349c-0697-4650-badc-2c8af1c0d01f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec998f-5090-453c-ad66-c2acc267c197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad6e216-92c5-4e07-913c-dd120ab53487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d5a370-3c10-41de-b685-d8e7332eff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030880a0-ba0c-4f4a-bcc9-00f20a3b95d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44017129-2956-498f-b6cb-9df6bc4d0b8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa2657a-9725-42d6-b651-6e6066774ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6702fb84-7942-4d30-b696-f5ee34b41681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbadfab-0d1e-4fb7-939b-90af53a2a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57961283-c60e-4bd1-b91f-92ff8754d167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72313b43-065c-4558-b79a-7b4bd2317716",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80c70a6-cb22-4181-9f3e-01f8962fb396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85af2452-11bf-48ec-8501-28932dfdd1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084ccbf2-5545-4e42-9dc1-48317c1c772d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14d7ea6-3eef-4713-a868-939dcc2c06ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8eae87-22df-4369-ad96-ca57d5e506ef",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5417c1-d4b6-4c35-8da6-3ca1f0d42f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94971ab-c78e-4e61-9367-a2b0b2225556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c0f628-d2a1-4b2f-b4b5-7a68f7f50a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ace95b-1456-408d-9552-62a7fff1815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d66f785-185c-49ad-babf-fdc22034422e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e3eaaf-fc5f-4ca1-b8d2-1ce5cfaa4982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcdd2ff-5ee0-4154-8e8f-413901b0d745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0f02c-435a-46d2-b431-bc578e9dd35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9165a33d-ce8a-4a79-acc1-6e6e1ff832e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06ae0e0-719b-4058-94c5-a2fca1cc0c59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7745e897-fc29-4972-a5c1-5f7ca87d2889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8221f696-cb4b-4f95-a3f9-964cf349a7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c79c8-2d68-43a9-ad5e-8634b241c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b87ac8-3abd-42b9-be0d-13deca7187db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f3954e-155a-4602-bd71-3457f22076cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f1a11-5428-461f-8bd5-36800c5f85a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4bafc8-2b6c-4672-b4a7-f7f1a6ebdf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d991926-09e7-4a94-aaca-77bb287efa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00e0e35-2180-4d35-96f6-dac83ca89dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ac0d5-f106-4cf8-98fa-2ac3639626df",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7620d1-f563-4b22-aa96-df71f40ac31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc485e0-f180-4b3a-af52-5c1669d1fbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaec72b-df84-403d-a1aa-1a5c37ac2414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f04bdf6-1627-463d-b645-be17eb76eab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c18523-7267-4fbd-bd06-ed99887e7933",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010e93b4-41ca-420c-92b2-13c17b59494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad5e6d2-cb5b-4f1d-aa88-347ea4808a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2f214c-a181-454e-a34b-1a4326a192c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b469997e-71fe-4622-bda9-73929b120e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb70199e-4d5c-4833-afbe-025feb663698",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70721d55-5221-437e-95d4-cfbd8dccdc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d994dfad-9153-435a-ac7b-30d62329e12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606129db-55df-4f46-bedf-fbba7f1eaed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bc70b7-7473-431b-92a0-31c4df1ba4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcf2b2d-83aa-4e6c-a76e-50b3d7b7f908",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797310d-b186-4f0a-9e99-a874a566116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3341db3-4508-40bf-8471-fa36b6c96314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a1318d-33ca-4b13-b76b-3719f24eee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee84849-f3a0-4c99-9174-5eab27ddf51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce101d96-0b54-4d6e-968e-30c1b2d1e359",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ba4300-7503-4d6d-b3dd-601a7adaac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc1ee6a-38a8-4fb8-8dde-322738be18ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8945504f-051a-49c6-b69d-97430a2a788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11005e91-6d49-489b-98a0-cf20fa88e582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f99221-43a9-419b-bb86-42ea92337070",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d1ede6-4a32-41df-8d17-d2472817ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241029c1-98b4-4739-a214-c8de6e3c51b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c616d0-3778-4cb1-83e5-fbfc45b3f85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5008a8-f9c4-4c12-9b73-3d3e82259d41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9917f1a-420e-44c4-ac6f-0c5d9f80d771",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d922048-c8bd-4f2a-b9a9-53c718530715",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72f58b2-bc50-4c06-ba2a-daf2e9d7abec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b69506c2-b8f5-42b4-a6ef-2ef37d32a223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac4cb7b-df2c-401d-b71f-dc215faf1262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "012caa22-7b75-4508-8e78-e5d58a7cf80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e092932-852a-45d9-8535-f12cfa5bb843",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca15ce0d-ff0b-43c5-adb8-3e8a7b9026f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b81fbe-1f30-4805-b240-d89c84a5a431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779d2960-f0e9-4dba-b7d7-9eed14e82774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3932b394-2769-443f-8137-ed1e631c85ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa1d20a1-3905-4ef4-a45b-83cad0cfda51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639ac501-81b4-463f-8724-95e90b05df38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b94e28-c7fb-4f7e-a5b5-34325f8fb792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3df51b-11bc-480e-b6fe-2f69bca04437"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89e4dcac-056b-473b-a914-5774f86c5ceb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2b2f503-9f91-498b-9acf-62476eb79213"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0ac06a-5af8-4d5b-80e0-e1f2c239ece1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2cbddf1-e1c7-44b0-8110-044885522397"
            }
          }
        ]
      },
      {
        "id": "a574c44a-98ab-469e-a437-dcbe900a1042",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b71a30ee-9c84-4fdd-b7ee-31d4faa16162",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08319b13-b0d1-4870-b452-4e7f42716dce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f61c46ef-196d-4826-bc8b-4fa3633f18be",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1229d3-4761-4d71-b2fa-9cb76561cea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f97c6ba-7ba7-49b1-8baa-493998c82141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fdef9c-f4b0-4461-af05-a776bd4d48bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b46470b-8a92-40f3-ac47-278d2d55fef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af119439-e173-4039-857a-0a5729c30e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f6c812-65f9-4bb1-9088-4f99d677c787",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06706218-506d-4217-9066-20652d923d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5aef2e-d31d-4255-9a51-29f10a7f320a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e265c2-5c2a-4cef-afa4-d853aff4db4b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8ab262-6aac-4f35-be6c-3d803b858396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcae4c7d-7311-46be-a42a-be77d51ae230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216807a0-3c7e-4e8f-b245-27a0fd01b92e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cc702c-3cd2-4f63-b979-13c082be16b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0f7650-b11d-4ef5-93e8-6aace4a08407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cfa54-64fb-4f17-b6c9-237ced27dee7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba75393-7e95-4c2b-abc4-d31d46e32281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca59a12-1cfe-46be-a190-96e2ec340200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d4269-ef4a-428a-a82a-24c5dd7dd205",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dad9a9e-cd1a-4bd3-b67c-c4e93ae6a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26d26a3-3265-4054-ba50-6532099dfbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a196dcd-7de8-4fab-97f9-fa43b27b58ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206ad874-ca39-4134-a231-874036c68286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2ef6b2-100d-41f0-88eb-546f8e7736b7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f034fd71-f267-4b97-9544-130a1d1549ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab59003c-28dc-4e62-9a5a-a458b9cfcccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b429bb9a-c628-4a0b-bbb6-23351a7a9b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bd18fa-e6a1-42c7-8d83-7870f1ec52d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeeb544-5615-4b2d-b533-c706429439cb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab636f6-f74e-4393-8097-2335c16b8090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa09c2e-dddf-4150-80ea-cc66e38cd64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db357f-c426-4494-929d-7967a4d08f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8b9141-09a0-4b88-8822-f526a511c707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cd9d44-6fbd-4e94-9684-12fa47dd1633",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d3e389-2da1-4906-a462-2b8c60247e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e9a008-e7ca-459e-92e2-34f71cdc36fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7293cd2-c1d8-46e0-a8f9-a4e8336794bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57f6926-c4cc-47f5-abad-95f7ffed02c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6e2226-4e7e-41f0-b0ad-3b1022418b8a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59da6d9-7e71-4028-bf25-266aa8beb88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770a562e-1a42-4384-b179-a2d879210213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06492cfd-0ce7-435f-a1c6-bcbb4084d993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3f34e4-e779-4fde-bda1-59c38f6133b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b32e7f-022e-4296-a311-eb373f6ce9cf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0cb473-ba13-48bc-81d1-313c6726a566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1257a5-ec24-4ffa-a80b-ff93717384f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e404c76-e88d-424f-b4a3-b015fcc7e98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5142fb3-d3bc-4563-850b-f50a00efa723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88776fc-e2b8-4207-b08b-d3bfddfa0414",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaa2786-3abe-4b47-9c7b-b402a2197836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbdcb6d-0a5b-4e86-bdc9-3ce4614193c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8820ad-833f-4ffe-830a-d04b974f855e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838f1f24-5388-409a-9bca-658b468835f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a32c9a1-2605-486b-8493-f9a134932da7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c088c4cc-69e7-4560-a84b-6344ab4ffd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a12805-6a19-4ee8-aeb5-bad593ec042d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ba0fd1-68f7-414b-aff2-ef30a5dbfb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a80b0cd-5f06-4999-84ca-9e5d4b373023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eee4b7-bf74-40ff-b2ab-f6a5a27f79b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c6e2f0-4848-4541-a332-a8044cbfcdb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f364c8-ab8d-4dd9-91f3-ce31b46de6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5674ca-0ff1-4083-bc6b-ed1173d0a25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27b9486-6bdb-48a2-aade-579716211e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26e2434-a1e5-424e-8596-56f780e9bf00",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22aff71-fe7f-4d61-b22d-ee0992e5b0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf38d2fe-358d-4539-ba6f-5fb322b6e112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aada88-dee9-4f47-afe4-38f7f46c52e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bc6096-9f33-4fbb-9580-68f434cbbb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6770fa-8c5c-4d2d-978a-79ed691c4321",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32473fe5-d21a-4f82-9135-e2d5317c8944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ad631c-d280-4402-bacd-84c60d7d71db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766189c7-d19a-415f-9ae8-26467d8f0c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4c1cb5-7400-45ff-8b7e-1f95cb810e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcafcc0c-84b3-4a26-826b-7cbc8d2ec478",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2b803a-8360-4498-bc0c-cd8110531ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c12bbb-73c5-46e7-b3f9-002353e64f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4f2878-d8bb-4fbb-9147-63e9b721ea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985bcdab-89d9-402b-96eb-dbf20a5c3a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5e343c-950f-44c3-979d-cee95ad6cf32",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5710387d-b618-4f60-8d41-b4a70ad0b61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88e35f0-2483-419b-acb0-dc535b0d79c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876eda76-ca17-4740-8204-fb03b5d6c698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b68f293-be8c-401d-8676-85bca9ded455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430d56f4-6bff-4490-8868-4dd1e1bfe484",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334536ce-c844-46d0-a660-b2f716e64c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06694d2a-a267-4ff7-87ab-b0c96cd473e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab1d45-e57d-464c-bdd8-0e65bb7e12d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93472739-58a1-4522-8d9d-bb8aa9b30ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0afae-10f5-49c3-8fd0-b8da99acfbfb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23591429-952a-4edc-851a-3451a70223d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d152d8c-c1cb-403d-aaad-14d93be4a3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79955cca-13fb-4a43-93d4-b09a8432885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50830dfa-69e3-434c-9ccd-d67a98a36bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14333eed-02af-4410-b889-d6fe5a6cc194",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419bb533-e422-426b-9cd3-8f109ead5090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a7f10b-e489-45c8-aeb0-0c40964b6be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e2d04b-740d-40ee-b3e2-3fffcec12fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61f6a20-8620-450c-97aa-8cf03c298523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff0232-fff3-46cd-808c-096d1fe13ac1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d66a23-06d7-40ee-a835-0c48e8f3a911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f060405f-4609-4e3c-8470-0dc877aeb0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c0b910-5cb9-4c10-88cd-ee14b0c32ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45015442-c95d-4a6b-862e-be35b040aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c8120a-ab8d-4ac4-aa81-f021662d3404",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8017903-374c-4171-b868-bb5502a59d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6074b64-5aba-4616-986b-4f292de79c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1023999d-4d32-4b8d-a1d9-a2b36c701bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c925a9be-6636-4de2-9921-0456845580df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936554af-2fe5-413d-bccf-a05dc2dae75a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b161c08-21ec-490a-8dec-63a91b76490a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2407cd7-70d8-4a4d-8250-4f8787866e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e6a70-171f-4679-be3c-6e044bc36ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa32165-6ba0-4f5d-af15-dffa3cb27511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9ca979-396a-42ad-98ce-6cf504e28712",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a221f-12e6-475c-856e-6e81bade0c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afeed60-2196-4069-8bff-200efb2c9663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4ce184-ec8a-4673-b694-cc36517acfaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1860b-abc7-434f-abd9-ef3ea7d0dc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a42a2c-01fb-49e9-9e2c-2b387736fece",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eee63ae-2b2e-4aec-9c08-75408fdf88b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529e9c8a-362a-48ca-a262-0f8c220b01b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f79bddc-e651-4125-9407-7f56864611ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7fc0e0-0f6a-422e-a747-6a44c55ee186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f458fd5d-a4cb-4d2f-bcf7-49fa1082a366",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcfb51d-da45-46d5-81f4-cda772ef0356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce45eb03-92d1-43b9-95c8-a24e2aa8595e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e3d304-571b-4f02-8556-0a3193fa4357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3515029-3db0-476e-a0b7-e732569ec7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9b5724-ef86-466f-9139-d4d026b5ff05",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93b0bab-c139-4c77-898d-b967e5734c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2df454-ecfb-4200-afc1-107b109782c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09697380-1d66-4bfa-aa86-31732487d557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169c064c-bb13-4632-b5d1-a42dd97cad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d512b127-fe61-49fa-adf1-93f47ce02250",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4ab8b5-011e-450e-bce4-1a66af616ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536581cd-136f-4ad9-b384-feba0cafe158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445fee96-6919-4cdc-81d6-9f55f29862a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dc316a-d679-4a69-99d7-22ffaa04c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a897ce5b-1074-4582-93d7-e598a9165ab2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1383b40d-1021-4492-a5cd-e48d85b68771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf738d0-5afa-4daa-a323-473205eecf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd267b72-b311-42f7-a37c-d22c3495a809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdc43f0-ed8e-4ccd-9ad1-4d975fa5de1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b2add-d4bb-4f9e-889d-cf5a77699a3f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61772b19-6264-41f6-a30e-0227b6e06e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c853b6fa-621a-45c0-b119-a2873e91e8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32294f50-3ca9-4d46-bbd2-1adcbdd9a4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0bbbc2-532f-4cdd-b863-8a001614650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25530f31-763b-4d01-a648-818751556304",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f58570-e2d9-4666-9cc6-86d119505da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6648a2e6-2507-41f2-93e0-cdcd7d69e488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55f52f6-ef83-4f91-a176-7eaa07b5ef17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e7de07-1963-4974-9e20-730ae5c42f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6410452-0905-4ea8-85ed-b547c0f41a6c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9914cadc-aacb-44ed-ab8e-4043d550ea79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d80617-5e5d-4e82-a856-534ee1f9dd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9143ca-a0a8-462d-970d-8c1e282a2417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19a1d90-c5f0-43c3-b21f-bb73a44ea011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd52d3c6-7cac-4276-8bc9-659454b6fa70",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926fd091-10bb-43b1-a1ec-45f534954ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e81063-e296-43ce-a6f9-f79cc32e9643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e065af35-6940-4df4-9be1-2b79b80e336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40341009-45da-4ddc-b0b0-b3df63bdc8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3c3410-8b68-440c-a687-4b94d0ca2212",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad8695-53c4-48f8-bbf9-0e9e948ea986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13aaab3c-3040-4bde-9fa8-1172c8abe425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a9ebf-5122-4732-b3e8-fa39f00c4a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056e6f5c-8624-4bb9-b9f5-80173fbb08da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e510d0-902f-4227-b7f0-5b680a7cb68c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c14357-1911-4794-b390-cce68b2e8fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0333757-469a-4767-8c4e-6e03a423d40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cafb8a-d3c3-4760-a87d-92ce0635d117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaf1f50-d5ba-4949-a5e6-79fa948ad3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b59bce-2862-4124-b997-ea00e337e4e8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a35faa-4be7-4329-a15a-b13d2c96dde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1267ed76-a9e6-4048-92f5-00a51f9ba94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c89e7c-371b-46c4-8443-5a9ed7144dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa6d163-b7fc-446e-af7a-0385e7b1f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e6cbab-0e05-40bc-b9a0-f5c66e46e303",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ceb055-06a9-4cb4-b000-be101dd3d624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0f3d43-7449-4119-9940-e15c5d966150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f5ed51-d509-4e01-82d8-bc0c1ba59c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55bbbaf-2720-480b-a9ce-712cfa852366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c8599-f51b-4177-aee9-64404e699a7c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c408cc81-919e-4862-b7f2-d1c3a5e29c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70178f2d-3718-4960-94f1-4dbb6cafea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6319ca42-88e5-4b75-9975-44a3a34f3a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ccaefe-d9a3-45ad-9e2e-4811c4bb9aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683e7d8e-8ae5-4022-8629-c85c1aa18029",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bf3104-d0b3-4f87-917f-21391f05bb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1876d6a0-be1c-475c-acb2-1c3899ee079b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afab7ab-a5cf-4113-b000-509395795558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948d71f3-f537-4881-b84d-05bb0d30a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ba45a3-b8a3-4a0b-a817-ffda7f68c791",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43a76d9-0c73-419a-acd2-c22e6649ebdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae8e02e-b537-43f0-9922-51c8fc39a9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601fb0a8-ec20-4b9b-b96d-ae398aadba64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298990b1-27ca-4e31-b749-994b0eede4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e845b52a-3d94-4f48-82a4-5d03711e9f6a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717dd07-8a5f-4e37-8e62-2786cbf5f3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888c8418-69bf-4afe-bd60-f1933eb8fd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1477864-4696-43ca-a80c-fa8b5cc421af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c628112-2fe8-4ac7-a4db-7c002792ca43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d31b1eb-b723-49fb-a90b-c39a4983e72e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c66282d-6f16-4195-8eb6-b3b4bfa04f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055c67a5-1c22-4b81-a625-dd6c51cc6662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a2a47-af95-4182-a04d-e361eb5a948e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f73569-5c98-41f0-9cde-8a5982ac3a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8c0b61-3e2a-45da-97da-1a2db20b24d0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac2d749-710e-4c0b-bae8-afd9b239b117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e888c74b-326a-4d2a-8616-7b6fd811296c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e76701-0087-4a4c-bacb-400ac34682a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2924f8-1562-4056-a2c8-2a8e987c20a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef46944-3579-43fb-9d69-a5d4f9f24471",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca09ee86-8ce0-4d39-832e-da4e0b63bb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480e405c-bf0c-45f2-94c3-45fcb21db945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f5203f-436f-433e-96fa-8820b82116e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7460ffbe-8c5f-4694-9d13-d96531f4a886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd9afa0-3e2a-46e6-baa7-17aeccb317af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed6ae33-49ae-4be4-bded-fffc9e43cdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd60e26-87bb-4049-b9f6-dcaad2097fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0038b5bb-ca7a-4a07-bed0-28dbc6e3dacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27acd7a-5f20-437b-8cf5-1971d513c4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc2451-bc54-42f3-b1dd-8fadfc89be09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e59626-7490-4f6b-9ce9-b0dd84dedecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e017f58a-2cbc-4e8c-baf0-61464ac5d357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a76baf-23eb-4ccc-9cac-0921d042353e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0885f5-1f40-453b-a31c-944fd89f50bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f650a-8fe8-488b-ab0b-48642fa31672",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3d1a65-1fb8-4bd0-a23c-b8d7e6fa5761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fea01a4-7d27-4774-ab56-628f3dc72928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2efcc0-413d-4ed2-96c4-7c6659983f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007eaf26-54b5-47c4-a654-74c77fffd6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9bae30-5bde-4bff-8fd6-86bfb320e70e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829f6985-0182-48b3-ae99-83b9a286599e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2acec89-39f7-4d09-b5a1-a96d4e6bea85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b8b9aa-ec4a-402d-8851-31bf9da4b6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1acd81d-2df0-432a-b722-9fdc9d57b160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d528f7e-90c9-468d-9a6b-6d1db487277c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9687b469-d97c-4b94-9a75-e32ab9d9f1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e736079c-8fde-42a4-8b1d-284e130fbc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5da5ab-4dc3-40bb-9398-e7f014c077eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb0ac39-7d7b-4fe6-8646-747713fe8883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92477574-3906-4798-b010-d197ca1c3b3c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25078bb3-5c2e-4574-8370-507fc5d91322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c9e98b-0adc-4b88-851c-42c5e9154f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea07f6aa-e220-49ae-a6c1-057575358d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925e3b32-a559-4c79-a2a3-867e4a963a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0348d970-88e8-4968-9b89-b083d27c9f53",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416ee403-44de-48c9-84d8-a8b39ce85ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0b58b9-ef8b-4337-a56d-0a7991abe6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c256a299-7884-444a-ac3e-8c6a391e0731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6621b83a-a4c2-474a-a7bc-e40d31b1cf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f38c85-45e4-430f-aefd-1bfb20f2a306",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f0f7ef-27d6-4a89-8f1a-9c59764a8757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac244cda-09c5-4996-9b3a-2734aaebfb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c5089d-b6ee-4b54-9819-b990f411f6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a01344-7e98-419f-9a2d-1cb4e331877a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6325df86-dc91-432a-bde2-0848d4f7cf97",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2260a0d6-dd75-452f-8049-7f5b212e3b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1901302d-7c29-4d14-a1f7-117d17c4e42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cd35bb-f92e-4291-883c-7f59275206cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7f0051-fe5f-47f2-be6d-8d2a3f06a95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db49746-2154-4a72-81a0-c7145044d7f2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7625df1c-f94e-4e8c-a728-8d4bb3186b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452f581f-602b-47d5-aaa0-485894e7120a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a10a43-3626-478f-bd82-574a75b3277a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c653d5ec-c973-4a10-af3e-04b41f798274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3703c8b-1193-423d-a249-a639e0abcc59",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c59ba3-727a-4812-b506-086220c9267b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3c5ec9-1602-40df-a950-a0685d710392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea573d7-56f0-4243-997e-2c0290ececec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27454df6-3039-4d6a-a44c-942ef7698c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651d3ac-1a5d-4de7-abb3-e439946cc71e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fecffdb-3ebd-4631-a201-3744dfb1b2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea346fb-e9aa-4f96-ac6d-86e98e1824bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf201fe-8c66-48f9-b59d-9b1511cb0f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da52d8f-a9fe-499e-aa20-9ef234bcb3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26340984-24e4-4f9d-9331-6161b07d8851",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f017e9-1195-476b-8373-9a8ea64d079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d43b13-e995-47e5-ac74-e1d82127e203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42c172-744e-469a-b923-76fcfd652ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173dbb3e-db12-45ff-b529-749e252d2af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f3889e-da5e-46a6-9389-f6db4fe6c9dd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca961df5-a984-464c-b575-36ed751b8ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfad2f0-e202-4de1-b8ab-e50ec5a87784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00981220-139d-4475-9715-787c6d16d0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dd0bb1-0079-426a-b403-cafb5c21b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0af856-498b-41b5-866c-1592a835688a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04691e48-bc80-4f82-af81-1e26f2e47436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6d9ad2-9f1b-46ce-a95e-aac7fa1419ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e32a2-29f0-4af8-a9ec-3585b37136cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2017ad3-a258-4674-bc1f-dd18830855e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4ebef6-f7c9-4a78-92d0-503eddd6b3e1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2545f386-8550-4b4b-8ffe-d0abcd75065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca876e1-4225-4faa-a03e-14fb34cb9124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc74a3-f151-472e-b8b1-ac505759e73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ee1d81-f380-4c58-abd6-33374b8f4357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00b9e94-e6c5-4e45-8b9d-32de36d1f61a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14284a5e-0833-423d-93f5-d2c1f04605d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3158ad-be87-46ea-b484-3b296a496f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be95e286-43db-44ed-8918-c4d0e96ee471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26580360-7500-41dd-9e82-f488c77814ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac40371b-6842-4823-928b-69d27f24acfb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e13daa9-72c1-4ec3-ad80-81f9adf900e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c2b828-d5c2-4e45-bfd5-209cb71b94e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920f57d-b4d3-4574-896a-1e52e2be90db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f755b2-dfa1-49d4-a2b3-aff2e7041507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88d72bb-af0e-415f-a199-7ffffddd4a8e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f74b56c-a8c6-46c8-82df-fad606d8a9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2c700d-ad58-4c56-9f52-29a0a6e53953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc671887-fc26-4e47-af98-fbced4f83e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15294402-4ea0-4608-b428-f4fb9a174b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e540f00d-4b57-4548-9ac4-08952fd142d0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b7c926-ad19-4a6c-be13-fc41358e5309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9c701d-4734-4e83-806f-c9e6dc1276fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1a93de-8372-4962-9ea8-d24e5ad439dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef970b34-a615-40c1-9a3e-110f308d4ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5849c0-0ac9-4faf-93a2-8fee3a1bfadb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38512bc6-8aa0-4b32-933c-167679bd5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e63b359-3f92-4ddd-a5e9-c87217c5ac93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4b996-56af-4146-900b-fd54d7893ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218a73ea-640b-4ab4-b0dd-1c5857ae4043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f343699e-bde0-4ce0-ad0d-86d7d116858c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20130a2e-496b-40e0-81df-76726ad04b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f93d0e3-34e6-40cc-93a7-732f434b64ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92822d9f-6af1-4d35-a314-2d4d84c318f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276ce0a3-ced8-4d59-8f2e-22d0e23a4b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7172e0c3-9eec-4aab-8b23-9542a003a3d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f168924-a258-4117-8f27-6da524c87f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2521df0b-86ce-4437-b996-e95f81cf9bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e76f67d-2e76-4f06-b37a-ee8da6a1a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4b546b-91ac-45e4-9408-14028af26282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b70034-1447-4489-9b89-dd2aed1b5ec2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e042824-8cf0-40a7-8a2f-b724ba0f3ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a285946-3da7-49f0-a3f8-9db937ae4dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094b24bc-6354-4624-bb4f-366755352664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaf8996-e895-45e5-8ae0-7d6ed53f40fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d6a877-80fb-48b2-8f9c-05eaf6259d60",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46734e93-0e47-4146-a58c-63e67ff1a82f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da5eb0a-b24b-4271-b3d5-5c4c4e6ac8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e1c88d-aa0b-42e0-965d-2c47c455900e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c3e1b6-7913-4048-8d02-618a552d518d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e9920-f353-4198-9cd8-6f313ab46425",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654a9dd3-5e99-41f1-9228-c4ac192efc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbeebc19-19ed-407f-a1d1-25db9ab44515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d55f36e-115e-45d9-8326-6bbffbf8c575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99428be-7b07-4745-8182-c44cf2854da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0593f3-1cba-4dec-a76c-db284c89a53e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24781b2b-8251-45ec-9970-abffc62b6a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51118eb1-4887-4e45-9554-d6ea99979d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7083dfad-2ee8-4c5f-9bd6-67eaaeeb7764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8060e4-e9be-4a48-859e-634755901a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef4ede6-b6f6-4a38-bb98-994bdd550cb7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e7eb32-f0dc-4fb6-9a30-a7e7bd4db0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a2cbea-53e2-4db4-8be5-3cd1356de111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d616c-65df-4105-a50b-a02c4f2a9ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041fa189-9680-4703-a227-015970a63965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873fed70-012f-482b-8386-bc9f4408b972",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dd7489-23cb-4a15-bdb5-a6a194c04475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc325aa-131e-4fe8-8a34-d999b942fd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67e9df5-fb2e-4340-a616-ef41a56131b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5537d79d-34db-44a5-b5e1-f5f6d2dff2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba86c0d-d5a6-43d2-a3eb-50eb1baacf71",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71108597-360b-41bd-8eaf-1db18c281e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df65690-05d5-4d6f-a675-550e2334bc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f9f79-3dd5-48b7-a3df-1bc5c7477cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15add29-ec62-4805-b264-8a9105c3add6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a46b812-9ae5-440a-8c4d-699d91c76307",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be032fa0-029b-42cb-97ca-417c0a3db0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7371dbc7-e876-457a-8839-147ea10509bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1f7d93-8425-420f-b573-f7357900798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078b697d-525c-41a2-9fcd-93af7406de82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64c2d2e-c70b-40bf-adbe-069001b998af",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97444abf-3083-4064-a220-59721e670abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ab8dc8-14b3-432f-8bca-74f9675bb26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a60ed9-82d4-42d1-a70a-8ed051dbdfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79423a39-8378-4061-9373-8d187e1227fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda91f2-2ce8-4f11-a34f-b83b90d527ac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96078cf4-84cd-4582-b0b4-14a1dcaf59ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e26be93-5b57-4897-9083-2df4c862f7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1455a3-d2ae-4af7-8199-4f6562d46262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b1a82a-93d1-477b-82cd-72eda7e7ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae1a53d-52c6-4632-8768-edc3703a602b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1060b1e-45e0-4010-84d1-aa60e557743d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90044e09-ee35-4b32-9da9-04299c41f86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2123a047-9b6f-49d2-a7bd-1b48bdf13e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee65e29f-d5fc-49d0-92cf-4a6de55f2db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f3eaa0-753e-4a75-ba68-9b0eb9c56072",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040238c0-9a99-46a3-b78b-8cbab8bb61b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af217088-44bc-44bd-b8ea-622f3d8d13a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334b96c7-5d9c-4acf-a01b-0f1ba8d1ab51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d8cca7-d0f0-4b9d-a051-12a2182459e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eee5684-f1d2-40b6-b786-fb88bcc35994",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b02712e-146c-4901-83dd-dac89bd790cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af336c89-09e8-4c50-80d2-4990922953d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eb2443-0bcc-41d5-acb6-4d43cbb2ab9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b582d181-b6a0-4cbd-b54e-857e7e3e71a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0102a26a-e773-49da-ac17-5eb042df9807",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f09aeac-a74f-4104-96c1-6b937164a89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f92c537d-4abc-427d-acc8-4a41e7563395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2727bc-1390-4df5-bbb7-a64e8e6ec062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b166ab1b-f8f2-4cde-b44e-df75139545b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d4caeb-9d99-4d78-abcf-458db14c3305",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25f3355-2793-49cb-a61f-8538c3c6c57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634661bb-8de9-49c4-af6a-d923acf82956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a71e8ef-e61d-43e5-b65f-097bf101dec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afccf3d2-cde0-42f8-98f9-1c924880eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe34229-859f-47db-a8fd-e47624d46d96",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc661a83-817c-4deb-95f5-4b59878ae6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7865220b-0249-4910-8a0e-e6c297298fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0bbce2-470a-4434-9fe9-01b9952f3715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7d661d-4728-4122-b50d-6ebe176d62a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dbd698-2c81-4927-bd56-875f5c3b382c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa273ad-183c-4f52-9b4a-885e0d974a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9462f2db-2a3b-4cd5-87a5-eb5cefa1c2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ee4ed-1b89-4f2b-b645-520de495efc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6aed5bb-5f04-4949-989e-019624d1a564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bf2854-2de5-4e42-bae7-febb243feff5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dbb7b9-abe8-4b76-93a5-9d974f455c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858f8854-be0e-40a0-b8fb-e0b6a24073f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828eac92-b06e-44d4-b323-cc3b1b9ee88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdd0583-b0a2-4275-96b0-8c0ffb22f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a850248-fa71-4a17-8a36-20934a2509c5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73208ee0-5174-4dc8-a477-70fae1285d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e088d3-795d-4191-bddf-8e1492ab2738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329db2b-ff8f-4549-8ba8-a6d12ee921f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6294615-018c-45c9-bb03-2031aecf25e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002c5557-aaba-480d-9aa0-ae1ebd34b4b4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783e4707-24b6-4d3f-9813-212fa4ec116c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad756bce-43c4-4c89-98aa-4a57b1505419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87db28-a5c0-460e-810e-562978258cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e63f50c-3af5-4da3-b35e-7d17a59b1700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40079677-cca8-4cb9-9acb-7f05bce66fbd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81675cf-df4f-4cfd-bc4f-b0d27b9c8b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dbd937-cf17-45f3-bb34-3d674485abc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c38ec86-a8d4-4a90-be68-4c564d1c14bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b70fae-fa52-4849-97d7-4a57d121c60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f60511-4b79-4866-89a2-34f7595cbc01",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e28532-9ce8-492f-8001-8c2d6381c699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5f752b-69e5-4430-8c2e-4bc4003bfb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833b4af2-5bce-45c4-9451-bb421870a9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce500921-1552-4bd7-99cd-d276f4e9509f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff775bb3-2fb6-4b36-9879-71bd95455f21",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeda10e-2855-455e-98ad-491e85e0f9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff25f702-aac1-456b-a7b8-7c6c6dce4321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41351f8a-2a66-4001-8962-91ea774f2af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9846e43-4325-445d-909b-7951ae2ac198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a31286f-b48f-48e3-9e16-c67797783281",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b79252-0b82-4d69-a5d0-ff917f9ed0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388f9bfb-75ce-4083-a00e-b7e49214fd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07748a74-e2f8-4701-9f9d-70b3291f866d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5a732c-37b1-42c3-810e-dc594d750166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b6b83-0a48-4481-a42a-f40f6e8776c7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86873a2f-0130-4a30-8b24-81960a431926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec31e426-13d4-497f-bf5f-329a704b31f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab39e51-346f-48d6-83e3-9d99d8d3928a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea28259-fa85-416a-91cd-0e46fff18b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab94e6d0-1cc2-4964-8157-009d7181e319",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daed24c-793e-4c64-b0c1-86dae0cafdf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87420f2-d46e-48f4-892c-ab617e199c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588ea156-3da0-41ed-8ed8-6c6b8e20ee88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13992332-ecca-45cf-a767-b21f5d9a56e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b65964-d438-4661-be4b-ddf9641c5479",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e7d7c0-e78a-409a-9a41-d5ac8602f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e68ef8d-218a-433f-908e-079d9f61674c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad0589-d53e-44c3-9f13-629118a332ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3e8005-050d-4da0-a86b-d4facab9f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d677715e-779d-4007-bf11-f3559313d2a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99700da6-66c1-4c39-b71d-82bfdbd623ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824d2638-2160-487b-9010-e793e91d7a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb17d128-105a-4b5e-938e-cdeb624f6d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dd2eb2-656a-4ad8-999e-c9bc0ffb1213"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2581d4c7-34d1-49dd-8e63-a63e55c373f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77bcf8c8-7c30-4198-a850-fb51c5630689"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c82c1f3-4db4-4ea4-892b-f1018ac64ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "780f85f3-b009-42a1-90dd-3f1e2bba0e17"
                    }
                  }
                ]
              },
              {
                "id": "9704c2c6-7e19-4838-9325-3235c2b771f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e592d9e-6d82-4564-a216-42f79c95d640",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be353f-6fe3-4d0f-9426-50da0aceb01a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b98c298-23a8-4f8d-9f6d-65439145e7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526b1688-3354-4324-b7a5-540a309d955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dfe7da3-87e9-46c6-88e3-bbdb9d9890d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6947110-8c46-4b5c-84d9-47cb36b7e12a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a18d12-27a8-455a-9c63-a6d9e89ad6af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2696acc5-06af-41ea-8a8a-3644c96ce1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d55425-a6db-478b-80ca-b538b4b4a54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aecde96-e854-4786-b066-1ee35c1bddf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f98edc1-f658-4100-9a18-12e424b8b328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89da971-10b9-4077-9458-090431c0f6bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4aa9e1f-4643-4acf-a0b5-75932faa36c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b8e4002-14d3-48e8-ae05-36fb5fc4688b"
                    }
                  }
                ]
              },
              {
                "id": "85461d0d-c066-4862-858d-42098609c20b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b3b0fdf-753d-4c43-b25d-197113ede75f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045e7af3-9c02-4de6-9ec2-f30c623f3658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d0e332ad-4e76-48af-9245-a3045dcac3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23f3b64-d274-4f73-a462-c19e73b187f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35071a5-bdd6-46d3-a918-30a865adaf8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c65288e2-08a6-4d60-ae90-c8c3320323e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90318830-a16f-499a-aedb-8fd776895ee2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d8a7268-5f3f-4a81-a2aa-6cd6730b1aee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43beb596-e445-402f-b56d-481afe973b37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9585d92d-10fd-4711-b84f-b1bbd668f1a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bbab68e-d701-4cda-be10-cfe523bb2f6a"
                    }
                  }
                ]
              },
              {
                "id": "2eb26482-b899-4446-b965-973b48375a77",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b3f18ca-2673-4a9b-842c-44d9087a1fe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "caee8ac3-657a-46f3-a198-f1a1124dcdb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb8ed6b-e0a9-4e2f-81f7-a92ee27ca118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee5f94c-0bb3-4860-b2cc-e56ebcf03861"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fffb5ff-6634-48f6-a07b-21df2c04af8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "38183306-c3f7-4c7b-8f48-8f20b5ff6d41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbe5e388-910f-47f3-af3b-c617cfb8c1c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831d942c-b51e-465c-b4fd-4c3162d0fd52"
            }
          }
        ]
      },
      {
        "id": "67fd69be-06e3-4e2f-b896-49a9b81b43cf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6fa455ec-0a73-413a-8ecf-d6b78139b819",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75d2ac0e-9694-4d1e-992a-7db0f0336652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d653a-de55-4911-9f2e-7544ecc262f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c28a81d6-bcff-401e-baa2-c826d8e8563c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce00cb7-f6e3-4bde-9762-4f694ea2163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d5b11b1-6333-4c9e-b0ad-bbaedafe8da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb58e5-115e-443d-8095-77ebfc7a1ceb",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637a14d2-a8e4-4908-9265-364b87f86e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d9b0f24-e3b0-4db8-886f-576dafbb906b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab9f4b7-9948-4778-9eca-e8aef70f1d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "596a5138-b91f-4e46-886f-d1e200f56242"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "571c50b9-85e9-4acc-8bf5-b5b008ef9e56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "126fb60b-9aa2-4ead-bec6-f93cfdd963c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46b53485-f5b7-4ef3-9b1c-b18bac01beda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbfe99c7-0e13-412e-b1e5-8763665bc0d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8fcf4f3-6f52-4395-b717-d7f783b6ab9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d487c0bc-fe09-4e45-bb33-b7e3c80a7ec4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea76aa6-8520-4012-8315-121fbc1ee405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "821da709-d87f-4ed6-94e8-0d2292425fdb"
            }
          }
        ]
      },
      {
        "id": "f4fba573-9f42-4a5f-8b92-fade97bda192",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a014260e-4bd4-43d9-b299-0ffa820f3fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2832e4d9-0572-416f-9823-4788c94ec6a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7806220a-250d-472a-81ff-4d3be6d791c1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9a9408-e4e5-430a-844d-132175095d7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea1a598a-7914-4d51-8e94-85ca23a84500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405cc39d-c421-4477-af51-04b0b0b3e838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "299a8e23-20e5-4adf-82ed-c01a0ca041ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6e2b7e-91d7-48ac-a624-9764df5d0c75",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3b1487-f750-4dde-8e7b-7ae85e2361f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4efdc021-bef9-4801-9a67-923e4d83545a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14d5fc5-9489-48d0-927d-1c0a8cbe41e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87288bfd-a903-44c7-beb2-f18f3ed789fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa17d866-e442-4fbe-8c73-a3533ef72a7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9ab2f8-61ff-4041-a615-3f4168ad5e65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddad71d8-6cc8-498a-aaca-9d70fecf0c43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23fe430b-4661-4516-b48f-e53e318c7ec5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8be8ece3-fbb2-485b-9f1b-e8264ceb516f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0aa3f3fc-3015-4254-9df1-09a15b15df3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c08e18b4-bf4e-4ec3-9776-6b9e9e78798b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "433acda8-31ed-436c-9f68-89a84f47a03e"
            }
          }
        ]
      },
      {
        "id": "c90782b4-bfc4-4e2b-81fe-e7b038c518f5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4f6b6bcd-ed7a-433b-9c58-e85c441dc8dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2673e372-d388-46d8-b731-c76c52a755fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f177556-6947-4aed-9abf-b508a0892cdd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50099764-4d39-418b-96c7-f93cb432046f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dacf0fd5-b11b-4019-b481-d03c81e4562e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b33ad-2083-4951-8f83-4f972dce74ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e34de03-9404-4a52-807f-9a689345efa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4820f3-74a7-4a15-be6c-277a67ee8c22",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802333f7-406e-4583-91b0-bae5f55ddfd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0000bda-0e05-47f5-b432-c56e5c31b306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28af271-fce7-4f5b-8d73-9c59c3594aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb0a31b1-b3d6-4723-9ef9-b45b01324c67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68747af5-4591-40e2-953e-bb713a3b2407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e19e041-eb51-44a8-be97-6ed171ba1ba2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "279417ce-8c35-4136-b45d-8fecff385546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b52a660-e177-4433-a91e-ea61b8d54d6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3443d416-f1f5-4ac5-9e92-301d9f5cb22c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec803255-e1e5-4b0d-874f-84372557ade4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e547793-988d-4b6c-bcf8-609dcf15a73c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "867c1ac5-8090-4bdc-9933-f4424d0cd4de"
            }
          }
        ]
      },
      {
        "id": "6e17063f-3238-46cd-ad23-903113c5f24d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15c220c2-1004-42a0-afb2-93f42311a4e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2575d44e-d7d7-4be4-b20b-26843121d9f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "308ca464-491d-4c40-a767-8e6b2ec2c580",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4126ff7-7ac0-4218-be80-e1b88448ad42",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71edfb6d-0fc0-452e-811f-e224b59b46b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.54440154440154,
      "responseMin": 30,
      "responseMax": 3765,
      "responseSd": 235.72918365892428,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677777459310,
      "completed": 1677777484640
    },
    "executions": [
      {
        "id": "c9616be3-930f-442b-8cb1-e6b0c89be787",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16929536-6352-4280-a99d-326b32292600",
          "httpRequestId": "34acb3ad-16bc-408c-beda-abc35ebf49b5"
        },
        "item": {
          "id": "c9616be3-930f-442b-8cb1-e6b0c89be787",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5b032f95-1145-4cd4-80b3-cd32ce2c7c99",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 0
        }
      },
      {
        "id": "481a14e1-ea89-4e8c-95ba-162514b57d64",
        "cursor": {
          "ref": "8c0588fd-fba3-413a-9d91-793cdff1fe5f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0135306b-5229-445e-99ca-9ee957442e5d"
        },
        "item": {
          "id": "481a14e1-ea89-4e8c-95ba-162514b57d64",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a04770ca-a56f-449e-bc3c-0bf92e565da9",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 0
        }
      },
      {
        "id": "f19114b2-5ba2-4a80-b845-884e203b9098",
        "cursor": {
          "ref": "2181ef64-ad26-4475-8fbc-6edaea2d9e5a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af9b6bdb-8b70-4ab3-8edf-a77942b6a1b0"
        },
        "item": {
          "id": "f19114b2-5ba2-4a80-b845-884e203b9098",
          "name": "did_json"
        },
        "response": {
          "id": "239631dd-2c2f-41c5-bb29-de8c37ed6bbd",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8050449-a0ec-4ada-ac90-5e41ebb4368d",
        "cursor": {
          "ref": "5e74808c-c2d2-4dab-8251-ec43f9c03f06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f424c67-a8ab-4e6c-8d32-4f11d4e43564"
        },
        "item": {
          "id": "d8050449-a0ec-4ada-ac90-5e41ebb4368d",
          "name": "did:invalid"
        },
        "response": {
          "id": "f45d5a9d-fd62-441f-ac32-5321e459c14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8050449-a0ec-4ada-ac90-5e41ebb4368d",
        "cursor": {
          "ref": "5e74808c-c2d2-4dab-8251-ec43f9c03f06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f424c67-a8ab-4e6c-8d32-4f11d4e43564"
        },
        "item": {
          "id": "d8050449-a0ec-4ada-ac90-5e41ebb4368d",
          "name": "did:invalid"
        },
        "response": {
          "id": "f45d5a9d-fd62-441f-ac32-5321e459c14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8492e75-3d9a-4925-afd9-c55c061e1d44",
        "cursor": {
          "ref": "1efa63c9-6c03-429f-bbb3-8cc351136a16",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "63a9256b-049d-4a96-9c33-76ddaf80cd59"
        },
        "item": {
          "id": "a8492e75-3d9a-4925-afd9-c55c061e1d44",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ba37cb36-05e3-4a54-9cb9-cc563c041c5b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 95,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda0f2b6-b48f-497e-a5e6-d60d87aff86f",
        "cursor": {
          "ref": "5de92b55-9ce5-437d-bb35-5928c3bc50aa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a6ceb904-ce1c-42e0-872e-42414fb7bb85"
        },
        "item": {
          "id": "bda0f2b6-b48f-497e-a5e6-d60d87aff86f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a2939180-f9d3-458d-ab7d-0b798e08afbf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43639b83-5759-4c07-90f3-e9057dcc9d91",
        "cursor": {
          "ref": "a747a0d8-83bd-4e63-924a-7f23b5a41961",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "df4f2ff9-0845-43ac-8a82-f1a1c38089ee"
        },
        "item": {
          "id": "43639b83-5759-4c07-90f3-e9057dcc9d91",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2d53653f-a983-4ddd-991d-7a261913efb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abede27-c4f9-48fa-a44c-a69ca9be7478",
        "cursor": {
          "ref": "387a29c8-6d16-4be3-955b-e221025baa15",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98d896ba-523b-47df-99cb-402608214a1d"
        },
        "item": {
          "id": "0abede27-c4f9-48fa-a44c-a69ca9be7478",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "88ffd124-d40f-4f38-9a07-9e57ccddea8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abede27-c4f9-48fa-a44c-a69ca9be7478",
        "cursor": {
          "ref": "387a29c8-6d16-4be3-955b-e221025baa15",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98d896ba-523b-47df-99cb-402608214a1d"
        },
        "item": {
          "id": "0abede27-c4f9-48fa-a44c-a69ca9be7478",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "88ffd124-d40f-4f38-9a07-9e57ccddea8d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2155b11-8f71-4f56-9f3c-931549f2807c",
        "cursor": {
          "ref": "bcb57e6a-af8a-4823-8443-2ed59e3b20d8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca8444ea-b2a0-4183-88cb-2d9a6d06e089"
        },
        "item": {
          "id": "c2155b11-8f71-4f56-9f3c-931549f2807c",
          "name": "identifiers"
        },
        "response": {
          "id": "c1bb4936-37c1-4c71-bb8a-76282c9fda2e",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d40142-e9af-48a5-be7a-1273a4d0051b",
        "cursor": {
          "ref": "8f95c341-2a96-4b31-b56b-ebadbf5fc6c5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2e708a81-23c0-4918-b4a4-abbccfaa69a8"
        },
        "item": {
          "id": "49d40142-e9af-48a5-be7a-1273a4d0051b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e2ec53a-ce9d-4a1a-b960-4b5ec9a3c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d40142-e9af-48a5-be7a-1273a4d0051b",
        "cursor": {
          "ref": "8f95c341-2a96-4b31-b56b-ebadbf5fc6c5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2e708a81-23c0-4918-b4a4-abbccfaa69a8"
        },
        "item": {
          "id": "49d40142-e9af-48a5-be7a-1273a4d0051b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e2ec53a-ce9d-4a1a-b960-4b5ec9a3c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae73360-dd03-4034-88e5-0c4ab03a86c6",
        "cursor": {
          "ref": "c92b46a6-94e4-4084-9b30-3c06ad716b85",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a1a6f1c5-0fe4-47bc-9c3e-0a02d6d51a83"
        },
        "item": {
          "id": "cae73360-dd03-4034-88e5-0c4ab03a86c6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ac55f1a-7122-438d-98f1-077d3cc7f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e7758d-05b5-4359-9b9f-b088fa2a4435",
        "cursor": {
          "ref": "b8a7d5ad-d718-456e-b824-58aeef39948b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a306d0e4-5932-42d0-8990-faf9b7cc62c6"
        },
        "item": {
          "id": "d8e7758d-05b5-4359-9b9f-b088fa2a4435",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "28003628-6b78-4787-adde-f9244edef719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34413ea0-572f-4ac8-bb4b-e4f0c1dab388",
        "cursor": {
          "ref": "71479172-5cd1-4745-a82a-42a788be0711",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4fc5217d-58bb-478d-9d60-c10764c20931"
        },
        "item": {
          "id": "34413ea0-572f-4ac8-bb4b-e4f0c1dab388",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4467c0c5-a1c6-4ba8-a5ed-c8bb308400bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f630015d-d026-47fd-bb31-a0e3554f3f3b",
        "cursor": {
          "ref": "094bcd82-f834-45b4-8427-68380ea57ee4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "be80dc0c-8ca4-43b6-821b-7d330665286e"
        },
        "item": {
          "id": "f630015d-d026-47fd-bb31-a0e3554f3f3b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1507888a-bfeb-4b3a-902e-9b2f4680db5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a216f313-6b99-4826-9c27-9c9bb5384646",
        "cursor": {
          "ref": "4eaaf290-9129-482f-ab18-120adfcdec8c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "514a1f49-f106-4604-af4c-e7150174b3d6"
        },
        "item": {
          "id": "a216f313-6b99-4826-9c27-9c9bb5384646",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5617dff3-07f6-4fa6-ac5c-5a7550f6c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8033537-8215-475f-be09-340f69438954",
        "cursor": {
          "ref": "baefa174-0e88-47aa-912b-c743573ec35b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0b163041-f304-4783-aedf-3af0205a8068"
        },
        "item": {
          "id": "c8033537-8215-475f-be09-340f69438954",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "99712360-e019-4905-aad7-8c512c7ca28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d752d47a-bdab-43a1-964e-5629fe992329",
        "cursor": {
          "ref": "9df50307-553f-4cd0-a4de-70d88191b916",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a900e6d8-e170-4262-ab6a-d59a8d835b67"
        },
        "item": {
          "id": "d752d47a-bdab-43a1-964e-5629fe992329",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb4cb404-9693-45cb-8f38-42603a891a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e10ee4-ddf5-40b5-a24e-2fe1e9f9e3b5",
        "cursor": {
          "ref": "cbe6900e-2656-4d04-bbda-2b4807e320e9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "79be4335-a32b-4d49-b366-01d969cc7bae"
        },
        "item": {
          "id": "58e10ee4-ddf5-40b5-a24e-2fe1e9f9e3b5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "faa2214a-7928-41ff-9262-aa67e433eda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb6756-a2bc-43f2-924a-ba8e61b62123",
        "cursor": {
          "ref": "407d015f-a89d-4419-9c29-52a60a9d62b5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6e9633e-1fd6-4fbd-9543-54a848fb155d"
        },
        "item": {
          "id": "65eb6756-a2bc-43f2-924a-ba8e61b62123",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20fe9aaf-d046-48c1-9039-955487039498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0abdc-cf18-426d-8f74-a4e7efd4c7e9",
        "cursor": {
          "ref": "c9d791ab-693b-45aa-a691-846ca13cc3da",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8ca17ba3-d916-476d-b111-6e9ab68abeac"
        },
        "item": {
          "id": "4df0abdc-cf18-426d-8f74-a4e7efd4c7e9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cbeb1146-5f44-43ca-9beb-4580b28af81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1bd5c0-393d-4f21-be27-a3d7f63783d6",
        "cursor": {
          "ref": "e9b6f5b4-7f10-44a4-8d1e-2afbb7de8002",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ab76fbac-7e3a-4ba4-b218-e242382ab578"
        },
        "item": {
          "id": "9e1bd5c0-393d-4f21-be27-a3d7f63783d6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "92d06d26-9060-4a45-bc6e-21f2ce36f5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f534c8a8-1054-4547-bc34-521bc8c11000",
        "cursor": {
          "ref": "2fc28560-7bf5-494b-a38b-a42599e82329",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "79ccd473-0599-4836-adb2-7cf7d276f02e"
        },
        "item": {
          "id": "f534c8a8-1054-4547-bc34-521bc8c11000",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5eea4174-419c-4202-b953-2b51c6cedd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20148c1-2963-43fa-947d-7dbe26ec4af3",
        "cursor": {
          "ref": "82da3475-c4a4-4ad6-84fe-446c294492e5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "93c69be2-dfd5-41af-83c4-0a0b79cbc8c0"
        },
        "item": {
          "id": "a20148c1-2963-43fa-947d-7dbe26ec4af3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fbf0e662-03f6-4c99-9aaf-8d352aefa854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74d4888-0515-4b84-bbb3-7b4595295dda",
        "cursor": {
          "ref": "d42c2957-2b03-425b-9f12-84e6f34a1503",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15df7e69-5546-444b-b685-da4df87dcbe9"
        },
        "item": {
          "id": "e74d4888-0515-4b84-bbb3-7b4595295dda",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4e1fa6b4-0a17-496f-8360-5cefd952dbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba88f1-a817-4320-a3e1-4f4bcfa2ee0b",
        "cursor": {
          "ref": "44fc581a-4a14-456b-a8ab-e2abf47c1ad9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5271b244-4693-44f5-9c18-3bbeedd008bf"
        },
        "item": {
          "id": "3eba88f1-a817-4320-a3e1-4f4bcfa2ee0b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3af35afb-8978-4a17-9c03-56ade852bc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3765,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c271d-5da3-490f-96a2-f1b5823e2730",
        "cursor": {
          "ref": "0ac7c2ed-c4d4-4bdc-b8b8-aa5566dc7298",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "68363d6c-3f4f-41e9-9f0f-0ae28a8686c3"
        },
        "item": {
          "id": "0d7c271d-5da3-490f-96a2-f1b5823e2730",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9c48da7f-7632-4fbb-a6dd-5af17f0d3877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe867ab-6c18-4f58-bd9c-267e9fe6f2b3",
        "cursor": {
          "ref": "fea14979-3a32-44df-82b6-c288901075a8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "35e45250-db43-45f5-b787-5d514b1f7173"
        },
        "item": {
          "id": "bfe867ab-6c18-4f58-bd9c-267e9fe6f2b3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d8486325-b3fd-4084-ba72-6d53be6935e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e7d242-1d4c-4eb0-9e16-8af11f38c22e",
        "cursor": {
          "ref": "98f0c99e-ece3-43db-82c7-87ef2867c0ea",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dffe1cf7-6b5e-4b7b-862e-5669164f3f1f"
        },
        "item": {
          "id": "83e7d242-1d4c-4eb0-9e16-8af11f38c22e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "495d57e7-383a-4c09-a5b3-31b1b948ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025613cc-d920-4995-a293-e832e84ab890",
        "cursor": {
          "ref": "4dff906f-95b9-4905-9824-0f99793e7cac",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3ffaa79-e1b4-443f-9a71-b77ba3826940"
        },
        "item": {
          "id": "025613cc-d920-4995-a293-e832e84ab890",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b2de67f9-b49b-48d6-9d39-ffbc9ae6f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f97fdf-8200-4352-9b3a-17e5a216cc2c",
        "cursor": {
          "ref": "ef1b24e4-8b92-4a73-a683-f67e81a140c3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aefffe1f-a9f2-4f3f-a65f-02623c1cafce"
        },
        "item": {
          "id": "95f97fdf-8200-4352-9b3a-17e5a216cc2c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89b7d240-7f67-4260-92f4-9444bd0a2ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78a9b14-0f78-438d-b681-519962f346ac",
        "cursor": {
          "ref": "df182ff6-fbcf-454d-a762-757afd3cf4a5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "12c2ad71-afc2-4ed6-b4f6-159a22702553"
        },
        "item": {
          "id": "a78a9b14-0f78-438d-b681-519962f346ac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3d721c33-27c6-4d70-b628-93e3b0026a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4d89b9-c72e-4f0a-bed1-160864943c46",
        "cursor": {
          "ref": "f317529d-551a-430e-bc6d-f7a6a7a1fcb7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "876407c1-e077-4403-b76c-8c1c021ceb61"
        },
        "item": {
          "id": "6d4d89b9-c72e-4f0a-bed1-160864943c46",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "83b07bef-d505-4622-ad7d-c95fe4c7683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a83dc3c-d125-4b45-9bfc-8b790e1db1f2",
        "cursor": {
          "ref": "0310e53a-ce4a-4859-8e89-2e1b83f087ca",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "874d426f-a263-4f6b-8c89-ec649cfbaae8"
        },
        "item": {
          "id": "9a83dc3c-d125-4b45-9bfc-8b790e1db1f2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "15dd5e1e-e5c0-47ff-99e4-9de9dce8f58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b6a7a-75be-4997-a104-4617e46c7803",
        "cursor": {
          "ref": "f4c56b5d-cd89-48db-b968-cd935bd8e3c1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "81d5650c-3a4f-46eb-b65e-22a9c16c80d4"
        },
        "item": {
          "id": "f72b6a7a-75be-4997-a104-4617e46c7803",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "962e8487-2744-4d60-b87a-2e8854e7dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553f41d0-6ab6-4d13-8351-9301049c196a",
        "cursor": {
          "ref": "a9861943-7465-422a-b0d2-f4fc72e27833",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "10449523-045e-48b4-ba43-367b21497b35"
        },
        "item": {
          "id": "553f41d0-6ab6-4d13-8351-9301049c196a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "271060c1-66b6-432a-8604-e07b06da2477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc2cb7d-9db9-44eb-a78d-39c7e49b109b",
        "cursor": {
          "ref": "20289fdc-2735-4473-81f3-bfc602b87eb5",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6904856-7432-4012-a247-9c822fe98235"
        },
        "item": {
          "id": "5bc2cb7d-9db9-44eb-a78d-39c7e49b109b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "576e0a0f-cba6-485d-acba-f836fe931e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8fb6d7-9486-432e-8a25-826024783be5",
        "cursor": {
          "ref": "261f2037-5488-40c4-87f6-6400917e7e06",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a1b724db-73f1-4379-8557-44c049dc944e"
        },
        "item": {
          "id": "3a8fb6d7-9486-432e-8a25-826024783be5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "add1ad9c-b674-4fba-ba0d-78003f8ca5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075bd12a-0986-4b51-8b45-f5bc84fd1b83",
        "cursor": {
          "ref": "499e8090-f21b-400b-8916-295e032cb372",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7b19be6c-5f4a-4ea0-887d-41eb8bbc3dc5"
        },
        "item": {
          "id": "075bd12a-0986-4b51-8b45-f5bc84fd1b83",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aeac675a-7a9e-4137-8888-ed48b5a9ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61efa5b8-509e-4cef-930a-7059916225e3",
        "cursor": {
          "ref": "a7786573-f097-4e80-a9d2-cfeae51d3e8d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "edd9d8e8-e585-48c9-ad7c-62960bc5de95"
        },
        "item": {
          "id": "61efa5b8-509e-4cef-930a-7059916225e3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4388ef82-fb8b-4dc5-9ecc-712a36dba23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b713548-dab7-4407-870e-ac3b578f28a5",
        "cursor": {
          "ref": "fa6ec867-08c5-4158-9488-0d7329df1eaa",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3ee1b76d-1fd0-474b-8880-bd535d116a6b"
        },
        "item": {
          "id": "8b713548-dab7-4407-870e-ac3b578f28a5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4906da81-faf5-4b2f-a475-4dca5d9e2b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa6dc6-e746-401b-a0d9-733808fc55f5",
        "cursor": {
          "ref": "8419c6ea-4d32-4b8c-ae1f-5632d57c578d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "313fe91c-93b7-45b4-8288-e24f8372c3c1"
        },
        "item": {
          "id": "29fa6dc6-e746-401b-a0d9-733808fc55f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1375977f-b6e9-45d8-a38a-2bb644b9bdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c6fcd8-d847-451b-bff8-286eafcab038",
        "cursor": {
          "ref": "fc4b7130-8e10-4709-bc4c-81404acad33b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3a59ed2-e3ff-465a-b200-760e35bbaa3e"
        },
        "item": {
          "id": "d5c6fcd8-d847-451b-bff8-286eafcab038",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2500f886-4b88-4557-8ed7-e3cea915540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7bac47-15c0-4659-b85e-b68c59d51124",
        "cursor": {
          "ref": "39dab5f5-3a0e-4daf-a549-fedf8acbbee8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a279de7c-8768-447b-bb72-02c1cd476642"
        },
        "item": {
          "id": "9d7bac47-15c0-4659-b85e-b68c59d51124",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d97a57a-e732-4d88-a99b-fa5deb1f7b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f886fc-e23d-4792-b0ac-073ef2007bb7",
        "cursor": {
          "ref": "32caa48f-d819-4ede-a638-2c75a4413650",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3405e6ee-0691-44b7-a0c0-0ac9f4a9e1ee"
        },
        "item": {
          "id": "01f886fc-e23d-4792-b0ac-073ef2007bb7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "be8b3c3f-a868-49cc-909c-76680e7b8566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a299fc1-5d8f-4f8a-8f57-3436aded324c",
        "cursor": {
          "ref": "8ec20e1f-750e-44af-abe9-bc5218e79e65",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eafb1495-26d9-441e-873c-f491463184b2"
        },
        "item": {
          "id": "2a299fc1-5d8f-4f8a-8f57-3436aded324c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "50c6d218-1ef5-4110-ad3d-8cd135bbb05f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272f8ca-14c2-4871-9c17-8d2c033cebbf",
        "cursor": {
          "ref": "2f8f2748-1d44-470d-a523-6fb236340622",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "16a8e549-e029-46c0-a75a-b9524f9f55a4"
        },
        "item": {
          "id": "7272f8ca-14c2-4871-9c17-8d2c033cebbf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2c8d0ee9-45bf-43fb-b66b-6d28e1a5be1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7714499f-21c5-41c6-a8c3-5bc7cbffff2b",
        "cursor": {
          "ref": "fc1867fd-b6c1-48be-9cd3-af08a4d46a4f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cac529bc-7ff2-4a23-b920-831ad9a61fc1"
        },
        "item": {
          "id": "7714499f-21c5-41c6-a8c3-5bc7cbffff2b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7491e6de-f024-47b0-b37b-07aea565e747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a110e4f-9a6e-447b-895a-e146afe52028",
        "cursor": {
          "ref": "b24bcf84-6928-42ac-a914-12425e8da3aa",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd68ca86-4c03-416a-97f4-9659df0c2b3b"
        },
        "item": {
          "id": "9a110e4f-9a6e-447b-895a-e146afe52028",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "284df494-22d2-471f-8346-6f19f670a4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e26a10-783c-4e3c-b2ae-5e3408f91657",
        "cursor": {
          "ref": "40abbd3a-9487-4763-b6bb-51ebc33ff549",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "69d5c0fa-9bb9-44c2-b98a-59e8eab8a01c"
        },
        "item": {
          "id": "76e26a10-783c-4e3c-b2ae-5e3408f91657",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad9f0020-03a2-489d-950c-c66e18b6bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b56eeb3-1c8a-42fa-be44-c795df69d7fd",
        "cursor": {
          "ref": "fe03a969-684c-4b3b-b238-4bc80429546c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "595147ae-a805-425f-b1c1-fc497270b6eb"
        },
        "item": {
          "id": "2b56eeb3-1c8a-42fa-be44-c795df69d7fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "70de77e4-10b9-4978-8fe0-d81d5a0e3c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d0d19e-7d3a-4b05-9829-6c170d821044",
        "cursor": {
          "ref": "89ada15f-0515-4499-a754-0c74c37d7528",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f7a4503-5f36-4cda-b313-0c24e8bea282"
        },
        "item": {
          "id": "f8d0d19e-7d3a-4b05-9829-6c170d821044",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "297a3f53-1a89-4ff3-9aeb-a7a71e90ee9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f3c822-3536-4fd6-adf3-ad28cef71a5e",
        "cursor": {
          "ref": "8d4d4b81-758f-4c3e-b9d4-40e48049ce32",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7a1307d0-0c4d-4748-b7c1-d3d3b06eeafb"
        },
        "item": {
          "id": "31f3c822-3536-4fd6-adf3-ad28cef71a5e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a5463073-079f-4969-9e53-d9c2dfbfabce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe49787a-301f-422e-ad6c-60447f6dbcbe",
        "cursor": {
          "ref": "75bba72c-3eb2-4b22-ab9c-232fdc0b05a6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4cc84753-58b4-4af9-a913-7f972373f986"
        },
        "item": {
          "id": "fe49787a-301f-422e-ad6c-60447f6dbcbe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65c84b4f-2640-4513-9ce8-dbafbaaf49ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40114d56-3673-4e4d-bc74-62089add78fb",
        "cursor": {
          "ref": "d232b29a-b083-4de9-af4c-93cb278972a3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1e49c94e-24f4-4efa-a41f-d29f0fd955ee"
        },
        "item": {
          "id": "40114d56-3673-4e4d-bc74-62089add78fb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5af298cd-8283-4dfc-9888-56f66db9c046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49846686-d052-4d0c-b0d6-7c67f9874584",
        "cursor": {
          "ref": "0f06e7d5-513d-4c43-8281-4b061392736d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1811ec9f-87dd-43e7-95eb-838d69543b86"
        },
        "item": {
          "id": "49846686-d052-4d0c-b0d6-7c67f9874584",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c6e6a5a-d38d-4b17-9287-9fc3d386f02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a366f85c-df88-4083-89ef-caae717aa311",
        "cursor": {
          "ref": "3ea7267a-4e5d-4ec0-af61-c6d2cda9b6ae",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40b09bcc-9579-44c6-aab5-d98474598eac"
        },
        "item": {
          "id": "a366f85c-df88-4083-89ef-caae717aa311",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "19e2fa39-4187-4de2-830f-3b3af7fad6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d91b905-3017-4cc0-856d-1cce6da842e4",
        "cursor": {
          "ref": "fe3590ff-ce04-4b86-938c-83dc5ff8c7c5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b3bbcea9-5996-44c4-adfb-7b88592da1ee"
        },
        "item": {
          "id": "2d91b905-3017-4cc0-856d-1cce6da842e4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6513bda6-c412-457e-9490-8a520ce9dbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c840a48e-d6f0-4263-bd86-f9af221058e1",
        "cursor": {
          "ref": "9a67c42d-dc88-47f6-9d96-5f48bfab7e3a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ca1592b-82f4-4a07-8bc7-eca8e92e78b8"
        },
        "item": {
          "id": "c840a48e-d6f0-4263-bd86-f9af221058e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3ecc75b0-bc58-4045-abe8-60ca95eb76b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7626a3a0-7f5e-44b3-b1d8-d1aa1fba6dd8",
        "cursor": {
          "ref": "4e02cf4f-2606-4585-be69-c45096c249ac",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eab0103f-b7c2-45c9-a7a4-1984da1934c0"
        },
        "item": {
          "id": "7626a3a0-7f5e-44b3-b1d8-d1aa1fba6dd8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7d736ddf-cca4-4b38-9e48-1627f1105b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f266c4ab-0eff-4f64-a481-ac82992c9e3f",
        "cursor": {
          "ref": "3361d228-a5c3-4b34-8679-865ac29aa96e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0e73295e-7e15-43cd-9ae7-4b908ca0b1c8"
        },
        "item": {
          "id": "f266c4ab-0eff-4f64-a481-ac82992c9e3f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b987bef7-db93-43cf-a0c8-f9356967cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb84a10-450f-426f-bef1-cb8500406d7b",
        "cursor": {
          "ref": "67c9065f-1e83-437a-8ee3-a2a01816e89b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "042126c3-c249-4497-a540-361eb8223e04"
        },
        "item": {
          "id": "ceb84a10-450f-426f-bef1-cb8500406d7b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e3aa5a2-c19f-49b2-8024-dda519aca33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307464a0-0ec8-4987-a0d0-728d54d00d16",
        "cursor": {
          "ref": "f1973baf-19a6-457b-9cc6-ddcda09e9194",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6d6c4e35-315e-4cff-9358-aa649a20338d"
        },
        "item": {
          "id": "307464a0-0ec8-4987-a0d0-728d54d00d16",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e59c98f0-e3d0-4155-8289-474fe6deea10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb21f15-c248-487c-90e7-2135c93bfc7b",
        "cursor": {
          "ref": "8fe0b9a1-0133-4f19-b6d9-86a66311b190",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b0c3e101-1a13-49d0-9fa3-decedb70d27e"
        },
        "item": {
          "id": "8bb21f15-c248-487c-90e7-2135c93bfc7b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "74b0f947-c9a6-446f-93f6-4d0112da3a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb96e12-bb0a-4814-87c3-7bb55f854776",
        "cursor": {
          "ref": "9a1042ee-b4d6-49f7-878f-89cc4f36aba4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "424871fe-7f37-41cc-a0df-98bce584a0b9"
        },
        "item": {
          "id": "feb96e12-bb0a-4814-87c3-7bb55f854776",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1252dbb1-c06d-418d-9321-29b491a4f9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d6c07f-cad1-4d01-bac4-c4516879fabc",
        "cursor": {
          "ref": "647522c9-7445-4ce6-a908-3f3a0a4d4b5d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "11d92698-8e5c-4e96-b4a0-af1061dfa13a"
        },
        "item": {
          "id": "60d6c07f-cad1-4d01-bac4-c4516879fabc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ab451b3-f628-4aeb-b267-042ea4be23fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95795dda-e20b-4d30-9de2-a5fdabce0d42",
        "cursor": {
          "ref": "2bbb9861-f027-4641-956f-98575a1dac82",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d7eb8d69-7283-4979-9684-440f54904869"
        },
        "item": {
          "id": "95795dda-e20b-4d30-9de2-a5fdabce0d42",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df72a666-fd9c-4d6f-bc6f-9a5f2f5ca3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3187fee8-6944-4511-9c22-9a72a701e508",
        "cursor": {
          "ref": "1b310ed4-1339-4145-b4a8-d65160fb6818",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8804d46e-ea61-4bbb-9a7c-817304d953a4"
        },
        "item": {
          "id": "3187fee8-6944-4511-9c22-9a72a701e508",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "606716e9-7b69-4630-89c9-7f26d43e3f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b36cc-0fbf-45e8-bc84-eeca9f998308",
        "cursor": {
          "ref": "c2314bcd-056f-440f-97eb-bf19fb9da436",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e3f2a43d-af6d-4697-80ad-1eb54e0c46a8"
        },
        "item": {
          "id": "818b36cc-0fbf-45e8-bc84-eeca9f998308",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "63017c98-9293-48d1-bec4-631e10492ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e979c8-3a86-42a4-81ef-d1d9f30ca4f1",
        "cursor": {
          "ref": "87119e73-4501-4410-b58b-2c57afa2bacd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f7547b4b-1300-4c00-a87a-91baf81de28b"
        },
        "item": {
          "id": "14e979c8-3a86-42a4-81ef-d1d9f30ca4f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7ff9417c-34c7-46e6-93b1-b18371cae417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c56a40d-9fb5-4979-b4d0-79f840bfa072",
        "cursor": {
          "ref": "7583f623-27c1-4a1c-a978-bf2b9d6d95c8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "52391f02-9d02-43f9-aa1f-2213dc3e3200"
        },
        "item": {
          "id": "4c56a40d-9fb5-4979-b4d0-79f840bfa072",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5e92cee1-ac16-4b58-8d8f-9dd0f80514bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7424e8cd-3b8e-42f4-becb-7fb2f4e8750b",
        "cursor": {
          "ref": "9a25dff6-6e80-47a5-8bfd-76b457142ee1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cf9c3411-91ca-4a1e-908f-31ba1b5927d3"
        },
        "item": {
          "id": "7424e8cd-3b8e-42f4-becb-7fb2f4e8750b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3e14be79-bfa5-4d29-ae71-d534a4496dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12264ca9-52a1-4b9a-90b0-8b2de2716803",
        "cursor": {
          "ref": "86cc2071-435a-46ac-a34b-e492a1597839",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6f6c89f1-568a-4e62-af48-ba429dc9b445"
        },
        "item": {
          "id": "12264ca9-52a1-4b9a-90b0-8b2de2716803",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5d0b2f5a-12a7-461d-a66d-6c90990af026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7012ea73-a7f8-46d7-9b5e-243da0650388",
        "cursor": {
          "ref": "cd9fa872-fd38-461a-9f8a-879c53f51fd2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7983c09e-d175-429c-a83d-c90f2c82c603"
        },
        "item": {
          "id": "7012ea73-a7f8-46d7-9b5e-243da0650388",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7fdd0976-ed09-483a-ba59-6a43e0b3bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab7796-8adc-4a01-b212-ea5932c07758",
        "cursor": {
          "ref": "2f3e72f3-cb58-4173-b22d-0a462378ace1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7de252a6-84c4-42ec-be0e-9e808dd7f49f"
        },
        "item": {
          "id": "a1ab7796-8adc-4a01-b212-ea5932c07758",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9df99f61-700b-4f52-b847-bf0a5fd64a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010b3838-6e75-4fd0-9960-772707d1b52c",
        "cursor": {
          "ref": "31a32868-e26b-49fe-9836-311849960648",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91d1a17e-ab35-49f3-9741-ee70b8ee7458"
        },
        "item": {
          "id": "010b3838-6e75-4fd0-9960-772707d1b52c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e7393cb-3200-48d1-a993-0360edfd7543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb5ccb4-03f7-4956-9851-508a988e43e1",
        "cursor": {
          "ref": "ab947eb1-1939-49ba-b09d-ea2bb00daf3f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1986695d-d3c1-46cd-9c85-a27924d7d31d"
        },
        "item": {
          "id": "6cb5ccb4-03f7-4956-9851-508a988e43e1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "27b7ffdb-789f-469e-b3da-cb1c3bffbf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f21d3-f3f7-4eda-afa4-0498f96cd5e7",
        "cursor": {
          "ref": "51338dcd-28f5-443b-a82a-c0a06c899fd7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "935e93da-a225-46ca-abce-85096a9a6190"
        },
        "item": {
          "id": "cb7f21d3-f3f7-4eda-afa4-0498f96cd5e7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "26a7329f-991b-491d-ab49-d01d6562b0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bda2b1-8380-422b-9150-05c6b1b7ff08",
        "cursor": {
          "ref": "cbe94ac5-5aca-4c01-bec8-4f2e996007c4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "70ea72e0-9c05-49f7-bf1a-7b15f21e104c"
        },
        "item": {
          "id": "b6bda2b1-8380-422b-9150-05c6b1b7ff08",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17fe53f3-40b9-4ced-afa1-a127dc2d7500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dde822-f1ea-4e04-8b89-293cfd22042a",
        "cursor": {
          "ref": "8f6e5038-f15c-449f-af07-5495dd5a832f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0854d3f0-bb6f-4307-b9f3-03218a555c61"
        },
        "item": {
          "id": "03dde822-f1ea-4e04-8b89-293cfd22042a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "40012d30-c510-49b1-9e82-49c7e788493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd16d5f5-defa-4743-b743-1c2c62b51e07",
        "cursor": {
          "ref": "eea06c91-8fd4-42de-b6cd-e541498d53a5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b795ec66-3231-4e19-8784-d83ef1feb71e"
        },
        "item": {
          "id": "cd16d5f5-defa-4743-b743-1c2c62b51e07",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c4d87efe-c646-429f-acc8-0862056df15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c6afa-5120-4b8d-aee5-b675c599b9b6",
        "cursor": {
          "ref": "be8ed017-c85b-4a3d-a749-14dd457adf8b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9611cd6-9175-490c-b553-0a131f17ec76"
        },
        "item": {
          "id": "bd0c6afa-5120-4b8d-aee5-b675c599b9b6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "18d32701-eb5d-46a0-8645-45b7fac1f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7921083-b8c8-42ad-9dde-26b4bff8d4ba",
        "cursor": {
          "ref": "5e6adaf3-a879-47dc-be62-a2288623950d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5ba3d46c-ebf6-4284-8ba9-0e465f52ec24"
        },
        "item": {
          "id": "e7921083-b8c8-42ad-9dde-26b4bff8d4ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0127ede7-fd88-4f96-96c4-0c554e5a31c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd9d6e-af13-4813-ae21-6aec3f605d75",
        "cursor": {
          "ref": "634f3379-afdd-462c-b41c-28eacd747c90",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2cd0ee51-c58b-4bdd-8588-61c20b4d3e29"
        },
        "item": {
          "id": "71cd9d6e-af13-4813-ae21-6aec3f605d75",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5d19bac4-a83f-450d-8175-1e4c99b0cadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdc1fd-9a54-48d6-95f5-b6222ec695fd",
        "cursor": {
          "ref": "e0e8d69d-a867-4a73-8c33-42b059f3a66d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c540655f-1d1f-46ca-984c-435247295f7d"
        },
        "item": {
          "id": "75cdc1fd-9a54-48d6-95f5-b6222ec695fd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0c962f76-ed7a-4cf1-a5c6-6de609e82497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e591aba-0ca0-4e43-814b-25304145f102",
        "cursor": {
          "ref": "df5ec542-96c2-49e9-9a58-e9aa0fe0a154",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1df6908a-7f68-448d-b263-e446c10aec08"
        },
        "item": {
          "id": "2e591aba-0ca0-4e43-814b-25304145f102",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6e7c089d-ca14-4795-b07f-0d4e4947cf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27531f75-c8af-482c-b4e3-04b5008e3f55",
        "cursor": {
          "ref": "37f55c99-d30e-4d72-98ef-e6ae7119daf9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c6ec0bb9-4a86-42b5-b33a-ee851f157b11"
        },
        "item": {
          "id": "27531f75-c8af-482c-b4e3-04b5008e3f55",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a46b9aaa-a9e7-436b-a7cb-7a360c44f34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a673a-901c-4d27-aa85-7b7f067b9c6e",
        "cursor": {
          "ref": "3d6eed15-3ba4-4796-8655-21a88200e980",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "95c14d6d-df18-4b0c-bc71-9769d2f619f9"
        },
        "item": {
          "id": "767a673a-901c-4d27-aa85-7b7f067b9c6e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "434c9857-61cc-482c-87d4-db30ff84dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c27cc88-57be-4f21-97fc-88579f86833a",
        "cursor": {
          "ref": "6464255a-2ae8-4641-a23d-3e8da4b3b189",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f4b5251-d77d-4e5a-8372-7a6c9a27aa42"
        },
        "item": {
          "id": "7c27cc88-57be-4f21-97fc-88579f86833a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f884e2f-bf61-49d1-818d-8a1c10df8b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87350429-0120-427a-bd08-8bd4e2dc06b6",
        "cursor": {
          "ref": "9fac4841-1028-4b8a-bb17-7aa1fdc59703",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2bd949b1-e815-4b6d-93ad-2a48bb133bcf"
        },
        "item": {
          "id": "87350429-0120-427a-bd08-8bd4e2dc06b6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c280c79-8568-43d5-8a45-aaf77fbaab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dde46c-5307-4e5d-b494-916e55591822",
        "cursor": {
          "ref": "8d0d0c44-6f05-4b45-ad8a-9d6898ff2753",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c12bb9aa-613d-4d03-8fed-689a470e644a"
        },
        "item": {
          "id": "72dde46c-5307-4e5d-b494-916e55591822",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b0ccfc6-24bb-4e10-a0e8-822be1635b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725a285-7f63-4de9-9a1a-a25458967aa7",
        "cursor": {
          "ref": "dadf7633-53b4-4116-8df6-22bce3d02d63",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "86790ec6-3f72-4bd4-94fa-e2aec0701a07"
        },
        "item": {
          "id": "2725a285-7f63-4de9-9a1a-a25458967aa7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a660b7c-12dc-4bde-b004-df0828f85c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95d4a0-a974-4a74-b70a-16ad89f747e0",
        "cursor": {
          "ref": "562458a5-0c25-4462-ab54-a3248c45a1fb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "40d22eee-ce01-40c4-8767-10962337df5a"
        },
        "item": {
          "id": "3f95d4a0-a974-4a74-b70a-16ad89f747e0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "abbe670e-8996-4dad-9f4b-f8064db1714f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5623ab-23b2-4d84-a29b-aaf716e72753",
        "cursor": {
          "ref": "4cec2c60-3425-4aa5-a640-26f93ef51e29",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "84697223-146a-4c1b-bd52-359d127bb624"
        },
        "item": {
          "id": "cf5623ab-23b2-4d84-a29b-aaf716e72753",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "990eb9c2-90c8-4be8-bba7-aed83a08e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf7c82b-3768-4d0a-a600-add54dc1cb9f",
        "cursor": {
          "ref": "d24afbb3-b590-48b4-98c3-b5afdd698714",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17560f95-7367-47e5-bf98-0fde76414d83"
        },
        "item": {
          "id": "bcf7c82b-3768-4d0a-a600-add54dc1cb9f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d21d3694-63b8-4cc2-a092-92218a2db4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fbaa7c-0f18-4c29-94ca-2ae0ec0bb3be",
        "cursor": {
          "ref": "70260d66-fbf2-42e3-becf-072b58046c2c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4b46281f-9ba3-474d-ac92-015537d48faf"
        },
        "item": {
          "id": "23fbaa7c-0f18-4c29-94ca-2ae0ec0bb3be",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b72e1844-55c8-464e-b0c8-aba78bc2f978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d962ba4-1b6f-450c-aad5-7f13623eb9cd",
        "cursor": {
          "ref": "1b2cf992-48ca-481a-bac9-533ce81bff83",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "df3d1db8-8df3-4458-af1e-f8f8e9a07c00"
        },
        "item": {
          "id": "4d962ba4-1b6f-450c-aad5-7f13623eb9cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "11ce79f7-e575-463a-8464-258ac097612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4ec688-6658-4424-83bb-2b18ded88af8",
        "cursor": {
          "ref": "d2d340c5-0b1c-4358-aae6-2fad7bbe521d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cf699ce1-c155-4960-a168-e03e8871c341"
        },
        "item": {
          "id": "6b4ec688-6658-4424-83bb-2b18ded88af8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0980d06a-01eb-49f7-b477-d5e59a3436e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae35c1-e409-4479-a785-cd6bfcd5c08a",
        "cursor": {
          "ref": "c3add94f-5536-4dcb-bea0-02fa6a43653f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d255619-1061-4a96-9813-8ca87f7d1ccc"
        },
        "item": {
          "id": "07ae35c1-e409-4479-a785-cd6bfcd5c08a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7e050533-7ed7-40ab-96d8-a921a003d555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bf0551-4f5e-4d18-a383-7b43befec0cf",
        "cursor": {
          "ref": "3396654b-a4a2-4cef-8997-5a0d840e55f0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "939af250-74f1-4ce5-951c-f9fef9d5cdef"
        },
        "item": {
          "id": "d7bf0551-4f5e-4d18-a383-7b43befec0cf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "874ec126-8b44-41bd-b995-37cdcad703fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16996e11-e2b4-4efd-baee-00070d942366",
        "cursor": {
          "ref": "aea1c029-8855-499c-af4d-d7b9bfa1c5cd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6ab58506-31e3-460f-a869-cb56472e6acb"
        },
        "item": {
          "id": "16996e11-e2b4-4efd-baee-00070d942366",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e55912f5-a653-4d27-8865-c146c45fb3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd286001-68b3-4ae9-b371-4c17ce2eb900",
        "cursor": {
          "ref": "3fa2d4b3-ef87-4cac-9038-ea42a38416e1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5a448e8-47d9-41c4-b831-1914da4d3f10"
        },
        "item": {
          "id": "dd286001-68b3-4ae9-b371-4c17ce2eb900",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "50fe5d9c-4401-4a70-8459-3919fcde999e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893c20aa-2287-45b1-805c-d8dca082157f",
        "cursor": {
          "ref": "47414658-2e87-45f4-96a5-068b88d6ac49",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0f1c13e5-8898-4f68-bb2b-3d53c9148026"
        },
        "item": {
          "id": "893c20aa-2287-45b1-805c-d8dca082157f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "763c95e3-f9b2-4b01-a565-bf443fbfe032",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e411e0-a343-4846-889b-463594a016ac",
        "cursor": {
          "ref": "a42e2c6f-78e8-46e1-9f82-9ac09785ab60",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "675a31c0-3036-45bc-8f6c-07d570533d6f"
        },
        "item": {
          "id": "89e411e0-a343-4846-889b-463594a016ac",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f0d5bfa8-dc84-4996-8a89-7633a34f82d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 145,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af8fed-96f6-4eb6-8aa3-a2494fd784f5",
        "cursor": {
          "ref": "ea1ff821-7606-420d-816b-4fbe7d8eb070",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "30d275bf-6652-457b-8881-3c303b36c9d4"
        },
        "item": {
          "id": "c3af8fed-96f6-4eb6-8aa3-a2494fd784f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3aff1634-6923-4890-9422-a81803b1f4e0",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dea687-ff8b-45a6-b86e-f1b6a9ddc0b5",
        "cursor": {
          "ref": "40d49edd-1820-45fd-b6ba-6f063223541c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "548430e9-1eff-4220-b4f8-f0030439a810"
        },
        "item": {
          "id": "81dea687-ff8b-45a6-b86e-f1b6a9ddc0b5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e59dac32-5533-4dc3-9e7a-b1295682522f",
          "status": "Created",
          "code": 201,
          "responseTime": 491,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3679d318-1bc8-4bb0-a7ab-beed549ae13a",
        "cursor": {
          "ref": "7253af7b-208a-4731-b703-bf22cc4e24b9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "99334bf0-9709-4f9b-8b85-de75e933f707"
        },
        "item": {
          "id": "3679d318-1bc8-4bb0-a7ab-beed549ae13a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0dae92be-b9c6-48b5-b683-4af3b3587b04",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02286e2-bea1-4f42-afb0-c2655beab7cf",
        "cursor": {
          "ref": "5fb4e6ce-7859-44ab-9559-93e89cb8a09d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ca09d95-e8d6-4c2e-ba72-ceef76918db6"
        },
        "item": {
          "id": "c02286e2-bea1-4f42-afb0-c2655beab7cf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4587d1aa-1b14-42d3-8786-4b7f0871e9b8",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7575acac-d8e9-4373-8e91-2746955e1d65",
        "cursor": {
          "ref": "c416eae0-53b5-42f4-83ec-951df64ad0c7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6e66c2e6-ef2a-4063-8344-f80e6c99ed7e"
        },
        "item": {
          "id": "7575acac-d8e9-4373-8e91-2746955e1d65",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5603dcbb-e186-440e-88f1-90c70b40c9a8",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "f116abbe-65d2-4185-b81d-f7b77c7b5d19",
        "cursor": {
          "ref": "842bb72d-a0cb-40d1-a2f6-849e25bf4a7f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7868a8ec-7933-439c-9b80-dd93b6fedd1b"
        },
        "item": {
          "id": "f116abbe-65d2-4185-b81d-f7b77c7b5d19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af58b35a-2d31-4901-b76d-5221c054986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f116abbe-65d2-4185-b81d-f7b77c7b5d19",
        "cursor": {
          "ref": "842bb72d-a0cb-40d1-a2f6-849e25bf4a7f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7868a8ec-7933-439c-9b80-dd93b6fedd1b"
        },
        "item": {
          "id": "f116abbe-65d2-4185-b81d-f7b77c7b5d19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af58b35a-2d31-4901-b76d-5221c054986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd661d2f-9744-4ca7-bb7b-59d9f0ce93a0",
        "cursor": {
          "ref": "9ca99156-655c-4145-a78b-551a8d562b80",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "466e9f1f-2157-4af9-9b88-a9b55594be7f"
        },
        "item": {
          "id": "bd661d2f-9744-4ca7-bb7b-59d9f0ce93a0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1353ddf2-2726-4171-ba3e-3be853d4dffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab6df99-04d5-4162-842c-57f0df32e203",
        "cursor": {
          "ref": "019ed1e5-5a6c-4838-a887-94430db54ceb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "05a50f49-2d38-49c6-a0c3-d2b7aac3c48b"
        },
        "item": {
          "id": "cab6df99-04d5-4162-842c-57f0df32e203",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b37495e6-8a47-4002-8e2b-cc80dea4c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c86df4-83cf-4913-bc31-685773b10453",
        "cursor": {
          "ref": "34c798d0-3129-47f9-9208-eb90f973b3e2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a30d4ef5-2604-4454-b9c0-89d0831e7cc4"
        },
        "item": {
          "id": "b8c86df4-83cf-4913-bc31-685773b10453",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75cf9d92-077e-460f-9743-f6c9ed6b5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b803a9-806d-4508-bc8d-c06f1107bf22",
        "cursor": {
          "ref": "c56b29ae-672d-465f-a43f-6cf5e0020da9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "657c67ea-bd24-480b-a055-0d401c2a2bac"
        },
        "item": {
          "id": "31b803a9-806d-4508-bc8d-c06f1107bf22",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1b012cb5-ade1-44ff-9d39-343f88537663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0a92ca-d46d-4852-a4f8-fd9c3813e09f",
        "cursor": {
          "ref": "f2375245-b170-4d0d-b3aa-e7a8b4466973",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "980c9c1f-2f36-44d0-ae89-4af453242bd1"
        },
        "item": {
          "id": "9c0a92ca-d46d-4852-a4f8-fd9c3813e09f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "34306d2d-b0e8-44ce-a348-19ad6915c2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e576b-836f-47d5-b6c6-ffe7347703f9",
        "cursor": {
          "ref": "f504f924-cc05-4d34-b7ba-ac162133cead",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3157f554-b6b8-4824-a11c-e4dc7031fddd"
        },
        "item": {
          "id": "ce2e576b-836f-47d5-b6c6-ffe7347703f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5ab83201-371a-4fea-b3a2-f07746a841ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65a0574-f288-4bee-8138-8678c6c9c238",
        "cursor": {
          "ref": "c74affa9-8897-4964-9271-c1d365900faa",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8ba4590a-81ac-4d5a-b13c-a01fcf51903f"
        },
        "item": {
          "id": "a65a0574-f288-4bee-8138-8678c6c9c238",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab045dd5-a381-4f09-9af0-6c0382f36848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3b7b78-63c1-4b1f-b35b-8ddc8fb0d187",
        "cursor": {
          "ref": "8f581056-ddf2-4192-b7ea-f888c44561fd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65deae20-5f07-4a8e-a873-ad754c823fc4"
        },
        "item": {
          "id": "4c3b7b78-63c1-4b1f-b35b-8ddc8fb0d187",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db47b974-59f1-43c8-9423-ac4d28126c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212b4f42-2a83-40d8-ab44-9e13e2d87472",
        "cursor": {
          "ref": "dd2975bc-e5bf-473d-b38c-fc10ab65dcfd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ca33789-8f5d-48db-91cd-dc121db0513b"
        },
        "item": {
          "id": "212b4f42-2a83-40d8-ab44-9e13e2d87472",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "43f0f572-173c-4604-94ec-363b02eebd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b904e16-5b96-419a-a182-8ea6f2bdef27",
        "cursor": {
          "ref": "f41b5206-2ef5-4f9a-910f-99f83af4a1fa",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b7292f3d-0d75-4a6b-b5d6-97c6091c216d"
        },
        "item": {
          "id": "9b904e16-5b96-419a-a182-8ea6f2bdef27",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8378c46d-1e17-4013-807b-c8ac0227cb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8001538c-0a5f-43a6-87d8-a796cf2d04ad",
        "cursor": {
          "ref": "edde5660-f63f-47ed-9010-6ab8ee2415d3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "839c89cb-973f-49d3-93b8-af3b8200474f"
        },
        "item": {
          "id": "8001538c-0a5f-43a6-87d8-a796cf2d04ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a449baa-270f-4dac-8778-9213c5dee8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50edd2e2-bce8-4548-b818-36165df5f137",
        "cursor": {
          "ref": "e098648c-5250-4dee-b636-a2aac813b51c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f2ccfea-3797-4bfa-af45-1d7026039299"
        },
        "item": {
          "id": "50edd2e2-bce8-4548-b818-36165df5f137",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a3cb2a1d-ca97-47ac-8ffb-0048566073b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e5a66-3f38-4f96-951d-7e698cbdac03",
        "cursor": {
          "ref": "649b3384-5cc3-497f-9d1a-40b19b714248",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "012b5efc-856b-4b16-88df-126b659467c9"
        },
        "item": {
          "id": "449e5a66-3f38-4f96-951d-7e698cbdac03",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8cc709c-245d-47eb-9258-757baeca8a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929b655e-8980-4b8c-aea6-53cfe646b22f",
        "cursor": {
          "ref": "453fbe53-b2b1-4a3c-bf1d-df093db3311a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf7104ed-5e31-4c47-bd5c-f3ad3d7fe551"
        },
        "item": {
          "id": "929b655e-8980-4b8c-aea6-53cfe646b22f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df01064c-60c0-4503-b584-e3a4bf2ae446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06cdcfb-80b0-4f80-a3d1-8569f9cdf218",
        "cursor": {
          "ref": "4bb9468d-f598-4a73-b92d-e9f30363f7f0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "465e0052-0358-46cb-8957-17d4e68eb541"
        },
        "item": {
          "id": "a06cdcfb-80b0-4f80-a3d1-8569f9cdf218",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "20890d01-5732-4ffd-a81d-320222c6d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae987b14-a958-41f0-ac15-f2267ca1208a",
        "cursor": {
          "ref": "4d63cbca-ea73-41d0-b1ca-dad6425baa22",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6e047727-57a5-4ea4-9238-ba1e30985459"
        },
        "item": {
          "id": "ae987b14-a958-41f0-ac15-f2267ca1208a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c316df6-3b07-42c9-b8bd-bb58944e6387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e28d9c4-ddc5-4408-887c-0f9f5fbc7dd4",
        "cursor": {
          "ref": "989d97e0-7018-45a4-bac3-cc5815c5b761",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c98f94a1-ded5-4ed2-83da-33b472df48f9"
        },
        "item": {
          "id": "2e28d9c4-ddc5-4408-887c-0f9f5fbc7dd4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f43e69d-fdaf-4eb0-92e4-679fe3945382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0f1de2-ba3e-42df-aa46-841a8742d2ab",
        "cursor": {
          "ref": "951ce629-02fb-4c1e-aa64-2284767b21a3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d9be91a-d72a-4dbe-a8d3-15ad998ca5db"
        },
        "item": {
          "id": "7a0f1de2-ba3e-42df-aa46-841a8742d2ab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9dce1b6d-3e62-4bca-adbd-8db7e8d453fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071f349c-0697-4650-badc-2c8af1c0d01f",
        "cursor": {
          "ref": "064720c7-f812-4322-98a0-35b032c9acc4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e9907d4-e4f2-450f-9570-1954135114d0"
        },
        "item": {
          "id": "071f349c-0697-4650-badc-2c8af1c0d01f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3aa0970c-3ebe-450f-8cd1-6d8514f69906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44017129-2956-498f-b6cb-9df6bc4d0b8a",
        "cursor": {
          "ref": "8ca1ff7a-1c72-463d-bca2-38183461d7d2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3a63be4a-059f-4777-a0be-efb55311806c"
        },
        "item": {
          "id": "44017129-2956-498f-b6cb-9df6bc4d0b8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1bcc5cec-9aa6-48e7-bb7d-767df8ac1afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72313b43-065c-4558-b79a-7b4bd2317716",
        "cursor": {
          "ref": "c5e4f92b-1533-43c0-99e7-5df17db95f70",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a616bd3f-3752-4054-983f-51b6860530f7"
        },
        "item": {
          "id": "72313b43-065c-4558-b79a-7b4bd2317716",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "72ec190a-ad2a-4e91-b0f8-3d547eaf3e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8eae87-22df-4369-ad96-ca57d5e506ef",
        "cursor": {
          "ref": "2088c2e5-4a43-443b-9379-4f584e5c84d2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "30a06b50-5f09-492a-959c-1b1cb3c21bff"
        },
        "item": {
          "id": "0c8eae87-22df-4369-ad96-ca57d5e506ef",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa7c31e8-0f44-41c2-a81f-7458903b797b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d66f785-185c-49ad-babf-fdc22034422e",
        "cursor": {
          "ref": "9798645c-435b-4401-bd70-3648e97cd0a7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "06ff1bbb-4103-41ca-af9f-eb219f4263e3"
        },
        "item": {
          "id": "5d66f785-185c-49ad-babf-fdc22034422e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bd7f3a6c-13fc-4b8c-83f2-adcbd6fb31a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06ae0e0-719b-4058-94c5-a2fca1cc0c59",
        "cursor": {
          "ref": "7a83584b-e684-41f9-b7e6-0894c35fdba5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e5106d72-7803-4e35-a6fd-1974f0fae1ea"
        },
        "item": {
          "id": "a06ae0e0-719b-4058-94c5-a2fca1cc0c59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8403ac61-ada1-4f3f-b7c9-2502e3f2282f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f3954e-155a-4602-bd71-3457f22076cd",
        "cursor": {
          "ref": "ed0392db-f164-4659-8251-b34a87858228",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "90bba243-daf1-4e21-9115-f59dbf6e9222"
        },
        "item": {
          "id": "d5f3954e-155a-4602-bd71-3457f22076cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fafbd3eb-89e1-4725-8dda-b51d6bf12f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ac0d5-f106-4cf8-98fa-2ac3639626df",
        "cursor": {
          "ref": "dc3e0440-0ae4-4eb6-929f-1053d47afd76",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cfbd47d3-27c7-457e-94e9-f6ee5f4436ac"
        },
        "item": {
          "id": "062ac0d5-f106-4cf8-98fa-2ac3639626df",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbfb3436-44f3-43f2-86a0-6ebda583041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c18523-7267-4fbd-bd06-ed99887e7933",
        "cursor": {
          "ref": "1f5a6359-2b03-4fb9-83a6-e5c8e18f6a25",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "237c596a-b4ea-466b-b94b-2883ecb0e2fc"
        },
        "item": {
          "id": "a9c18523-7267-4fbd-bd06-ed99887e7933",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "279877d5-0a27-4935-b0f3-9b76e9aa12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb70199e-4d5c-4833-afbe-025feb663698",
        "cursor": {
          "ref": "4c8246e5-093e-4b42-9e8c-daa7c3be5093",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2d39a4af-6cd1-44a1-ac88-bf16633c846a"
        },
        "item": {
          "id": "eb70199e-4d5c-4833-afbe-025feb663698",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8a67337-9647-4404-bb05-724f5f4e49e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcf2b2d-83aa-4e6c-a76e-50b3d7b7f908",
        "cursor": {
          "ref": "a1c47154-cadd-4c81-91fd-68752af97687",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "93d401b8-b66a-4e0b-a8e5-c4f32d4d0bce"
        },
        "item": {
          "id": "ddcf2b2d-83aa-4e6c-a76e-50b3d7b7f908",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "94a54400-fe61-4b13-a253-e487c1e952e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce101d96-0b54-4d6e-968e-30c1b2d1e359",
        "cursor": {
          "ref": "f0b61606-dbfe-4ba8-9afe-d63fd7ded434",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "868850db-4d38-4334-9ce0-832888b5716f"
        },
        "item": {
          "id": "ce101d96-0b54-4d6e-968e-30c1b2d1e359",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4e7bab59-d4c4-47f5-a898-1813a1cc6710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f99221-43a9-419b-bb86-42ea92337070",
        "cursor": {
          "ref": "42238d22-786f-4160-bab9-05e7e56f7c9d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d4c7492-f338-4dba-8e46-981f1cff8c7c"
        },
        "item": {
          "id": "f8f99221-43a9-419b-bb86-42ea92337070",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dca427f2-b0fa-4879-99b7-6b161bb6d370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d922048-c8bd-4f2a-b9a9-53c718530715",
        "cursor": {
          "ref": "ca7621da-eb41-4d09-b21a-bafaf17a3df2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "383acc96-b920-4feb-8f44-b3900d45f88f"
        },
        "item": {
          "id": "8d922048-c8bd-4f2a-b9a9-53c718530715",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b65c3e2a-4c18-436a-bef6-26be771653c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "9e092932-852a-45d9-8535-f12cfa5bb843",
        "cursor": {
          "ref": "e2c03235-8f75-4938-b197-9dd209ebefd7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7394d11b-945b-467e-b389-402e912e87a8"
        },
        "item": {
          "id": "9e092932-852a-45d9-8535-f12cfa5bb843",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "16f30f7e-a168-4fb0-94bc-42a245828dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f61c46ef-196d-4826-bc8b-4fa3633f18be",
        "cursor": {
          "ref": "b516ef66-466b-42bb-8450-5629ef14efa6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a89551e-3b13-42bf-ad90-96c40c993faf"
        },
        "item": {
          "id": "f61c46ef-196d-4826-bc8b-4fa3633f18be",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff07582f-1456-4ab7-aad3-dd98050e0a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c46ef-196d-4826-bc8b-4fa3633f18be",
        "cursor": {
          "ref": "b516ef66-466b-42bb-8450-5629ef14efa6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a89551e-3b13-42bf-ad90-96c40c993faf"
        },
        "item": {
          "id": "f61c46ef-196d-4826-bc8b-4fa3633f18be",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff07582f-1456-4ab7-aad3-dd98050e0a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fdef9c-f4b0-4461-af05-a776bd4d48bd",
        "cursor": {
          "ref": "453559d6-d09f-4e8a-b0d4-6bd471d51615",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1b6af727-69b9-4895-a6f4-4f944f864d10"
        },
        "item": {
          "id": "51fdef9c-f4b0-4461-af05-a776bd4d48bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7e073b44-a923-41bc-8dc7-8c3da199dabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f6c812-65f9-4bb1-9088-4f99d677c787",
        "cursor": {
          "ref": "ceb9f738-2070-442b-95b7-b64fe36d2f87",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "304ee1da-a694-4dad-a112-576c47f1b942"
        },
        "item": {
          "id": "54f6c812-65f9-4bb1-9088-4f99d677c787",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a6393f01-b0f7-442c-ab63-61e196bb649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e265c2-5c2a-4cef-afa4-d853aff4db4b",
        "cursor": {
          "ref": "51453f6c-098a-4094-b968-6bf2cd8dc4ee",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "029e29b0-411a-4c37-a721-a5b5baecad85"
        },
        "item": {
          "id": "f2e265c2-5c2a-4cef-afa4-d853aff4db4b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "41c65641-4ae0-417c-850c-01317f7c1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216807a0-3c7e-4e8f-b245-27a0fd01b92e",
        "cursor": {
          "ref": "49a5994f-c93c-419a-8345-45bc7edaef24",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d7ef1d41-c0f5-4383-b58e-3b742d891dba"
        },
        "item": {
          "id": "216807a0-3c7e-4e8f-b245-27a0fd01b92e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34925221-0f39-43b4-b0f1-a9b2e742e9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cfa54-64fb-4f17-b6c9-237ced27dee7",
        "cursor": {
          "ref": "ec20483e-ba75-4d73-b123-031512f33108",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "84d2c700-0e33-442d-9d43-5049543dcab7"
        },
        "item": {
          "id": "271cfa54-64fb-4f17-b6c9-237ced27dee7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0375b09-76f7-48bc-adf1-72a6c6252c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d4269-ef4a-428a-a82a-24c5dd7dd205",
        "cursor": {
          "ref": "88ce0ec1-8edd-4d82-a87a-963e583db9c1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d3c84733-fd74-4633-9965-ccedd234b5bb"
        },
        "item": {
          "id": "3e0d4269-ef4a-428a-a82a-24c5dd7dd205",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e0907cd-4ed0-42c0-ba43-ebf9927ec55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2ef6b2-100d-41f0-88eb-546f8e7736b7",
        "cursor": {
          "ref": "8ece092f-6c5e-4b33-993c-65457b763c4f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d68b5a36-a701-4144-b4b5-e47362b681f5"
        },
        "item": {
          "id": "bc2ef6b2-100d-41f0-88eb-546f8e7736b7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1541a89a-4ba8-437d-9363-5de1dc4f5da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeeb544-5615-4b2d-b533-c706429439cb",
        "cursor": {
          "ref": "4b6ca501-8769-4cad-ac29-7810df5f24f4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d6d7c68e-22b5-4b41-a60a-20ffdf8592da"
        },
        "item": {
          "id": "6aeeb544-5615-4b2d-b533-c706429439cb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "829fc151-70ee-462c-a610-e97f52c8de7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cd9d44-6fbd-4e94-9684-12fa47dd1633",
        "cursor": {
          "ref": "d30dfcde-54be-4396-8722-64ae58dcc4df",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "613c7f20-c2eb-4a9a-8673-ee965eeeded5"
        },
        "item": {
          "id": "07cd9d44-6fbd-4e94-9684-12fa47dd1633",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "108a2cf6-5342-493d-a708-3ff7876b66d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6e2226-4e7e-41f0-b0ad-3b1022418b8a",
        "cursor": {
          "ref": "df96b5c9-3e4b-4dc3-9f0c-7c35b70c0855",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "39b1d368-c99a-400e-90fa-5ab2c2525f13"
        },
        "item": {
          "id": "7e6e2226-4e7e-41f0-b0ad-3b1022418b8a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "715cd588-4828-4351-b06b-241d62825bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b32e7f-022e-4296-a311-eb373f6ce9cf",
        "cursor": {
          "ref": "617e99a3-154e-4c9b-afbc-231115450311",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2af5972a-507f-412f-a504-a0563e5d1379"
        },
        "item": {
          "id": "06b32e7f-022e-4296-a311-eb373f6ce9cf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "601f24b7-9bef-4584-aab1-3edc286cd25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88776fc-e2b8-4207-b08b-d3bfddfa0414",
        "cursor": {
          "ref": "5259673d-db99-437b-8377-7022f00ac5ec",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "55dcae7d-4532-48e5-bfd8-8a9a9bde8960"
        },
        "item": {
          "id": "e88776fc-e2b8-4207-b08b-d3bfddfa0414",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "59ae61d7-6447-410e-ba7e-458966a87f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a32c9a1-2605-486b-8493-f9a134932da7",
        "cursor": {
          "ref": "276a15d9-d693-478a-9995-a986ef57c8d9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "52538413-ddc9-41bb-a4ca-13a753e366e1"
        },
        "item": {
          "id": "2a32c9a1-2605-486b-8493-f9a134932da7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "39af6a19-8929-4b47-a6d2-004ceecdf75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eee4b7-bf74-40ff-b2ab-f6a5a27f79b9",
        "cursor": {
          "ref": "2576565f-0918-40fc-ae9f-70f5330e72a8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7225aed1-74eb-4f0c-ad5f-9508688b1113"
        },
        "item": {
          "id": "28eee4b7-bf74-40ff-b2ab-f6a5a27f79b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "08cf442f-4496-4163-b115-48a3a4dcbe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26e2434-a1e5-424e-8596-56f780e9bf00",
        "cursor": {
          "ref": "3b694aa4-592e-41ba-8ff1-aaf3c9f3a4ea",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e24cc9f0-6c6e-4b3e-8419-3e7174e4c47e"
        },
        "item": {
          "id": "d26e2434-a1e5-424e-8596-56f780e9bf00",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cbf9e28d-159a-45e8-9262-7bbcbc5b8d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6770fa-8c5c-4d2d-978a-79ed691c4321",
        "cursor": {
          "ref": "6bdaa2a7-39aa-47cc-8ccb-01d4b9557749",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3b16f626-88b4-4a13-a1c4-35d093fe8fa1"
        },
        "item": {
          "id": "2d6770fa-8c5c-4d2d-978a-79ed691c4321",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ffab574a-68d1-4fb6-8946-5c60bcea49de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcafcc0c-84b3-4a26-826b-7cbc8d2ec478",
        "cursor": {
          "ref": "f0b1a651-b543-4c1e-be62-b71f21f3e953",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b314a1b-5e5d-48d4-a705-67dfb49f4c74"
        },
        "item": {
          "id": "fcafcc0c-84b3-4a26-826b-7cbc8d2ec478",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "64b62e8d-e6e7-4a6e-9604-814e6b8eb035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5e343c-950f-44c3-979d-cee95ad6cf32",
        "cursor": {
          "ref": "c5f96ba7-8e3e-4b48-a033-e1d85e865642",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "46bc50a9-7116-43a9-8e31-958dab55cd99"
        },
        "item": {
          "id": "2c5e343c-950f-44c3-979d-cee95ad6cf32",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76665f81-8a26-400c-9293-659dc1af0de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430d56f4-6bff-4490-8868-4dd1e1bfe484",
        "cursor": {
          "ref": "46e7d657-b0af-49c8-80fa-21ec159fd1ae",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "17d46f41-301a-4a68-887e-c0ce13d55bb5"
        },
        "item": {
          "id": "430d56f4-6bff-4490-8868-4dd1e1bfe484",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "609c810a-072a-4c34-879a-42a87665f58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0afae-10f5-49c3-8fd0-b8da99acfbfb",
        "cursor": {
          "ref": "5b7de0ad-bc7d-46be-a7ba-7b7370aeecdb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "07c0fef4-56dc-42f9-b98b-9cd2d0046c5e"
        },
        "item": {
          "id": "94c0afae-10f5-49c3-8fd0-b8da99acfbfb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "55bea097-6832-41e2-9cd7-ce7e06eeeb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14333eed-02af-4410-b889-d6fe5a6cc194",
        "cursor": {
          "ref": "d4909bb1-fe6d-462e-9062-5ca7ba2cc37d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0a36b4f2-c23c-40e4-b70f-1c4ed0e71bcd"
        },
        "item": {
          "id": "14333eed-02af-4410-b889-d6fe5a6cc194",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12f4d53d-9755-4e5b-83ce-8a52c5ca1c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff0232-fff3-46cd-808c-096d1fe13ac1",
        "cursor": {
          "ref": "0141ae6b-d79e-4289-9f52-19f9812f7324",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0043527c-a8bc-4844-bee1-f598b0ba186c"
        },
        "item": {
          "id": "5eff0232-fff3-46cd-808c-096d1fe13ac1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59143ddc-5ca4-4fa3-8a2e-82c484d5239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c8120a-ab8d-4ac4-aa81-f021662d3404",
        "cursor": {
          "ref": "498cb04d-3199-40c0-aba5-80fbb6d5f4d5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b5f76944-9db1-4687-bd0a-e54071892b8a"
        },
        "item": {
          "id": "b5c8120a-ab8d-4ac4-aa81-f021662d3404",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1f158379-a615-4945-b1b3-97a603d4bbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936554af-2fe5-413d-bccf-a05dc2dae75a",
        "cursor": {
          "ref": "46acb45d-99f6-45cd-9362-fe64f8ee9ec7",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8450220-33c8-4391-b725-f855f09a842b"
        },
        "item": {
          "id": "936554af-2fe5-413d-bccf-a05dc2dae75a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f4a0f77e-e7d1-40cd-9c10-31e07f5d80f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9ca979-396a-42ad-98ce-6cf504e28712",
        "cursor": {
          "ref": "8c2e5c9d-bddc-4470-8ad4-987481108a6f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "deb6b505-f20d-482b-87d6-12b958f0a62e"
        },
        "item": {
          "id": "ab9ca979-396a-42ad-98ce-6cf504e28712",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "35cc991c-f00e-4c87-a0dc-070e3909b934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a42a2c-01fb-49e9-9e2c-2b387736fece",
        "cursor": {
          "ref": "792dc6a4-7130-4f57-9230-32a292a6ce5d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b5c4b254-fe68-46a0-a676-9475bce2f2fa"
        },
        "item": {
          "id": "d5a42a2c-01fb-49e9-9e2c-2b387736fece",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "19b0629f-742b-4aa6-a565-2783e327c1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f458fd5d-a4cb-4d2f-bcf7-49fa1082a366",
        "cursor": {
          "ref": "e00e262d-3b41-431a-9e67-6ac36bea6db2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2f0b0107-076a-4577-962b-cadce41aa55d"
        },
        "item": {
          "id": "f458fd5d-a4cb-4d2f-bcf7-49fa1082a366",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c5516298-7414-4016-9477-87a874d67b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9b5724-ef86-466f-9139-d4d026b5ff05",
        "cursor": {
          "ref": "63c64bcc-ef08-4fb5-8cf0-718188fe2d40",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d638fbe1-4983-4ed2-bd9c-8834d4445b7a"
        },
        "item": {
          "id": "be9b5724-ef86-466f-9139-d4d026b5ff05",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a81cb329-68d9-4ec7-af9b-c1f860dffae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d512b127-fe61-49fa-adf1-93f47ce02250",
        "cursor": {
          "ref": "ad0c8074-215c-4cc8-b6e0-919842cfd1f8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f88422f7-e036-433f-a5e6-3b7683d315b9"
        },
        "item": {
          "id": "d512b127-fe61-49fa-adf1-93f47ce02250",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7b056bbf-973d-425f-b998-5f0c345bf6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a897ce5b-1074-4582-93d7-e598a9165ab2",
        "cursor": {
          "ref": "865c4f1d-0344-4c0d-97b8-ebd5f8c0f51a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "18ad16ef-365a-4027-852a-1d5acd22b697"
        },
        "item": {
          "id": "a897ce5b-1074-4582-93d7-e598a9165ab2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "39842b56-69be-4c60-87ea-e57e0873af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b2add-d4bb-4f9e-889d-cf5a77699a3f",
        "cursor": {
          "ref": "f18af2e4-7868-446a-8903-d3b0b39df6b6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3d3ca331-8fc3-4090-92a0-ac74ef3ab713"
        },
        "item": {
          "id": "a69b2add-d4bb-4f9e-889d-cf5a77699a3f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d2e4d100-823c-4315-b742-98e95d477f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25530f31-763b-4d01-a648-818751556304",
        "cursor": {
          "ref": "e06007b3-7e0c-475b-ad80-06bf8b08cdd7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ef61d6d0-9a66-4f51-9658-ddad08855c3e"
        },
        "item": {
          "id": "25530f31-763b-4d01-a648-818751556304",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0aec854c-e5de-4ba6-b386-69c29b64379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6410452-0905-4ea8-85ed-b547c0f41a6c",
        "cursor": {
          "ref": "9f2f9e43-3327-4327-8275-67cbaa8a5c02",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "760f0240-4aa6-4da7-b312-a29084eaa694"
        },
        "item": {
          "id": "a6410452-0905-4ea8-85ed-b547c0f41a6c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "81d43114-a2a9-4b3d-9745-cd23e43d3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd52d3c6-7cac-4276-8bc9-659454b6fa70",
        "cursor": {
          "ref": "c87200b3-be1a-47f5-91f8-af818714aca4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "431e71cd-0598-4649-ad8a-d017582a67e9"
        },
        "item": {
          "id": "bd52d3c6-7cac-4276-8bc9-659454b6fa70",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "efcab4cf-a108-4fa7-98fa-60004e66b18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3c3410-8b68-440c-a687-4b94d0ca2212",
        "cursor": {
          "ref": "15bcc701-1d93-4a8b-a826-2d40e15219d7",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "55fca0ab-384e-4c05-b9ff-6be652d9e19d"
        },
        "item": {
          "id": "4f3c3410-8b68-440c-a687-4b94d0ca2212",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c6ccdc8c-c780-4afd-a83c-76a59886182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e510d0-902f-4227-b7f0-5b680a7cb68c",
        "cursor": {
          "ref": "0814e586-7663-4532-bcad-c8f8c30b6208",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e3f47bc2-f895-4e2f-b7e5-a3b649d66136"
        },
        "item": {
          "id": "36e510d0-902f-4227-b7f0-5b680a7cb68c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3964305-290e-490c-97a7-85addc180ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b59bce-2862-4124-b997-ea00e337e4e8",
        "cursor": {
          "ref": "4ff7c32c-101d-49b1-9538-07a042103991",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f1554c1-277d-4bfc-bacd-c885e0eefb25"
        },
        "item": {
          "id": "04b59bce-2862-4124-b997-ea00e337e4e8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "43d47e9e-ca35-49a6-9865-a247f1d41a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e6cbab-0e05-40bc-b9a0-f5c66e46e303",
        "cursor": {
          "ref": "0673dac8-ff12-47c3-b6b4-86c12cad5067",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c553f9b-61e1-4e23-9a11-5e1859c00dc0"
        },
        "item": {
          "id": "07e6cbab-0e05-40bc-b9a0-f5c66e46e303",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "237c9303-040d-4014-8f97-e58c14e90784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c8599-f51b-4177-aee9-64404e699a7c",
        "cursor": {
          "ref": "870ec51a-02e0-4dec-912a-a18b911f4348",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84b5eeac-0571-409f-bbbf-536718de204a"
        },
        "item": {
          "id": "784c8599-f51b-4177-aee9-64404e699a7c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8701a439-6b8d-4efb-851e-d30946c33331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683e7d8e-8ae5-4022-8629-c85c1aa18029",
        "cursor": {
          "ref": "afead4ea-255c-4160-a25a-59240f8093cc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d8bf74e6-ff1f-440b-94de-570c11cfa78c"
        },
        "item": {
          "id": "683e7d8e-8ae5-4022-8629-c85c1aa18029",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dc4212ce-e6ee-43ec-8a19-ba76f2cb50b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ba45a3-b8a3-4a0b-a817-ffda7f68c791",
        "cursor": {
          "ref": "95de3beb-b7ae-463d-b494-ba4489e9f4c9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8fd0caa6-af63-47f7-8994-a0f95d6f1428"
        },
        "item": {
          "id": "29ba45a3-b8a3-4a0b-a817-ffda7f68c791",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "586138ea-2f98-4cc9-8fa0-a80b8b1c38be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e845b52a-3d94-4f48-82a4-5d03711e9f6a",
        "cursor": {
          "ref": "d8150512-31fc-489f-aaae-86fb0f471436",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8ab6d1ff-6178-4109-931c-fc0d1338fd94"
        },
        "item": {
          "id": "e845b52a-3d94-4f48-82a4-5d03711e9f6a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "76e9dbb8-bafe-4a98-919d-21cfc847892f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d31b1eb-b723-49fb-a90b-c39a4983e72e",
        "cursor": {
          "ref": "fc1424cd-8326-43bc-a5b2-9beead9c76b2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "082ba45c-dca6-4cf2-b321-faa0852e1faf"
        },
        "item": {
          "id": "6d31b1eb-b723-49fb-a90b-c39a4983e72e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2bc2efd-21e4-44d0-acce-57546a64a177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c0b61-3e2a-45da-97da-1a2db20b24d0",
        "cursor": {
          "ref": "94ec31ec-3e17-40b9-853b-d6c69885fbba",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1b16bd09-d75d-4126-9c2a-ce28760cc2da"
        },
        "item": {
          "id": "8c8c0b61-3e2a-45da-97da-1a2db20b24d0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5fe45a03-943c-4afd-8544-e260f601ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef46944-3579-43fb-9d69-a5d4f9f24471",
        "cursor": {
          "ref": "c3b9873e-71db-4edb-8a55-1eae396b0cfd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eda0baa0-6f55-4045-b97e-dc0286e0e64b"
        },
        "item": {
          "id": "0ef46944-3579-43fb-9d69-a5d4f9f24471",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cd2563b6-bd0c-46e1-b70e-d45a1f94e8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd9afa0-3e2a-46e6-baa7-17aeccb317af",
        "cursor": {
          "ref": "2d906362-f17f-4f9f-a933-70014ac8f752",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "72caeef3-cd7b-42dc-b452-a6ede5eed1ea"
        },
        "item": {
          "id": "efd9afa0-3e2a-46e6-baa7-17aeccb317af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "146edba7-1ddf-4376-8dbe-cc66db3a21c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc2451-bc54-42f3-b1dd-8fadfc89be09",
        "cursor": {
          "ref": "450cc53a-b065-4c0c-89b0-a7e368b430cd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "81129be2-6a4d-4b1d-a7d6-a5d41f348575"
        },
        "item": {
          "id": "83dc2451-bc54-42f3-b1dd-8fadfc89be09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "364eabc6-7896-4cc5-8380-e8914eb98c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f650a-8fe8-488b-ab0b-48642fa31672",
        "cursor": {
          "ref": "acdf8f89-f37e-4d33-8c0e-157b28d02a1e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6497d370-e04b-4918-9885-aaca9504556a"
        },
        "item": {
          "id": "149f650a-8fe8-488b-ab0b-48642fa31672",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea88e79e-d4b7-40f4-8b77-b452c6524601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9bae30-5bde-4bff-8fd6-86bfb320e70e",
        "cursor": {
          "ref": "2fecd093-8144-4340-9b7d-a3867fb1f484",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3469188d-95b5-4744-ac87-b965baed1479"
        },
        "item": {
          "id": "5e9bae30-5bde-4bff-8fd6-86bfb320e70e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f391e1cc-57b4-4085-b1e9-55699d785907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d528f7e-90c9-468d-9a6b-6d1db487277c",
        "cursor": {
          "ref": "7b7f2098-89fd-493d-a049-79f076d2e9e7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "230e5a1d-0411-4df5-8562-2fc1360572a8"
        },
        "item": {
          "id": "6d528f7e-90c9-468d-9a6b-6d1db487277c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cbf755bd-b089-4bfe-b423-04474f8bd4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92477574-3906-4798-b010-d197ca1c3b3c",
        "cursor": {
          "ref": "24795187-d0bd-4ccb-a1b1-ad1693c3f9e2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f360808-0248-4ce7-a752-dfc182e5649c"
        },
        "item": {
          "id": "92477574-3906-4798-b010-d197ca1c3b3c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eabadf83-d175-44cd-83f4-a7eeac640d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0348d970-88e8-4968-9b89-b083d27c9f53",
        "cursor": {
          "ref": "669fa081-d1d3-4943-9373-eb384db2ae67",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5829cbdf-e3d4-48bd-a367-2bc6a3fa6cca"
        },
        "item": {
          "id": "0348d970-88e8-4968-9b89-b083d27c9f53",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1898729-dff5-44ea-b88e-5c3b6ea8983f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f38c85-45e4-430f-aefd-1bfb20f2a306",
        "cursor": {
          "ref": "b7674e7d-d58f-4d37-9795-b8a468cdca04",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c7469692-d4e0-4c35-943d-5600549bfe9e"
        },
        "item": {
          "id": "64f38c85-45e4-430f-aefd-1bfb20f2a306",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fa4c3271-0d21-4f6e-a8b4-f09c39b13197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6325df86-dc91-432a-bde2-0848d4f7cf97",
        "cursor": {
          "ref": "9fae6791-1159-44e2-b7df-f4459f0cea93",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f38b3266-e438-472b-9574-8b6d77805984"
        },
        "item": {
          "id": "6325df86-dc91-432a-bde2-0848d4f7cf97",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2e49bf4b-50d7-45c9-8c74-f3918ac845fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db49746-2154-4a72-81a0-c7145044d7f2",
        "cursor": {
          "ref": "1968acba-a4f2-41cf-94a3-8019d49c5da0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da7ca1a2-e66e-4338-899b-23bd5b0f1dd1"
        },
        "item": {
          "id": "8db49746-2154-4a72-81a0-c7145044d7f2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "adc4e5df-038a-4836-968e-4f70250f4eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3703c8b-1193-423d-a249-a639e0abcc59",
        "cursor": {
          "ref": "02213d39-fd51-4789-aa8a-581efd7778f2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "04025bf2-b032-47d0-901a-95a43f7d4c2d"
        },
        "item": {
          "id": "f3703c8b-1193-423d-a249-a639e0abcc59",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ea3afdde-ccb3-46ef-ac24-ee062bbe44cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651d3ac-1a5d-4de7-abb3-e439946cc71e",
        "cursor": {
          "ref": "85d63406-6233-4a2e-bde7-2f5dffedd865",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f147b89f-67a5-48f4-882d-6a04f4acaca8"
        },
        "item": {
          "id": "b651d3ac-1a5d-4de7-abb3-e439946cc71e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "180b0a08-c320-411d-acc7-270402ed3fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26340984-24e4-4f9d-9331-6161b07d8851",
        "cursor": {
          "ref": "cee06a6f-476c-45bf-ba38-ce13f9daafd9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "edaf6efd-c54d-4159-b591-f26246230d08"
        },
        "item": {
          "id": "26340984-24e4-4f9d-9331-6161b07d8851",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04ecd61b-64de-43d9-8c7d-db6c68bf6671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f3889e-da5e-46a6-9389-f6db4fe6c9dd",
        "cursor": {
          "ref": "ead7cc3c-07d0-4a20-a080-cf8d8c6a91f7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8ca23cc1-26fd-4d58-9366-bda5e54cb28e"
        },
        "item": {
          "id": "f4f3889e-da5e-46a6-9389-f6db4fe6c9dd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "87f8cad9-1c33-4998-928c-4dea2b61933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0af856-498b-41b5-866c-1592a835688a",
        "cursor": {
          "ref": "86037aaf-f3cf-425d-b67e-1448d5886922",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a64c02d-a914-4276-a2bc-380002f920f6"
        },
        "item": {
          "id": "be0af856-498b-41b5-866c-1592a835688a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82cb537b-e511-4e8b-9050-a817288a186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4ebef6-f7c9-4a78-92d0-503eddd6b3e1",
        "cursor": {
          "ref": "3690ff8d-6c6f-458c-9cba-6596419521df",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b63cb38-207d-4a77-a4ab-d74e235955a3"
        },
        "item": {
          "id": "9e4ebef6-f7c9-4a78-92d0-503eddd6b3e1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b39e29c7-50ea-4b86-aa58-003a7ea9add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00b9e94-e6c5-4e45-8b9d-32de36d1f61a",
        "cursor": {
          "ref": "b8790092-6192-42c7-9d61-6c041d5a0fe4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2e848e39-84cb-4c9f-9dd5-9fe533602b27"
        },
        "item": {
          "id": "d00b9e94-e6c5-4e45-8b9d-32de36d1f61a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "758448f3-62f2-4956-8adc-eb4d898d7dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40371b-6842-4823-928b-69d27f24acfb",
        "cursor": {
          "ref": "d139d2c2-47cb-4096-95e6-061f4daa88c7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d37e9bc-54d8-4b69-82ec-b33ee5781981"
        },
        "item": {
          "id": "ac40371b-6842-4823-928b-69d27f24acfb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b515809c-2ca6-45a8-a73a-635012b38aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88d72bb-af0e-415f-a199-7ffffddd4a8e",
        "cursor": {
          "ref": "317729ca-a01b-4665-b9ae-ab262a052939",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "197b1b01-c1cf-4e6a-a17b-57df762127ff"
        },
        "item": {
          "id": "f88d72bb-af0e-415f-a199-7ffffddd4a8e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "224513ca-f62c-4ec2-89e4-81e7e0d84389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e540f00d-4b57-4548-9ac4-08952fd142d0",
        "cursor": {
          "ref": "e74282cf-6060-4507-baca-5eb63827510c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e2d73610-4161-4354-a5e2-0eb3c9e29798"
        },
        "item": {
          "id": "e540f00d-4b57-4548-9ac4-08952fd142d0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "229bbe5f-e3f7-4dea-b6fe-937583e85dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5849c0-0ac9-4faf-93a2-8fee3a1bfadb",
        "cursor": {
          "ref": "9a3f56ba-8025-4169-a145-a263bf8edf18",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e6fd6e45-9641-4ef7-a1f5-abcd7d7f149a"
        },
        "item": {
          "id": "aa5849c0-0ac9-4faf-93a2-8fee3a1bfadb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4cd1b3b5-a857-44a1-808d-946526e0c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f343699e-bde0-4ce0-ad0d-86d7d116858c",
        "cursor": {
          "ref": "71cce034-30e3-419d-8b91-f8241def8746",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ce86cd60-54fd-46d7-8056-9f7d3539df80"
        },
        "item": {
          "id": "f343699e-bde0-4ce0-ad0d-86d7d116858c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "30213c76-0c25-4056-bd0c-bb0be79f74cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7172e0c3-9eec-4aab-8b23-9542a003a3d1",
        "cursor": {
          "ref": "da938e77-be2e-4d9f-b460-3b17e0f978cd",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0043a467-e721-4878-a3d3-a950f4b7844c"
        },
        "item": {
          "id": "7172e0c3-9eec-4aab-8b23-9542a003a3d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "522f7d5c-5c69-4cac-9a10-2db94232a2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b70034-1447-4489-9b89-dd2aed1b5ec2",
        "cursor": {
          "ref": "3f5e5ff6-63c0-4bda-8ba3-2a25fc9135cf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "04234c9d-ca32-45b3-8c43-c5f2cd9ba476"
        },
        "item": {
          "id": "74b70034-1447-4489-9b89-dd2aed1b5ec2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "801d4cbd-927e-4f28-9445-c6e8a00763e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d6a877-80fb-48b2-8f9c-05eaf6259d60",
        "cursor": {
          "ref": "0fc2959d-25a9-4a10-b7dd-061141862db6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "11eee375-6037-4a68-bfca-2eeab89ff517"
        },
        "item": {
          "id": "05d6a877-80fb-48b2-8f9c-05eaf6259d60",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2bc550b0-3d47-48c2-9fc0-05bbfc45940e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e9920-f353-4198-9cd8-6f313ab46425",
        "cursor": {
          "ref": "0580c5f9-ead7-4124-91be-c691e2b0c0f5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d90f3434-0607-4f41-96b6-f5418e5c3841"
        },
        "item": {
          "id": "ce4e9920-f353-4198-9cd8-6f313ab46425",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d2a7d5b8-fd20-4246-996d-29ac3b5305a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0593f3-1cba-4dec-a76c-db284c89a53e",
        "cursor": {
          "ref": "54b0b9f4-db33-40bb-99d5-b26087d47ef7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "beb84604-a8f5-4284-9ce5-c2964516ea98"
        },
        "item": {
          "id": "7b0593f3-1cba-4dec-a76c-db284c89a53e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af19e4f8-7c07-4812-bc23-05644716f173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef4ede6-b6f6-4a38-bb98-994bdd550cb7",
        "cursor": {
          "ref": "f2d8c728-7243-4bff-9c87-d4b562dc4c43",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7793d9b-341b-4844-ae7b-d23751a3f5d7"
        },
        "item": {
          "id": "fef4ede6-b6f6-4a38-bb98-994bdd550cb7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c87de40f-770c-47be-9e65-008c2820d5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873fed70-012f-482b-8386-bc9f4408b972",
        "cursor": {
          "ref": "db7911d8-dfaf-4ace-b373-4fa0b1fc645e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e7d37aec-4f88-4ae3-9c2c-d4563ed7ccfd"
        },
        "item": {
          "id": "873fed70-012f-482b-8386-bc9f4408b972",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "da9214ec-da93-4ef2-b68e-b48ace15c452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba86c0d-d5a6-43d2-a3eb-50eb1baacf71",
        "cursor": {
          "ref": "731a27bf-3619-45b4-b21d-584686ae9645",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "637b3612-2375-48b6-a4f6-9801d79dd9b3"
        },
        "item": {
          "id": "7ba86c0d-d5a6-43d2-a3eb-50eb1baacf71",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b8e313f1-886c-4d68-a905-7511f4fbb095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a46b812-9ae5-440a-8c4d-699d91c76307",
        "cursor": {
          "ref": "afcb4ef0-c3a6-4118-9e01-0c696e361645",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e66f4ca8-8e98-41e1-bbd4-fcfb2009423b"
        },
        "item": {
          "id": "4a46b812-9ae5-440a-8c4d-699d91c76307",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c5ca7e67-e6e3-4006-8126-810b0f94b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64c2d2e-c70b-40bf-adbe-069001b998af",
        "cursor": {
          "ref": "731d62ce-54e8-4bb3-84e5-c16065caa5a7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "718a1986-2a44-4f74-909a-8498837910de"
        },
        "item": {
          "id": "a64c2d2e-c70b-40bf-adbe-069001b998af",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bec0b3d0-eae5-4acf-9612-1e4f556c8800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda91f2-2ce8-4f11-a34f-b83b90d527ac",
        "cursor": {
          "ref": "32c9dc66-08db-4b34-be91-1ca0c714ba25",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "74f22d7c-9d32-4f93-a91e-43456ff4daea"
        },
        "item": {
          "id": "9bda91f2-2ce8-4f11-a34f-b83b90d527ac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "30601261-f4f8-44cc-bd3c-f962216e2d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae1a53d-52c6-4632-8768-edc3703a602b",
        "cursor": {
          "ref": "6cf92c67-9dff-4621-b82e-129ede967d65",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c7504d8e-0bb0-4fd3-9891-1ba32d3e6e1e"
        },
        "item": {
          "id": "fae1a53d-52c6-4632-8768-edc3703a602b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a59cd699-b7de-42b5-b54c-88294da4e0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f3eaa0-753e-4a75-ba68-9b0eb9c56072",
        "cursor": {
          "ref": "b835924c-ccdb-4f85-9c79-6cccda8fcda6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b6486ce7-144f-47cc-95bf-c1e5c5d355a6"
        },
        "item": {
          "id": "51f3eaa0-753e-4a75-ba68-9b0eb9c56072",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eb925b05-6745-465b-a1a6-fb16e333587d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eee5684-f1d2-40b6-b786-fb88bcc35994",
        "cursor": {
          "ref": "dfac6098-3c14-4834-9af6-19f5e602a1c8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bc4261c7-bbb5-43ae-90bd-07e00be3d77a"
        },
        "item": {
          "id": "7eee5684-f1d2-40b6-b786-fb88bcc35994",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f5213621-387a-4659-aa1e-ad23f6dc5067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0102a26a-e773-49da-ac17-5eb042df9807",
        "cursor": {
          "ref": "c5c23cd3-c2fb-4553-b756-d29a7ffc4f1f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89531ece-9523-4c59-adb0-2ba6ce69a426"
        },
        "item": {
          "id": "0102a26a-e773-49da-ac17-5eb042df9807",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c53a781d-1aae-43b0-9689-979cb96dd68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d4caeb-9d99-4d78-abcf-458db14c3305",
        "cursor": {
          "ref": "9cc951f4-fec6-4640-b55b-ab71c5fddfda",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b0d38c17-9baa-4db7-84a7-3e238d136061"
        },
        "item": {
          "id": "41d4caeb-9d99-4d78-abcf-458db14c3305",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fab03846-e90b-45da-966b-744d6b15b89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe34229-859f-47db-a8fd-e47624d46d96",
        "cursor": {
          "ref": "01ec8ec0-1eab-46b7-a73f-a0fecaac29fd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cbf2b188-2b54-4603-a75f-ac8a5fcc7533"
        },
        "item": {
          "id": "1fe34229-859f-47db-a8fd-e47624d46d96",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f6aee77-a72b-424b-9ff4-e58fcd3c962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dbd698-2c81-4927-bd56-875f5c3b382c",
        "cursor": {
          "ref": "dbcbb110-ea54-4004-8228-a315233baedc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3cf41c34-c175-4a8b-be00-fd4dab57f9de"
        },
        "item": {
          "id": "a4dbd698-2c81-4927-bd56-875f5c3b382c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d418be1e-8af3-4911-9683-43fcc7e7e728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bf2854-2de5-4e42-bae7-febb243feff5",
        "cursor": {
          "ref": "02d3c583-4dd3-47b4-9879-1577db6f4735",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a2a66537-4ba4-478e-b346-d4353861e933"
        },
        "item": {
          "id": "75bf2854-2de5-4e42-bae7-febb243feff5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "76fd2f97-75b3-4ebe-84cc-f7295633bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a850248-fa71-4a17-8a36-20934a2509c5",
        "cursor": {
          "ref": "8561eefc-f312-408b-9401-be1502e666d3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f1b05138-9a7f-4633-8e68-3a748aa17d0e"
        },
        "item": {
          "id": "4a850248-fa71-4a17-8a36-20934a2509c5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "51b58c4c-1c37-4297-9d8f-a6806615c198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002c5557-aaba-480d-9aa0-ae1ebd34b4b4",
        "cursor": {
          "ref": "7e1b337b-5c43-4d18-8bf8-9aa80f523f23",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6970b24b-84ef-45ff-9775-2d96f882e103"
        },
        "item": {
          "id": "002c5557-aaba-480d-9aa0-ae1ebd34b4b4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bd98a84f-68fb-4d03-a131-6e9ce4ee8d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40079677-cca8-4cb9-9acb-7f05bce66fbd",
        "cursor": {
          "ref": "2183bfeb-29a4-48b9-8a09-697e49bbad49",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "53b8e277-9daf-4b4e-88a2-3baf02c0ccbf"
        },
        "item": {
          "id": "40079677-cca8-4cb9-9acb-7f05bce66fbd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da529217-30c7-4f3c-a1f9-c81c28c7c760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f60511-4b79-4866-89a2-34f7595cbc01",
        "cursor": {
          "ref": "da84cccf-03f3-4890-b5ea-eca76fbdae01",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d3da1070-6c10-40c4-be33-779e683a47e1"
        },
        "item": {
          "id": "b2f60511-4b79-4866-89a2-34f7595cbc01",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f3d689b7-d5a4-4b9d-b5d3-6b779bd355f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff775bb3-2fb6-4b36-9879-71bd95455f21",
        "cursor": {
          "ref": "a9511926-fb5c-4814-bee9-ed6c8ef2aa17",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a1f35df-d38f-4d3b-81be-9708c04d3e83"
        },
        "item": {
          "id": "ff775bb3-2fb6-4b36-9879-71bd95455f21",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "50fb9d7b-bb6a-4884-8341-3e0292625215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a31286f-b48f-48e3-9e16-c67797783281",
        "cursor": {
          "ref": "1e9178ad-53f2-424a-a72c-b50777009b20",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0cfecad6-c438-4c62-bcc4-bb5bd0e3137b"
        },
        "item": {
          "id": "9a31286f-b48f-48e3-9e16-c67797783281",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "779c1ad8-6a77-49f1-9658-93c6c96cab0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b6b83-0a48-4481-a42a-f40f6e8776c7",
        "cursor": {
          "ref": "13b5d0ba-d18c-4b4d-8c6c-f97f31d04c37",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4ce8e5b5-b89e-4f09-8387-6d65581feaac"
        },
        "item": {
          "id": "600b6b83-0a48-4481-a42a-f40f6e8776c7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "71b08758-d830-4459-b07d-f7218113fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab94e6d0-1cc2-4964-8157-009d7181e319",
        "cursor": {
          "ref": "93512df8-fbed-4edf-8dce-ce36aa441849",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "995925ee-ccc1-4b53-93ab-de21a11cb806"
        },
        "item": {
          "id": "ab94e6d0-1cc2-4964-8157-009d7181e319",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "96301d46-48f9-41ed-9e11-4043957e92bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b65964-d438-4661-be4b-ddf9641c5479",
        "cursor": {
          "ref": "0f1aa8c4-dfee-4cc8-ba99-5ebd4f6f541c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "28fb9d19-0882-4633-b814-df1bbfffab67"
        },
        "item": {
          "id": "e1b65964-d438-4661-be4b-ddf9641c5479",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ce9af7cf-a5f5-4757-a4fc-715d3950f60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d677715e-779d-4007-bf11-f3559313d2a2",
        "cursor": {
          "ref": "9f5be0c6-4741-43d7-8d39-9b3e71d8ff35",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0d9d81cc-cb96-4ab0-a542-c0c36a10423e"
        },
        "item": {
          "id": "d677715e-779d-4007-bf11-f3559313d2a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2b54199e-e69f-4082-82ab-7c850b49bba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e592d9e-6d82-4564-a216-42f79c95d640",
        "cursor": {
          "ref": "2370f339-a3f8-4489-9ff3-d592eef8c8f7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e34f316d-2d3b-49bb-843b-7010ee3b006c"
        },
        "item": {
          "id": "6e592d9e-6d82-4564-a216-42f79c95d640",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ef695ffb-7ce8-4b31-9ae3-aef8ca3c5b94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6947110-8c46-4b5c-84d9-47cb36b7e12a",
        "cursor": {
          "ref": "35a0fcb9-d8dd-4ded-8760-6a6c133de2da",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "27aff409-451e-4300-a168-00b5670771c3"
        },
        "item": {
          "id": "f6947110-8c46-4b5c-84d9-47cb36b7e12a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2183ee4b-fc0d-44d3-9475-56700732db8a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3b0fdf-753d-4c43-b25d-197113ede75f",
        "cursor": {
          "ref": "79957840-dd3b-4f77-9341-5e83edb21a41",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bed79cfc-d894-4779-aa93-f0790928307f"
        },
        "item": {
          "id": "9b3b0fdf-753d-4c43-b25d-197113ede75f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d139e283-8efc-47ee-804e-7dc37d3c0c58",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "90318830-a16f-499a-aedb-8fd776895ee2",
        "cursor": {
          "ref": "c5fbdc3c-761a-4b4f-99a1-b957f2dee37a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8d26942-f1d7-4433-abae-801feeecf61f"
        },
        "item": {
          "id": "90318830-a16f-499a-aedb-8fd776895ee2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4919013d-caae-4efb-8751-f7476d96ad35",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb26482-b899-4446-b965-973b48375a77",
        "cursor": {
          "ref": "30a32ede-215e-4eef-a412-80137e885bc3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef86580f-5cc1-4edd-beb9-281daf3e8305"
        },
        "item": {
          "id": "2eb26482-b899-4446-b965-973b48375a77",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fc99bf21-4f9f-491f-b9e9-c7c068c63686",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
        "cursor": {
          "ref": "db03f760-17af-461d-b837-85d192b516ec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ee23deb8-bc72-4482-953c-d7c32019fb8e"
        },
        "item": {
          "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca891941-6968-40d4-af3e-0633ab228c26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
        "cursor": {
          "ref": "db03f760-17af-461d-b837-85d192b516ec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ee23deb8-bc72-4482-953c-d7c32019fb8e"
        },
        "item": {
          "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca891941-6968-40d4-af3e-0633ab228c26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
        "cursor": {
          "ref": "db03f760-17af-461d-b837-85d192b516ec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ee23deb8-bc72-4482-953c-d7c32019fb8e"
        },
        "item": {
          "id": "8ea7e15b-4ac4-4f57-bbd1-f4daafe6628e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca891941-6968-40d4-af3e-0633ab228c26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb58e5-115e-443d-8095-77ebfc7a1ceb",
        "cursor": {
          "ref": "1b54db37-aa31-40d5-8509-764b32fb1af4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c712197-8861-4de4-a8ca-18bfc1e8b810"
        },
        "item": {
          "id": "91cb58e5-115e-443d-8095-77ebfc7a1ceb",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "662c57d5-b136-4c33-8efc-8fc21d8074f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806220a-250d-472a-81ff-4d3be6d791c1",
        "cursor": {
          "ref": "b768030b-e43a-4b76-a389-d07f79816485",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53723e29-90cd-4524-8257-60212db98c2b"
        },
        "item": {
          "id": "7806220a-250d-472a-81ff-4d3be6d791c1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "52ce12f8-675b-4c5b-ba26-eb5a55d40be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806220a-250d-472a-81ff-4d3be6d791c1",
        "cursor": {
          "ref": "b768030b-e43a-4b76-a389-d07f79816485",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53723e29-90cd-4524-8257-60212db98c2b"
        },
        "item": {
          "id": "7806220a-250d-472a-81ff-4d3be6d791c1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "52ce12f8-675b-4c5b-ba26-eb5a55d40be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6e2b7e-91d7-48ac-a624-9764df5d0c75",
        "cursor": {
          "ref": "5eb95465-071a-49cf-b0c4-1ab619583fe8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb4193c1-2b33-40de-ae8b-5683af3d6170"
        },
        "item": {
          "id": "2f6e2b7e-91d7-48ac-a624-9764df5d0c75",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0bc782bd-d556-41fb-aecf-60bbc9d3d398",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f177556-6947-4aed-9abf-b508a0892cdd",
        "cursor": {
          "ref": "66e8c419-4b3b-4315-a833-3b53c9ad3810",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0e6bd36-4443-4279-b34d-4e60146aaf83"
        },
        "item": {
          "id": "5f177556-6947-4aed-9abf-b508a0892cdd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d998829-31e2-41d7-8b2a-c0bfccff588a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f177556-6947-4aed-9abf-b508a0892cdd",
        "cursor": {
          "ref": "66e8c419-4b3b-4315-a833-3b53c9ad3810",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0e6bd36-4443-4279-b34d-4e60146aaf83"
        },
        "item": {
          "id": "5f177556-6947-4aed-9abf-b508a0892cdd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d998829-31e2-41d7-8b2a-c0bfccff588a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4820f3-74a7-4a15-be6c-277a67ee8c22",
        "cursor": {
          "ref": "99996a93-43b1-48ae-a6ca-3787ceab3c4f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e832384-cea3-4afc-9232-756d83162f14"
        },
        "item": {
          "id": "bc4820f3-74a7-4a15-be6c-277a67ee8c22",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "42a50a59-5c89-4b03-9c8f-9d966f2264ec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}