{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe13e2ff-9ed5-45bc-85a7-f15c1e76f3d3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "74e791be-0658-4565-8f85-745e25897e91",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "097021d9-ab2e-4ab7-9839-666f10cbe025",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "419aec02-2d12-4cf9-935a-71b8e325264d"
                }
              }
            ]
          },
          {
            "id": "647c2043-04a9-457e-b19a-8f7284015486",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe39eb14-3a2f-4324-98ee-6f6595f2e4d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3e25f27-5462-405b-a13d-ac632d96c230"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "804add73-5f1a-47fc-90c9-1f3edf51fe57",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "92a663b0-34a1-4b08-b55e-ab0ccf1617f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d46b2606-45d3-42a1-b207-144e2dee9ad8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6052161c-dc1f-4772-b1fe-ca72d00f2f2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ae89c84-c00a-4b62-b092-64696d64718e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f251619-6aa4-4a40-b806-677c11830c6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc70b0cd-dd53-435a-9304-971c7bf8aaaa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1360b82b-af2e-439a-a1cd-ef7ae67c6d25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d29903fd-21e9-49b4-a5b5-153122b08959"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b7fb8df-8bd7-4f7d-aca7-31d62dd1c5fc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "802dfa7c-3042-4499-842a-9a5bd053fb53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7401777-9e13-44f2-abdf-87ca34dccc98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "494b2287-107a-4ac8-81f5-ee723af766d9"
            }
          }
        ]
      },
      {
        "id": "54486dc9-d2d6-43d4-83f3-7cbf2c7a3ea1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0cf20177-b597-45dc-b191-0690c7308982",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a82c7af2-5775-4638-87bd-5e402890d197",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "426a7d3f-7b43-4159-b894-aa842fd3ae62",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f19f6-0250-414a-9520-0a3ebdf9da49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68f9904e-3945-4d01-b0c6-feb4f9d270f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36847b67-1fda-4efd-9df1-70af05bf2dca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3477421-9370-4f88-9693-b4b54279aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70e4e31d-6b1d-4fd4-a4f1-d8f82ec3983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c554ecd-2a1b-4aa0-8ee3-2cab8ff166d9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad2b509-c153-4538-ade0-a7dc77c67d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9240367b-8bb7-47a0-b8e3-cf131d8a48ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c078119a-0e27-4c30-9181-f82f9f955c42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af5f4c45-40eb-49c3-8061-a1a1462956c0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601d5cc1-135b-4028-b688-342db39f7c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b040000-1926-445b-b8c3-daa5c04f7b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ecd213-2d09-414e-88a9-3613feeae80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a104a3-2cf3-4809-9146-57882e0d1dc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da6f35de-c3f1-465e-ac01-29c201912a0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e2c397a-a86e-45de-9dae-37d110944894",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2724e78a-32ec-4370-84ab-0f5483a2b912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dfe9de51-ede8-4d33-a663-c9dcbd32a703"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b56944d-8004-4387-b5a4-8d81a81c7eeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "79d21d7c-5e78-4185-98f2-3b48a92dbcbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acc31708-628e-4294-9730-c18902711003",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "748f9e57-a35b-47bb-8615-1d497a24c43e"
            }
          }
        ]
      },
      {
        "id": "2087f0e5-7fee-4421-b9ad-0b068df5418e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "22546cf2-6471-4b54-8d5e-72ea1ece140d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a844685-0f6d-422d-99c3-c8a2ba997b29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f41f0194-695c-44c3-8cab-015bcb973f20",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb69a91a-b4af-4b74-9270-b3d197cdd51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963a1aca-4a03-45e2-aa00-af7af1ebfb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef199f22-1091-4244-84e6-c58c7cab0ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89ce7811-dc1b-482a-8ae8-0e1d282ebb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d989df36-1ef2-415a-975a-ac6014740009",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e2da6c-102e-4a1d-9118-d08cdd1bb0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcca212-5c58-4493-9ca4-c3fc6bea4a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bb4315-a7c0-4f48-b05d-44874ed24343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf21707-c9c2-4b72-b587-24880fa975d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a042a578-8570-489c-bd88-73e540b55d92",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67724a3c-1d16-4326-adc0-4e1026184d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2201d94a-71f7-4158-bb75-b0becd35325d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc974f-3659-4226-9ee8-51c7a55373ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c51968b-072e-4da9-9640-c026308d6161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1905314d-0819-417d-b490-e7db10fe1e6f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fdcf1b-ad72-4f97-a740-1b4dae12e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832146f6-fb7e-41e1-b34a-cc2b6d39cb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0428481f-79c9-4dd5-8e42-4a788dd70c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dfe48a4-91e9-40cf-941b-5b9908442550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54f4d64-8ede-4432-92ad-38bfda716f02",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979328e2-1f5c-4cbb-8c71-6e5c229bf8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7447d7a-96ac-4dca-a14d-c0ae984f408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5372acb5-b2ea-44c2-8971-11fc9d6b4a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f23d60e-7521-40b1-98a1-7ef457fd2fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47c5d15-6c04-4542-9145-ca3bf3f34e4f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900921a0-c6b9-4ada-ae5e-094a0031d40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e485772f-851d-43f9-9fce-c098951f949b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83373c1f-f478-4261-81fc-515bc9b35d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b93e22e-a090-4f50-9378-c7e16883cf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc96eca6-6872-4ca1-a9f7-702f4b1f87f8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5615107-7eb5-4420-aa6a-46b646172c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e54d61-2708-44a2-aa88-f71123567041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814df88d-ecb8-449a-9d5f-fc729322f2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b69c28d9-9659-4df1-8ac7-abc827540a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c060b7-0e88-4ddf-b519-fe307a137feb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4165757-3caa-48fd-89de-4f51f938ad17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11520f68-ec67-42fe-9ad0-b7ce6a11cf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c3f755-242e-45fc-8023-46f78e01a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54fa4d41-8f31-44e5-bfca-8c16cfd096f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a187e0-eba9-4ea6-8927-232ace085bf8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86c084a-30bb-45fb-a8a0-3bcc3d316e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a40a60b-ee2a-4a71-a0cd-6f7aafb52318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efb89fa-aa84-400f-9814-11efd1a4c73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4b61397-8f48-425e-b83a-d52fd598473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d7da2b-fed9-4c16-b122-5fe26cc3e8f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f395923e-a73e-4eea-96e6-ac3b193b93e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171b2f33-3c52-495b-b28a-34e505d4394c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecf7af7-ba17-401d-a6a4-a4415b197ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6751419-e700-4a16-a6da-456f4046988b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0666bdc-e65b-4b89-a77c-e56f629c97a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d147372-4e02-4797-99f4-be84217049f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3519e4-5097-4721-b1e0-c4c7514a0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0086ba61-6332-4482-90df-b4b4bea80814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ec06fc8-800f-4325-b45d-f1ad80ca241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cad2aeb-28dd-4081-8190-c031f3fddd3c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f47512-0b68-4b01-95ef-8ad3e06e8b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c40b7a5-90de-4c86-a278-fa257627ebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdeff9c-b612-4b9c-b6f0-fe865734cfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57d68fc5-86d5-49fb-8e34-af31959ac150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ca114-a6f9-4be4-b850-86be939f9037",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618b1f9a-57cd-4e71-8ff9-73ce49ecb031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9b3a34-ad19-4331-89b9-1e9ff742e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696c8593-1b16-460c-9822-5980232df576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "186ef7d3-763c-41b3-9604-100e3b4aed83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e4e744-5f73-482e-90ac-f929cebb9b0a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f038c9-9fe5-4d36-8745-985d8031cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e0f398-787c-413b-a996-574b0909e335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd6265-4c14-4d3d-9f31-58af6e3aa41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc3860e8-f108-488e-9256-97051a879877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6fcc2e-aa64-4afb-8c41-d0c980176f12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54516841-236b-4523-b4bb-d57d36e0fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32b4747-b11c-4b15-a07d-2e81ce19731e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44320292-fd37-4b5c-94f8-c0c50fcee6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59464e9f-9c8e-4067-ab20-61b7546c31eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef539d16-0ae9-45e5-8b34-8a5bf89af5bb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb5d4fc-e4ef-4d63-ad59-0802d062857b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4debae0d-5da1-4816-9c63-df33a47dd0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8f09ae-a620-41ce-9a62-573eb63cebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cdce10b-83a1-4c5c-af77-8fcd6b417166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a116b4b7-71f9-46dc-9188-ae4b2d1370a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af027324-8a1a-473a-8674-25f9cf42302c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1903bd2-c67f-455a-8344-4837597c05ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f521eb-cbc6-4922-9606-0d73195d115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a0d9a9-1aa7-4d32-a101-2b4d69fa6145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86d93a5-d5ef-41af-8447-a9b182454f15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f13a245-75fd-4036-ac14-ea257d68ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a54fa2-d881-490f-988d-cd900d5073c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa461f4a-7016-4437-b46c-a6f5a137112f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab4aae6-204e-414d-9dd9-cea41e4ae9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bc9e8a-0274-4d55-9232-9a2733d064c8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d910c78-7a76-40e8-8a64-def52112473b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bceea704-c5f7-4a38-b6f7-1a28edc7bdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34abffc1-b513-487b-8fc4-a6661b0a54b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2100a0-0457-43d1-8264-def8e67aef90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f127406-382a-4b22-bbca-aa3ab0890a6a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3c11d-bd58-46b8-b0b1-aa1d8ee270d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73c9c79-ce55-4ddd-a96a-e14fd9842558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980adfb9-1e04-4b27-836b-556415396581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7379096-4779-4b79-9604-c04c8c371d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c506e685-d7c1-42dc-ae47-aad28dc9d996",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c1520a-7838-44e5-8b72-12a2ab388e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3e4da5-6e19-4b5c-b156-b04fc85779ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc13cc8-7b47-4704-9ef2-af9c2713725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88320d3d-6f34-403f-9cc7-bae3ac6e1f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b99da0-ca59-4c62-936f-2fd198af9723",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3a12a9-d822-4991-8880-85600e295237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b86ec69-4bf2-4186-b6bb-cd07e94401be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd687e-7c33-4810-96d5-1ec0b2d28c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c46fb12b-f464-4011-aab2-523f12ee2ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da063683-6535-4960-b6ec-5ff9b8d7cc55",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68862ba5-e97e-439e-ac5b-00ef4a808c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fac63ac-4e5b-4c3d-a4dc-545a91415a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1db930a-0a30-4687-9a48-fb3b7c6e2141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "080f809e-77c7-4a07-bbda-6a9b32b27bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d46d5a-6cfc-417d-a8c1-72fa4c4a3a80",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1750129e-7ed9-4409-a1b5-41023ba3d4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e23f42e-28d9-4cd7-8517-deba8613c24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cdb143-8bd2-4147-b7a0-e2836866e750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62905d80-6709-4596-a145-8d30ae0a8a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5569d2cc-6754-405b-a438-63d75f546ed7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48f393f-5b52-476e-a7bc-fc5b2b5dd0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e241634c-a767-4820-bbaf-d691fdc8eaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec44d0b-b8dd-4d92-abc8-0cfe199ce813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d731e7c-8537-4a2f-8c92-539e890cd800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80f2948-8f48-4d93-885a-a97bf25a7c97",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955bf6df-2024-403f-9426-ab0541974f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b2dac1-416f-498c-a3d7-44535784766e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9a8d9b-e8db-44b0-a4ab-fed87b07486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d37274c-7d02-420a-8a39-5a4a9ae7b111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5b6196-47c8-4639-aa8c-0263a44caefb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b87676-c845-4cb1-92bc-e0b49030e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a985e7-431e-4dc2-8218-9c74d33b5bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd3e828-38bf-4a44-be0e-b59c5b646cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "473ff37a-588a-433d-85c0-99a11c1bd2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206174f1-db74-4f88-b1ac-0cb1b02e46e9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35917f-035c-4ebb-916f-6eb7b4eb33f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438c836d-bd7d-4c89-994a-3768825e6adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542be58c-b2fb-4c31-93cc-960e56b6e1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b2146d-4427-4045-a508-c0a4bb36e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfa8a24-50f3-4d50-9590-952535d9c000",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00f6c05-b349-474e-a37e-4ec30b4ae5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96954740-379c-4f5c-a0b3-3855cbfd21e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d6e0f9-0658-4df5-ac66-9aa431bea0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e5dc2a-1ede-408c-9c73-68b29b803fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bb0b27-dd39-4263-84bb-443e91864a76",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625dedf-8f5d-430b-99a7-c521a702fde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c51942-6992-481f-83b3-ff9dd8040d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1c0dd2-cdbf-450f-b4b3-6765cac6e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "46188bf4-eae5-407b-845f-1441700591a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acddfdc7-55d9-4e22-8cd8-d8ed19b90513",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08a7684-d9f0-4c57-927d-7c17a82d0308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f01219-441b-4448-81bf-6a97d78b1058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89717149-a5be-41b2-bc86-0a18938f8648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7056cb87-07d6-4fe3-b64e-1237fb854c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c91a421-5447-4069-8242-6b8abc823163",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e323b6-d390-4fd1-94e2-f38df5d97bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b09aec-a1af-4ba7-88e3-e41c6b8d99b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1e4dcf-b4a8-405d-8df1-cc0b9b15b98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b9579f-6b49-406e-a337-82c16e611e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9026832-2d0c-4dd8-947e-8a1f4277b0e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea3b7d-4748-4aef-aa2a-5f75e1da6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148f5652-f7f8-4463-bb09-b9d10d526887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b6b8c4-fa06-42e7-a224-a5db0dd3d544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d1157e-46d1-402b-af53-25ed1f85d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7312907-1d5d-40ee-a1b0-2e5f30fbee3e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ef81f8-4d57-4e89-902d-30b30682bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4658dfe-b26e-4d7f-bace-fa712390e3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d507d8-232c-4092-b1fc-2f15c3b9b677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65679ba7-0915-4c99-a917-865b7e7f9996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36296fe9-410d-42f7-ae9f-f1056241ee9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2a571-7bb9-43a7-a645-92f9d9cce19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2d12be-be3a-4b07-8a0b-bf3541ab0933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232b6eb3-41a2-4c0d-8015-0a396b404124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb050cb3-39ce-49aa-a675-3705f4e8f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86159d0-a6b1-4990-aa40-db5efa06ee5f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1415b83-6dff-451b-80a2-bf36dc7c3de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c057692b-ad1f-4a43-9536-f9ed7c95d566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63955c1-6596-4d3e-bc26-c8553961d169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd9e88f-25cd-477d-91e4-5fc299c4f88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b2156c-41e5-4717-870f-5e78f42765c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49085890-8a4b-4a70-b09a-95e6c492ec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a6d03e-affd-409c-96bf-29537c19acf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddb319e-0b4b-4670-a257-95e685b05706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d05642-2cc4-4aab-85d0-58f192ecdab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b074b302-4f31-4cec-91c6-795a6a1ac241",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e998988-13b3-43ad-be8d-d6a625ece821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007a412f-1edd-4230-a4ed-0a926bdb06bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e8b1d-3c9c-4f2b-9311-94c8408074f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc469f2f-883e-4a7a-b170-70440b8d6c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f896f093-c838-44b0-a1b9-07b9b60cb34b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a1bd8-8d32-45a1-8488-2d6c002580a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db06742e-0cb5-40b6-8d45-8bde8c21c921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711dac69-7834-4d77-a0aa-d0477b3e0b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4638231-8f7b-41d3-9f95-8eb2aa026a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb5b063-5fed-4fe0-893c-23a50c71bb8a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aff0ab6-7bf5-483f-b6f8-dac34fa094d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3680bb2-d68c-461e-97c3-f5e204bc7d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e202cfdd-e8a2-4adf-a7f1-b557276c5c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98fc2970-7dcc-4c31-8d2f-c96719cdd310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1b51b5-7ee5-4cec-b80f-1da4c23f1a83",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff1241-fc19-4b9e-a9dd-0804a20ab81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e257226-2997-44eb-b5a5-809e0c287613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d030b44f-cd71-40a3-94f4-49c523dff8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da556a3d-54e1-4d10-ae7c-c35de5508e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3a3420-fb3f-4a06-98d4-441286a28a6f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58015ce2-adc0-4dac-a2fa-ff8d6dfc2833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865e6bea-a00e-4c31-a374-df28d5ad40e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ede9d78-1d5e-41d7-a9ef-871bb31c485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cd526764-0543-41cd-891c-b1da7ed182f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce21ee90-82b5-4827-9ae9-cecbea86157d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc6d6cf-282a-4791-b29f-b2a07d938f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56137fcb-49d7-4daf-adc3-a512dc9091d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024bb91c-1636-46ff-b808-eb7184e22e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dea396ed-a03f-47eb-b02e-9b2de5aeadc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49494818-0d59-49ec-a7f5-9bda23c57181",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a917f103-b275-45ee-924f-0483767178de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acedcf2-f0f0-4951-afb0-9e5dcc7a1a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3ac673-b5e8-4647-a6c0-441e5b4a93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee729dcc-8f06-436d-8176-6022af5ee276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19e63d6-f8f2-4977-b437-ce5e19274ca3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4cba81-7c63-4f9d-8627-722ab6af1de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0669e439-945f-4dea-978f-813234ced308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bf0ade-144d-47e5-9cab-c8f3c2787cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75377d75-6577-49df-8c51-07f50598f285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3110012f-1f5c-4c81-92cd-7bd4a0e35f60",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa560552-fa35-47e3-8a7c-a71c38ddd1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6373d76e-48d9-4c62-a87d-73a5ce36d242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60a4a2c-1a72-4b93-be56-59f313486453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e85ebde-a520-4bf3-b2a1-7956a62e3022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dc588b-6ef6-4460-962a-11bafb54a306",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7420f2f-6a44-408a-aacf-39b1230cfb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c65d1e0-0295-4784-a906-c18b42228aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ec698a-b787-49bb-9fed-32bb136a50ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27c64f9-f57b-410a-a54d-c89c7f7e37d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb38cf-adfa-4b0c-a430-b9304e300b67",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56f5425-a551-4f33-aa38-49e6092cf12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c65028-9799-4f1d-b896-c01a0d3ddd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a7d484-547b-415b-9c98-afbe4306d53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ba6a58-7bd6-4499-a9fd-765b10db01f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28f20b6-dc13-47ad-9de0-07b2670905ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a3ab80-1f94-4d74-aac5-458485b6bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4150991f-2f5c-4c20-90e4-501f088dbd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eded191-80f5-43de-91bc-d7022a8e44ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd445b6-616f-4aa1-87f6-71b59b56a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdf360d-7162-4950-a326-7d5c9466378c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631afbe5-452a-4e77-bf21-0462b4ed5d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89de929f-2ec1-4172-ba1f-2d62d6db91a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7feaf0-d340-4e1e-8174-ab844dab5e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbde560-71a7-4c2f-8be7-74e0ea82235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0e305c-f501-4faa-8062-5ad4a013cc01",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb718c9-0422-42df-9f1b-94ac236b6fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4870bb74-ff1f-4340-8724-3c46c115f665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7cb9f1-3b63-47da-8a2d-eb0c95768179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c576bc1-6ed8-406d-8463-1fb9fde1f3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b662fcc6-3819-454a-bd76-a74fefd3455c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e1d7aa-398c-41f1-981e-dd729208a79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3cf8a9-8d23-4e45-ae5f-794b106abda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2bec4-0bbc-46b6-a630-c0a991aed7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56ce137-1092-4e49-9102-ea49503055cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbc46dc-15d9-4114-a5a5-fcb5c74dd5c2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db29fab2-f9bb-4979-8fe0-0ba454627500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852dd708-e542-45b7-81f3-c7de1a1104e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e445c1-d539-45fd-bc28-6cbac93adbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4097e3a6-f691-4e66-965b-eedca08df8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49edc4f-8bf5-44ac-afe4-a925b3f9cf6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565257c0-d26f-411d-aa05-76a62a84ad8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cabc799-5f93-460c-a7a9-ba4f2b30b4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a96509-6787-4230-98fa-19240d9ba3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2841009a-fe7b-4b33-8662-826e36fe48d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d97742-0e1e-4b1a-86e9-336de3315bee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dacd0d-ca9a-4133-bae0-14afec759292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d905bba-b6f8-4592-9a06-5bfcf1bc15a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee1b890-ff6e-400f-b8c3-c92cc4ca85d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bf4fdc-2cbc-4739-a550-eed5b037cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689312d1-5a40-42f6-bf1b-6010377a9b98",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f2522-efb7-4b55-a151-2e70c4efa192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192d8c6a-8146-470a-ac3a-bd217b0e8c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3d8d41-7bbe-47ed-ae4d-59e32894321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca01dcc-e4fb-4b4c-95b0-6cc39289594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de002aa-4174-48da-bc3c-bd013f331da5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c574d-6bce-433e-9232-14d1a6bc5732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559ba9e3-1b09-4acc-9b78-778e46848b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8118a4-3a0a-43b0-a249-e540c25cbdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0adcfbad-851c-4696-9f39-b6ae1b0a267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef78233-4c39-48ac-bdfa-3e4ddf42ae26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d63952-7468-4d82-9f75-67f0084c31c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82c7afb-246d-42ee-940d-9e7fc70233c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0373025b-ad4c-49e4-be92-19acd49d7b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c3706b-6736-4cfd-a34f-7bfd713a3aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba9bfe1-94b0-4b7a-a378-b7d4cb753775",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c37f75-1622-488a-b5d5-f43954a87d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69205f39-aa29-4b46-acb1-77e19b51bba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59a8031-f224-494d-a353-2b8d5d0929fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adcdb36-a6da-4d4d-bb49-8b236a828574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d9fa79-dc85-4aa3-81fa-21f199c9bb13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1552400-36bd-4f64-852c-7cfb88f99863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b9b804-3e72-443d-b430-196429415469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7011a90-f303-43b4-94c5-6468319e0226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37515c2-c7ad-4411-84cb-25dc382c5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1642b734-a970-4026-8034-d12222953929",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3770936e-3b03-4543-a85a-38d75c10c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19789c9-b9f2-4d80-9410-d71490e3c667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca4a3d3-227c-4a9d-a07f-d9fed47822a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01fe140-5cc7-459f-8c20-ade5c7a88892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6538fda-6529-4657-b2b2-54bdaeb2190c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3885d5-73d5-4ea9-9fae-df615c71b1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9edbe9-201c-45dd-845d-b74c5b9552ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a07eab4-cb61-4fa0-b665-564653c0e59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cc0cdd-aa71-4715-bffb-64297c279b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2b88c1-084e-4387-a5e7-24952f642b8f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59484812-9cf9-4739-a234-44a560fdc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acfb64f-b634-4652-afdf-3b0b992849d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939c1780-a3de-4f4c-97ea-f7c667039505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f929a1-1045-4b70-be6b-3c17ed77a8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a30fca-f3d8-4789-b68e-826a0c9c5ae6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e287b9-e45c-4f67-95f7-b410b726c33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9736dcf4-1b8d-4344-9668-ebae9ea3b842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46fa55-8f4a-472a-a290-fdd88abb9cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba514b55-4bf6-4e2b-ad10-389c6ae2a911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000c9181-9da3-4d6a-afe0-293cf1d1d87a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1416a86-8f16-46e1-8014-31daf708aebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c81a79-fae2-406a-b745-a7af34e82eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c5ea32-e3c6-4e56-baf2-6828142f4fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9378c3da-50b7-4a76-816e-449aa3fe7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca332283-f46b-41a3-8ad1-5987e81147b2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a06759-c6c6-436f-a218-8f1e34d5e15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f667b4-a015-4f68-94d2-6f51b2d4374c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a677aa4-df81-4502-87c3-c48d15bdd205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "103cd611-bcd7-46de-b783-1ed1a09e246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef6509f-8cc7-4279-821f-e155a263b248",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe5e19-a0c5-4ff5-935a-0c13d4cb445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551679ae-83ff-430b-b0c0-730d055149ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404e77d-e5ad-4dff-afc0-0bc2fa13ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5bba33-aa35-4833-bdf2-c955c20f381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a50f429-84d3-41d5-a836-a6e6e2178e70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14b0fd0-7788-424e-99de-be8994d877d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12616e37-9b84-461e-8946-1bcb245819d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76fa31b-8c8c-4879-b10b-c76b14c5ebee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0baa6a9f-ff59-4a11-9b00-71940a9e67de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a808ba5-daa2-4c17-b285-7c28cdcf5323",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5224e8-210a-44ca-a74e-0246430759b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4309112a-f2fe-48fe-8ad9-4e4574914647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7877134-d2e9-4d87-ac2a-1f5714165a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e93198-b2e5-4ab9-aa93-3765e71e14b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c346d0-4d6c-4e5c-abe2-861861336230",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470edb1c-127c-49df-8f43-4bb793cf2b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b4ce1f-ae9d-49a9-810c-a5e39b9112f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fbd8d9-1fe2-42cb-af34-3d40661ca807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5269603c-d031-44fd-b047-ea198d5bb7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82741a8c-939e-4480-b4e1-5e6f7e744c53",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1689bc-18f4-45df-b171-acd8871b32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38d2777-cdee-46cc-a437-60085cbfb31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076f598b-f055-462f-85c5-eb92ae722941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57942819-2cfb-4087-bd2c-65904ce641a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2474d53d-92fb-47bb-8374-c0e533354afd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d05969-2f4f-4ffd-a266-aa7be4687e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1967784-6c1e-4cdf-a4ed-5405bafdb85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e13fc25-856c-45e5-b4df-d917546ae669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e3da8a-d0f0-4a9b-a2c1-576034e963f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41bc758-5842-4af8-ad23-60ae27b0a480",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad3ed39-a6a5-40cb-9fe1-9eebc4496554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c58692-5c51-4ff3-bd1d-209f90b24e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259802c7-27c5-482a-8541-85c0a13d3f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "114a36a8-2b5a-4bcf-884f-0f03c6ed7260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce3d1ed-f981-47aa-a21e-25f0044db234",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647eea2-793e-41a2-8117-ad560df9f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39cfee3-feed-4686-87ab-49165fade642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef109f42-4bb2-4134-a0e6-022508b2aea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b92d5c-c8b9-44a4-9c6c-ab416c9e5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9531343-ed60-4b51-9b47-28bb1f671f96",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dd5b27-f661-4c1f-ac71-cc0c9c3c9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fd7b6e-ff3d-4223-b4c6-44bd577a4581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19576cc9-f465-4b27-b68b-3634d6e4c7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c52180-09f7-4451-b62a-3dd7bfe2b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc52e0d-ad78-4175-b87e-087e766de188",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac497f-e455-494a-a8d2-2f1d21d107e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bfba42-76f7-4a13-92de-30ffa6542d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5162328-4471-4523-b80c-30ae20f17875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26b9c68-2071-45c9-9d0d-8a09b0007e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a71d0b-81cb-42b8-b336-86309244ea6c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dcb2df-32de-4fe5-be46-05c86375c819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9480f306-0dca-4e81-8583-535f930cce1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68340239-7e98-4e6d-b317-70ae230805e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440054aa-97fb-4d09-9234-623ece71a54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2929dfa3-e051-41e4-a00b-d3981f117c86",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6e5e69-9b48-42f9-803b-4cafd6144fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4ca643-a08f-402f-be5e-33ecbb96336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5ed66e-e1fa-45aa-acdd-3acb97bc1003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebe66a0-087d-4a24-926f-93e0b36abc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93b8ee-800b-4871-ab8d-fac54d377000",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0a35ac-bf2a-418a-9b34-14321fb56a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed12247-4b6b-4871-9510-c2ae557803df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff129fed-93e6-4d97-862b-c8a684f7945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9b35fd-c91b-42ad-a27d-00037dd46d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312cdf8b-660f-4299-9217-29e2536e1745",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4fb5f1-0b62-4564-8dd2-9174f96f788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fa3dd9-5fa1-4186-a3a6-f4cd634066b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1072d57a-1c26-4836-b933-cb7896f8ecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "386e1952-d5c7-4748-b3f0-1ba0619599c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96409efb-f0aa-4257-9baa-425e767eb51a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7c2c4d-4344-410d-88e0-178de4b076d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1da916-22aa-4890-a92f-b1cdb44bed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93562b4a-12d3-47ff-9c8a-8c9bf03de72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64772836-3233-45ee-8edc-9e8e4de2cbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61232feb-43e6-4670-91ef-b69cbfef1af6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161e74bc-8c78-4719-9399-2b28b9255846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b053d060-e89b-44ee-b255-32893e9655b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83aa146b-06bf-4cdf-94fc-94d992edba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff43d5e-e0ed-485c-b694-1ae26050039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3e7b4c-0799-41bf-8e1b-1f1b56aac2d7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812e5fb8-d668-4a61-8ee6-7538b5e8d4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c233e3-85e9-42ec-bdf5-28fb537c893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd64b8-6498-4a52-a691-55bfb9e24a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58199ee-ead6-4311-9f83-13da920c6241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497e58b6-ae40-48ed-9bfb-fddcc89c293b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de5e3f5-5295-4db2-8ac0-7743d54d1963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8ff162-53c7-43ef-ab5a-3cff8bcea89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f005115-542d-49ce-9ba7-93fc69cc8efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71bb50c-442b-4c59-808d-b35f5a2fbda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4007791-4615-44c5-957e-77b70040bced",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb2496a-f853-4a0e-baa4-32235709c48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be4a63c-ffa4-42d1-bc60-8f019be6e6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0c62fe-b902-4540-9856-d57843d3d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "393e6b3e-a6f2-48ff-9dfc-50ce5c9dc059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd19f86-2977-4f08-aeda-5f3ae29d0ced",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca4c2d-4f6b-4a91-80b0-77c4252352a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf54305-0404-49c9-9c60-376b0a057bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d868b8fa-916f-40cf-ad5f-9043fd6fca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aefe5aa-5c54-4fb3-8f20-130d496d2380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e62461-5349-4032-8703-d4e3a3b24ef3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c98cc-ec75-4a93-a90b-b1f794e46bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9b20bb-1c9e-432b-ad1f-b3ca1c8d3226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd18ea9-b0a5-4081-a3d6-9f95a3e3849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdc8acb-def1-48a0-a4ec-c3655abaaa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45912159-4bc1-458f-8b18-eac56dfd4cea",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d915860b-52f6-4048-b0a2-4f0353f8be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8109dbf8-4e9c-4e16-be3f-0e05069fa8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fbf78f-1204-491d-be81-cdd892ea2553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5a9166-852f-4d89-9f10-e5030fa9c01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5688443-312a-42f1-86bb-e99d3ef5042c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e355f-cc45-42d0-a0c4-c7f7a35e65c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3390a99c-9195-44d1-bf60-0b8ef76564c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4ec13b-de18-49a6-8817-f88dea26564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29e1fae-2f3a-438f-910f-89a73c4908f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3baf2f7-2d11-4c61-8cb6-0ab3dea4b4fd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f5ab76-5fbf-4567-8736-20a0c10d4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13ec294-0bb7-4c4c-8898-fe1ff52eae24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f599aff-3b77-4f89-8490-4cb931325cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d131cb0-7482-4572-9b98-a8a58c0a3d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2bf7c8-9c27-42e5-a9db-a693bbd88870",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeba4f7-80f0-4386-bfcb-8f16135edcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6864c77-7c43-4677-b34d-91a90a467dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a392169-a6cc-4b38-b474-85f766e36642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6909d2c2-0348-488a-b547-07f9be1f119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae39a2-e88a-4d8a-b3c3-c3d822b63607",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e2849a-17ea-465f-a63e-8d691d1d8b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac9a6010-bddd-457d-b2e7-7f0c8c2dcf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9432638d-17aa-475f-9549-982286c3169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4be0394-3b12-493f-8ea7-0c777a1a37cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "03c93d8f-dfe7-4900-a9b3-d7793528839c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d158964-c490-4b52-90f3-8fdccd28cf9e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd238758-206b-4099-a7b2-a3dc3f51b05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1eae553-7d77-4b92-b38b-f08d1dcd582b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69cb9c1-3ed2-4583-8c64-05ebad2ebbe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c910a606-5768-49ba-9914-056ade0d14b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "745774ec-5e2b-427c-a889-05078b8e3985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5d3141-2b65-42ae-908f-8dedba1a30b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0873d697-58ac-4a29-91cd-bb8fc6275fc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72687963-d7cf-4e71-afed-b85af71ea722"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fec24649-3dd3-493c-8c09-a9ecc1c2a566",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0a7c0d3-db40-47cf-9b3f-8b8fa48a9d29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5168f5a1-9da7-4db2-9007-7b596fffde59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a2841e4-d2d2-4526-951b-0e27fb91892e"
                }
              }
            ]
          },
          {
            "id": "787e8494-4a3b-4406-b49a-209206d49a39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf4f021b-e48c-4571-91d1-a231080cfc63",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "65c138db-0b84-46d6-b5f0-0a7ab75d6eeb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e403b84-db03-4c7e-a67a-9db2a7411831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9543a546-d6c0-42e3-a97d-766e1354364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca90a361-c486-4912-9884-0e0269998219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e695d0-e71f-414b-a25a-109c7d8a1d24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1908b0f-0880-471b-8a21-4646d0159bdd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c51e368-e811-4a74-ba38-1cfa244a7065",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "280b7c2b-cf4d-4f89-a3dc-9c46189fd4b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735b05b4-b53a-4712-a1c3-631767d9aa5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61af88ba-2f30-4aed-94aa-d7ccebf31dc6"
                    }
                  }
                ]
              },
              {
                "id": "e3f28cf6-cf2d-4aa6-9fab-9746799c1f35",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7efcafd-7109-4314-8972-bb6d2f9a166b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb2e21b-f11f-428e-bcc1-11b6fc7e3e46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d943ab39-3d2a-4bc8-b338-0c88bf677073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67b7a31a-b4d3-46b0-8fa5-06f78c818296"
                    }
                  }
                ]
              },
              {
                "id": "29207bff-6328-4661-8cc3-69a610283cb2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff663729-1d7e-4694-9b2c-cadca8b5d5b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdaea37d-ebab-4229-b795-69090b113370"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b18d1154-af98-4b2f-a986-084aadb11142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64d3686d-0d18-4079-9f64-6423320521a3"
                    }
                  }
                ]
              },
              {
                "id": "ad92d90c-0180-4a41-bfc1-ed08afc6fc17",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30c9437-f18b-46ec-a5be-8401dd0c5f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9956d682-e2cd-425c-8bee-dae6549a1d3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd0bc21-e6ba-49ef-bead-61428afa4773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c6a834c-fb33-4ead-8c34-043d12462e0c"
                    }
                  }
                ]
              },
              {
                "id": "308ebe4c-3d1f-4b74-9c11-fb6bb4bfb6ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "741fae49-2f4c-40f8-a42a-efeb4e3a3c90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f6d1416-b640-4408-a6e3-18906f5493ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e808c67-fe2c-461a-8c8a-2562e0055f5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5fbeda4a-748a-431b-ba4c-fe973668af4d"
                    }
                  }
                ]
              },
              {
                "id": "92036d76-aefb-46fa-8a7a-c84ca66d336a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7003e1-58b0-44c0-a9c5-8a3ad2b238d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e61b27b2-1a1f-4dd5-9650-9fcc1ef3e2d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5d1cb6a-bb35-4f1c-adfe-99704392b508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af4c83cf-e0fc-4b40-adfc-336ffcb2ebd1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e8f5e12-fde7-4db8-89fd-b427118bc251",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "238632d1-ee4a-4b4f-86e6-a6f9080cf482"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6bb53ff4-fce6-4fce-a563-8fa0d0f26ab5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69c031e2-5262-4be3-9ebb-985d01565c02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "275fe29d-c4b0-4b1e-b8dc-200a3e521545",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "23cdc42c-8c00-46fd-9543-6ca7ca587f35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0b4e299-121d-4070-ad14-68230ab3fcc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f984ed6-b040-4c11-9a04-2f96ad00e1a8"
            }
          }
        ]
      },
      {
        "id": "6d065482-2a11-4053-bdb3-d38c06aabd47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "722c5455-f392-49e8-a505-7cd367883b3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f505a7e3-8d8e-487d-a51f-9115de800fa7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56c067e3-4003-4050-b78f-76c45f34df23",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d235352b-b8a9-4477-a7a5-3743586590c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d33658d-b71d-4ba4-ae8f-db93f61d9293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab83715-6f9d-48da-848f-29fbfa4f100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a90a1e7-55f0-418f-ac73-9e69e3aeaede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092e44af-2239-45c4-9a55-0ee51b58e6f1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca2b97-d772-414c-9f71-84a9d8915b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea3838d-be32-4757-86fc-7fae704f0561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a33a8-1ccd-4722-a503-1dbcf3a01718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed8a5dc-352a-4460-ac25-b9d4e5d010cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74052bc9-ce01-467c-819d-76be1083e05b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523ad9ea-7eb1-4e9f-a35e-7ae4feb96d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b828e1c9-00ae-4f06-abfe-5dbbee17f763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a1af37-f9aa-4923-ae22-c65d4c9634fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45409dc6-d5c0-4610-bc5d-35aa61360d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d393e1-3b86-4819-8422-c9a80ba643fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f73716-ff05-4b5c-989c-59741d03dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0461eb4-2e09-48af-8978-f34574168d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ea1e99-fcfc-4b8f-87cb-9e5012ba8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce95b7b2-69e0-4a66-aae4-e806890fa944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfe5f7e-3b19-427d-82d9-41fd817913db",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47d23d-c26b-4612-bf1d-af3ba2ba416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144f8658-b053-44f0-9a43-0244f892c4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5415312-3504-402e-9325-11af5afc2161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8e8535-9b44-40be-a86f-050adf1c8666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60982e3-9f2a-4cd3-9ec9-640d89497d74",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2880c7-2f54-4056-9136-65e23d00ad20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a9e060-0144-4527-acfb-ba51da659138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf6bc24-d07b-411a-aec1-89c5dddcb00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a91f40f-546b-4f3b-bca1-e5dd1fe8d6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97e5ddd-1040-47e1-b788-d94cfb0a0576",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad8ab15-3847-49c9-bc32-4e5c6b8b1b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f204d5a7-a8dc-4d11-b317-0c5b048c5d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13de4fd-b451-4395-bbb9-a85b7fd6dfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bdf055-2b90-4180-b3d0-c7b56b44f637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a30c00-07b0-4df7-aed3-19bd324b28fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189faa6e-d24e-4c81-8392-78942433db90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa831baf-0c6b-40f2-8da8-b9c4b1e7bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014ba30c-cb55-45c8-966f-992990adc7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3290e381-4190-487e-bf75-d1892c5704d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0875cb95-a8ad-4f46-8fd7-805a3e28ff97",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f2145-6a54-4e82-b66d-1f18d5f9d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0fbb65-c768-4603-bbe8-3c1b7496f8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78a87ac-98b5-4eb6-895e-9731d3ae33ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14a24a9-bff6-4954-b923-3ca40438ed46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef5f9ca-c369-4462-bc6f-26b303bc7580",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc4ed43-f9b0-4244-b74a-8ae617a163f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5e063d-3de6-4852-84ed-071d5b15f7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52a7136-facc-494e-86cc-45327ada6efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85869cce-7cd7-452d-af4f-a328c6785a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612a1e8a-8bc8-4043-9bd1-3fcf21734ded",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52527f40-9ce2-4fd1-97cd-ebb44a78faba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fc9ea1-b532-4e24-af0b-1bfbf9c2519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa9187c-0ce2-4e63-9242-3ee455710d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "587b98b3-eceb-4f53-99a1-e6b1c53d0b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a488d856-0a55-42d0-a6d7-f61c690eb942",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15470600-79e5-4b3e-b31d-43a1351919d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e866467-7157-4b56-abba-3454d0f23a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751113fc-8e20-4a79-84ad-d4c344b820fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64e54483-9828-4ea2-9945-1158c9507b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b68aea-3f6b-49b1-bbe1-9709d8c735ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805d8194-32da-420d-99bb-247090051cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d002513a-76a1-4544-ac81-4534f6c1365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b60fbe-53af-462d-98ab-31708c68b097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ba36f2-a981-4a3c-9079-140960b8efa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4a9b00-8f74-48dd-af7c-099862c88e24",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32070c83-d814-4b1f-8a9d-04fda2708414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02969ac6-52ff-4999-b122-fe3f0c2b9ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903e2ba3-5e55-432a-8145-68435156e837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fea36b0-a5e5-41c9-9fa0-5b07c7139bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f8be68-6136-43f8-a878-f8cc5b3c9125",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af98585-88a5-49ce-a5e9-ae4c3485f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df38249-fcf6-4316-b07c-18ed38a26428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4edf0c7-8780-4f61-83bf-148a2e137e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e0245b-f273-44e5-9b55-8fb6e07799f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65528f46-6787-4e53-bad5-1afe92066689",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ccec97-93a1-4321-876c-4a6ae8690436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7e3c54-9a2c-4303-a46d-38dcd39b0196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf66e22-3389-4f6a-bfdf-43e0148b9231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e0d12b-5667-48fe-ac83-1eb44afaa4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d54943b-ecf2-43d4-af8c-6bd478772dfe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb27e31c-fbc0-4716-b9f9-86e5b446a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3153e994-83db-4e4a-bc32-1768f5925997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f547d0e4-7b7f-4fea-b1f4-f6c3858fe5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc89459d-3c31-4165-8ac3-f76a0f7626d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5bb0d4-7c75-4c1f-b214-77655b2ea0eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7764cce-385d-47fa-bd64-3e76de4fcf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dee2d3-9d8a-4275-9531-1c85ccc25f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9189dc50-884e-4740-949f-b775efc3c524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc4b49a-ac12-4c55-9826-b62caf0cb862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6066ec9e-e0b6-48ca-9427-6f6b299912b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d34116a-dac9-480a-872c-110a4e4312b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abd5505-e823-4e03-89c5-18336ac57427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59ab249-71cd-49f9-89dd-86e9be7640cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef065fc-37a7-4d24-adb7-6c5f0d0ac778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e992609-fa4c-4358-b254-2390ab7229a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8bc1ec-dddf-4d76-a98f-a7e9ed04d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0e9578-89cc-4468-8a6d-94e3e631d5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08366204-418d-4b23-8bfb-c99d6a124525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20080d69-335b-497e-88e1-82ac3f167b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3397f4b-a56a-4905-a7a8-9ebdb69be36d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b176bd63-d2e7-4872-b0e6-1de93209c661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b5ae61-dad7-4e72-8262-8a393ab66d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e009ae-c4c6-4cab-ab88-c5671264e877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9656de90-ac23-4f61-8e9c-8e02376cfad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb3cccc-4e86-4567-9b59-445f330b403b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d025f8-bd39-4532-841a-7c276e3795cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffd48c1-8689-4bb7-a407-fffe60846c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46338ca1-9eb5-4383-a711-2c2b56022929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490213e8-ddac-42db-8000-8907650c23c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3f5e72-a3f0-493c-ba4a-e66470152735",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0a22ca-35f5-42fc-94db-90e2a55dffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003d050e-37e7-4238-a832-c8dc6b1350f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2506b-90a5-4083-855f-8f1788ee4a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7ca3df-5de4-4c37-9dad-136580b9c6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ed0b91-d553-4890-a976-99480c569b10",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2938b-4401-419b-ab69-6edb2a31170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a891559-9236-43e0-89db-3caac0fcc381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4231a127-05cd-44e6-9e7c-20d0c746c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c61384a-f273-4d14-9473-41f78cc893fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ab4219-e420-4e7f-aab3-5e063efb2a1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9531b9a9-8a8e-4fbb-befd-f16a3b9c32c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fc984e-7a99-4334-b700-dbd1192d5ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4e9e54-d29e-4cd0-ad3a-b67b86fb75b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9547f94e-5ae4-4e67-a2c3-6b287de72608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb3aeb-6d87-4192-8694-3814a28ee088",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33836ad-2706-4cbe-9fdb-62570a466baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5601cf1b-d20d-4588-938d-8d023edc851c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d77f2a-7a73-4d94-8e2b-5217152340d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd6bc21-39a3-452b-ae3e-b907835efbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0ce867-da71-423c-8271-1dc7f86aa7c5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b235f743-1145-4d52-9c03-cb7c278df631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b66bb6-32d9-4c69-822f-8463d7184738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d9eff6-64bd-4088-8b9a-5f251067a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "921a980b-418e-44bf-bfb6-45a704370144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf51dcf-3cdb-456f-8b1f-5fbaf08a74bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae801bdf-f426-49ce-9563-b0068cf8d93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9282f3f-e0bf-4334-abc2-b1f81743c8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610f9897-1ae3-4b35-a0b3-0458963bd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc9836c-23ee-404f-970b-d6622cfdc2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081bf53e-35c9-4d08-be7b-f94980f3baa3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6912d94-cfe2-4262-a206-b2c0165b13b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998d3b74-0516-466c-9e42-08c8d175a8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c474bc-8ad0-41e8-8e06-09c2eb352e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99191a17-5072-4e30-8319-9b68ca85b720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042fa0c-0f90-4db1-9309-39696e634d15",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef45a64-32a2-4b88-9769-ae8bb8829819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88470b1f-12e1-4a27-afda-f84d45ad4c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9ab257-3d86-41d6-b53a-42566680d3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae41d8-803a-46f5-a73e-288c9210165a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9758b0-b101-4a32-8487-6f9b0e723ab3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d69be6-7a5b-4cb7-8ae9-9582f77332a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dfef0b-d677-48e5-a660-243bd79baeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b531b076-3639-41e5-8f10-b5a00ba3ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908197dd-8050-40ec-a9b9-7f14545b5770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555b7724-ecd3-4c99-82bd-ec22539e1a4c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a41872-63a1-44dc-8e7e-8f5bcb43691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2a6dff-454a-428d-95dc-bc0f2f14093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b10bf71-9743-40a5-8d01-2ced93be3398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f36d594-0c01-4f93-b45b-65bc5d5c44aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d33371a-5cf4-4e18-b23f-a60f96059df1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba3f4a4-6e0a-47c8-b19c-cb0ac5d7a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9206b0-565f-4030-ae24-42873d34fc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b1c42a-4d11-4e3f-967c-852a845280fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0c572e-49ef-4835-bce7-596582e81b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757add0a-ddd5-4135-a5a3-f6518b22ace8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f665c3-7c2b-4067-8e94-f4120afdbaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeaa45c-0ccc-4ddb-95f7-dbe9eb8fed64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f5b988-de79-47bb-89e2-b715dfbb32bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74bd36d-aff7-45b0-a146-da85d30b0fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83c849c-8555-4a5b-a058-18ec9b6575a0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710ed209-b0d9-4293-85cd-8e5b14ca5753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7743977-ef10-49b6-ae57-6bc1d393bc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efb03c8-aaac-4ebd-86fc-81632dc52111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e4d935-2ffb-402f-b70e-df520555b4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623994fa-1701-4789-9f05-e52bbe9841f4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded93069-a0bb-486a-9765-6127e44697c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da70cc01-aa5a-41ef-9af0-b7894b7e8da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf42c7ae-8c3b-4043-a259-5e6c952a4a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5a3c60-e04b-4b57-8855-c1200be6b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5686b6c9-6559-47dc-9f1e-43ca72b52fcb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed285099-3fa2-4ebe-a44b-aeeb7450058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4ccf83-139f-4c65-a26c-d1b98a0b7e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855b6723-b8ce-4403-ab3f-5e099404ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a9fb72-bee2-47b2-8294-da729c5a1a68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7576c7b-51d0-44ee-8cf5-41e2980e3be2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95038c6d-8eb3-426b-a89d-31b6e2eef76f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef625bbe-258d-4e41-b9dc-1931552de8bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c6b053-a23f-4908-bffc-1ddd3a3cf624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240c57b2-1aa5-43d5-ba64-dc9bb6679a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc9a04ae-6cf3-4db6-8779-732261cf3930"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b4742e1-9e4b-4f45-b66d-341e0a123f19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7f4620c-0f53-4349-b47e-6455a1b3616a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20798bc7-60f6-4815-812a-04f971f6d034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f63418bc-5ba3-4af9-a6fc-1beb1dd80427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c36e521d-6de0-4c78-8e71-1058924e691e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f698457-9ac9-41f6-af2b-52f8743bb5c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c108d06d-eb03-4791-b397-8c12dc7feee9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a86bae3d-206a-4acd-ad36-caeb2f2d5aef"
            }
          }
        ]
      },
      {
        "id": "53b8f901-54f6-431d-97fb-434951b57048",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7ef4f98-6acb-4014-a0cc-1a3b900ac461",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6caf3af7-8159-46ef-b346-b5d4b635e0c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71b06ca8-f243-4277-acef-9a3d22ae46af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1718cd18-13a6-4acb-b6c7-ca958fc32f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9365f171-1ccc-4a38-b2a8-777b85c881c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2adeaa-f0bd-4d6a-8615-ece5c93d9daf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb920b6-716c-459b-92e7-790dfab76bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1096c84-3d0a-4bc0-a587-35e599d65b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b5a15-ed49-47d3-aa85-60d091d3db9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f40ec68-66ed-4a31-9b23-419329111d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f850a73e-ba11-4605-a9c3-afbe355bfb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302aee74-6d4f-4835-aeb4-fda65de78f1b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d11ada-6089-43a2-9575-474ebe5f9da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f89b3-ecfa-4b85-84f3-5ff48f813efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e994f-4738-453b-8cb9-6ae099d12268",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b3f300-42b6-4721-bb7a-a38797d1b50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c55e02f-108a-4107-a570-759c2231bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828499de-a022-4937-8869-77856c284f84",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d31aa-130c-401e-bf90-12fb0459ab06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7b6024-e63b-4ece-b0aa-5325e3092af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730c0cfe-7d77-42ac-9084-88a5b70f6665",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee076882-6feb-4e8b-a227-f26841d244af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbbf2a1-bbb6-499d-9297-5401a6287697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa5463-8d2b-4ae4-a396-79f0a067c205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a99839e-1265-436f-b91f-bbb590f212c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1ca8a8-f2fe-44f4-a5ea-7b73bbd946fe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0500b7-0374-4741-b7e7-97b48b51f1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619b13a0-2cb8-4bca-9a76-04abb4b82266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedeaad8-6ca1-4e67-a2e5-958fa29c3050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96e4ced-0a34-4748-b144-5cd3a4bd286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098eab23-adb2-464e-9685-d888d02801e3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd66b34-b556-4be3-8f04-e35a53f99009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecafbaa-92b8-47dd-a929-26abab6f3f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d998fda0-588f-48e9-87bb-069e6b632f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa05ef17-588a-440a-b880-e9313220e565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a90096-5ff1-4c92-af6b-10ff25d96808",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e75583-c8ba-4492-9550-cc17f5ee1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df709a39-aa29-4a08-997e-2461bbd3f1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f334765a-5021-444a-9a92-947c8d50f293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1a08ec-39d2-4dc7-9532-e94ab8719ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0be9f3-6b6a-4d09-a873-d49e6b058df9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db78a7c-b945-489b-a3df-10a59b251c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12894739-e008-4714-8d9a-b298f6ea852f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e8d161-e09c-4611-9598-5bdc5330413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8439f41-97a3-47cb-9a49-bf010be1c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcd83a1-3cdb-4e6e-9e2f-0c58cc99c314",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb2b075-4fb8-43d8-bd1c-f8f63f1e78da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ea7614-d69f-4b47-97a2-882e131b895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd1b9f-8f36-430a-bc8d-155d78404161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b3bffc-7c92-4a7c-b1d4-25cca4e34e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c700dfcb-1c22-49b4-8099-20eb8755361f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7dba36-8357-4238-9487-5c88a910c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e75fc1a-57df-470d-b191-04bf9c755e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cd1466-f17a-4550-9c13-af94f9dc4262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db373b6-2d91-4657-a009-de0cc47250c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77203e-616e-4997-95a5-583b410056ae",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50644c5-2bf6-44fa-afe0-10ea2b714cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ae1718-9d16-4a79-9382-59a1fb83c350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae4331-bb6f-4db0-bf67-3b197ad5f2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85c618b-3731-45d2-98a5-d5a822612f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca8d416-bf92-4adb-b433-7333b54ee1a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce0b97-10a0-463c-9c05-ca2657d45cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a847ff90-9d00-4fb2-8e0e-a4e86366f9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e581b31-a3bf-4875-86c1-e6beb8f91301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff03472c-21ea-43c0-a2f3-317daf8bdef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47ee5cb-22a3-407e-852d-2cd702dd3c21",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d94be64-6849-4a4c-b0c0-a6889cfc29e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7426628a-f53f-4dde-bd8e-332dac65e233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12144010-453e-4860-9322-2c52041c79fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ddcf87-e025-484b-815f-cec9c451b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b504363d-0f50-44b6-8bfc-826cf98b43f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a704c96a-d850-4eb4-bd19-58f088a0d6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfeefbf-a33f-4d81-b8ba-43d37de438b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f01f00-c6b8-4325-9b48-a90a07486358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a462e89-1616-42b4-a505-f6be3828d66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3be9d2f-cc9e-47c5-bb34-38c3b93d1769",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e52209-1ba8-429d-ad38-ba4b8fdbe118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4699b50f-58cd-47d5-b3be-5fd20f876201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c510bf-4d33-4855-a2ad-74a88c3ca22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7185a2c-a549-47c2-b733-3e7fad705d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ac8f0a-496f-41ec-a71c-ab2fb086bb0c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caec054-34f1-4711-a3a7-0c6dca470d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98a3258-d7e3-45ff-bdd1-6a4e19868a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f4aad-041e-4272-b2e8-a4d9d5e4663e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24faf5c5-bb59-4798-bea1-3a1967b24911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7333f9c4-93b5-4d95-bd98-fc3cfa1deb85",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d121290-e1e5-4616-ac3c-3811a1c3ab78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c455ab8-63c7-45aa-9676-125913194bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bce81a-a0ee-44b5-820a-c6f8c1a4142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c89d64-f39a-4f88-ad9f-a7c800b89a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b15087-6805-41a4-8bd1-40c451afdbe8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e119d4c6-ada1-403b-9beb-0764e9d46fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beca5225-35d0-4adc-83de-8d6b400f27bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9945bdde-2b73-4125-bf30-8d2cd14116c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1a09f2-56a2-4d76-a40f-238190e17406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc6ed7-61a1-433d-85be-fcd22b80dfee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4144fd36-ab36-4066-9489-fea2100b6a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb568f11-a1ae-407a-ac2c-bfffc88a5df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c76c10-ebb4-4383-9318-65b74962f7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53a76b0-e7bc-4800-8824-fafa678f4576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c241142-40b9-419d-b460-5094a0fbb100",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878e9ef9-94c6-461b-a751-7ec99752f5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3683ca4-16c6-4047-b130-3b7b2940b8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a951c4-820e-467a-b98c-7ad1e190bf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b45945-72d0-43d4-9f3a-eb273af98030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684cb6d-1a31-48c7-91c9-77693b8cf6ff",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a767f9-ee20-45ce-b691-12ba785a9421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f6b664-8115-48b4-90b4-cfe5fb24c398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc2c34e-1431-4101-b80b-a5b406e7caac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f7d1cd-2d1f-4388-a605-38f7d58bf2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d86f1-f424-40c1-be3a-380e3b4179b1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6700dd5-d33c-4999-bcd6-77ff3822ea92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9baea956-e581-4aba-8abb-0299bee716f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3fa014-ba15-42ce-9020-b83952abbb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb39cb0-8834-476f-9dfb-577da348ad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857970e-3fe3-4aea-9366-5423e80ac11d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b08641-ed1d-4550-a069-579a15e3002a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea78242-1ebb-4474-baa1-0686b1a8888e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3536a08f-b450-4601-8a8e-3803b65e23d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb4c06b-8550-4b2b-8a48-bc813e39d25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a615178-57a2-47f5-b83a-7c3721696bb9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80533c54-51b8-4996-b425-9f2ecb2e1751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc4a894-e27a-40c6-9007-ea565c6e7316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72af02e-d369-463f-b4ee-03e92d6a91b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c1cfe8-8f15-420a-9d05-4bb5c6a37849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0762a6-2900-4a9e-9fda-bb5d72536f5d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73accaf-4193-4a1c-8cce-c177c18e1817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f70506-bdc1-4226-b8cc-f67a249dba43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0988b682-27c7-4532-aa96-5ca94e6a8307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b9542c-4984-4960-9107-3062d4c18733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578d520-4602-4959-98af-2126e9f22337",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fe1463-c7dc-448e-b047-55aa63db5596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d255a7be-ea6f-4a3e-86a1-d1c27568839c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70583ab6-d59f-4d30-bff2-ed623fc4348d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0c416a-7574-4c8e-8344-9c513cd0b2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4653ee-2010-447c-a2e6-2a23b1090ab0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520f6aa2-e60b-4652-892f-5868e8a11a1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad86f65-54a0-4f88-8b13-ad1d012791a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef842d-42d0-41ef-b604-0a84605a0d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5332283d-745f-4ca7-b38d-7b7996404d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdfed18-f74e-4b08-9773-8007838d0c3a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75d40e3-f671-48d8-8a1e-4d95db2e39e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b4cc35-41d5-43cf-9ad5-17b654095865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9323a69e-a251-424a-850d-e47aab287375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05b86a6-455e-4871-86f3-a8f63b93fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47c3077-d580-4ec0-aeee-acbe8a8e2fcb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f777f1-5566-4f05-8252-a5bacc8376ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b54475-a4f8-4f3f-8fae-df1ce566b38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fec7e95-2c73-4755-b021-31ce122b7bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be0e580-8461-4aa3-8506-168e64b61f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f4c670-f4ca-44f7-beb8-f9faea796792",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406e39d-7bd2-46bf-9bcb-96aa43437705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68d613c-8182-43af-8dc3-c8ffeea960d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bcb1b3-2d87-424f-979b-6275238fa266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1450488-eea8-4206-b89f-f652638dfa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a565bf23-756c-456b-bfc8-5f72a0692c2c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87c9c45-41a1-40f4-a605-0eaeb7047f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5767344-ac55-4574-a2fb-4dd13435f094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83d5646-57e8-4604-8b7d-5ac4bf363e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38575d8-93fc-4df4-b9ea-562822af16e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf89f9f5-591a-412a-8be8-e7d7eafa2239",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf7276c-42ca-4737-ab6f-ea88b2f39c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ff0766-c512-4cd9-8bba-5dddb48ece45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede8c56a-e927-4017-bed2-237ecd8c976a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ba66f2-63f9-4ac2-9251-bf8ee750669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e09a83-548f-4974-a351-6060366e6b3e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf2e7e6-975d-4b7c-b862-08123039c076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbafc6f-e445-48b2-8066-413e5ca20f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a179a4-7434-4b2e-b21f-d801cc60fe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26260760-bc15-43ea-a216-3dcbecc70a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39431236-8041-4291-9527-058b24680689",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d624832-9696-4c0f-ba7c-fa980b758b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82a1109-1acd-47d4-86ca-f4b67eec8a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2c97a6-8dfd-42f6-a2d5-567d97ef355a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b103700a-4293-48d8-bf24-5d6668eac966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e967e4f-ab1e-47bd-9c53-d910e1de56e8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cdeea9-1c4b-4f2f-a461-502f772bcded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f692fe-09dc-47d4-bcfe-884a5348ff7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e7e63-a116-4bc1-afe1-1c7902ffdba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6108650-2206-4485-9bb1-c8caa32e5aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055b6d52-d5ae-4125-9f4e-9b20bffb16b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417b0a74-197a-4e87-b16d-343a5eb70b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b04152-7d51-4285-b8fa-9161d5a08f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab52d563-84ec-4c01-a2e6-31b0466e51d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c665ef8b-9d30-4694-af29-cdd56cf908ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a063d67-bf2e-4394-a48d-4bd046bb4426",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0161e5-9fff-41c3-a3dc-8be7fc94f939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c4438a-7127-440c-ac53-1de52e5f99fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e05d4d-3371-4206-b577-e820189d8d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e08877-e989-476e-904d-5f9d3b2add6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391a78b-6adf-4579-8b1e-71f0b9348911",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f42dcb-3da3-4121-adcd-77be12241e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93447012-59a6-42e8-9a22-65db206c48a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11807c6-63d9-4ae8-a4a8-4dec0028e8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203e3216-e65d-4dc6-aa50-5815ef8cd567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44c1f40-c25f-4889-8c8a-73dbb2eef14d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed84b01-5c02-49e0-8647-3a6b22ec8298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b9fdb7-8cd8-41ac-bd33-f5ac252e2616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af69cced-7ff5-4dad-9d7b-9572f5b16cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e156e6-113c-4fa1-a869-95b2f822ce0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe96ff7-de63-4f35-b529-c67f836c2547",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999ffd12-dffb-48d8-95e6-38237b5947cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58eeca9-0399-40bc-affb-6bea14410855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423b4e95-a3e3-4e39-8197-17a306d91f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20a1735-cc79-4cc0-a783-9b57e7a23c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98de8115-7fdc-48c0-94a6-34d011547f9e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aab90a-d18f-4ba9-86f7-249e756e56b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45685d34-286d-4056-8209-c86691971b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3437d7-a14b-498b-9516-950855b3fafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ff919a-9c4e-4d02-b876-ac003cf54f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd6bbc5-3b9c-4923-a1a4-ec0379c9af1c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc0a063-a1a4-4796-a5bb-84db1cef345c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c69ffd-33ed-4fdd-91ca-cd99b678db2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e86d935-144a-4185-864a-70a4a4b0c445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2405ffd-9b89-413d-9f63-22a16d03f5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60a6492-a256-4355-b1d0-cec14c2f1d11",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8557c1f0-0887-41fd-a21b-d4dc35ac155e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb50082e-cdd9-4e1b-a69f-f835dd26e297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540d1d9c-ab04-472a-a49a-049e368a9317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b9d974-13d0-4a0a-ae55-d06840586a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc0fed-689f-4209-9b81-4c1008b9dd7a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21152c84-8447-416e-a3da-f35604202d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff63def-f333-4c03-a8d2-7d2635727c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d691d2-61d1-4dd6-ab48-3791ad0981fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f9a42d-f7d0-4848-97ed-699bb6dacdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0007588b-b77a-402f-b316-2d3ae69d851a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8147a6b9-ac36-445c-adcd-94c629fe8089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a90a9fe-5b07-4e4b-8236-127eb9e86a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c77b2e-c687-4554-aa14-ce65680fd55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b174562-752d-499d-9672-47109a451921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f978bda-7aa1-4005-a894-deb3c5d7fc15",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302818e7-3872-4c8e-93b0-5b30da61c838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a2913a-2283-4dbc-b514-5986f18de648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2e3e9b-42d5-4feb-8ae0-68cda01ba34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bcc470-3a69-4141-af9c-f910e364a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed8ce3f-f7cf-47e2-9f22-bd4968eda420",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76dfce1-638e-4be7-b35c-3e08b5932da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe43298-6027-4307-974e-a97fe770547d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798ce0b1-2d4f-41ad-a9c8-c4faa2cf37ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c87073-a794-4bf2-b427-399511b33496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1a2499-cbb3-4606-9424-cbdee90ede12",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11b1b65-5837-4afe-9cc3-d9f8a95a0b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c1519c-3ffa-4c2a-8d43-2643c6c7f19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c75590-7ad9-4543-9682-94f9075fa86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4071ba-deff-4f59-8694-48ece23cbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b20e16b-6ee2-464c-87e1-19b26f7afaab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dae45e-5baf-446e-b2cc-14565dc27f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3069d2-5fd2-4e6c-8769-1a452d9ed47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c03c70-f6cb-4c51-adf9-e126f81548b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15aa6a28-44fd-4ab3-8c61-7570c2fc3f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6b4690-599a-4aa9-a231-a180c6eae016",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5bddd8-be30-478f-8572-f28ea65331c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94b022c-45ac-4481-9973-75b93edc3d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0f2f56-b2ee-4b71-9fbe-60032521d95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fe3ce2-1712-4164-8623-d1120e4b6a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bf532-0643-4364-8ba9-f08b830f79fb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c61f760-7fd3-4836-8683-01eb9364a5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9ab73b-b831-4057-89a9-5a4998811942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a1d897-fc45-4f69-a15f-d3e47956c3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbf8ba8-05b3-4ad1-b913-acfd78bf5e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38dc21d-16ec-4d78-931d-8c198564a477",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975e382e-29b6-48b8-939e-6a462a6f50ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0ee6fb-656d-4d73-9a05-2ea9720ebdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f942037e-73c8-4f7e-8fb7-8f23d2ed8787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb1039f-4611-4b4e-a232-8a6a2d44e795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474f9793-b329-43d5-b543-98373528cb69",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537ddc08-04cf-4ed7-a09b-a11dc740863f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca4bc17-a27f-4c93-a55a-76c2e019756b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d65446-36a7-4018-a30f-343ce990699e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762ab4a3-a68d-4128-be32-ae39e1b65e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a8e78-d2f3-4927-a894-df569d3766a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3228be35-aa52-4325-9e9f-9513ec997ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b4d179-0d52-40f8-8e09-0a108171dfaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22736d8c-3e2e-4e00-bbb2-27d2f1956fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b390ed-c025-4fce-9010-cdcd014c5788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c1ccf5-fb02-4859-802c-e61d0a84273a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c322488b-7e58-4572-b075-b7be37e38b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1973d0-0967-42dc-8651-16a22e025daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc80eac3-1cc9-4cb6-8635-d02eca8b1911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319e5153-d747-4d62-815f-4cca52fb598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9fcec0-b96a-45ed-902d-4511cefe33ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d4767-abfa-4858-8d5c-60bee5716b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09590c4-e242-4c26-8f64-f9750bd120e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d35a3d-2a2d-4851-80a3-2a1226d77efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ad71a2-0746-4d1f-b567-47b9cf014337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d416bd-2037-4538-9c11-4a9ca14baf95",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaa6762-a4f4-4fd1-883d-d6a8e31d8b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f601d4fb-bf07-44bc-ab97-09e08927a5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a08d871-0511-481e-bc5b-b343bfe14ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28eed608-867f-405d-b0dc-2441bcce1628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44b9bf9-95ad-48c0-9ad0-f94db74f7121",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62db40ba-8478-48af-a255-bc831159a721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056da91e-5e28-47f6-90d2-98bd55a52ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151eda06-9962-4c35-a6e8-4ecb65a67e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a34014-30dc-4ec1-9f2f-c756f34e2a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8e1085-f552-4496-b255-7248819850da",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a769abd-6736-4d18-923d-a187eae2388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c13943-7954-4be4-92ba-9c4e81c772ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442ebb57-3e56-4a64-bde0-6e4d349d3354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017d9247-00fe-40c9-8a15-21afdca8193a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a60a79-4fbc-4d0d-8fe4-aa47f3d2accd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8f4c7-0dd1-4a6e-93d2-9f498b4ef16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4628398e-56c5-44a4-837d-9dfae56c3ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35f905-e2cd-4911-81e4-c1df9193df0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30253a8c-4109-4da2-930e-7f6332e4e709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cedb66-1fc4-4552-a287-a7343ab109df",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b9b86b-9546-4dbb-b55f-45f9e332b02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65003214-090d-4de0-80c7-a4ef18bc2d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f37adc-2a65-43be-8081-c215c34d9e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3ae15a-8afd-4932-a692-f5f195da4638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec1f06a-1c2b-47b6-b525-c5d3e1169968",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d985d2c-a7bb-4bd4-be56-3a227fddfa8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a79134-6cc4-4629-89bc-729be53acc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ded6e6-9444-4187-8489-6aa94536e22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a317b70-994c-40aa-9b11-466f7f36a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f2ab3b-b9b6-4df9-b463-73932788e709",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bae874-4e44-4102-91d6-0800b5754105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36f6599-7726-42d3-90db-be547cce0d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f79dd6-9470-4f0c-9f85-5848accf5ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8bd577-3b75-417f-aa0c-ed7777d16103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d70b3e7-1150-4ede-b0a6-f38379d90b08",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a1e427-ac23-4543-bc03-2cd4a27d2535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0d6b10-54f1-43db-b728-377c6cf97219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1275acb7-a76c-4729-b840-042a4d57c8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7655a3-3d47-4541-9734-7a4e5ebf8f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c8029a-fb1b-4bd5-b994-dcf3daa6cd1e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0cf7ff-b29d-41d5-9f96-ce840112d087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e860647-747b-477f-a684-c1c5d2413506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb07a9d0-bb31-40f9-91da-d331186089f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e09b5c-d17e-4c8b-81ea-f0bb066bd8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de1a40-0257-4447-bc2f-e02209fa0d15",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2884b6-ada2-4c04-a5eb-406ce84df3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5640b7f3-2d0d-4c8e-8af7-98229ae554cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfb0643-ef04-4316-8521-faa0489a17f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f69dcb-47b6-422c-8446-d4a9b312ea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b929507b-5e6e-4587-ab0c-b56cbfee4565",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656cc06-9c0f-4f81-82b1-9b0086baf6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c6b474-d68b-4014-a053-e9470c378a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f61be-445b-41ea-b6cd-3ce491482267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e9e349-532c-4033-814a-590294056417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b327857-9a14-4439-8fda-5f9e890a4fa2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024f10d7-4aa9-4f33-9833-c029c0b0c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de2fdf6-a23f-4a15-b54b-f9101805d9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a53c70-27c4-4924-b1ca-7a1335102d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec861b9-86f1-4742-b0c5-5d743dc8ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9a3e33-19b4-455e-9049-1d0da71f9463",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8da6178-f894-4187-8646-2aa7942cee9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80221f9c-1109-4bb8-9357-78e20b941fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8e607-31ce-46ea-8456-a902796c1a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4101f98d-14b0-4f14-b37e-a31c3f158b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebcc36a-144e-4220-ba76-85b06a96644f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2794db-de2a-4fe6-85fd-b2d47a479189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26da788c-ab1e-4e3f-98ca-dbccd4a0da71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9a7208-9b5c-4f43-876e-72e75d2a429a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd70aa45-9be1-4d35-94c8-f76e2e4b1a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44911b06-9ff8-45db-8ce2-c9c1804f2159",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3574da-e439-4b11-83ae-27366d949101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e080f2-3bd8-4385-b818-63c95d25035d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a928ea13-ae18-404c-904a-78ac28c0c1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d32b8e-a5d2-40ef-b1d5-b521fd0dcb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eec5280-1157-4888-96cf-71f23e68eb9a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765f9622-964d-4c37-93a2-99be0fbb8a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05cffb8-34eb-4044-878e-68448adc3310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6eb528-affc-4c19-a693-9f489db8c0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c3a758-23f5-4e36-96fb-ffa3defd99ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb90bf3e-5005-49cb-96ee-49b874fb9e9e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc18d2e-441e-4b31-a7ff-16f70da48700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "912626ec-c37d-487e-8e34-01777272313e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251caab-87da-47fe-a1de-0f27d7d91e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50186de-610c-4174-985d-9b6a302aa0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ae062-968d-4c6c-ba9f-dc98cf0f1a2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07f7500-f67a-4584-9f1a-522a198c3e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b521c387-58cf-4db5-b0cf-ef5bdd15bfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34227dc-a87a-420d-b4d5-fdc83a1bf7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6449c3-972a-4462-ac70-3000f18b1792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c2275d-8600-4209-b13d-e07e29107fd0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cbf0b4-2b46-4e2d-8e44-c73580adbebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5619231f-ea5b-4187-8ca2-b232bcb204b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b434c0-678f-483e-b3b4-6d38ab5fd23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b21357-173a-4b58-bc6d-369b7bddb39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d8121-b609-473e-ae98-78150d7049cf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ba884c-9752-448f-8b4c-6eef04d04532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14519795-166a-49d5-a295-b2647d3439c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8558a577-3d7f-4913-a790-a05c9edd85d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d13e8d-950f-44fc-9e37-a3ce62091ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8bce06-a0cc-4fdc-8fcc-524fff027f35",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd262e21-da28-45e8-9744-3d0e148f5b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6770f4-75cc-4200-8cf6-39e9ebccdb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd24a2-9d7a-4159-a8e2-f61141719a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a193ce-3f9d-47fc-9fa8-a97e6a7d4b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142cbf4-8f38-4218-9b38-7eefda471636",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c7536f-26be-478d-ba04-09b063b5fd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5814f37f-ae15-42e7-a434-34b318c4894a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65deb0a9-54c9-44f4-b15c-70107983117e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c690e4c6-3d68-4d30-abae-c2aab6f57080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d710b7fd-1e8b-4a17-8769-e97e58c85498",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f3d1db-efc9-45fb-a92b-59d1bc3c459d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50a5d67-8bed-47c7-866f-24e527df4732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c59dafc-8ef2-495c-9c39-2e547937103d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cae4f4-7b40-4355-b9b9-7a326a0f24e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee387cc-d485-4517-815f-4ffaddc8db1d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61700f47-76c8-4c8d-97d9-b9ce1972df5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eecc95cf-b4b7-4e20-a419-4460e4309b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0796f363-879c-47cc-9893-82b74f24f8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f73045-bdbd-426e-9633-905b813af79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76479ff1-a017-4d61-aac7-b58172aa515d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dfc87e-4695-4635-add3-dddb985203a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9418f589-8dd4-4424-b0b8-255727089729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35d5744-9b93-4edf-b45c-32f85d82586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a34abb-755f-4c35-8275-a4150aca4463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e689fa73-74a1-4f5a-ae5d-36720a0435b6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976f8a12-dff8-46bf-b939-3a250b8ce7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47e027c-7393-4658-a6f5-7bf9fc287198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d2c400-2909-46de-96ed-3ea05a8b186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8dbbb6-8cac-4abd-8e32-47825357e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e14810d-ceff-4dea-ba0a-b5429fa614c0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b23fda9-1492-43dd-9364-f5c2e0ea1972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44640f34-f959-44d2-9e3c-6a5a1873bd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcc6600-87b7-4164-92c9-af0ea93b7ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb15b7e1-dfbd-41e8-8a7f-21027c6ee3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10e7096-4a89-446b-8ff1-ca165764f86e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eaa922-f0a0-4f30-a55d-49563f9f6d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfd31a6-6e74-428f-9fe4-6e99b8fcbbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5ef153-da03-4274-95ed-9acd966fefc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88122ab3-f07c-472e-b0f9-69c211769517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b6af09-3265-46ec-b224-4c362e5a072d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613e31be-e61e-45fc-8cd6-5dd02ffd5784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacf5911-e4ea-45c4-9a60-0f57fb2d806a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b545273-df4c-4016-a3ec-3c8b18104a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849d46d2-f8ba-4071-a9b8-81b4e3e0927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04557e00-9b45-48ff-a9aa-4629da742edd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce07ca32-dbf7-4c5b-828c-d332daaebd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebec8b4d-5b1c-4e4c-a8aa-b2687fbe068f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5831fc5d-c471-49de-9295-490bea4a9a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920daec7-228c-4302-a535-e4ae2f0a901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991fd67d-0ede-4ed3-9fd6-ad7b2ca0dc7a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547950ed-a160-415f-aa73-eacd14e9b332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99a796a-7cd7-47df-af89-1bd6bc1292a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d0f7f0-feb5-49f0-8114-9fc6bc4e7484",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb45d9-9b63-47ad-83c0-f3c9c5e521bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eba903-3012-4432-8323-f99521b3e1e4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9905a549-21c5-4c80-8ac1-a20a48ddfa73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc810c3-03b1-4316-a75d-aa4d84449abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeba20e-27e9-4c21-b4e7-d579ca1e57e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138991b9-6fc0-4da3-848e-9a246bbda74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f46cc2-1685-4316-b265-f0385e0d0e22",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9114fd6d-2e8b-484d-bf4b-9876dec56c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a53a5b-0d93-4df4-bdf2-2465ed370d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aeb578-7085-46da-b23e-87f7da47770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4f7e73-c92a-4ff5-ac69-7163aca8811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bbaefa-8d61-486a-8b0d-afe279d458a4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f251092-3f4e-4e84-b5c1-3d47679f62f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b40dfbc-0ff2-45d4-8076-a11eedd679aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7093f7-d905-4177-8c21-183e9f5d77bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92a047b-5a99-401a-b68f-c7d6f9591e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b25208-7e3c-4f38-ada7-90db7e20aaf3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3028937c-9aa2-44cb-9001-105014dabc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7cf419-d63e-40cc-b3aa-5f7d8a55d1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6f0e44-9604-47d1-b585-35f9c0650d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88fd88e-6d78-45cb-9f92-f8acf5978583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d740e255-332b-43ae-a0d3-015a5c37ae3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f5f3e0-dfd0-40d3-bc7d-42d4e789cb8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a5aa28-d6cb-4105-8d2e-8a067b40e608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc83db-2032-4d78-a854-a389aa5875f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f227ba5-8d15-4949-9744-4a2514ef107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de914e8a-2cdf-43f4-9db1-db88c68b22a7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673d7c00-db10-413d-b0a8-568a6feb87b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc958643-fae1-4868-9dcf-e6fb12ca04a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f4f355-c3a6-4135-8861-8dcf2e052566",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5561b2-4494-4cb7-a048-f5fdf949d9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce060a50-7bf7-47a6-9c63-2895949738b8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1281a6-088f-4f1a-a918-14eaf13761c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82327407-bd5c-43c7-bd4e-038e7cbb26af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d0258-1a00-4508-9803-407a1bc89ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a81795-9472-4c57-9add-ca7f7862189f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa409559-f246-413d-8fd0-7bb59251835b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8beabc32-522f-478a-86a0-ba4edd0d6547"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "467e844a-1df2-41b8-bce6-8df693392e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29b66230-dcc7-45b7-9676-7314c1e694cc"
                    }
                  }
                ]
              },
              {
                "id": "53f147f9-2f18-4c7e-80e1-dd041c6fa890",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c96e481-39a1-4559-ad7a-b259219354d9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a95b0a-98dc-4a52-804f-d0ec282f66f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c2c825a1-a2ea-49cf-aff7-784de1b043a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b3536-78db-4d81-9690-343e0779fa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c5aaaa8-fd5f-4855-bfb6-a1f2705e0aee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19304b6e-f3df-46bb-a0b4-2f8106d2a8d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3189217-7db2-4d46-90bb-3379543a287e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9cfc904-6ef9-4422-aa88-f48732e99e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c11306-80aa-4183-ac3f-9e7901946a4e"
                    }
                  }
                ]
              },
              {
                "id": "12be2b4c-4e70-4e29-a7a1-35eb11ad6d00",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "60fb10b8-1fb9-4343-a4cb-cb46463820ac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7111560c-eaf2-469e-a869-7d55b60989be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "31e7d8f9-a436-4c1e-96d5-36d3450aff19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6c0ec9-4837-4f04-b151-99f4c0345f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9199dd-59be-4db7-80a7-56db94698ccc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "896db64d-f505-4215-8837-f9bce9d59a86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25ff878a-57fa-4f47-b8ad-05e138c77c30",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "569b2a0a-ed8e-490e-9234-e012c3296243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cdb14a8d-c0a2-4dda-8516-941d3045b233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b49e0561-ccd6-4521-8561-985d13956512",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88f09234-fcfb-4f6f-8674-7fefbe6c3742"
                    }
                  }
                ]
              },
              {
                "id": "be889ecf-3e2a-4e62-b780-4a0d7de48bc3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92b0cf8f-957a-4a3a-8282-e77afcde932c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19e18328-e807-4e24-a88e-fef421668817"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4f16842-c6f9-4def-a148-a2214ea67933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c01e76f-7400-4365-b8d3-bb7c8009a421"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "558c8721-3f6b-4dd9-a465-31e2eabff405",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d9f84a26-2fb5-4194-a766-9a9b293ad695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77beeb35-2b0d-4fce-a113-b0bcf73db8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f658417-f0af-4861-b463-36a1dfc239b5"
            }
          }
        ]
      },
      {
        "id": "e26fea4d-c3cb-4e6b-9df8-73ccc36cc347",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e3ee3628-16e4-4623-aa5b-e34cec3dd22e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2da98b09-267f-462b-b06e-88ae8e2cd30e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c07baf37-8226-4689-9a73-0e93b8a325db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719aca85-07fb-43fe-ac48-c52a34c8740d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "87e2c498-79ea-4dad-8344-692fd711f4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e63c423-02dc-42c0-9d4d-f6c42b757ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "150c9d0f-026f-4ec3-8959-130ce08dc69c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81102a2d-ed2f-4360-ba8c-31e43dd73495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13bada28-1129-4546-ae94-d43795aa947d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35df977b-6fa2-4973-bd27-f3bdb3aedb4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27426dd3-59ce-4472-9e31-d7316abb7816"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59eb1bc3-f303-4c1a-9074-5542f042384f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "867c36fb-6605-4fe0-a4f4-2861b6f564a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4127a7c-3d0c-425c-b7a3-8d2a14661d76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "311c180c-f037-4120-9a2a-045783d4790e"
            }
          }
        ]
      },
      {
        "id": "c42485e6-36ba-4a72-95a0-5db4690db3b5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6ee490d5-d5bf-4eba-bf3e-f89d99c62648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "486f3236-ce02-4680-b898-dd94bb1d6bd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee321d9-f606-4d69-8cd5-160f6bf7ffdc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df1c15-4d12-4ea9-919a-7808a70f026a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c5e4772-c5c2-4ad3-a15f-1382fc4cfeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ef080-4c54-48da-afea-de8caf3bda5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5883a165-c74f-4a2b-9f99-51e3697e9efe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d0ad58-7c5f-4225-b8d6-3d841bc88392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b83333ed-9431-4d78-8098-1d17e0d0d339"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f48312a7-2c26-447a-84d7-aeb2e502de69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72a22c22-c37e-4fa4-8145-ebe46f0dec3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3b7b7ea-f33c-41cd-ac6c-76ce03bfbdca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4e9727a-dfc0-41d3-9a90-bfd2e652b1a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a44bd9af-d367-465c-a5fa-319f50d6d146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61b839c0-efcd-4a35-a404-5f558f612126"
            }
          }
        ]
      },
      {
        "id": "2d026f43-77b6-42dd-b860-b9a5f92e7c37",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4218fe2c-6808-47fa-bf1b-af20ebe853d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "199b9121-5c70-45f9-840e-8866f7bb20b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f627367-e1eb-4634-8421-b9f7352cc9d3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca58ac4-50fe-42f7-8afa-c057251363c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f74fee42-b83d-4756-9946-c5f891bc4e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77a916-af17-4210-855e-213460fa3f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc4e5569-a951-4907-8401-43e29df6d691"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1133e5f-52de-41e8-9653-ac758684ac68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a376bd1a-02b7-49c2-92d4-4abd38613893"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc69138-4213-4ad7-80e7-486828380751",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f41c34-854f-4141-97f3-2a0fd05ffee6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ba17b99-3ce5-4967-909f-daf2c33cce3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbd0bc36-79cf-4044-9153-0efb4b7e84a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "048c8ca5-b50f-4c6e-b35d-a8741827d5d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5915814-5f99-4fbb-9561-ab8bd3bbd635"
            }
          }
        ]
      },
      {
        "id": "2e95d306-195e-481a-8e47-82a256407ca3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dce84eb3-8ad8-4ab2-9085-9c2b3b76b244",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bbf9aea-7223-413f-a410-b7932b959e89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "50124b27-e1ab-4b5a-8bab-36847bbed77f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a35fd835-6f85-4f26-a2f0-13f37cf6ffbf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e85e8f5c-8999-479f-b07a-d7704fe4cd0a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.92063492063494,
      "responseMin": 10,
      "responseMax": 10173,
      "responseSd": 728.3595081182524,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727052353370,
      "completed": 1727052393865
    },
    "executions": [
      {
        "id": "74e791be-0658-4565-8f85-745e25897e91",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7d12c95-b1be-4024-a321-a56edbfc3237",
          "httpRequestId": "44a834da-cede-448d-905c-0653701ebac8"
        },
        "item": {
          "id": "74e791be-0658-4565-8f85-745e25897e91",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "01896f99-1ebb-4dfb-b64d-2fc4afe5ab1c",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 0
        }
      },
      {
        "id": "647c2043-04a9-457e-b19a-8f7284015486",
        "cursor": {
          "ref": "4d9e01d8-855b-4614-afae-bf52f8e8ee87",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "df503762-2dc4-4e77-9fb0-aedc13768c10"
        },
        "item": {
          "id": "647c2043-04a9-457e-b19a-8f7284015486",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "38acfd50-5c97-40c8-8f90-9992ca17df2b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d46b2606-45d3-42a1-b207-144e2dee9ad8",
        "cursor": {
          "ref": "28444f15-baba-400a-b42f-ab8016eb6f89",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f73fa20e-e255-4732-98b4-2b517e83709b"
        },
        "item": {
          "id": "d46b2606-45d3-42a1-b207-144e2dee9ad8",
          "name": "did_json"
        },
        "response": {
          "id": "b5a8a3ac-6590-4bf1-8f7d-f91ca9e7a2be",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a7d3f-7b43-4159-b894-aa842fd3ae62",
        "cursor": {
          "ref": "0dce50d9-8ce5-4f63-ae8f-4539258b7bc6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fcc8a0f-1d72-46b8-8528-ece5aa176fcb"
        },
        "item": {
          "id": "426a7d3f-7b43-4159-b894-aa842fd3ae62",
          "name": "did:invalid"
        },
        "response": {
          "id": "711e3f36-59d0-4deb-bb2f-cc5422039c6f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 534,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a7d3f-7b43-4159-b894-aa842fd3ae62",
        "cursor": {
          "ref": "0dce50d9-8ce5-4f63-ae8f-4539258b7bc6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fcc8a0f-1d72-46b8-8528-ece5aa176fcb"
        },
        "item": {
          "id": "426a7d3f-7b43-4159-b894-aa842fd3ae62",
          "name": "did:invalid"
        },
        "response": {
          "id": "711e3f36-59d0-4deb-bb2f-cc5422039c6f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 534,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36847b67-1fda-4efd-9df1-70af05bf2dca",
        "cursor": {
          "ref": "116507df-0c61-48c7-bf0f-55eb0835cdf1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "877dca60-6408-43cd-9020-dc199cff738c"
        },
        "item": {
          "id": "36847b67-1fda-4efd-9df1-70af05bf2dca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7225486e-662d-4c37-ae46-fc3250ceb538",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c554ecd-2a1b-4aa0-8ee3-2cab8ff166d9",
        "cursor": {
          "ref": "35b60075-05f0-435c-830c-a0cfb51e7e38",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d92307a1-74fb-4a4e-97bf-6c7bd1720d36"
        },
        "item": {
          "id": "7c554ecd-2a1b-4aa0-8ee3-2cab8ff166d9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f467b11-264e-434a-890d-11fa6570c7e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5f4c45-40eb-49c3-8061-a1a1462956c0",
        "cursor": {
          "ref": "f8dd4b21-696a-4a71-88e4-e5af413f9a84",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "171ccd83-6dce-4aab-93a4-9222083d50fe"
        },
        "item": {
          "id": "af5f4c45-40eb-49c3-8061-a1a1462956c0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5bd08958-7ea3-4124-b4f8-5669abda4141",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c397a-a86e-45de-9dae-37d110944894",
        "cursor": {
          "ref": "d0b954a1-47aa-486c-bbdb-eb1acb7703ba",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d7a1b7b4-44d1-4b42-ad50-9df4efc67e27"
        },
        "item": {
          "id": "3e2c397a-a86e-45de-9dae-37d110944894",
          "name": "identifiers"
        },
        "response": {
          "id": "2d9a0dce-7b08-4079-a9bd-4058ee6b6921",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f0194-695c-44c3-8cab-015bcb973f20",
        "cursor": {
          "ref": "1aa79163-82f7-4ef9-85ec-a4724ff7b53d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "384d042a-066e-44ad-ae50-0c6b68228895"
        },
        "item": {
          "id": "f41f0194-695c-44c3-8cab-015bcb973f20",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0cfb818f-b234-409a-961c-1a9c64a6afda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d989df36-1ef2-415a-975a-ac6014740009",
        "cursor": {
          "ref": "bbbc32a0-f33a-4ed8-bba4-1e5da5d0c4db",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "038c6163-a32f-483d-95a1-891f479b049b"
        },
        "item": {
          "id": "d989df36-1ef2-415a-975a-ac6014740009",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ac36fea2-35f2-49f9-b71f-70ee7a22a25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a042a578-8570-489c-bd88-73e540b55d92",
        "cursor": {
          "ref": "bfd54b9f-f278-43b9-b33b-ccce018ea701",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c701b39e-5525-4ac2-8ad9-14ca44879f57"
        },
        "item": {
          "id": "a042a578-8570-489c-bd88-73e540b55d92",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cfcf1f43-e429-4d90-99a8-0fd619a59c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1905314d-0819-417d-b490-e7db10fe1e6f",
        "cursor": {
          "ref": "6142e4b3-ac4c-4acf-9dda-405e6d309472",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2aebde85-ebd0-448f-a6dc-71bb7066772e"
        },
        "item": {
          "id": "1905314d-0819-417d-b490-e7db10fe1e6f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d8b07851-b707-4f3a-bf78-b34883033b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54f4d64-8ede-4432-92ad-38bfda716f02",
        "cursor": {
          "ref": "c3ee0836-d24b-4cd7-afbe-afed67c0800f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5316aed5-b359-4089-ba95-40d5f1a36baf"
        },
        "item": {
          "id": "d54f4d64-8ede-4432-92ad-38bfda716f02",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "af8be145-4ecb-42bf-b78a-7ab7110510dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47c5d15-6c04-4542-9145-ca3bf3f34e4f",
        "cursor": {
          "ref": "991f204b-b7b3-47df-b98a-dfb62324c430",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f8c0a14-2ea9-4e36-800f-cc7f29fb9c7b"
        },
        "item": {
          "id": "a47c5d15-6c04-4542-9145-ca3bf3f34e4f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d953daf0-996e-4891-af9f-ccf9f765bfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc96eca6-6872-4ca1-a9f7-702f4b1f87f8",
        "cursor": {
          "ref": "29a14ad3-c965-4aca-9694-10fbeb9d41ea",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "23bdb7ae-a350-4716-9280-b2e2c911e1b2"
        },
        "item": {
          "id": "bc96eca6-6872-4ca1-a9f7-702f4b1f87f8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "606185c7-52d4-4525-94e9-ae48d5d250b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c060b7-0e88-4ddf-b519-fe307a137feb",
        "cursor": {
          "ref": "58afad22-c95c-4ab8-ba30-88bb048a214b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "71697291-ac94-4139-a606-b0bf7001395c"
        },
        "item": {
          "id": "a6c060b7-0e88-4ddf-b519-fe307a137feb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6bda4772-96f5-449d-9e9e-3f05a5ce5fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a187e0-eba9-4ea6-8927-232ace085bf8",
        "cursor": {
          "ref": "fbfee414-cd56-4c05-a8c6-0b6b0fc35053",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31863d47-4ebb-424d-8185-3591ccdeabdd"
        },
        "item": {
          "id": "62a187e0-eba9-4ea6-8927-232ace085bf8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a8d0b421-6107-4255-8ab9-a53106a8415a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d7da2b-fed9-4c16-b122-5fe26cc3e8f6",
        "cursor": {
          "ref": "6a9baca3-d08e-4c54-af03-305821e7594d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45a75804-11c2-4500-92a7-0ebf815dcc03"
        },
        "item": {
          "id": "37d7da2b-fed9-4c16-b122-5fe26cc3e8f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6d286f9b-ddd4-4d10-aa80-1d2c9ab65f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0666bdc-e65b-4b89-a77c-e56f629c97a6",
        "cursor": {
          "ref": "2a7a026a-5670-4d61-b847-8d05f304db8c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0c8b8d78-8913-46a4-a5e3-6b86f674cb26"
        },
        "item": {
          "id": "a0666bdc-e65b-4b89-a77c-e56f629c97a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ea80575-f62a-40ec-a232-1bc8ae68fa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cad2aeb-28dd-4081-8190-c031f3fddd3c",
        "cursor": {
          "ref": "50d633ee-4090-425f-bc63-f014aa24a61d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80506c4b-f658-462f-ba96-661a5ddaace8"
        },
        "item": {
          "id": "9cad2aeb-28dd-4081-8190-c031f3fddd3c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a4453220-7c1a-4a3b-8427-6c8b6c10268e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ca114-a6f9-4be4-b850-86be939f9037",
        "cursor": {
          "ref": "7b536829-625d-4365-add9-de046d3d2030",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e1adf5de-8196-433c-8631-ee2b80be4da4"
        },
        "item": {
          "id": "735ca114-a6f9-4be4-b850-86be939f9037",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8953775d-2019-48bb-8566-9a22030dd717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e4e744-5f73-482e-90ac-f929cebb9b0a",
        "cursor": {
          "ref": "bc219f75-1a6a-4c7a-bda0-7ec75100b122",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "751b0f35-1644-448c-a3dd-f00177b20369"
        },
        "item": {
          "id": "45e4e744-5f73-482e-90ac-f929cebb9b0a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "44c87083-e0bc-4a33-88dc-70be4cc93178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6fcc2e-aa64-4afb-8c41-d0c980176f12",
        "cursor": {
          "ref": "9b3a048d-f0fe-4dca-8a08-1c53f4b9c355",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1c440a7d-09db-483f-a8d0-823af4bbff3f"
        },
        "item": {
          "id": "bb6fcc2e-aa64-4afb-8c41-d0c980176f12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "476735ca-53b5-4c3c-bbd6-6e1fcd0e2be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef539d16-0ae9-45e5-8b34-8a5bf89af5bb",
        "cursor": {
          "ref": "114ed6a4-64a9-4c8e-a125-e5eaeb68f726",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0e394e3b-20eb-468a-ae4d-bf1db7afc434"
        },
        "item": {
          "id": "ef539d16-0ae9-45e5-8b34-8a5bf89af5bb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "724d4f2d-6029-47c2-96d6-e0276ac5a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a116b4b7-71f9-46dc-9188-ae4b2d1370a2",
        "cursor": {
          "ref": "73bc6e48-6611-4ef8-89d6-782f3fdfaa7e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cd72c68b-2fb4-4ed5-a2d8-463deab03f19"
        },
        "item": {
          "id": "a116b4b7-71f9-46dc-9188-ae4b2d1370a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "34bcb133-dedc-4bab-9898-a7c7cc38992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86d93a5-d5ef-41af-8447-a9b182454f15",
        "cursor": {
          "ref": "c1e422f2-d65a-48d7-9563-e8e6d38c0aca",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e88f323b-f0ff-4398-9366-1a583d955f93"
        },
        "item": {
          "id": "c86d93a5-d5ef-41af-8447-a9b182454f15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cf204eb9-e12a-4710-a85f-9594e72fa1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bc9e8a-0274-4d55-9232-9a2733d064c8",
        "cursor": {
          "ref": "7b9b6747-d0aa-47f6-a82f-4456fe2d723e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "44cf6567-9af6-4a06-90cf-168a87e1e386"
        },
        "item": {
          "id": "05bc9e8a-0274-4d55-9232-9a2733d064c8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cf8350e4-32f4-46ab-a905-f755b916943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f127406-382a-4b22-bbca-aa3ab0890a6a",
        "cursor": {
          "ref": "3b46c928-276f-41ed-b128-352fbd2e7268",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9ccd1c58-1488-49a1-81a2-52711813224f"
        },
        "item": {
          "id": "8f127406-382a-4b22-bbca-aa3ab0890a6a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5e5be010-7473-4a2c-ba38-87dd7add43db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c506e685-d7c1-42dc-ae47-aad28dc9d996",
        "cursor": {
          "ref": "4da7b928-21d5-479f-afed-2f36c4117580",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7a7f1f4f-6a3c-4472-90e3-095e1eeff3de"
        },
        "item": {
          "id": "c506e685-d7c1-42dc-ae47-aad28dc9d996",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ba5bbced-012e-47e7-b4b9-5f36054a9cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b99da0-ca59-4c62-936f-2fd198af9723",
        "cursor": {
          "ref": "f1e88775-eb3a-4b17-b258-73e917765306",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bbf84262-ff68-408f-baa4-90c681ccae40"
        },
        "item": {
          "id": "64b99da0-ca59-4c62-936f-2fd198af9723",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8be2a45e-f8e7-4304-8cd2-ff742b1f234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da063683-6535-4960-b6ec-5ff9b8d7cc55",
        "cursor": {
          "ref": "5efeb482-2edc-4fc8-8408-ecd0e31940c7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e668fec0-cfff-41a6-a6e1-7c1561b7dd94"
        },
        "item": {
          "id": "da063683-6535-4960-b6ec-5ff9b8d7cc55",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dc9df69c-1c08-4b9a-87b8-e231655ea91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d46d5a-6cfc-417d-a8c1-72fa4c4a3a80",
        "cursor": {
          "ref": "495447fd-b1a0-4e62-bf6b-00c54731775c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b4f6a7ad-469e-4e28-9371-630d80c8a97e"
        },
        "item": {
          "id": "49d46d5a-6cfc-417d-a8c1-72fa4c4a3a80",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e899a237-aa1c-4012-8a54-236a9f7502f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5569d2cc-6754-405b-a438-63d75f546ed7",
        "cursor": {
          "ref": "f3c2e181-c73e-4dd4-8d8a-ed810fb40344",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "37200753-9b11-48ad-81ad-a06a3a830296"
        },
        "item": {
          "id": "5569d2cc-6754-405b-a438-63d75f546ed7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14e1728b-644c-4424-adcb-d0b6b4cf6b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80f2948-8f48-4d93-885a-a97bf25a7c97",
        "cursor": {
          "ref": "f8e0d214-59c4-405f-80b4-2e99e9e63931",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "994c381a-8187-45f5-a302-f6c8e405f93a"
        },
        "item": {
          "id": "c80f2948-8f48-4d93-885a-a97bf25a7c97",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "80d858cb-385e-4e41-a7d8-0337483c9a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5b6196-47c8-4639-aa8c-0263a44caefb",
        "cursor": {
          "ref": "93aff7e9-f6e6-40c4-9a45-3f9542da7b3e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5dcef5e3-524e-4749-8d4e-7ba2db78ba14"
        },
        "item": {
          "id": "fb5b6196-47c8-4639-aa8c-0263a44caefb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "00cf078c-dd87-479f-b419-501712ab898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206174f1-db74-4f88-b1ac-0cb1b02e46e9",
        "cursor": {
          "ref": "f08b0680-04c7-4430-9b2c-0e5b9e78fdd2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "98a2bc2f-5d3c-4ef7-9665-64c833dc1b22"
        },
        "item": {
          "id": "206174f1-db74-4f88-b1ac-0cb1b02e46e9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3110a0e3-4e22-409f-b73b-0ca1f0cf5a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfa8a24-50f3-4d50-9590-952535d9c000",
        "cursor": {
          "ref": "7f1dcd74-ec21-4afe-9335-cdab6c50b219",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bad33f6f-fd86-4084-b997-eb1fdb6725d0"
        },
        "item": {
          "id": "ccfa8a24-50f3-4d50-9590-952535d9c000",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a15e69b0-5f2b-40eb-976b-a74964a13f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bb0b27-dd39-4263-84bb-443e91864a76",
        "cursor": {
          "ref": "c2f80520-6423-4a39-8f6a-89bb34200207",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1292d85a-d135-4878-986e-ffee8d493e22"
        },
        "item": {
          "id": "96bb0b27-dd39-4263-84bb-443e91864a76",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "52bfb4c3-798a-4bd1-ae78-40578401a035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acddfdc7-55d9-4e22-8cd8-d8ed19b90513",
        "cursor": {
          "ref": "4dfabcb6-4e70-47dc-a16c-19026e7f5364",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d0c7808b-59c4-45c3-ab45-36810e5d2ed7"
        },
        "item": {
          "id": "acddfdc7-55d9-4e22-8cd8-d8ed19b90513",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e6fb58ea-d43f-40a2-a974-94fb2d2eb407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91a421-5447-4069-8242-6b8abc823163",
        "cursor": {
          "ref": "f8aa4fcd-5fba-4b10-8d77-06a47a9fde4f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3359aceb-8a95-43ce-a274-53ca8ddc7cef"
        },
        "item": {
          "id": "9c91a421-5447-4069-8242-6b8abc823163",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc291849-1f13-4284-a052-f00531c1a0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9026832-2d0c-4dd8-947e-8a1f4277b0e5",
        "cursor": {
          "ref": "499c9184-4d6a-4b1e-85c4-ea72652d3be7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ea1e005-0a6a-4dba-b403-264ed4f53d4d"
        },
        "item": {
          "id": "f9026832-2d0c-4dd8-947e-8a1f4277b0e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "804aaaab-d7da-4371-a608-bdf76feb9ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7312907-1d5d-40ee-a1b0-2e5f30fbee3e",
        "cursor": {
          "ref": "9f00c9af-f7ae-4f8c-89b7-5fad43621dfd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f494fbf5-2d2d-462c-9b87-9c6dfee14134"
        },
        "item": {
          "id": "a7312907-1d5d-40ee-a1b0-2e5f30fbee3e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b697081e-7791-43c6-ab8d-df1d5f2302e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36296fe9-410d-42f7-ae9f-f1056241ee9b",
        "cursor": {
          "ref": "3e3c590f-9d66-43fe-a7c8-1ace4572a053",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e37e5664-f003-4c0e-81a0-13c10970c69d"
        },
        "item": {
          "id": "36296fe9-410d-42f7-ae9f-f1056241ee9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a162eb01-984a-4118-8192-cd2bf7528d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86159d0-a6b1-4990-aa40-db5efa06ee5f",
        "cursor": {
          "ref": "e091fe0d-85b7-4775-a4ae-795219007572",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aaa81b57-d8ee-4d6b-b7c7-5e83c584b0d8"
        },
        "item": {
          "id": "b86159d0-a6b1-4990-aa40-db5efa06ee5f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79f42008-1da4-41d0-8b97-44d97cedbe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b2156c-41e5-4717-870f-5e78f42765c2",
        "cursor": {
          "ref": "240a2b56-992a-4092-b34d-9fcb1093baf2",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8f410249-37a0-429a-a04f-d9226ad1a1a9"
        },
        "item": {
          "id": "f7b2156c-41e5-4717-870f-5e78f42765c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2b0b69d1-36bd-4730-b364-19cc8da553f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b074b302-4f31-4cec-91c6-795a6a1ac241",
        "cursor": {
          "ref": "6452200d-fb68-45bc-ac5a-a3199cf8bc15",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "369552a4-4b5a-4043-a5d1-31ebfd94d793"
        },
        "item": {
          "id": "b074b302-4f31-4cec-91c6-795a6a1ac241",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "42cac90c-cc95-45f2-80e0-f4e80256eba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f896f093-c838-44b0-a1b9-07b9b60cb34b",
        "cursor": {
          "ref": "1033a989-daa8-457c-8b17-170afda346ca",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "675b1e8a-87a5-49b7-8322-1f9ba623a297"
        },
        "item": {
          "id": "f896f093-c838-44b0-a1b9-07b9b60cb34b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "403a93be-abed-4f37-b39e-b044c9e0a697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb5b063-5fed-4fe0-893c-23a50c71bb8a",
        "cursor": {
          "ref": "880b7d04-9529-46f6-a3d4-7e2c85dd33c1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3cf2eeb-ed11-46cb-84cb-ea03c6e4b8cf"
        },
        "item": {
          "id": "0bb5b063-5fed-4fe0-893c-23a50c71bb8a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9daf3bcf-3bd3-4cd0-b775-4b9cbad388fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1b51b5-7ee5-4cec-b80f-1da4c23f1a83",
        "cursor": {
          "ref": "7ef5e3db-2372-4c8e-891c-1d2aa98b5d5b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6247b7c8-9813-49b9-b50b-ba3c89dfac26"
        },
        "item": {
          "id": "2c1b51b5-7ee5-4cec-b80f-1da4c23f1a83",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f2b1fd5-66dd-4a51-9b65-03f16c2240f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3a3420-fb3f-4a06-98d4-441286a28a6f",
        "cursor": {
          "ref": "c5697b1a-90c5-4a40-bfce-db5f87209f6f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ea883e2-9847-4d6b-a85f-bb23aaac9b52"
        },
        "item": {
          "id": "4f3a3420-fb3f-4a06-98d4-441286a28a6f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa5db5d9-bdc2-4ab9-852c-d251f70d1038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce21ee90-82b5-4827-9ae9-cecbea86157d",
        "cursor": {
          "ref": "52d6e90b-7995-471d-98e3-87c4822ae778",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c5f95bd0-ff94-41da-a28b-b6a325a41d5a"
        },
        "item": {
          "id": "ce21ee90-82b5-4827-9ae9-cecbea86157d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "35908c94-cc01-4f43-8b4d-bcf2947d6147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49494818-0d59-49ec-a7f5-9bda23c57181",
        "cursor": {
          "ref": "a2d2a152-34b2-4308-a9c3-99364fffa781",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "798f10b8-31dd-4c0e-a899-e1fc5c41a646"
        },
        "item": {
          "id": "49494818-0d59-49ec-a7f5-9bda23c57181",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f75b9746-1414-4f23-a761-9ba18933d0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e63d6-f8f2-4977-b437-ce5e19274ca3",
        "cursor": {
          "ref": "94e32cb6-2a3d-4da2-babd-f94509361a47",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "78045f72-fd96-46be-a9c0-a5c3622c544d"
        },
        "item": {
          "id": "c19e63d6-f8f2-4977-b437-ce5e19274ca3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1057e4b-a4cd-44c2-905e-a5cfd829c8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3110012f-1f5c-4c81-92cd-7bd4a0e35f60",
        "cursor": {
          "ref": "01519f5d-072a-4260-91c6-d3b0cc043e25",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "745ca9a0-193e-4f36-a6a6-f33dc6529090"
        },
        "item": {
          "id": "3110012f-1f5c-4c81-92cd-7bd4a0e35f60",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e716f53f-8d86-4646-a40f-41291c2f0a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dc588b-6ef6-4460-962a-11bafb54a306",
        "cursor": {
          "ref": "5e85e728-f519-473a-8bb4-62b1b971c144",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "065bd841-a1da-494d-9bc2-f6a1851cac61"
        },
        "item": {
          "id": "92dc588b-6ef6-4460-962a-11bafb54a306",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "da5c7e61-0cd0-40f2-995c-c1d85fac60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb38cf-adfa-4b0c-a430-b9304e300b67",
        "cursor": {
          "ref": "efacc7c6-b62c-4a55-8301-847fd2ea9cef",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ba9fa693-4abd-4af0-afcc-2f77f497f388"
        },
        "item": {
          "id": "c2bb38cf-adfa-4b0c-a430-b9304e300b67",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "697ea70d-ae5d-4f0d-9ce9-2c266a180320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28f20b6-dc13-47ad-9de0-07b2670905ca",
        "cursor": {
          "ref": "eee8ec3b-923e-4806-a33c-b321d3ad66d5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "10f7947f-9edd-429f-a93f-5c61e3446275"
        },
        "item": {
          "id": "e28f20b6-dc13-47ad-9de0-07b2670905ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "de138c2e-6427-4c7e-9131-b800e4679554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdf360d-7162-4950-a326-7d5c9466378c",
        "cursor": {
          "ref": "ebfdd38e-c371-4df4-be7c-6acd317d8ac1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d7086af4-adae-4b19-a611-5a88f0c3ee50"
        },
        "item": {
          "id": "5fdf360d-7162-4950-a326-7d5c9466378c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3eaa9f94-8f04-4c53-a641-3a988a61a57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0e305c-f501-4faa-8062-5ad4a013cc01",
        "cursor": {
          "ref": "b9b211f2-7335-4265-a2c3-caffcfbd9914",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3cdccc8-10b5-4d23-b12b-0655cfdb06af"
        },
        "item": {
          "id": "8d0e305c-f501-4faa-8062-5ad4a013cc01",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2bab4b33-2d52-4bfa-9e2a-601f5939f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b662fcc6-3819-454a-bd76-a74fefd3455c",
        "cursor": {
          "ref": "4121442c-7c37-419c-b907-1e913f4a3486",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "783772c8-a8a3-4d4d-b2fa-e3c880c53393"
        },
        "item": {
          "id": "b662fcc6-3819-454a-bd76-a74fefd3455c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d77a49fb-a093-4a0b-a40f-219a82e3be85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbc46dc-15d9-4114-a5a5-fcb5c74dd5c2",
        "cursor": {
          "ref": "a54e1e66-5043-461f-ae0a-1edc707fad4e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a2e1da10-d6ea-4616-beb8-b08e87977626"
        },
        "item": {
          "id": "dcbc46dc-15d9-4114-a5a5-fcb5c74dd5c2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a8c55420-cdfc-4317-b984-52f89109563f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49edc4f-8bf5-44ac-afe4-a925b3f9cf6d",
        "cursor": {
          "ref": "3065d3ed-707c-4d16-add8-7c42731bb0d2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7ce3896f-f494-4698-918b-223b40b785c8"
        },
        "item": {
          "id": "a49edc4f-8bf5-44ac-afe4-a925b3f9cf6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ced4fb9-b50d-43f7-9ab2-dc7398cb1d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d97742-0e1e-4b1a-86e9-336de3315bee",
        "cursor": {
          "ref": "464294c5-d6b7-4ffc-9137-ba5b7e0dc783",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b0570c15-a61b-4068-807d-9e190eb14edc"
        },
        "item": {
          "id": "a5d97742-0e1e-4b1a-86e9-336de3315bee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cfa8d718-682f-457e-8def-03d3af203620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689312d1-5a40-42f6-bf1b-6010377a9b98",
        "cursor": {
          "ref": "da1ec943-e32b-42a7-96d0-7e2873afce89",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "144619af-7dc6-46fb-87af-148e56c2a07f"
        },
        "item": {
          "id": "689312d1-5a40-42f6-bf1b-6010377a9b98",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f68e0612-9b0c-4df6-ba7a-5b9f67800c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de002aa-4174-48da-bc3c-bd013f331da5",
        "cursor": {
          "ref": "bacf6d9e-05b9-4efe-ab03-c277fa440e9d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "23d6ac59-cbae-490e-9b18-edf9d5abea9a"
        },
        "item": {
          "id": "8de002aa-4174-48da-bc3c-bd013f331da5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72901524-e433-4790-9610-623a8a02be57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef78233-4c39-48ac-bdfa-3e4ddf42ae26",
        "cursor": {
          "ref": "5dc106ea-8e83-4b30-b878-fedd12cb19c6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d352212-70cd-4c19-bb9f-e59abba43e5c"
        },
        "item": {
          "id": "9ef78233-4c39-48ac-bdfa-3e4ddf42ae26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec5533f5-88a8-4385-88c8-4371675846e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba9bfe1-94b0-4b7a-a378-b7d4cb753775",
        "cursor": {
          "ref": "c35f5b31-802d-4c1c-9589-10c61d1f1597",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0c1826e3-eed0-447f-8a06-01fa474c4a20"
        },
        "item": {
          "id": "8ba9bfe1-94b0-4b7a-a378-b7d4cb753775",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fae665ec-7996-4ce9-9b06-e02ea0b7d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d9fa79-dc85-4aa3-81fa-21f199c9bb13",
        "cursor": {
          "ref": "25b92343-81c3-4f95-b54a-d74a0f4a752e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "39c33816-80fb-47ee-80ea-439602937031"
        },
        "item": {
          "id": "c3d9fa79-dc85-4aa3-81fa-21f199c9bb13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7c886621-5516-46f7-a4ff-a7bc5dc46126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1642b734-a970-4026-8034-d12222953929",
        "cursor": {
          "ref": "77f5535b-a737-488c-b312-d802e5b4b232",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5f003a16-2e44-44ab-92fc-2db306b0cad5"
        },
        "item": {
          "id": "1642b734-a970-4026-8034-d12222953929",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "45abc6cc-0591-4280-a10c-673b86ff397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6538fda-6529-4657-b2b2-54bdaeb2190c",
        "cursor": {
          "ref": "8a940ab4-fe11-4bd7-ae1d-85521bb72df8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5e450350-eafb-4e03-802b-7aa0208e4260"
        },
        "item": {
          "id": "d6538fda-6529-4657-b2b2-54bdaeb2190c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a976d114-9f31-48de-87c6-b3aae3c031fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2b88c1-084e-4387-a5e7-24952f642b8f",
        "cursor": {
          "ref": "9fa73f7b-e6ce-4e93-b9d9-77e676f17ed7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2598ba3b-c10b-4d8a-a304-66a6a881c879"
        },
        "item": {
          "id": "5e2b88c1-084e-4387-a5e7-24952f642b8f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "213ca4f3-d0bc-4701-a9d9-fe16a91c408c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a30fca-f3d8-4789-b68e-826a0c9c5ae6",
        "cursor": {
          "ref": "66756528-fd94-4782-8eb4-676fd5531e4c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6ab59b5e-2be2-4f2b-87a3-07b136bc9d55"
        },
        "item": {
          "id": "b8a30fca-f3d8-4789-b68e-826a0c9c5ae6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2c5fc797-2a64-41b8-82df-0000f69c27b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000c9181-9da3-4d6a-afe0-293cf1d1d87a",
        "cursor": {
          "ref": "194f0243-abe5-498e-8c38-ef70963bfa27",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "211c91e6-44f5-4aa1-81e8-9201835b004a"
        },
        "item": {
          "id": "000c9181-9da3-4d6a-afe0-293cf1d1d87a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9875f54b-f716-451b-80ce-5828b1717e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca332283-f46b-41a3-8ad1-5987e81147b2",
        "cursor": {
          "ref": "337b85d2-c6ae-4da1-a7da-1ce2c92ebf6e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ba3bd526-6d9d-4051-b525-d6c7a032bb7a"
        },
        "item": {
          "id": "ca332283-f46b-41a3-8ad1-5987e81147b2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cab7d734-683d-43e4-a6bf-d23500452aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef6509f-8cc7-4279-821f-e155a263b248",
        "cursor": {
          "ref": "319608f9-cdc3-4478-aed4-e01edba13cad",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6289e938-f104-4a26-9cf5-837023efe041"
        },
        "item": {
          "id": "eef6509f-8cc7-4279-821f-e155a263b248",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "043f6870-6113-4d21-80ad-af2efd7f01c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a50f429-84d3-41d5-a836-a6e6e2178e70",
        "cursor": {
          "ref": "7d5ced83-9cf0-47e6-a3dc-6c7e70db4dac",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0c4aa9b0-99e4-49f7-9106-0577d95083b2"
        },
        "item": {
          "id": "5a50f429-84d3-41d5-a836-a6e6e2178e70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "445b6724-5ffe-4ef5-871c-b8192abeda55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a808ba5-daa2-4c17-b285-7c28cdcf5323",
        "cursor": {
          "ref": "70b53cfa-7a41-4b40-81a7-2870bd7b595b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "42b0fc5d-44d6-4686-a05b-4782dfe2733c"
        },
        "item": {
          "id": "4a808ba5-daa2-4c17-b285-7c28cdcf5323",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "49721bdf-4321-4dcf-b023-736e30a8e2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c346d0-4d6c-4e5c-abe2-861861336230",
        "cursor": {
          "ref": "d71ff034-76ec-401b-8f4b-5433f39145ca",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fe58b5db-13e2-4aab-8be2-3e87f484f06b"
        },
        "item": {
          "id": "74c346d0-4d6c-4e5c-abe2-861861336230",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0f5c2be0-356e-4f29-85c4-adbfa78639d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82741a8c-939e-4480-b4e1-5e6f7e744c53",
        "cursor": {
          "ref": "57133c2a-503d-4aaf-b910-401b220522fc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "be1a4c8f-f47d-43c6-b281-7d10897ec042"
        },
        "item": {
          "id": "82741a8c-939e-4480-b4e1-5e6f7e744c53",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab3b72fc-5f45-4bf8-ad00-c2fc49e2384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2474d53d-92fb-47bb-8374-c0e533354afd",
        "cursor": {
          "ref": "c8da3347-3095-4187-ad38-37203148485e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "13c04749-f2d9-4cb9-a2fe-a304b917fa10"
        },
        "item": {
          "id": "2474d53d-92fb-47bb-8374-c0e533354afd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "309bdc3a-2599-43ba-8775-bc872650ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41bc758-5842-4af8-ad23-60ae27b0a480",
        "cursor": {
          "ref": "4646cab3-a2e5-405c-9689-d0da35cbd127",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5618e98d-a221-424e-80c8-ccc8ec1eee34"
        },
        "item": {
          "id": "e41bc758-5842-4af8-ad23-60ae27b0a480",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dd988fb4-40c7-4de5-890f-7dc02b2f52ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce3d1ed-f981-47aa-a21e-25f0044db234",
        "cursor": {
          "ref": "069e1913-8a37-4a40-9ae7-5e4ed400dc42",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b08942e6-23d1-4302-8cad-7417ca71324d"
        },
        "item": {
          "id": "3ce3d1ed-f981-47aa-a21e-25f0044db234",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e2c30944-aa98-445d-a480-ab5247ea3c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9531343-ed60-4b51-9b47-28bb1f671f96",
        "cursor": {
          "ref": "8f5eebe2-5669-4dc2-803f-bb08777444b0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5470a258-e9dd-4eb7-8aff-7559a7652b57"
        },
        "item": {
          "id": "d9531343-ed60-4b51-9b47-28bb1f671f96",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7f4ba5d1-5253-44f2-8575-522d178a59c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc52e0d-ad78-4175-b87e-087e766de188",
        "cursor": {
          "ref": "7e8edecf-0e53-4f6d-8f16-450964332eaf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41556e0b-b552-4321-b66a-09aec722af98"
        },
        "item": {
          "id": "cdc52e0d-ad78-4175-b87e-087e766de188",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "108296f4-1693-43e9-a0f6-4c49f7e395a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a71d0b-81cb-42b8-b336-86309244ea6c",
        "cursor": {
          "ref": "e385e15c-bbab-4051-8684-b70dcd092b80",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ee820341-27af-495b-8c05-191c10e6a420"
        },
        "item": {
          "id": "48a71d0b-81cb-42b8-b336-86309244ea6c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "72dbc007-afa3-48c2-ab26-473a50441831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2929dfa3-e051-41e4-a00b-d3981f117c86",
        "cursor": {
          "ref": "c5422495-248d-493c-9cbb-458d1ec79364",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a971ef88-ba7b-449a-a2eb-3b3221a05403"
        },
        "item": {
          "id": "2929dfa3-e051-41e4-a00b-d3981f117c86",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4c18afb-d30b-4136-954d-c49c75ba04da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93b8ee-800b-4871-ab8d-fac54d377000",
        "cursor": {
          "ref": "e0c91d13-d38e-4143-8c9b-0ed8fe931f5d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0db9d739-2c5a-4bce-9ecd-fee43cbe1941"
        },
        "item": {
          "id": "1e93b8ee-800b-4871-ab8d-fac54d377000",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2dce05a8-bbbe-4396-810f-fb332d3f80da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312cdf8b-660f-4299-9217-29e2536e1745",
        "cursor": {
          "ref": "db0ff850-8210-4fb2-a78e-8db8cb33fa89",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb8badcf-66df-4e39-9f6e-c536e77040bc"
        },
        "item": {
          "id": "312cdf8b-660f-4299-9217-29e2536e1745",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1356dd85-71f1-44f8-b53b-788894e4d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96409efb-f0aa-4257-9baa-425e767eb51a",
        "cursor": {
          "ref": "18be60f4-a69f-4629-a244-b39613a3d9e4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8bd953dd-a593-415c-9e83-db4c688a7fcf"
        },
        "item": {
          "id": "96409efb-f0aa-4257-9baa-425e767eb51a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "90eccf66-5518-4910-9af8-72d34ddb8609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61232feb-43e6-4670-91ef-b69cbfef1af6",
        "cursor": {
          "ref": "a05aea06-3c89-47b7-9a99-192b5bbea8f2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b296b334-17c9-42ee-93fe-884d64f5b232"
        },
        "item": {
          "id": "61232feb-43e6-4670-91ef-b69cbfef1af6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d9cb1694-f8ff-4eee-b3b5-aa2a932930ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3e7b4c-0799-41bf-8e1b-1f1b56aac2d7",
        "cursor": {
          "ref": "751d9a4e-c5f5-4ed1-b000-8e6a99fc5ba5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d032494d-7509-4a28-96ee-fbd371d186cb"
        },
        "item": {
          "id": "7c3e7b4c-0799-41bf-8e1b-1f1b56aac2d7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b8c6e19b-c082-4822-bad0-3794dc59bbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497e58b6-ae40-48ed-9bfb-fddcc89c293b",
        "cursor": {
          "ref": "1a0e8d04-e27f-4526-82c3-ce34772f1ab9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2ae50220-57c1-43eb-b19c-97501315bb19"
        },
        "item": {
          "id": "497e58b6-ae40-48ed-9bfb-fddcc89c293b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a95073ae-081e-4833-85c9-143a885e607e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4007791-4615-44c5-957e-77b70040bced",
        "cursor": {
          "ref": "cfe722ce-a9c8-42b1-9b3d-7799427a4d28",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4b0da162-2b12-4f93-9342-55c07f388f99"
        },
        "item": {
          "id": "c4007791-4615-44c5-957e-77b70040bced",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9fb3031f-2f63-45ea-bc90-41a2be96edb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd19f86-2977-4f08-aeda-5f3ae29d0ced",
        "cursor": {
          "ref": "d50f1ef2-0daa-4d93-a105-a6bac2e7ac13",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ed2b3a5-fae8-48fb-9a4a-d5c235a882ce"
        },
        "item": {
          "id": "ddd19f86-2977-4f08-aeda-5f3ae29d0ced",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d04a9b9c-d817-4633-a08e-21ceadc7db96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e62461-5349-4032-8703-d4e3a3b24ef3",
        "cursor": {
          "ref": "16668dde-7151-4493-ac38-cf5ae6523695",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3dd9f5b2-f1bb-4663-8b98-99c1c1e47119"
        },
        "item": {
          "id": "93e62461-5349-4032-8703-d4e3a3b24ef3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ff19e54-2e4b-4e53-863c-6a349d89e022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45912159-4bc1-458f-8b18-eac56dfd4cea",
        "cursor": {
          "ref": "ca58dc15-8be5-4d05-ae40-8389d3befda0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2c4f8ff8-b79c-4dc8-bcf6-17385c47266a"
        },
        "item": {
          "id": "45912159-4bc1-458f-8b18-eac56dfd4cea",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "23fc198f-fa91-4f7b-bfdc-ca10eba1a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5688443-312a-42f1-86bb-e99d3ef5042c",
        "cursor": {
          "ref": "f1a82368-b796-46d8-92b4-203849d3ce7b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "020e36c9-1cf5-426b-827e-f29a5e7dc169"
        },
        "item": {
          "id": "b5688443-312a-42f1-86bb-e99d3ef5042c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3bef683-1c84-465a-a8af-6d3fde4bfa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3baf2f7-2d11-4c61-8cb6-0ab3dea4b4fd",
        "cursor": {
          "ref": "f1e2ee62-7b6b-4d50-969b-93e2cc22c862",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "92ceb0c0-fb90-46e8-a3d5-162d1cdc7779"
        },
        "item": {
          "id": "a3baf2f7-2d11-4c61-8cb6-0ab3dea4b4fd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7c3d3b4d-a679-433f-a790-b066bc73c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2bf7c8-9c27-42e5-a9db-a693bbd88870",
        "cursor": {
          "ref": "5e1c2b2f-39d4-442c-8bca-33f03fe09a75",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "663c4c58-241f-43f4-90a0-5d9d3e55594d"
        },
        "item": {
          "id": "6d2bf7c8-9c27-42e5-a9db-a693bbd88870",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "81077d6e-3043-4e93-84c3-33348d4602a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae39a2-e88a-4d8a-b3c3-c3d822b63607",
        "cursor": {
          "ref": "c9e68261-bb94-4e49-8ffc-b51f4f8bc10c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6caf2cd5-4df9-464a-b3ef-7b33dd233cc5"
        },
        "item": {
          "id": "8eae39a2-e88a-4d8a-b3c3-c3d822b63607",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "07870852-3987-4c49-99b3-126b4d834a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d158964-c490-4b52-90f3-8fdccd28cf9e",
        "cursor": {
          "ref": "86aa2da0-8dd7-4cb2-b9ba-0d839717769e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "938409ec-3fae-4344-8a3b-1c4f88723418"
        },
        "item": {
          "id": "7d158964-c490-4b52-90f3-8fdccd28cf9e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4b6b591d-896d-4e0e-aa37-dbe052a267dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c138db-0b84-46d6-b5f0-0a7ab75d6eeb",
        "cursor": {
          "ref": "3e086e65-7f2d-4d3e-b8ba-b2ecc38a4df3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9ab2864e-c71f-480d-b267-3ecbaafc3059"
        },
        "item": {
          "id": "65c138db-0b84-46d6-b5f0-0a7ab75d6eeb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6d4be40a-5739-4895-8e3e-7b61c6730b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e1908b0f-0880-471b-8a21-4646d0159bdd",
        "cursor": {
          "ref": "8a553814-f0fa-40ce-8bec-fd8c19aa8ac2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8b8dab47-cf79-45fe-8621-0794c60d00cc"
        },
        "item": {
          "id": "e1908b0f-0880-471b-8a21-4646d0159bdd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "31426044-17a2-4f41-ab93-9d1cf7d64f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e3f28cf6-cf2d-4aa6-9fab-9746799c1f35",
        "cursor": {
          "ref": "6eff86c2-7883-4bb1-ad27-6a14f9652d92",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2a74a945-e321-4d66-94ce-904ff69164a7"
        },
        "item": {
          "id": "e3f28cf6-cf2d-4aa6-9fab-9746799c1f35",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "94a7256d-a7a6-4742-b25b-106e8d911d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "29207bff-6328-4661-8cc3-69a610283cb2",
        "cursor": {
          "ref": "42fb24c7-2ffc-4f2f-9b31-6a88e61344ba",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "18e010f8-9284-49ad-92fe-8fcdf1ac56e3"
        },
        "item": {
          "id": "29207bff-6328-4661-8cc3-69a610283cb2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ad7eef3d-51d4-402d-9621-6900ae7d981f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ad92d90c-0180-4a41-bfc1-ed08afc6fc17",
        "cursor": {
          "ref": "42988d02-adc0-4604-81b4-f5031629a9b4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3dd0cb1d-9947-4009-a725-734eeebb815e"
        },
        "item": {
          "id": "ad92d90c-0180-4a41-bfc1-ed08afc6fc17",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ea46e2c0-87fa-452b-b2cf-198226022351",
          "status": "Created",
          "code": 201,
          "responseTime": 10173,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "308ebe4c-3d1f-4b74-9c11-fb6bb4bfb6ad",
        "cursor": {
          "ref": "89376b7e-83ee-4a72-9601-67bb1decaffc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ad78d960-1fb6-42f2-bc71-45f02d713557"
        },
        "item": {
          "id": "308ebe4c-3d1f-4b74-9c11-fb6bb4bfb6ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "07a266d2-7edf-40a9-a69f-a41b8965df84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "92036d76-aefb-46fa-8a7a-c84ca66d336a",
        "cursor": {
          "ref": "78c6efd2-cb95-4c50-963a-02e36b31a990",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6820b15e-282f-4ba4-b369-becb7732c729"
        },
        "item": {
          "id": "92036d76-aefb-46fa-8a7a-c84ca66d336a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "415d288b-6c16-4e29-bd8b-3daf7a686f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "56c067e3-4003-4050-b78f-76c45f34df23",
        "cursor": {
          "ref": "83d4d894-0615-4aa2-8000-4b3e8c1449a2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5aa5163a-bbbc-4935-b507-b6496dbca135"
        },
        "item": {
          "id": "56c067e3-4003-4050-b78f-76c45f34df23",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ce32e1a-48c6-49e2-be7c-f6e3c7696ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092e44af-2239-45c4-9a55-0ee51b58e6f1",
        "cursor": {
          "ref": "b522cb07-c9da-47e2-8061-928c6da8a230",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6ecf6fab-2fce-4009-b178-94d24b7cc033"
        },
        "item": {
          "id": "092e44af-2239-45c4-9a55-0ee51b58e6f1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e9c779b5-35b4-40a2-9fff-4f2d0fd8f0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74052bc9-ce01-467c-819d-76be1083e05b",
        "cursor": {
          "ref": "e228484b-8763-4705-8c6c-3cfd581f077b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04a9d986-f85c-4070-8a32-b5c22a59f608"
        },
        "item": {
          "id": "74052bc9-ce01-467c-819d-76be1083e05b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fe377e87-c008-4a15-ae52-deeb81683bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d393e1-3b86-4819-8422-c9a80ba643fa",
        "cursor": {
          "ref": "d3d15942-79a5-4d73-a21d-d365b6d1808b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4169eb80-8e0e-4ff4-b9ba-29532f0e263e"
        },
        "item": {
          "id": "54d393e1-3b86-4819-8422-c9a80ba643fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a05de5c8-b355-4e0b-b352-db72b3289629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfe5f7e-3b19-427d-82d9-41fd817913db",
        "cursor": {
          "ref": "14ac71e1-8f00-4c4e-8b1a-c180c19aa449",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "16b26729-b981-434b-b247-d2dcd8155130"
        },
        "item": {
          "id": "5bfe5f7e-3b19-427d-82d9-41fd817913db",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e38a04ba-d290-4279-8d6f-7ceef2b2452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60982e3-9f2a-4cd3-9ec9-640d89497d74",
        "cursor": {
          "ref": "465f2ed9-a1f1-472f-a181-9633ab73b4ec",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8558a08f-1a2a-434c-9474-0d2336da4e23"
        },
        "item": {
          "id": "b60982e3-9f2a-4cd3-9ec9-640d89497d74",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b61350cb-764a-41fc-8a06-4b59d2e1a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97e5ddd-1040-47e1-b788-d94cfb0a0576",
        "cursor": {
          "ref": "738f03bf-9c92-4fa8-831e-2d3e78d867f8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "54cbf618-69ec-4138-b91d-85e345c9a583"
        },
        "item": {
          "id": "f97e5ddd-1040-47e1-b788-d94cfb0a0576",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e59058d-6873-4675-84f0-31bae4909845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a30c00-07b0-4df7-aed3-19bd324b28fd",
        "cursor": {
          "ref": "cb72d3a6-b5d2-46c9-8e22-c138fa7fe3eb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2fbb6212-05a7-4c4b-92b6-f9dc9c03c853"
        },
        "item": {
          "id": "c9a30c00-07b0-4df7-aed3-19bd324b28fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aed74c9d-e8ad-401a-b179-85eebdc80636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0875cb95-a8ad-4f46-8fd7-805a3e28ff97",
        "cursor": {
          "ref": "1c2b67d4-2eee-421c-bd8c-a4b0a1591f3f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a55652ef-e65a-4942-b425-1d43e6d391af"
        },
        "item": {
          "id": "0875cb95-a8ad-4f46-8fd7-805a3e28ff97",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1352c30e-f05f-4f05-8e79-1322ffc893e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef5f9ca-c369-4462-bc6f-26b303bc7580",
        "cursor": {
          "ref": "d11a968d-2652-4a1c-ad40-33e90ccfdb04",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "47f30c7d-4a65-468f-8647-a180617094cf"
        },
        "item": {
          "id": "5ef5f9ca-c369-4462-bc6f-26b303bc7580",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03ee9cc5-b5e8-41d6-a680-395e9704243f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612a1e8a-8bc8-4043-9bd1-3fcf21734ded",
        "cursor": {
          "ref": "d1bbf164-43c9-40d0-af09-a93f61d22b79",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e65468a3-b7d8-4e37-9797-7127696af387"
        },
        "item": {
          "id": "612a1e8a-8bc8-4043-9bd1-3fcf21734ded",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6d1028e6-45b8-4b7c-a422-0b26f1db99c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a488d856-0a55-42d0-a6d7-f61c690eb942",
        "cursor": {
          "ref": "173139ba-53ee-47cb-89bf-2ed08f3076b7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e26ff0d1-18df-43e1-85d4-c862254f8118"
        },
        "item": {
          "id": "a488d856-0a55-42d0-a6d7-f61c690eb942",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64d0a2b5-6793-4d29-9e61-c547f2efe7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b68aea-3f6b-49b1-bbe1-9709d8c735ce",
        "cursor": {
          "ref": "1a68ef6f-0e34-467a-a3be-c8d04691fc3c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4183e787-4c81-4d50-80e4-65d60c109a55"
        },
        "item": {
          "id": "a4b68aea-3f6b-49b1-bbe1-9709d8c735ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "03c28725-0264-4433-9241-79f6473c8b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4a9b00-8f74-48dd-af7c-099862c88e24",
        "cursor": {
          "ref": "7e152c33-c29e-4ca9-8e0f-2bae69196a13",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0dce8a39-a1f0-48be-8710-c5ac5512ee80"
        },
        "item": {
          "id": "4e4a9b00-8f74-48dd-af7c-099862c88e24",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6632c55-ad99-4fb7-816c-ea26bac91e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f8be68-6136-43f8-a878-f8cc5b3c9125",
        "cursor": {
          "ref": "4b852627-ef48-4155-9e5c-294bbf55a9e8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "77e31d2f-607b-4210-bb9a-0c7ac2441455"
        },
        "item": {
          "id": "67f8be68-6136-43f8-a878-f8cc5b3c9125",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e40ac485-0df3-417e-ae0f-d07b38e5eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65528f46-6787-4e53-bad5-1afe92066689",
        "cursor": {
          "ref": "1fb6fca5-383e-4fcf-974f-934db4329a76",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8c1a7e6f-1e30-49b7-a508-48a535c655d9"
        },
        "item": {
          "id": "65528f46-6787-4e53-bad5-1afe92066689",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "51a7d838-09e2-4f9e-b905-a23bcbddb810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d54943b-ecf2-43d4-af8c-6bd478772dfe",
        "cursor": {
          "ref": "6c97b556-ce67-4a33-8d76-7df284b8e178",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6496292d-2e78-46b3-a731-e824ad96da0e"
        },
        "item": {
          "id": "3d54943b-ecf2-43d4-af8c-6bd478772dfe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8da8dd64-9a9c-413e-bb13-1fdb4b09555a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ec5bb0d4-7c75-4c1f-b214-77655b2ea0eb",
        "cursor": {
          "ref": "412c24d9-6025-4aae-a8c1-70d1306e8477",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99c105e7-939f-4efd-b205-8210bd0a6d7c"
        },
        "item": {
          "id": "ec5bb0d4-7c75-4c1f-b214-77655b2ea0eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5bc93d69-6f42-4c5f-99c0-f13cdcddc883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6066ec9e-e0b6-48ca-9427-6f6b299912b0",
        "cursor": {
          "ref": "1d8199c0-995e-476a-ad0b-e7556326eae8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f32a62a-5e87-454d-ab21-a07c29ad1b25"
        },
        "item": {
          "id": "6066ec9e-e0b6-48ca-9427-6f6b299912b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00e13828-db0c-474e-bdf0-3f3f9e4a0daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e992609-fa4c-4358-b254-2390ab7229a6",
        "cursor": {
          "ref": "3b4cc858-c9d0-4049-85d1-51f1d0eb8095",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ada4ff96-722d-4737-b7b5-e2386ba98dce"
        },
        "item": {
          "id": "1e992609-fa4c-4358-b254-2390ab7229a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fc7627c-bb9f-44dd-8502-a43f036b5f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3397f4b-a56a-4905-a7a8-9ebdb69be36d",
        "cursor": {
          "ref": "371a5636-f04c-4c5e-8b0d-0d8f45c9ed1f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c2df822-169e-40ca-97bd-a1ed0396b8ce"
        },
        "item": {
          "id": "a3397f4b-a56a-4905-a7a8-9ebdb69be36d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9fa6e88d-b99a-4550-84d7-4988ff918caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb3cccc-4e86-4567-9b59-445f330b403b",
        "cursor": {
          "ref": "7c8d637c-fe14-4dfd-ba76-52f96e5a55f5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a7608085-04ec-449f-8e53-ad418e53ce8e"
        },
        "item": {
          "id": "afb3cccc-4e86-4567-9b59-445f330b403b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ac940168-0e7a-49d8-81bc-eedf03843673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3f5e72-a3f0-493c-ba4a-e66470152735",
        "cursor": {
          "ref": "361ddfd1-1d0c-4adc-8d6c-e054ce116f26",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7b123478-07f8-42f9-bb49-639b88299545"
        },
        "item": {
          "id": "7c3f5e72-a3f0-493c-ba4a-e66470152735",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "21658594-9d4c-4353-877d-c6a960ea4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ed0b91-d553-4890-a976-99480c569b10",
        "cursor": {
          "ref": "711b07f9-9ef3-4680-94b0-1b0da1c04521",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "280e035a-ce8c-4899-aff6-d6bcd45d1663"
        },
        "item": {
          "id": "98ed0b91-d553-4890-a976-99480c569b10",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a8ef01e5-09c8-4b21-a2d1-9fd382f3ff0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ab4219-e420-4e7f-aab3-5e063efb2a1f",
        "cursor": {
          "ref": "e7295884-18e3-4930-8d4a-c2c98a32ae40",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f52ca01-2826-44c4-b80a-478e517562e8"
        },
        "item": {
          "id": "44ab4219-e420-4e7f-aab3-5e063efb2a1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77990f80-3d85-4aa2-ae5d-34221f2d66fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9bdb3aeb-6d87-4192-8694-3814a28ee088",
        "cursor": {
          "ref": "9cf4951e-2172-4c20-9741-194ece15fac9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "48ef6619-af49-468e-96b0-37f936cfe15b"
        },
        "item": {
          "id": "9bdb3aeb-6d87-4192-8694-3814a28ee088",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f46282fd-317b-43fa-afa0-b50dfe9cb079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0ce867-da71-423c-8271-1dc7f86aa7c5",
        "cursor": {
          "ref": "970f0fa2-ec2f-4d2d-adac-832b7fd2bbcb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "37fb3a70-e7b9-4ee9-b8c0-b6b7d32346fa"
        },
        "item": {
          "id": "fc0ce867-da71-423c-8271-1dc7f86aa7c5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1a45065-7e0c-4d62-bae5-239b279bdeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf51dcf-3cdb-456f-8b1f-5fbaf08a74bc",
        "cursor": {
          "ref": "96300e83-f406-4790-985a-111a617ef541",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3dfd91fa-b597-4752-91ab-067e29443ce3"
        },
        "item": {
          "id": "aaf51dcf-3cdb-456f-8b1f-5fbaf08a74bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e83a2329-cc41-4a22-88fc-71f455663d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081bf53e-35c9-4d08-be7b-f94980f3baa3",
        "cursor": {
          "ref": "eb3d789a-f015-46b5-9cc4-da71497fcfcb",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "03ec967d-eb1c-4436-8eb9-51486f679148"
        },
        "item": {
          "id": "081bf53e-35c9-4d08-be7b-f94980f3baa3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "006018ca-656f-4d72-a7c9-9ba15ca44c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042fa0c-0f90-4db1-9309-39696e634d15",
        "cursor": {
          "ref": "acda2185-325f-405a-9557-a9e8865f3adf",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1cb3cc07-e79f-46a4-aae5-c68637447621"
        },
        "item": {
          "id": "9042fa0c-0f90-4db1-9309-39696e634d15",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "55bb4b92-c0e4-4bcf-a177-790e2301d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9758b0-b101-4a32-8487-6f9b0e723ab3",
        "cursor": {
          "ref": "b5ce4a6f-cce9-42cc-83ae-d843b22aa985",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "83dccc17-b4a2-44ad-ab33-537c2638f2ee"
        },
        "item": {
          "id": "ff9758b0-b101-4a32-8487-6f9b0e723ab3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f199dbc9-e8ac-4010-9227-118434590e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555b7724-ecd3-4c99-82bd-ec22539e1a4c",
        "cursor": {
          "ref": "ad66cdb2-b0ca-4ad9-870d-4276b34a093c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "909c86cf-db61-421a-b753-56844be0042b"
        },
        "item": {
          "id": "555b7724-ecd3-4c99-82bd-ec22539e1a4c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c0978e67-1299-4a4a-9c3b-1588c02608bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3d33371a-5cf4-4e18-b23f-a60f96059df1",
        "cursor": {
          "ref": "c3913292-4379-44eb-ba27-8da53f02c3c7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "307dbb70-7452-4e19-b6f9-7bb0a822c75b"
        },
        "item": {
          "id": "3d33371a-5cf4-4e18-b23f-a60f96059df1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "906d2559-9bd6-4f1b-96af-56a785d0884d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "757add0a-ddd5-4135-a5a3-f6518b22ace8",
        "cursor": {
          "ref": "8a6fa106-87ce-48d4-b7d9-8269d09bb0f6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e6c8f8fc-8525-45d4-a5ae-9eadfd97611c"
        },
        "item": {
          "id": "757add0a-ddd5-4135-a5a3-f6518b22ace8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fbf8bdc7-fe42-40bc-861d-384c503b93e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e83c849c-8555-4a5b-a058-18ec9b6575a0",
        "cursor": {
          "ref": "03613ee5-6205-4a32-8ecd-5ba8ad995a61",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d0e82ff5-bd3a-41a4-ad07-88f03882b39a"
        },
        "item": {
          "id": "e83c849c-8555-4a5b-a058-18ec9b6575a0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ef826201-68a9-4aaa-901c-d402e93dd9e7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "623994fa-1701-4789-9f05-e52bbe9841f4",
        "cursor": {
          "ref": "7256a1c9-d149-4972-b960-342715098b0a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f0cb1fb2-a530-4b2d-8932-08e2e57a4cf9"
        },
        "item": {
          "id": "623994fa-1701-4789-9f05-e52bbe9841f4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25a3ebfc-4510-4c77-989d-7ea4d9095ccd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5686b6c9-6559-47dc-9f1e-43ca72b52fcb",
        "cursor": {
          "ref": "f1bacdfc-2fd0-4e82-8729-e43e74020775",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ffaa65e3-c052-4187-8fe1-f15b36daa8bd"
        },
        "item": {
          "id": "5686b6c9-6559-47dc-9f1e-43ca72b52fcb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d669823-031a-4d17-86af-66e89daa5462",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "95038c6d-8eb3-426b-a89d-31b6e2eef76f",
        "cursor": {
          "ref": "634ffb16-70ca-475e-87e7-1ba1588d01e7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd1abcdb-9173-4be8-9503-f035e8addef0"
        },
        "item": {
          "id": "95038c6d-8eb3-426b-a89d-31b6e2eef76f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8fb8678f-e0a7-48ec-a73a-c5ae87f1bda6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b06ca8-f243-4277-acef-9a3d22ae46af",
        "cursor": {
          "ref": "d3085e47-dd43-42b8-8dc2-24a14ffa777d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fe4e6c24-9a1b-478c-9110-f2abf1d5c6cc"
        },
        "item": {
          "id": "71b06ca8-f243-4277-acef-9a3d22ae46af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc7f5cad-7450-4bed-a384-726be92fc971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2adeaa-f0bd-4d6a-8615-ece5c93d9daf",
        "cursor": {
          "ref": "54b5944a-8237-4a54-9173-6df37edece4c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "43daf383-d51b-4e78-b754-31c2d5fc29cf"
        },
        "item": {
          "id": "4d2adeaa-f0bd-4d6a-8615-ece5c93d9daf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "983a9fae-dba5-4d93-a34f-f6186f73b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b5a15-ed49-47d3-aa85-60d091d3db9f",
        "cursor": {
          "ref": "54ddc70d-dabb-4f86-bd22-5f6bfafb548b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8d4d3869-bbac-44bb-97e7-a9b33d5bf921"
        },
        "item": {
          "id": "980b5a15-ed49-47d3-aa85-60d091d3db9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b05a13cf-49ea-4a09-bb68-4e1696cecc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302aee74-6d4f-4835-aeb4-fda65de78f1b",
        "cursor": {
          "ref": "5382db2c-be43-4f66-abe0-ee5927aa9a18",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1fb79419-a7e1-4367-b6d8-e85463af1fae"
        },
        "item": {
          "id": "302aee74-6d4f-4835-aeb4-fda65de78f1b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "47c89181-ec35-423c-a791-85f818c50a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e994f-4738-453b-8cb9-6ae099d12268",
        "cursor": {
          "ref": "53561cca-fc01-48bc-b23d-a4a04a179f8f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "79d91ea9-e7e1-49b2-9475-6ac7d322294b"
        },
        "item": {
          "id": "196e994f-4738-453b-8cb9-6ae099d12268",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e504195-5087-45be-a930-9b0ba5faaf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828499de-a022-4937-8869-77856c284f84",
        "cursor": {
          "ref": "82c16f60-98dd-427a-9c82-6ff4252974c6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e25e72f-2035-464a-9c84-a71289b8efec"
        },
        "item": {
          "id": "828499de-a022-4937-8869-77856c284f84",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "10102bd9-5bd1-4d5d-9ff2-3e9da435748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730c0cfe-7d77-42ac-9084-88a5b70f6665",
        "cursor": {
          "ref": "6b289f03-99c0-4271-b730-ee41142a3af7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7481732a-f105-4dbe-bcc9-f0733c9fe7f8"
        },
        "item": {
          "id": "730c0cfe-7d77-42ac-9084-88a5b70f6665",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "06fc093e-9ade-4009-b1de-a2ad4459ed28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1ca8a8-f2fe-44f4-a5ea-7b73bbd946fe",
        "cursor": {
          "ref": "2f1ff81d-e257-4cb1-b6ad-571eee46d243",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e54cdad4-0360-4f82-89ff-477a89fc6c77"
        },
        "item": {
          "id": "cc1ca8a8-f2fe-44f4-a5ea-7b73bbd946fe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6977a4a6-2dc0-4f87-8b3d-217a4ab31fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098eab23-adb2-464e-9685-d888d02801e3",
        "cursor": {
          "ref": "698b74b8-58f0-4f53-9abe-30fce464cfe5",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "57d54925-d22e-4ca2-8d1c-2482acc6cf41"
        },
        "item": {
          "id": "098eab23-adb2-464e-9685-d888d02801e3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59d27ab2-cbe4-4629-9619-fe2bdea276c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a90096-5ff1-4c92-af6b-10ff25d96808",
        "cursor": {
          "ref": "9d640a85-e56a-4f3c-b504-dba624a58907",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "610490a3-dce4-4dd7-9e95-c92fbec77d9c"
        },
        "item": {
          "id": "72a90096-5ff1-4c92-af6b-10ff25d96808",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b42cadca-d05c-4b4a-ba8a-33fb02451220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0be9f3-6b6a-4d09-a873-d49e6b058df9",
        "cursor": {
          "ref": "5ce640fa-8012-4e5c-85de-f006fb7a71bd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eeb32b7f-0ad3-4042-86e9-9910c9e5d5ea"
        },
        "item": {
          "id": "0f0be9f3-6b6a-4d09-a873-d49e6b058df9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "07aef86f-e25a-4874-aaa6-02a92b58e960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcd83a1-3cdb-4e6e-9e2f-0c58cc99c314",
        "cursor": {
          "ref": "2be208da-9166-4dce-b3ed-e7f7805fb197",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c37c9f6-0f49-4005-950d-a35bb89033c6"
        },
        "item": {
          "id": "cbcd83a1-3cdb-4e6e-9e2f-0c58cc99c314",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8124e7d6-c744-4a39-826f-cb0a95a42ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c700dfcb-1c22-49b4-8099-20eb8755361f",
        "cursor": {
          "ref": "d2d65a37-d25f-4edf-b258-3a1023d9d1cd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5bc0a45c-167a-4f73-b188-a630e52d3313"
        },
        "item": {
          "id": "c700dfcb-1c22-49b4-8099-20eb8755361f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3db7538a-eff1-4d93-918f-9e77d310bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77203e-616e-4997-95a5-583b410056ae",
        "cursor": {
          "ref": "c2bf3423-10d9-4c68-8a38-f46672a39757",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97069801-7153-4d75-a866-a634c15ca76a"
        },
        "item": {
          "id": "3e77203e-616e-4997-95a5-583b410056ae",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95524035-49ab-418c-ac9e-1182259fbb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca8d416-bf92-4adb-b433-7333b54ee1a1",
        "cursor": {
          "ref": "af190f8f-bfbc-450f-86f6-d43fd3cc6a1f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d512d16-a228-485c-9867-8a4fc286b6d0"
        },
        "item": {
          "id": "5ca8d416-bf92-4adb-b433-7333b54ee1a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d4351920-443f-4263-8b17-b75a706e5dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47ee5cb-22a3-407e-852d-2cd702dd3c21",
        "cursor": {
          "ref": "1f587715-5849-450a-a955-b6d8bcb5046e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae0b0731-67fb-46fd-abdd-72a22d0778da"
        },
        "item": {
          "id": "c47ee5cb-22a3-407e-852d-2cd702dd3c21",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "355c3972-136a-4111-87fd-d21743db3dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b504363d-0f50-44b6-8bfc-826cf98b43f1",
        "cursor": {
          "ref": "8b2446bd-8b49-4da5-8267-9a180d1c8d1a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a8e5313-92ee-4476-8d38-482bb5fc1bef"
        },
        "item": {
          "id": "b504363d-0f50-44b6-8bfc-826cf98b43f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "727a7475-fc5d-47f1-9ccf-bbe074dca070",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d3be9d2f-cc9e-47c5-bb34-38c3b93d1769",
        "cursor": {
          "ref": "f2b221ae-fd42-4cb2-ae79-c4199a68e8ee",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "99c95390-51bf-4b92-ab98-3d7044434810"
        },
        "item": {
          "id": "d3be9d2f-cc9e-47c5-bb34-38c3b93d1769",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c58bf961-bb0a-49a5-85f6-12893ee43cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ac8f0a-496f-41ec-a71c-ab2fb086bb0c",
        "cursor": {
          "ref": "857d08eb-4b38-4595-9bd2-4449069a4ac9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8b118eab-a8db-4b96-bd8d-524dbe87afa3"
        },
        "item": {
          "id": "66ac8f0a-496f-41ec-a71c-ab2fb086bb0c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6aea505b-c937-4eda-8027-3710a7812548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7333f9c4-93b5-4d95-bd98-fc3cfa1deb85",
        "cursor": {
          "ref": "512b3909-beef-440f-bdbe-b5cf2d5f4cdf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "de3f5801-aff9-41f2-846b-27a0f453a76d"
        },
        "item": {
          "id": "7333f9c4-93b5-4d95-bd98-fc3cfa1deb85",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5204a294-7cda-4821-9c1d-7373824bebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b15087-6805-41a4-8bd1-40c451afdbe8",
        "cursor": {
          "ref": "fe2816ce-9a33-4272-9e8c-ffff1e773c4d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "62b9eadd-504b-4fba-a759-c50b4037420d"
        },
        "item": {
          "id": "44b15087-6805-41a4-8bd1-40c451afdbe8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7e407e73-0f4b-41d5-aa66-3fae0a9e4008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fc6ed7-61a1-433d-85be-fcd22b80dfee",
        "cursor": {
          "ref": "fe83b27f-c8e5-4017-b7f4-2cfc50dfbb90",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "08053f02-a4af-4eef-9a7c-1f7519c8f511"
        },
        "item": {
          "id": "96fc6ed7-61a1-433d-85be-fcd22b80dfee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d11d0603-404c-4d0d-beed-61b47eba4c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c241142-40b9-419d-b460-5094a0fbb100",
        "cursor": {
          "ref": "8e57c521-75dd-47b0-8b6e-547d8e9e6587",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "654b5e18-b5b9-4338-b7fa-b4379d278de0"
        },
        "item": {
          "id": "9c241142-40b9-419d-b460-5094a0fbb100",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "51cce994-be32-4e1a-bb80-d3f41a2169b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684cb6d-1a31-48c7-91c9-77693b8cf6ff",
        "cursor": {
          "ref": "d87ab4a2-d68f-42ec-a046-7f01f1a71278",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2042b712-3662-4ad8-a4f3-fef18e5da400"
        },
        "item": {
          "id": "4684cb6d-1a31-48c7-91c9-77693b8cf6ff",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e413c48e-c979-4311-9802-85b8a70ac97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d86f1-f424-40c1-be3a-380e3b4179b1",
        "cursor": {
          "ref": "7e8feeee-fc1f-4c9c-92f7-0e9a93b489fe",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0aed4abf-d62b-4853-b80f-8defdf36e068"
        },
        "item": {
          "id": "b62d86f1-f424-40c1-be3a-380e3b4179b1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "207b82d1-9ef8-4b0a-852f-b55791cf28e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857970e-3fe3-4aea-9366-5423e80ac11d",
        "cursor": {
          "ref": "4778b519-6d2e-491d-a27d-305fd63e81a2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4da57e75-dcb8-407d-90f8-62d066dbbe5e"
        },
        "item": {
          "id": "2857970e-3fe3-4aea-9366-5423e80ac11d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "adb842ea-42a3-41a5-b1da-1f9b50aa062e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a615178-57a2-47f5-b83a-7c3721696bb9",
        "cursor": {
          "ref": "20f127d6-1ad9-459c-98cc-b40d7c0264fd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c3403d33-16a8-48c2-93fc-6e2d90ac5d2e"
        },
        "item": {
          "id": "6a615178-57a2-47f5-b83a-7c3721696bb9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c2d36eab-1ac6-4998-b25b-48512d05bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0762a6-2900-4a9e-9fda-bb5d72536f5d",
        "cursor": {
          "ref": "5fc0bba5-c07b-4d45-b1a3-a6bdb173ba26",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c2168dc4-e693-4c72-8f83-eb16c0c5ad65"
        },
        "item": {
          "id": "bc0762a6-2900-4a9e-9fda-bb5d72536f5d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c1f40ac-acdb-4b65-b073-d4df650418da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578d520-4602-4959-98af-2126e9f22337",
        "cursor": {
          "ref": "42fd6305-5d62-4e19-a6e2-678787f5f7c8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9687f43d-796b-47e5-9283-17ad3c1194b1"
        },
        "item": {
          "id": "2578d520-4602-4959-98af-2126e9f22337",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a7e13a67-ab73-4120-8751-8e31f5d0c837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4653ee-2010-447c-a2e6-2a23b1090ab0",
        "cursor": {
          "ref": "3b014a4f-a830-42ed-86d8-86833457b996",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a312f808-b0e2-4876-93ec-a298dd4572a2"
        },
        "item": {
          "id": "3c4653ee-2010-447c-a2e6-2a23b1090ab0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8092717-548d-4119-a3a0-5f5027a15c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdfed18-f74e-4b08-9773-8007838d0c3a",
        "cursor": {
          "ref": "2ee4a317-05d8-4370-ba13-1bdb2432cd31",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "885bcc19-4945-45cb-981e-4f6c69cb395f"
        },
        "item": {
          "id": "abdfed18-f74e-4b08-9773-8007838d0c3a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6a313b0f-1551-4da9-b1db-ecc588c64197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47c3077-d580-4ec0-aeee-acbe8a8e2fcb",
        "cursor": {
          "ref": "fe81eb4b-931a-4dac-bbd1-76a7699831d6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2897efa3-f508-47d6-b931-8c917a4ea7f1"
        },
        "item": {
          "id": "e47c3077-d580-4ec0-aeee-acbe8a8e2fcb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39546b8d-fe73-41bd-bd0b-419053160d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f4c670-f4ca-44f7-beb8-f9faea796792",
        "cursor": {
          "ref": "bad64eec-a074-466b-a4c9-4f1e7a8d808e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "84334ed8-fdb3-4da3-a663-d366c406f0c3"
        },
        "item": {
          "id": "a3f4c670-f4ca-44f7-beb8-f9faea796792",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5bd0a490-21e1-4c88-8944-fd3b080d6440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a565bf23-756c-456b-bfc8-5f72a0692c2c",
        "cursor": {
          "ref": "c63d3a4c-ffb5-4a4e-bbcb-89364539af42",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "748d20df-0d80-482d-b589-87e745586aee"
        },
        "item": {
          "id": "a565bf23-756c-456b-bfc8-5f72a0692c2c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e79347e6-d72f-40ac-895c-1abc4bc045c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf89f9f5-591a-412a-8be8-e7d7eafa2239",
        "cursor": {
          "ref": "6151828d-872e-44e5-9cb3-fc9cbb0acbd5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5e8b8b4f-6c40-4153-9948-3bf77667909b"
        },
        "item": {
          "id": "bf89f9f5-591a-412a-8be8-e7d7eafa2239",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c796213f-ec7a-4791-ba5b-7e0b26328a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e09a83-548f-4974-a351-6060366e6b3e",
        "cursor": {
          "ref": "ed197239-0de2-4073-bd60-f5e19704d669",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aa24401e-7645-419a-bead-54a28a17ed7b"
        },
        "item": {
          "id": "94e09a83-548f-4974-a351-6060366e6b3e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "92881457-b49d-4d6b-a00a-b4456dbf61ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39431236-8041-4291-9527-058b24680689",
        "cursor": {
          "ref": "2384e112-2483-4887-bfc0-6af2313cb7d0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "101bb0c2-53e1-410c-a1b8-ad00ad9c40ef"
        },
        "item": {
          "id": "39431236-8041-4291-9527-058b24680689",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d7a8e2a-086b-48fd-8fa6-81b596ae8650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e967e4f-ab1e-47bd-9c53-d910e1de56e8",
        "cursor": {
          "ref": "5c5bd79b-75d3-47c7-b2d1-22280f242778",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2939e522-33ae-4ed6-8a04-de82a59cd0f9"
        },
        "item": {
          "id": "1e967e4f-ab1e-47bd-9c53-d910e1de56e8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0541e19-6d3d-4ed5-8437-7d9260e1518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055b6d52-d5ae-4125-9f4e-9b20bffb16b2",
        "cursor": {
          "ref": "ed68c1d9-e193-4590-8482-93057341ae61",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c4600797-4364-4595-9068-3580f8d5781e"
        },
        "item": {
          "id": "055b6d52-d5ae-4125-9f4e-9b20bffb16b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ac530cc3-51bc-49ad-b577-d5c573ad54d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a063d67-bf2e-4394-a48d-4bd046bb4426",
        "cursor": {
          "ref": "6b1e94a7-203c-45ef-bbd7-317544bd9fd2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "343c99c0-dcc2-425b-a072-8db1c030cc4b"
        },
        "item": {
          "id": "6a063d67-bf2e-4394-a48d-4bd046bb4426",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b2b806a0-064a-411e-a318-b039a68ed389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391a78b-6adf-4579-8b1e-71f0b9348911",
        "cursor": {
          "ref": "436d7154-e3f3-4fc2-8af3-dddf26fe7954",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d9742844-d4e2-42fe-a645-6f12e9ecc40d"
        },
        "item": {
          "id": "7391a78b-6adf-4579-8b1e-71f0b9348911",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "509d4570-52a8-4518-930d-2eb898c9e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44c1f40-c25f-4889-8c8a-73dbb2eef14d",
        "cursor": {
          "ref": "e13a295f-fa76-465e-81a3-e075f8f80636",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bc9f23b2-f620-4b43-b0f6-ff84888976a3"
        },
        "item": {
          "id": "a44c1f40-c25f-4889-8c8a-73dbb2eef14d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "65d98fbb-df7b-4a23-be07-84f4aaa2a003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe96ff7-de63-4f35-b529-c67f836c2547",
        "cursor": {
          "ref": "67ed4c50-58c0-4501-951a-56eb3d549acf",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4ad0d980-9a5b-4e6e-af95-2d30b72c16fe"
        },
        "item": {
          "id": "1fe96ff7-de63-4f35-b529-c67f836c2547",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b31939b9-1ec9-4708-b060-4e47e0ace4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98de8115-7fdc-48c0-94a6-34d011547f9e",
        "cursor": {
          "ref": "46d908fa-1edb-4d87-9ca1-ac914fca52a8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f9f3cc6-5750-4b7e-a551-582cc58d4fdf"
        },
        "item": {
          "id": "98de8115-7fdc-48c0-94a6-34d011547f9e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1e9651bc-f737-4195-823c-9252311d5a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd6bbc5-3b9c-4923-a1a4-ec0379c9af1c",
        "cursor": {
          "ref": "b3cf8d95-fc1a-42f0-ab73-aff4916cab32",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c85f48fa-b7a1-4dbf-8bf7-fab1e1486484"
        },
        "item": {
          "id": "0cd6bbc5-3b9c-4923-a1a4-ec0379c9af1c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "27c61181-e774-418d-9904-6118ed03d4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60a6492-a256-4355-b1d0-cec14c2f1d11",
        "cursor": {
          "ref": "72f102ff-9f63-4086-8383-7e8e1374831a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b09677af-5382-47d8-88e7-5d7c204ee751"
        },
        "item": {
          "id": "b60a6492-a256-4355-b1d0-cec14c2f1d11",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7a679403-abd0-404c-b1cb-593d8f4b2594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc0fed-689f-4209-9b81-4c1008b9dd7a",
        "cursor": {
          "ref": "5eae39a3-db4c-4349-82f1-702f57504e1c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d28837eb-1a1a-4780-97e3-e0ad1cfc7f00"
        },
        "item": {
          "id": "53dc0fed-689f-4209-9b81-4c1008b9dd7a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1ff7a2f-fbf9-4274-b8e2-d59dc3daba41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0007588b-b77a-402f-b316-2d3ae69d851a",
        "cursor": {
          "ref": "f48cb8aa-3d69-4cf6-99b9-b3295ffe8cbd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "185b0610-0eef-40eb-8614-686718a1cc52"
        },
        "item": {
          "id": "0007588b-b77a-402f-b316-2d3ae69d851a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66ac8364-99dc-42d1-ab63-84f60723c4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f978bda-7aa1-4005-a894-deb3c5d7fc15",
        "cursor": {
          "ref": "db289105-1c3a-40be-8997-97078b1ea89b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d0b7ff2d-229d-4f11-b713-18dd2d26b97e"
        },
        "item": {
          "id": "5f978bda-7aa1-4005-a894-deb3c5d7fc15",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8e379674-1b27-4ab1-818f-4d9f8011fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed8ce3f-f7cf-47e2-9f22-bd4968eda420",
        "cursor": {
          "ref": "2a7af253-d2aa-4371-8510-97f36d648e6a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3afc0565-1982-460d-8c7a-cfecc26a4409"
        },
        "item": {
          "id": "2ed8ce3f-f7cf-47e2-9f22-bd4968eda420",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd686586-370b-481c-b184-8fb51a59f71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1a2499-cbb3-4606-9424-cbdee90ede12",
        "cursor": {
          "ref": "1f2915d8-d6cc-47f7-96ca-fd05197ec67a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8bc52ec6-ce28-4a53-9f77-5309417145ba"
        },
        "item": {
          "id": "2f1a2499-cbb3-4606-9424-cbdee90ede12",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3fd35a5f-3f15-40ab-815e-46a67b6bcdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b20e16b-6ee2-464c-87e1-19b26f7afaab",
        "cursor": {
          "ref": "1d7667f9-0ccc-449f-9ff2-6624e064079d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8f2b489b-a7a4-4fd9-9f10-10dfe985f0bd"
        },
        "item": {
          "id": "1b20e16b-6ee2-464c-87e1-19b26f7afaab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f275d74-61ea-4c16-b3d5-5689da3c3fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6b4690-599a-4aa9-a231-a180c6eae016",
        "cursor": {
          "ref": "bcb4412c-d840-4dea-9786-a83d50867a02",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0614381-442c-4dbd-9924-3780032fc072"
        },
        "item": {
          "id": "7b6b4690-599a-4aa9-a231-a180c6eae016",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "af17241c-2309-420b-9e31-ccac7ff1aef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bf532-0643-4364-8ba9-f08b830f79fb",
        "cursor": {
          "ref": "da519ae9-33d6-46a8-9a08-df17c964265d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8a4079f1-b466-4dee-b864-c02ea7f385b5"
        },
        "item": {
          "id": "476bf532-0643-4364-8ba9-f08b830f79fb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a30180f-7713-4e25-99a7-6c2de0165d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38dc21d-16ec-4d78-931d-8c198564a477",
        "cursor": {
          "ref": "71b0a66f-3ea9-4730-bb3a-f1a1ae7739ef",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c88cdf6d-a84b-4ac5-88c3-98719e98b69e"
        },
        "item": {
          "id": "c38dc21d-16ec-4d78-931d-8c198564a477",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8474552a-6bcf-4e60-90b1-eee21581c900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474f9793-b329-43d5-b543-98373528cb69",
        "cursor": {
          "ref": "224c442d-d101-4e31-a5a1-f6d252f70ba2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d404884c-d66d-413f-b106-09c0e254cedd"
        },
        "item": {
          "id": "474f9793-b329-43d5-b543-98373528cb69",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2c3d2539-6739-4f33-8b63-337a4de93824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a8e78-d2f3-4927-a894-df569d3766a0",
        "cursor": {
          "ref": "4f361da1-ef68-4c41-b541-bfe52fe7b69b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8360fb87-c307-496a-9ab0-37a764309e89"
        },
        "item": {
          "id": "f28a8e78-d2f3-4927-a894-df569d3766a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73deb1c5-2d03-4e25-bf04-6e52f1671fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c1ccf5-fb02-4859-802c-e61d0a84273a",
        "cursor": {
          "ref": "7768929f-ca3f-4a96-a1cd-d8ea0e91c545",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "67635f37-84f7-476a-9411-aa78d4299b0a"
        },
        "item": {
          "id": "43c1ccf5-fb02-4859-802c-e61d0a84273a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "52c43395-64fc-4b1b-8344-dd85c3ecd513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9fcec0-b96a-45ed-902d-4511cefe33ea",
        "cursor": {
          "ref": "c595f407-b1f7-483f-adf2-8329ecf919f6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2567bc09-0f2d-4f2e-acb5-22c3491b090e"
        },
        "item": {
          "id": "2b9fcec0-b96a-45ed-902d-4511cefe33ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0a726e1-1348-43fc-8c60-deaa1b0c00b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d416bd-2037-4538-9c11-4a9ca14baf95",
        "cursor": {
          "ref": "48265935-d4e6-482b-9975-4f08ba196918",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cac30144-7d6e-48a4-9611-93c16c2439d1"
        },
        "item": {
          "id": "b9d416bd-2037-4538-9c11-4a9ca14baf95",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f195302c-1416-4348-b9e6-f80ea5779e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44b9bf9-95ad-48c0-9ad0-f94db74f7121",
        "cursor": {
          "ref": "7eec10b8-b6e4-435b-b0bd-542f1f7fdf22",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d92e220-9e10-44d3-8954-12c7963cd517"
        },
        "item": {
          "id": "b44b9bf9-95ad-48c0-9ad0-f94db74f7121",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "619e9260-8dc2-409b-8dea-3d4503087caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8e1085-f552-4496-b255-7248819850da",
        "cursor": {
          "ref": "765b2d01-8f78-48c1-93bc-7a77b122ebe0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "98fa6dff-7000-4683-ae70-717961c506b0"
        },
        "item": {
          "id": "6b8e1085-f552-4496-b255-7248819850da",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40c1c8b5-19a5-447f-a87f-4dfd9a849d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a60a79-4fbc-4d0d-8fe4-aa47f3d2accd",
        "cursor": {
          "ref": "bdf2dc81-1a60-43f2-a0f8-1f3d13dd223b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c26fa360-0e29-4713-88ba-3a06391bd6a1"
        },
        "item": {
          "id": "74a60a79-4fbc-4d0d-8fe4-aa47f3d2accd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e9332c1-36ed-4144-92df-363c0648c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cedb66-1fc4-4552-a287-a7343ab109df",
        "cursor": {
          "ref": "e3ee2cc6-68ea-4610-bcdd-271c3f47163b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c0ec2b11-3503-4376-b717-af12ce62d806"
        },
        "item": {
          "id": "f9cedb66-1fc4-4552-a287-a7343ab109df",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c0a9921b-6888-4941-9dbe-a3067d733778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec1f06a-1c2b-47b6-b525-c5d3e1169968",
        "cursor": {
          "ref": "d913ec07-81fa-4203-bbb8-099b926690e3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b1b15e02-12e2-44eb-921c-92ef441285d4"
        },
        "item": {
          "id": "dec1f06a-1c2b-47b6-b525-c5d3e1169968",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "18862dd7-7565-4a4a-b794-1022aaa38cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f2ab3b-b9b6-4df9-b463-73932788e709",
        "cursor": {
          "ref": "5917e0a4-7afc-491a-87c9-5bae03308adb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6e4b901-3c4a-4912-ae68-a5950115345a"
        },
        "item": {
          "id": "a8f2ab3b-b9b6-4df9-b463-73932788e709",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "112f5140-85f9-492a-9555-4687c841dbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d70b3e7-1150-4ede-b0a6-f38379d90b08",
        "cursor": {
          "ref": "9f461d83-24b8-48c2-8246-57fdf8c16e20",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5d56950d-e3bb-4cc8-b81d-e25b9d9742d0"
        },
        "item": {
          "id": "8d70b3e7-1150-4ede-b0a6-f38379d90b08",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e7a5fc1c-5808-413c-8de0-b4ee94fe3f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c8029a-fb1b-4bd5-b994-dcf3daa6cd1e",
        "cursor": {
          "ref": "7891e097-0a34-4f5c-b208-bf5a041d5790",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "27b511de-a8d8-4a90-9079-693c30fab859"
        },
        "item": {
          "id": "50c8029a-fb1b-4bd5-b994-dcf3daa6cd1e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "99986037-5f43-48f7-9ca7-281d21ed0797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de1a40-0257-4447-bc2f-e02209fa0d15",
        "cursor": {
          "ref": "fe3e3bb8-3e40-42b0-bae8-8b0e34d5817c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da74da03-0c69-4d18-bcb2-e348f32af9c8"
        },
        "item": {
          "id": "a9de1a40-0257-4447-bc2f-e02209fa0d15",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7d1788d-8b25-471e-b48b-d6e9a86b422d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b929507b-5e6e-4587-ab0c-b56cbfee4565",
        "cursor": {
          "ref": "10de119f-ad69-4290-a8a7-fb4229e1810a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d857f3db-5931-471a-bd0b-db4f6073e082"
        },
        "item": {
          "id": "b929507b-5e6e-4587-ab0c-b56cbfee4565",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fdca0716-30ce-41ab-9416-f84a5bf8ec11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b327857-9a14-4439-8fda-5f9e890a4fa2",
        "cursor": {
          "ref": "8d7c3ee8-df53-4c05-bcf9-a62f09b22ccb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "56cea17d-c634-47a9-810b-dea5fd6aeda9"
        },
        "item": {
          "id": "2b327857-9a14-4439-8fda-5f9e890a4fa2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "96b91160-5ac4-4e0d-9a0c-76d69629e7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9a3e33-19b4-455e-9049-1d0da71f9463",
        "cursor": {
          "ref": "95f1d57e-90d9-4969-b0eb-01adf6756b36",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d74c02eb-2096-4785-8dba-64f770f967a5"
        },
        "item": {
          "id": "ed9a3e33-19b4-455e-9049-1d0da71f9463",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "843a66d4-5859-47cb-a708-a050b49d9504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebcc36a-144e-4220-ba76-85b06a96644f",
        "cursor": {
          "ref": "267cb71a-43a5-4ce0-832a-c1bdfa91adb5",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9dd83912-e526-4b73-b8de-e419b3f8a9e1"
        },
        "item": {
          "id": "6ebcc36a-144e-4220-ba76-85b06a96644f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "db7b131d-ff13-4487-bc68-7aa73fa7691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44911b06-9ff8-45db-8ce2-c9c1804f2159",
        "cursor": {
          "ref": "fb61e212-65b5-4483-997d-14f5ecbffd30",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "93c78661-fa8c-447c-8b01-2b090047d4cc"
        },
        "item": {
          "id": "44911b06-9ff8-45db-8ce2-c9c1804f2159",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "003c7aac-467e-427e-baaf-87d8b2c7c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eec5280-1157-4888-96cf-71f23e68eb9a",
        "cursor": {
          "ref": "85ea7cf2-7bfa-487c-aae4-b4072488e31d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4bc3212c-27d4-4395-ac05-87e4b657ecc4"
        },
        "item": {
          "id": "0eec5280-1157-4888-96cf-71f23e68eb9a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4c2c2da5-9d1b-4117-a4ad-435dad6418c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb90bf3e-5005-49cb-96ee-49b874fb9e9e",
        "cursor": {
          "ref": "19d9e02c-4e91-4998-91d2-7b56c2d9338e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f558ecad-94bb-48e1-b76d-9496aca5f496"
        },
        "item": {
          "id": "cb90bf3e-5005-49cb-96ee-49b874fb9e9e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "95c32fd7-d4e8-431a-8e30-bc594f314908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ae062-968d-4c6c-ba9f-dc98cf0f1a2c",
        "cursor": {
          "ref": "1259b7ef-9f66-4897-8702-519d3c2ecfed",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5da090cf-d6f4-41b6-b189-3aed3202ede9"
        },
        "item": {
          "id": "3b4ae062-968d-4c6c-ba9f-dc98cf0f1a2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4cc500c0-26af-4870-9e66-82160985d6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c2275d-8600-4209-b13d-e07e29107fd0",
        "cursor": {
          "ref": "09e0c593-139e-4f03-ac2b-6362c8ae17bf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7077773-04e1-461f-bd47-c52fa27cfee5"
        },
        "item": {
          "id": "76c2275d-8600-4209-b13d-e07e29107fd0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "675b0bb5-5d46-4d9b-b5b7-cff1f6c1b32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d8121-b609-473e-ae98-78150d7049cf",
        "cursor": {
          "ref": "001995fa-d7d0-49c0-9fd0-18130243cad7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "96b5b052-d037-4f52-9268-fff7145c3e29"
        },
        "item": {
          "id": "d72d8121-b609-473e-ae98-78150d7049cf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "74a5157e-f513-48a7-94f5-7ee2dd29eb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8bce06-a0cc-4fdc-8fcc-524fff027f35",
        "cursor": {
          "ref": "5842aeab-93dd-4704-bd76-f37f0c541043",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eaf73fac-9c94-4506-b786-184f33c62cfb"
        },
        "item": {
          "id": "1b8bce06-a0cc-4fdc-8fcc-524fff027f35",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "398919fa-e4c7-42ab-b7a1-b7a1cfc69408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142cbf4-8f38-4218-9b38-7eefda471636",
        "cursor": {
          "ref": "22037fab-3324-4430-a34f-5efe700beef7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0435fd9d-70fe-4864-b0c2-b4a3830106b9"
        },
        "item": {
          "id": "0142cbf4-8f38-4218-9b38-7eefda471636",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d00e481-e1c9-47fb-8557-a3424e0671c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d710b7fd-1e8b-4a17-8769-e97e58c85498",
        "cursor": {
          "ref": "a87bad49-3f73-4115-81e1-3a679502dd0c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "04c773c5-24c8-41ee-af0c-7b945225c9fb"
        },
        "item": {
          "id": "d710b7fd-1e8b-4a17-8769-e97e58c85498",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5a1cc2de-47e8-4572-8451-f10d84b779cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee387cc-d485-4517-815f-4ffaddc8db1d",
        "cursor": {
          "ref": "8db8f60b-c750-4159-b1df-5399f3255d80",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "942473bf-1714-48e9-9531-7cf195624d0f"
        },
        "item": {
          "id": "cee387cc-d485-4517-815f-4ffaddc8db1d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "34217df9-06e8-4ae6-88eb-2d14b90b04bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76479ff1-a017-4d61-aac7-b58172aa515d",
        "cursor": {
          "ref": "1eb349c8-1914-4955-b4dd-8a77a46fcf71",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1acd7250-c2a4-4105-9244-52345a3af19e"
        },
        "item": {
          "id": "76479ff1-a017-4d61-aac7-b58172aa515d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3df20530-ddd9-4c91-8fa1-a7920e7fa088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e689fa73-74a1-4f5a-ae5d-36720a0435b6",
        "cursor": {
          "ref": "a54374c9-ba6a-4bf6-bc39-e669c411179b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "acfa83b7-cbec-4607-9bfa-3be276ae49a2"
        },
        "item": {
          "id": "e689fa73-74a1-4f5a-ae5d-36720a0435b6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c24c5e58-de82-436f-bde3-268af66427cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e14810d-ceff-4dea-ba0a-b5429fa614c0",
        "cursor": {
          "ref": "21dda3e8-9d00-490f-9105-2cddcb68caf7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "927f9a70-c294-4e2a-a158-a928fc9fbad4"
        },
        "item": {
          "id": "3e14810d-ceff-4dea-ba0a-b5429fa614c0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a32a05b1-a8d1-45dc-8a60-bd172f54f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10e7096-4a89-446b-8ff1-ca165764f86e",
        "cursor": {
          "ref": "7bcd370e-827d-4dad-957a-e87ead875218",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a224f341-2cf4-43fc-9173-cbbba1ed5432"
        },
        "item": {
          "id": "a10e7096-4a89-446b-8ff1-ca165764f86e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "10923091-ee4b-4044-86b6-7819b98467b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b6af09-3265-46ec-b224-4c362e5a072d",
        "cursor": {
          "ref": "96729693-2624-4d34-aa0d-890374f1d99d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e129f19-a817-4ab0-a32a-53596275e294"
        },
        "item": {
          "id": "b6b6af09-3265-46ec-b224-4c362e5a072d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eeb0c748-d0b2-4a40-a00c-2a4408fd8286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04557e00-9b45-48ff-a9aa-4629da742edd",
        "cursor": {
          "ref": "f6f3ab63-74b5-4edb-9585-45f84d8d3793",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0c97032e-6387-4f36-8b75-2817c237bc60"
        },
        "item": {
          "id": "04557e00-9b45-48ff-a9aa-4629da742edd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a0c638f-d848-42e2-9c3e-949792407f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991fd67d-0ede-4ed3-9fd6-ad7b2ca0dc7a",
        "cursor": {
          "ref": "07366178-6aa7-44e4-b722-b2b65174399c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "46085e8d-a5e4-4b1e-839d-2346dbc8e22e"
        },
        "item": {
          "id": "991fd67d-0ede-4ed3-9fd6-ad7b2ca0dc7a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5cb89f6d-cbfe-4870-8778-e29654fde024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eba903-3012-4432-8323-f99521b3e1e4",
        "cursor": {
          "ref": "c366eca7-eb86-4391-a44b-7a982a29e651",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d6db42bf-1c58-4bde-a62d-90895db6ad3b"
        },
        "item": {
          "id": "f6eba903-3012-4432-8323-f99521b3e1e4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "42b313cd-7623-44db-8b9b-ae905ce9680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f46cc2-1685-4316-b265-f0385e0d0e22",
        "cursor": {
          "ref": "1293548e-8455-4f53-8320-3acd6967415a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a59d64ec-0584-43e9-aeb8-bdbb5949c685"
        },
        "item": {
          "id": "d7f46cc2-1685-4316-b265-f0385e0d0e22",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "124a9307-4f4f-40bc-8126-428a9a6a1ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bbaefa-8d61-486a-8b0d-afe279d458a4",
        "cursor": {
          "ref": "189b8354-5806-434c-bc53-bb9eaca1e306",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60cd7055-9231-42f1-98b1-3ca60f21ca79"
        },
        "item": {
          "id": "24bbaefa-8d61-486a-8b0d-afe279d458a4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7ace1d83-9f5c-4d9e-8a34-3de0497e8b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b25208-7e3c-4f38-ada7-90db7e20aaf3",
        "cursor": {
          "ref": "8b35ef6f-a4fe-4027-a656-c00e25db3604",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fd842126-cc58-4a45-a6c3-9e785658b475"
        },
        "item": {
          "id": "77b25208-7e3c-4f38-ada7-90db7e20aaf3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1e204f5a-35f1-45a9-b630-1682b456c440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d740e255-332b-43ae-a0d3-015a5c37ae3c",
        "cursor": {
          "ref": "7f14a6ba-bc30-45a5-999b-0a785be73c9e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c6beb539-c2e6-463a-9a6e-c11049c9920a"
        },
        "item": {
          "id": "d740e255-332b-43ae-a0d3-015a5c37ae3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "67777dc7-835c-4f93-ac0e-292145fac077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de914e8a-2cdf-43f4-9db1-db88c68b22a7",
        "cursor": {
          "ref": "d92a32f4-6397-4e83-bd45-5d9d24729788",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d200d92b-b308-46fd-b559-334979285065"
        },
        "item": {
          "id": "de914e8a-2cdf-43f4-9db1-db88c68b22a7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fdc02469-46bb-438f-bf94-f349b02e75a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce060a50-7bf7-47a6-9c63-2895949738b8",
        "cursor": {
          "ref": "2e913fa7-f2f6-4dc3-a6a4-044761f67acf",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2ecfec97-b041-4afa-9594-a4dfddc6ae4a"
        },
        "item": {
          "id": "ce060a50-7bf7-47a6-9c63-2895949738b8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1e33d839-393d-4622-9f44-af38843af567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96e481-39a1-4559-ad7a-b259219354d9",
        "cursor": {
          "ref": "8876c17d-f1f0-4602-955b-d00fca461faf",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b622e32f-3b1c-4fe9-ad1c-96d26860916a"
        },
        "item": {
          "id": "7c96e481-39a1-4559-ad7a-b259219354d9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0c95c628-aad0-49ff-837a-324c4bd9f30c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fb10b8-1fb9-4343-a4cb-cb46463820ac",
        "cursor": {
          "ref": "55bbe1d8-35c2-4a12-8fd4-55632d60c491",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dc5d399b-0f0a-48a9-b322-7469d8cc4baf"
        },
        "item": {
          "id": "60fb10b8-1fb9-4343-a4cb-cb46463820ac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86ee02d3-7870-49e8-a0e7-2f7badfe8ce5",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ff878a-57fa-4f47-b8ad-05e138c77c30",
        "cursor": {
          "ref": "f04579b3-3e80-43a7-bee4-7c6d23432b16",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c63e1af0-cd6e-4b00-bbbb-29bccbfc901b"
        },
        "item": {
          "id": "25ff878a-57fa-4f47-b8ad-05e138c77c30",
          "name": "credentials_verify"
        },
        "response": {
          "id": "23e6fc24-2eaf-40fd-bcba-268a55ee419f",
          "status": "OK",
          "code": 200,
          "responseTime": 4827,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be889ecf-3e2a-4e62-b780-4a0d7de48bc3",
        "cursor": {
          "ref": "148a5d88-994b-4dea-8215-6b5a7f281bb5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "33bfaefd-78b5-4fe8-a3ff-6cdbf2b8a32c"
        },
        "item": {
          "id": "be889ecf-3e2a-4e62-b780-4a0d7de48bc3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4fae17cb-6afe-45df-8937-6170e4e55286",
          "status": "OK",
          "code": 200,
          "responseTime": 2834,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07baf37-8226-4689-9a73-0e93b8a325db",
        "cursor": {
          "ref": "e1285bb9-e428-4fab-bdd4-3a2ef67c5bc2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c1034b5-5529-4f65-9b13-ffd0a80996a4"
        },
        "item": {
          "id": "c07baf37-8226-4689-9a73-0e93b8a325db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f854c6d-79ea-43f1-817d-2cbb8ee9d737",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07baf37-8226-4689-9a73-0e93b8a325db",
        "cursor": {
          "ref": "e1285bb9-e428-4fab-bdd4-3a2ef67c5bc2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c1034b5-5529-4f65-9b13-ffd0a80996a4"
        },
        "item": {
          "id": "c07baf37-8226-4689-9a73-0e93b8a325db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f854c6d-79ea-43f1-817d-2cbb8ee9d737",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee321d9-f606-4d69-8cd5-160f6bf7ffdc",
        "cursor": {
          "ref": "1eedd57e-fd46-4074-90a3-69c1808bd882",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c128e6cb-4173-450c-9b76-c4f626e039e5"
        },
        "item": {
          "id": "7ee321d9-f606-4d69-8cd5-160f6bf7ffdc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0a5dfad2-e524-4662-9854-5dd8d75185dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f627367-e1eb-4634-8421-b9f7352cc9d3",
        "cursor": {
          "ref": "c12431e5-28de-499a-9556-2c39a4b3d3da",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e79d636c-6320-4352-b425-25c323d5e0cc"
        },
        "item": {
          "id": "5f627367-e1eb-4634-8421-b9f7352cc9d3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2405e621-a4e2-475f-94c4-adc2759eabc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}